
Ping_Pong_Shit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000238  00800100  00001388  0000141c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001388  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800338  00800338  00001654  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001654  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000002c8  00000000  00000000  000016b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002d0b  00000000  00000000  00001978  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000010de  00000000  00000000  00004683  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000011f9  00000000  00000000  00005761  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000770  00000000  00000000  0000695c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000087f  00000000  00000000  000070cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001605  00000000  00000000  0000794b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000280  00000000  00000000  00008f50  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 3b 02 	jmp	0x476	; 0x476 <__vector_1>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <SRAM_test+0x160>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	13 e0       	ldi	r17, 0x03	; 3
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e8 e8       	ldi	r30, 0x88	; 136
     37c:	f3 e1       	ldi	r31, 0x13	; 19
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a8 33       	cpi	r26, 0x38	; 56
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	23 e0       	ldi	r18, 0x03	; 3
     38c:	a8 e3       	ldi	r26, 0x38	; 56
     38e:	b3 e0       	ldi	r27, 0x03	; 3
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a5 34       	cpi	r26, 0x45	; 69
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 e6 05 	call	0xbcc	; 0xbcc <main>
     39e:	0c 94 c2 09 	jmp	0x1384	; 0x1384 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <can_init>:

#define JOY_CAN_ID 1

void can_init(){
	//Enter config mode
	mcp2515_init();
     3a6:	0e 94 8f 03 	call	0x71e	; 0x71e <mcp2515_init>
	printf("CANCTRL (expect 0x87): 0x%02x\n", mcp2515_read(MCP_CANCTRL));
     3aa:	8f e0       	ldi	r24, 0x0F	; 15
     3ac:	0e 94 7d 03 	call	0x6fa	; 0x6fa <mcp2515_read>
     3b0:	1f 92       	push	r1
     3b2:	8f 93       	push	r24
     3b4:	84 e2       	ldi	r24, 0x24	; 36
     3b6:	91 e0       	ldi	r25, 0x01	; 1
     3b8:	9f 93       	push	r25
     3ba:	8f 93       	push	r24
     3bc:	0e 94 6f 06 	call	0xcde	; 0xcde <printf>

	//RX0 - Turn mask/filter off
	mcp2515_bit_modify(MCP_RXB0CTRL, 0b01100000, 0xFF);
     3c0:	4f ef       	ldi	r20, 0xFF	; 255
     3c2:	60 e6       	ldi	r22, 0x60	; 96
     3c4:	80 e6       	ldi	r24, 0x60	; 96
     3c6:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <mcp2515_bit_modify>
	//RX0 - Disable rollover
	mcp2515_bit_modify(MCP_RXB0CTRL, 0b00000100, 0);
     3ca:	40 e0       	ldi	r20, 0x00	; 0
     3cc:	64 e0       	ldi	r22, 0x04	; 4
     3ce:	80 e6       	ldi	r24, 0x60	; 96
     3d0:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <mcp2515_bit_modify>

	mcp2515_bit_modify(MCP_CANINTE, MCP_RX0IF, 0xff);
     3d4:	4f ef       	ldi	r20, 0xFF	; 255
     3d6:	61 e0       	ldi	r22, 0x01	; 1
     3d8:	8b e2       	ldi	r24, 0x2B	; 43
     3da:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <mcp2515_bit_modify>
     3de:	0f 90       	pop	r0
     3e0:	0f 90       	pop	r0
     3e2:	0f 90       	pop	r0
     3e4:	0f 90       	pop	r0
     3e6:	08 95       	ret

000003e8 <can_transmit_complete>:
	return 1;
}

int can_transmit_complete(){
	//Check if TX buffer is not pending
	if(test_bit(mcp2515_read(MCP_TXB0CTRL), 3)){
     3e8:	80 e3       	ldi	r24, 0x30	; 48
     3ea:	0e 94 7d 03 	call	0x6fa	; 0x6fa <mcp2515_read>
     3ee:	86 95       	lsr	r24
     3f0:	86 95       	lsr	r24
     3f2:	86 95       	lsr	r24
     3f4:	91 e0       	ldi	r25, 0x01	; 1
     3f6:	89 27       	eor	r24, r25
		return 0;
	} else {
		return 1;
	 }
}
     3f8:	81 70       	andi	r24, 0x01	; 1
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	08 95       	ret

000003fe <can_message_send>:
	//mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_NORMAL);

	//Enable interrupt when message is recieved (RX0IE = 1)
}

void can_message_send(can_message_t* message){
     3fe:	1f 93       	push	r17
     400:	cf 93       	push	r28
     402:	df 93       	push	r29
     404:	ec 01       	movw	r28, r24
	while (!can_transmit_complete()) {}
     406:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <can_transmit_complete>
     40a:	89 2b       	or	r24, r25
     40c:	e1 f3       	breq	.-8      	; 0x406 <can_message_send+0x8>
	//Use standard ID to set the message
	mcp2515_write(MCP_TXB0SIDH, (int8_t)(message->id >> 3));
     40e:	68 81       	ld	r22, Y
     410:	79 81       	ldd	r23, Y+1	; 0x01
     412:	75 95       	asr	r23
     414:	67 95       	ror	r22
     416:	75 95       	asr	r23
     418:	67 95       	ror	r22
     41a:	75 95       	asr	r23
     41c:	67 95       	ror	r22
     41e:	81 e3       	ldi	r24, 0x31	; 49
     420:	0e 94 37 03 	call	0x66e	; 0x66e <mcp2515_write>
	mcp2515_write(MCP_TXB0SIDL, (int8_t)(message->id << 5));
     424:	68 81       	ld	r22, Y
     426:	79 81       	ldd	r23, Y+1	; 0x01
     428:	66 0f       	add	r22, r22
     42a:	77 1f       	adc	r23, r23
     42c:	62 95       	swap	r22
     42e:	72 95       	swap	r23
     430:	70 7f       	andi	r23, 0xF0	; 240
     432:	76 27       	eor	r23, r22
     434:	60 7f       	andi	r22, 0xF0	; 240
     436:	76 27       	eor	r23, r22
     438:	82 e3       	ldi	r24, 0x32	; 50
     43a:	0e 94 37 03 	call	0x66e	; 0x66e <mcp2515_write>

	//Set correct data lenght and use data frame, max 8 bytes
	mcp2515_write(MCP_TXB0DLC, (0x0F) & (message->length));
     43e:	6a 81       	ldd	r22, Y+2	; 0x02
     440:	6f 70       	andi	r22, 0x0F	; 15
     442:	85 e3       	ldi	r24, 0x35	; 53
     444:	0e 94 37 03 	call	0x66e	; 0x66e <mcp2515_write>

	//For loop to set data bytes
	for (uint8_t i = 0; i < message->length; i++) {
     448:	8a 81       	ldd	r24, Y+2	; 0x02
     44a:	88 23       	and	r24, r24
     44c:	69 f0       	breq	.+26     	; 0x468 <can_message_send+0x6a>
     44e:	10 e0       	ldi	r17, 0x00	; 0
		mcp2515_write(MCP_TXB0D0 + i, message->data[i]);
     450:	fe 01       	movw	r30, r28
     452:	e1 0f       	add	r30, r17
     454:	f1 1d       	adc	r31, r1
     456:	63 81       	ldd	r22, Z+3	; 0x03
     458:	86 e3       	ldi	r24, 0x36	; 54
     45a:	81 0f       	add	r24, r17
     45c:	0e 94 37 03 	call	0x66e	; 0x66e <mcp2515_write>

	//Set correct data lenght and use data frame, max 8 bytes
	mcp2515_write(MCP_TXB0DLC, (0x0F) & (message->length));

	//For loop to set data bytes
	for (uint8_t i = 0; i < message->length; i++) {
     460:	1f 5f       	subi	r17, 0xFF	; 255
     462:	8a 81       	ldd	r24, Y+2	; 0x02
     464:	18 17       	cp	r17, r24
     466:	a0 f3       	brcs	.-24     	; 0x450 <can_message_send+0x52>
		mcp2515_write(MCP_TXB0D0 + i, message->data[i]);
	}

	mcp2515_request_to_send(1);
     468:	81 e0       	ldi	r24, 0x01	; 1
     46a:	0e 94 4b 03 	call	0x696	; 0x696 <mcp2515_request_to_send>
}
     46e:	df 91       	pop	r29
     470:	cf 91       	pop	r28
     472:	1f 91       	pop	r17
     474:	08 95       	ret

00000476 <__vector_1>:

	return message;
}

//Interrupt routine for CAN bus
ISR(INT0_vect){
     476:	1f 92       	push	r1
     478:	0f 92       	push	r0
     47a:	0f b6       	in	r0, 0x3f	; 63
     47c:	0f 92       	push	r0
     47e:	11 24       	eor	r1, r1
     480:	8f 93       	push	r24
     482:	9f 93       	push	r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     484:	8f ef       	ldi	r24, 0xFF	; 255
     486:	9f e2       	ldi	r25, 0x2F	; 47
     488:	01 97       	sbiw	r24, 0x01	; 1
     48a:	f1 f7       	brne	.-4      	; 0x488 <__vector_1+0x12>
     48c:	00 c0       	rjmp	.+0      	; 0x48e <__vector_1+0x18>
     48e:	00 00       	nop
	 }
}

void can_interrupt_vector(){
	//Clear interrupt flag
	rx_flag = 1;
     490:	81 e0       	ldi	r24, 0x01	; 1
     492:	80 93 38 03 	sts	0x0338, r24

//Interrupt routine for CAN bus
ISR(INT0_vect){
	_delay_ms(10);
	can_interrupt_vector();
}
     496:	9f 91       	pop	r25
     498:	8f 91       	pop	r24
     49a:	0f 90       	pop	r0
     49c:	0f be       	out	0x3f, r0	; 63
     49e:	0f 90       	pop	r0
     4a0:	1f 90       	pop	r1
     4a2:	18 95       	reti

000004a4 <can_print_message>:
		testmessage.id++;
		_delay_ms(1000);
	}
}

void can_print_message(const can_message_t *message) {
     4a4:	ff 92       	push	r15
     4a6:	0f 93       	push	r16
     4a8:	1f 93       	push	r17
     4aa:	cf 93       	push	r28
     4ac:	df 93       	push	r29
     4ae:	ec 01       	movw	r28, r24
	printf("Message id: %d\nMessage length %d\n", message->id, message->length);
     4b0:	8a 81       	ldd	r24, Y+2	; 0x02
     4b2:	1f 92       	push	r1
     4b4:	8f 93       	push	r24
     4b6:	89 81       	ldd	r24, Y+1	; 0x01
     4b8:	8f 93       	push	r24
     4ba:	88 81       	ld	r24, Y
     4bc:	8f 93       	push	r24
     4be:	83 e4       	ldi	r24, 0x43	; 67
     4c0:	91 e0       	ldi	r25, 0x01	; 1
     4c2:	9f 93       	push	r25
     4c4:	8f 93       	push	r24
     4c6:	0e 94 6f 06 	call	0xcde	; 0xcde <printf>
	printf("Message data: [ %d", message->data[0]);
     4ca:	2b 81       	ldd	r18, Y+3	; 0x03
     4cc:	82 2f       	mov	r24, r18
     4ce:	99 27       	eor	r25, r25
     4d0:	87 fd       	sbrc	r24, 7
     4d2:	90 95       	com	r25
     4d4:	9f 93       	push	r25
     4d6:	2f 93       	push	r18
     4d8:	85 e6       	ldi	r24, 0x65	; 101
     4da:	91 e0       	ldi	r25, 0x01	; 1
     4dc:	9f 93       	push	r25
     4de:	8f 93       	push	r24
     4e0:	0e 94 6f 06 	call	0xcde	; 0xcde <printf>
	for(uint8_t i = 1; i < message->length; i++) {
     4e4:	8d b7       	in	r24, 0x3d	; 61
     4e6:	9e b7       	in	r25, 0x3e	; 62
     4e8:	0a 96       	adiw	r24, 0x0a	; 10
     4ea:	0f b6       	in	r0, 0x3f	; 63
     4ec:	f8 94       	cli
     4ee:	9e bf       	out	0x3e, r25	; 62
     4f0:	0f be       	out	0x3f, r0	; 63
     4f2:	8d bf       	out	0x3d, r24	; 61
     4f4:	8a 81       	ldd	r24, Y+2	; 0x02
     4f6:	82 30       	cpi	r24, 0x02	; 2
     4f8:	d0 f0       	brcs	.+52     	; 0x52e <__stack+0x2f>
     4fa:	ff 24       	eor	r15, r15
     4fc:	f3 94       	inc	r15
		printf(", %d",message->data[i]);
     4fe:	08 e7       	ldi	r16, 0x78	; 120
     500:	11 e0       	ldi	r17, 0x01	; 1
     502:	fe 01       	movw	r30, r28
     504:	ef 0d       	add	r30, r15
     506:	f1 1d       	adc	r31, r1
     508:	23 81       	ldd	r18, Z+3	; 0x03
     50a:	82 2f       	mov	r24, r18
     50c:	99 27       	eor	r25, r25
     50e:	87 fd       	sbrc	r24, 7
     510:	90 95       	com	r25
     512:	9f 93       	push	r25
     514:	2f 93       	push	r18
     516:	1f 93       	push	r17
     518:	0f 93       	push	r16
     51a:	0e 94 6f 06 	call	0xcde	; 0xcde <printf>
}

void can_print_message(const can_message_t *message) {
	printf("Message id: %d\nMessage length %d\n", message->id, message->length);
	printf("Message data: [ %d", message->data[0]);
	for(uint8_t i = 1; i < message->length; i++) {
     51e:	f3 94       	inc	r15
     520:	0f 90       	pop	r0
     522:	0f 90       	pop	r0
     524:	0f 90       	pop	r0
     526:	0f 90       	pop	r0
     528:	8a 81       	ldd	r24, Y+2	; 0x02
     52a:	f8 16       	cp	r15, r24
     52c:	50 f3       	brcs	.-44     	; 0x502 <__stack+0x3>
		printf(", %d",message->data[i]);
	}
	printf(" ]\n\n");
     52e:	8d e7       	ldi	r24, 0x7D	; 125
     530:	91 e0       	ldi	r25, 0x01	; 1
     532:	0e 94 83 06 	call	0xd06	; 0xd06 <puts>
}
     536:	df 91       	pop	r29
     538:	cf 91       	pop	r28
     53a:	1f 91       	pop	r17
     53c:	0f 91       	pop	r16
     53e:	ff 90       	pop	r15
     540:	08 95       	ret

00000542 <can_joystick_transmit>:
		_delay_ms(700);
		flash_diode();
	}
}

void can_joystick_transmit(unsigned int id){
     542:	cf 93       	push	r28
     544:	df 93       	push	r29
     546:	cd b7       	in	r28, 0x3d	; 61
     548:	de b7       	in	r29, 0x3e	; 62
     54a:	2b 97       	sbiw	r28, 0x0b	; 11
     54c:	0f b6       	in	r0, 0x3f	; 63
     54e:	f8 94       	cli
     550:	de bf       	out	0x3e, r29	; 62
     552:	0f be       	out	0x3f, r0	; 63
     554:	cd bf       	out	0x3d, r28	; 61
	can_message_t joy_message;

	joy_message.id = id; 
     556:	9a 83       	std	Y+2, r25	; 0x02
     558:	89 83       	std	Y+1, r24	; 0x01
	joy_message.length = 2;
     55a:	82 e0       	ldi	r24, 0x02	; 2
     55c:	8b 83       	std	Y+3, r24	; 0x03
	
	joy_message.data[0] = read_converted(JOYSTICK_X);
     55e:	80 e0       	ldi	r24, 0x00	; 0
     560:	0e 94 15 03 	call	0x62a	; 0x62a <read_converted>
     564:	8c 83       	std	Y+4, r24	; 0x04
	joy_message.data[1] = read_converted(JOYSTICK_Y);
     566:	81 e0       	ldi	r24, 0x01	; 1
     568:	0e 94 15 03 	call	0x62a	; 0x62a <read_converted>
     56c:	8d 83       	std	Y+5, r24	; 0x05

	can_print_message(&joy_message);
     56e:	ce 01       	movw	r24, r28
     570:	01 96       	adiw	r24, 0x01	; 1
     572:	0e 94 52 02 	call	0x4a4	; 0x4a4 <can_print_message>

	can_message_send(&joy_message);
     576:	ce 01       	movw	r24, r28
     578:	01 96       	adiw	r24, 0x01	; 1
     57a:	0e 94 ff 01 	call	0x3fe	; 0x3fe <can_message_send>
}
     57e:	2b 96       	adiw	r28, 0x0b	; 11
     580:	0f b6       	in	r0, 0x3f	; 63
     582:	f8 94       	cli
     584:	de bf       	out	0x3e, r29	; 62
     586:	0f be       	out	0x3f, r0	; 63
     588:	cd bf       	out	0x3d, r28	; 61
     58a:	df 91       	pop	r29
     58c:	cf 91       	pop	r28
     58e:	08 95       	ret

00000590 <can_joy_test>:
	}
	printf(" ]\n\n");
}

void can_joy_test(){
	printf("CANCTRL: %02x\n", mcp2515_read(MCP_CANCTRL));	
     590:	8f e0       	ldi	r24, 0x0F	; 15
     592:	0e 94 7d 03 	call	0x6fa	; 0x6fa <mcp2515_read>
     596:	1f 92       	push	r1
     598:	8f 93       	push	r24
     59a:	c1 e8       	ldi	r28, 0x81	; 129
     59c:	d1 e0       	ldi	r29, 0x01	; 1
     59e:	df 93       	push	r29
     5a0:	cf 93       	push	r28
     5a2:	0e 94 6f 06 	call	0xcde	; 0xcde <printf>
	mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_NORMAL);
     5a6:	40 e0       	ldi	r20, 0x00	; 0
     5a8:	60 ee       	ldi	r22, 0xE0	; 224
     5aa:	8f e0       	ldi	r24, 0x0F	; 15
     5ac:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <mcp2515_bit_modify>
	printf("CANCTRL: %02x\n", mcp2515_read(MCP_CANCTRL));
     5b0:	8f e0       	ldi	r24, 0x0F	; 15
     5b2:	0e 94 7d 03 	call	0x6fa	; 0x6fa <mcp2515_read>
     5b6:	1f 92       	push	r1
     5b8:	8f 93       	push	r24
     5ba:	df 93       	push	r29
     5bc:	cf 93       	push	r28
     5be:	0e 94 6f 06 	call	0xcde	; 0xcde <printf>
     5c2:	8d b7       	in	r24, 0x3d	; 61
     5c4:	9e b7       	in	r25, 0x3e	; 62
     5c6:	08 96       	adiw	r24, 0x08	; 8
     5c8:	0f b6       	in	r0, 0x3f	; 63
     5ca:	f8 94       	cli
     5cc:	9e bf       	out	0x3e, r25	; 62
     5ce:	0f be       	out	0x3f, r0	; 63
     5d0:	8d bf       	out	0x3d, r24	; 61

	unsigned int id = 0;
     5d2:	c0 e0       	ldi	r28, 0x00	; 0
     5d4:	d0 e0       	ldi	r29, 0x00	; 0
	while(1){
		can_joystick_transmit(id);
     5d6:	ce 01       	movw	r24, r28
     5d8:	0e 94 a1 02 	call	0x542	; 0x542 <can_joystick_transmit>
		id++;
     5dc:	21 96       	adiw	r28, 0x01	; 1
     5de:	9f ef       	ldi	r25, 0xFF	; 255
     5e0:	2f e7       	ldi	r18, 0x7F	; 127
     5e2:	8a e0       	ldi	r24, 0x0A	; 10
     5e4:	91 50       	subi	r25, 0x01	; 1
     5e6:	20 40       	sbci	r18, 0x00	; 0
     5e8:	80 40       	sbci	r24, 0x00	; 0
     5ea:	e1 f7       	brne	.-8      	; 0x5e4 <can_joy_test+0x54>
     5ec:	00 c0       	rjmp	.+0      	; 0x5ee <can_joy_test+0x5e>
     5ee:	00 c0       	rjmp	.+0      	; 0x5f0 <can_joy_test+0x60>
		_delay_ms(700);
		flash_diode();
     5f0:	0e 94 06 06 	call	0xc0c	; 0xc0c <flash_diode>
     5f4:	f0 cf       	rjmp	.-32     	; 0x5d6 <can_joy_test+0x46>

000005f6 <joystick_read>:
     5f6:	8c 5f       	subi	r24, 0xFC	; 252
     5f8:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     5fc:	81 e4       	ldi	r24, 0x41	; 65
     5fe:	8a 95       	dec	r24
     600:	f1 f7       	brne	.-4      	; 0x5fe <joystick_read+0x8>
     602:	00 c0       	rjmp	.+0      	; 0x604 <joystick_read+0xe>
     604:	80 91 00 14 	lds	r24, 0x1400
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	08 95       	ret

0000060c <joystick_init>:
     60c:	80 e0       	ldi	r24, 0x00	; 0
     60e:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <joystick_read>
     612:	90 93 3a 03 	sts	0x033A, r25
     616:	80 93 39 03 	sts	0x0339, r24
     61a:	81 e0       	ldi	r24, 0x01	; 1
     61c:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <joystick_read>
     620:	90 93 3c 03 	sts	0x033C, r25
     624:	80 93 3b 03 	sts	0x033B, r24
     628:	08 95       	ret

0000062a <read_converted>:
     62a:	cf 93       	push	r28
     62c:	c8 2f       	mov	r28, r24
     62e:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <joystick_read>
     632:	c1 11       	cpse	r28, r1
     634:	07 c0       	rjmp	.+14     	; 0x644 <read_converted+0x1a>
     636:	20 91 39 03 	lds	r18, 0x0339
     63a:	30 91 3a 03 	lds	r19, 0x033A
     63e:	82 1b       	sub	r24, r18
     640:	93 0b       	sbc	r25, r19
     642:	08 c0       	rjmp	.+16     	; 0x654 <read_converted+0x2a>
     644:	c1 30       	cpi	r28, 0x01	; 1
     646:	31 f4       	brne	.+12     	; 0x654 <read_converted+0x2a>
     648:	20 91 3b 03 	lds	r18, 0x033B
     64c:	30 91 3c 03 	lds	r19, 0x033C
     650:	82 1b       	sub	r24, r18
     652:	93 0b       	sbc	r25, r19
     654:	80 38       	cpi	r24, 0x80	; 128
     656:	2f ef       	ldi	r18, 0xFF	; 255
     658:	92 07       	cpc	r25, r18
     65a:	14 f4       	brge	.+4      	; 0x660 <read_converted+0x36>
     65c:	80 e8       	ldi	r24, 0x80	; 128
     65e:	9f ef       	ldi	r25, 0xFF	; 255
     660:	80 38       	cpi	r24, 0x80	; 128
     662:	91 05       	cpc	r25, r1
     664:	14 f0       	brlt	.+4      	; 0x66a <read_converted+0x40>
     666:	8f e7       	ldi	r24, 0x7F	; 127
     668:	90 e0       	ldi	r25, 0x00	; 0
     66a:	cf 91       	pop	r28
     66c:	08 95       	ret

0000066e <mcp2515_write>:
     66e:	cf 93       	push	r28
     670:	df 93       	push	r29
     672:	d8 2f       	mov	r29, r24
     674:	c6 2f       	mov	r28, r22
     676:	0e 94 ed 04 	call	0x9da	; 0x9da <spi_select>
     67a:	82 e0       	ldi	r24, 0x02	; 2
     67c:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <spi_send>
     680:	8d 2f       	mov	r24, r29
     682:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <spi_send>
     686:	8c 2f       	mov	r24, r28
     688:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <spi_send>
     68c:	0e 94 ef 04 	call	0x9de	; 0x9de <spi_deselect>
     690:	df 91       	pop	r29
     692:	cf 91       	pop	r28
     694:	08 95       	ret

00000696 <mcp2515_request_to_send>:
     696:	cf 93       	push	r28
     698:	88 30       	cpi	r24, 0x08	; 8
     69a:	18 f4       	brcc	.+6      	; 0x6a2 <mcp2515_request_to_send+0xc>
     69c:	c8 2f       	mov	r28, r24
     69e:	c0 68       	ori	r28, 0x80	; 128
     6a0:	01 c0       	rjmp	.+2      	; 0x6a4 <mcp2515_request_to_send+0xe>
     6a2:	c0 e8       	ldi	r28, 0x80	; 128
     6a4:	0e 94 ed 04 	call	0x9da	; 0x9da <spi_select>
     6a8:	8c 2f       	mov	r24, r28
     6aa:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <spi_send>
     6ae:	0e 94 ef 04 	call	0x9de	; 0x9de <spi_deselect>
     6b2:	cf 91       	pop	r28
     6b4:	08 95       	ret

000006b6 <mcp2515_bit_modify>:
     6b6:	1f 93       	push	r17
     6b8:	cf 93       	push	r28
     6ba:	df 93       	push	r29
     6bc:	18 2f       	mov	r17, r24
     6be:	d6 2f       	mov	r29, r22
     6c0:	c4 2f       	mov	r28, r20
     6c2:	0e 94 ed 04 	call	0x9da	; 0x9da <spi_select>
     6c6:	85 e0       	ldi	r24, 0x05	; 5
     6c8:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <spi_send>
     6cc:	81 2f       	mov	r24, r17
     6ce:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <spi_send>
     6d2:	8d 2f       	mov	r24, r29
     6d4:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <spi_send>
     6d8:	8c 2f       	mov	r24, r28
     6da:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <spi_send>
     6de:	0e 94 ef 04 	call	0x9de	; 0x9de <spi_deselect>
     6e2:	df 91       	pop	r29
     6e4:	cf 91       	pop	r28
     6e6:	1f 91       	pop	r17
     6e8:	08 95       	ret

000006ea <mcp2515_reset>:
     6ea:	0e 94 ed 04 	call	0x9da	; 0x9da <spi_select>
     6ee:	80 ec       	ldi	r24, 0xC0	; 192
     6f0:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <spi_send>
     6f4:	0e 94 ef 04 	call	0x9de	; 0x9de <spi_deselect>
     6f8:	08 95       	ret

000006fa <mcp2515_read>:
     6fa:	cf 93       	push	r28
     6fc:	c8 2f       	mov	r28, r24
     6fe:	0e 94 ed 04 	call	0x9da	; 0x9da <spi_select>
     702:	83 e0       	ldi	r24, 0x03	; 3
     704:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <spi_send>
     708:	8c 2f       	mov	r24, r28
     70a:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <spi_send>
     70e:	0e 94 e6 04 	call	0x9cc	; 0x9cc <spi_read>
     712:	c8 2f       	mov	r28, r24
     714:	0e 94 ef 04 	call	0x9de	; 0x9de <spi_deselect>
     718:	8c 2f       	mov	r24, r28
     71a:	cf 91       	pop	r28
     71c:	08 95       	ret

0000071e <mcp2515_init>:
     71e:	cf 93       	push	r28
     720:	df 93       	push	r29
     722:	1f 92       	push	r1
     724:	cd b7       	in	r28, 0x3d	; 61
     726:	de b7       	in	r29, 0x3e	; 62
     728:	0e 94 da 04 	call	0x9b4	; 0x9b4 <spi_init>
     72c:	0e 94 75 03 	call	0x6ea	; 0x6ea <mcp2515_reset>
     730:	8e e0       	ldi	r24, 0x0E	; 14
     732:	0e 94 7d 03 	call	0x6fa	; 0x6fa <mcp2515_read>
     736:	89 83       	std	Y+1, r24	; 0x01
     738:	89 81       	ldd	r24, Y+1	; 0x01
     73a:	80 7e       	andi	r24, 0xE0	; 224
     73c:	80 38       	cpi	r24, 0x80	; 128
     73e:	21 f0       	breq	.+8      	; 0x748 <mcp2515_init+0x2a>
     740:	80 e9       	ldi	r24, 0x90	; 144
     742:	91 e0       	ldi	r25, 0x01	; 1
     744:	0e 94 83 06 	call	0xd06	; 0xd06 <puts>
     748:	0f 90       	pop	r0
     74a:	df 91       	pop	r29
     74c:	cf 91       	pop	r28
     74e:	08 95       	ret

00000750 <oled_print_char>:
     750:	28 e0       	ldi	r18, 0x08	; 8
     752:	82 9f       	mul	r24, r18
     754:	c0 01       	movw	r24, r0
     756:	11 24       	eor	r1, r1
     758:	fc 01       	movw	r30, r24
     75a:	e0 59       	subi	r30, 0x90	; 144
     75c:	f0 40       	sbci	r31, 0x00	; 0
     75e:	80 e0       	ldi	r24, 0x00	; 0
     760:	94 91       	lpm	r25, Z
     762:	a0 91 04 01 	lds	r26, 0x0104
     766:	b0 91 05 01 	lds	r27, 0x0105
     76a:	9c 93       	st	X, r25
     76c:	8f 5f       	subi	r24, 0xFF	; 255
     76e:	31 96       	adiw	r30, 0x01	; 1
     770:	88 30       	cpi	r24, 0x08	; 8
     772:	b1 f7       	brne	.-20     	; 0x760 <oled_print_char+0x10>
     774:	08 95       	ret

00000776 <oled_goto_page>:
     776:	90 eb       	ldi	r25, 0xB0	; 176
     778:	98 0f       	add	r25, r24
     77a:	e0 91 06 01 	lds	r30, 0x0106
     77e:	f0 91 07 01 	lds	r31, 0x0107
     782:	90 83       	st	Z, r25
     784:	80 93 3d 03 	sts	0x033D, r24
     788:	82 e5       	ldi	r24, 0x52	; 82
     78a:	8a 95       	dec	r24
     78c:	f1 f7       	brne	.-4      	; 0x78a <oled_goto_page+0x14>
     78e:	08 95       	ret

00000790 <oled_clear_line>:
     790:	80 e8       	ldi	r24, 0x80	; 128
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	e0 91 04 01 	lds	r30, 0x0104
     798:	f0 91 05 01 	lds	r31, 0x0105
     79c:	10 82       	st	Z, r1
     79e:	01 97       	sbiw	r24, 0x01	; 1
     7a0:	00 97       	sbiw	r24, 0x00	; 0
     7a2:	c1 f7       	brne	.-16     	; 0x794 <oled_clear_line+0x4>
     7a4:	08 95       	ret

000007a6 <oled_clear_screen>:
     7a6:	cf 93       	push	r28
     7a8:	df 93       	push	r29
     7aa:	c0 e0       	ldi	r28, 0x00	; 0
     7ac:	d0 e0       	ldi	r29, 0x00	; 0
     7ae:	ce 01       	movw	r24, r28
     7b0:	0e 94 bb 03 	call	0x776	; 0x776 <oled_goto_page>
     7b4:	0e 94 c8 03 	call	0x790	; 0x790 <oled_clear_line>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7b8:	80 e0       	ldi	r24, 0x00	; 0
     7ba:	90 ef       	ldi	r25, 0xF0	; 240
     7bc:	01 97       	sbiw	r24, 0x01	; 1
     7be:	f1 f7       	brne	.-4      	; 0x7bc <oled_clear_screen+0x16>
     7c0:	21 96       	adiw	r28, 0x01	; 1
     7c2:	c8 30       	cpi	r28, 0x08	; 8
     7c4:	d1 05       	cpc	r29, r1
     7c6:	99 f7       	brne	.-26     	; 0x7ae <oled_clear_screen+0x8>
     7c8:	df 91       	pop	r29
     7ca:	cf 91       	pop	r28
     7cc:	08 95       	ret

000007ce <oled_pos>:
     7ce:	cf 93       	push	r28
     7d0:	df 93       	push	r29
     7d2:	eb 01       	movw	r28, r22
     7d4:	0e 94 bb 03 	call	0x776	; 0x776 <oled_goto_page>
     7d8:	c0 31       	cpi	r28, 0x10	; 16
     7da:	d1 05       	cpc	r29, r1
     7dc:	e8 f4       	brcc	.+58     	; 0x818 <oled_pos+0x4a>
     7de:	8c 2f       	mov	r24, r28
     7e0:	88 0f       	add	r24, r24
     7e2:	88 0f       	add	r24, r24
     7e4:	88 0f       	add	r24, r24
     7e6:	80 93 3e 03 	sts	0x033E, r24
     7ea:	e0 91 06 01 	lds	r30, 0x0106
     7ee:	f0 91 07 01 	lds	r31, 0x0107
     7f2:	cc 0f       	add	r28, r28
     7f4:	dd 1f       	adc	r29, r29
     7f6:	cc 0f       	add	r28, r28
     7f8:	dd 1f       	adc	r29, r29
     7fa:	cc 0f       	add	r28, r28
     7fc:	dd 1f       	adc	r29, r29
     7fe:	d2 95       	swap	r29
     800:	c2 95       	swap	r28
     802:	cf 70       	andi	r28, 0x0F	; 15
     804:	cd 27       	eor	r28, r29
     806:	df 70       	andi	r29, 0x0F	; 15
     808:	cd 27       	eor	r28, r29
     80a:	c0 83       	st	Z, r28
     80c:	e0 91 06 01 	lds	r30, 0x0106
     810:	f0 91 07 01 	lds	r31, 0x0107
     814:	c0 5f       	subi	r28, 0xF0	; 240
     816:	c0 83       	st	Z, r28
     818:	df 91       	pop	r29
     81a:	cf 91       	pop	r28
     81c:	08 95       	ret

0000081e <oled_printf>:
     81e:	cf 93       	push	r28
     820:	df 93       	push	r29
     822:	cd b7       	in	r28, 0x3d	; 61
     824:	de b7       	in	r29, 0x3e	; 62
     826:	fe 01       	movw	r30, r28
     828:	35 96       	adiw	r30, 0x05	; 5
     82a:	61 91       	ld	r22, Z+
     82c:	71 91       	ld	r23, Z+
     82e:	af 01       	movw	r20, r30
     830:	88 e0       	ldi	r24, 0x08	; 8
     832:	91 e0       	ldi	r25, 0x01	; 1
     834:	0e 94 b0 06 	call	0xd60	; 0xd60 <vfprintf>
     838:	df 91       	pop	r29
     83a:	cf 91       	pop	r28
     83c:	08 95       	ret

0000083e <oled_init>:
     83e:	e0 91 06 01 	lds	r30, 0x0106
     842:	f0 91 07 01 	lds	r31, 0x0107
     846:	8e ea       	ldi	r24, 0xAE	; 174
     848:	80 83       	st	Z, r24
     84a:	e0 91 06 01 	lds	r30, 0x0106
     84e:	f0 91 07 01 	lds	r31, 0x0107
     852:	81 ea       	ldi	r24, 0xA1	; 161
     854:	80 83       	st	Z, r24
     856:	e0 91 06 01 	lds	r30, 0x0106
     85a:	f0 91 07 01 	lds	r31, 0x0107
     85e:	8a ed       	ldi	r24, 0xDA	; 218
     860:	80 83       	st	Z, r24
     862:	e0 91 06 01 	lds	r30, 0x0106
     866:	f0 91 07 01 	lds	r31, 0x0107
     86a:	82 e1       	ldi	r24, 0x12	; 18
     86c:	80 83       	st	Z, r24
     86e:	e0 91 06 01 	lds	r30, 0x0106
     872:	f0 91 07 01 	lds	r31, 0x0107
     876:	88 ec       	ldi	r24, 0xC8	; 200
     878:	80 83       	st	Z, r24
     87a:	e0 91 06 01 	lds	r30, 0x0106
     87e:	f0 91 07 01 	lds	r31, 0x0107
     882:	88 ea       	ldi	r24, 0xA8	; 168
     884:	80 83       	st	Z, r24
     886:	e0 91 06 01 	lds	r30, 0x0106
     88a:	f0 91 07 01 	lds	r31, 0x0107
     88e:	8f e3       	ldi	r24, 0x3F	; 63
     890:	80 83       	st	Z, r24
     892:	e0 91 06 01 	lds	r30, 0x0106
     896:	f0 91 07 01 	lds	r31, 0x0107
     89a:	85 ed       	ldi	r24, 0xD5	; 213
     89c:	80 83       	st	Z, r24
     89e:	e0 91 06 01 	lds	r30, 0x0106
     8a2:	f0 91 07 01 	lds	r31, 0x0107
     8a6:	80 e8       	ldi	r24, 0x80	; 128
     8a8:	80 83       	st	Z, r24
     8aa:	e0 91 06 01 	lds	r30, 0x0106
     8ae:	f0 91 07 01 	lds	r31, 0x0107
     8b2:	81 e8       	ldi	r24, 0x81	; 129
     8b4:	80 83       	st	Z, r24
     8b6:	e0 91 06 01 	lds	r30, 0x0106
     8ba:	f0 91 07 01 	lds	r31, 0x0107
     8be:	80 e5       	ldi	r24, 0x50	; 80
     8c0:	80 83       	st	Z, r24
     8c2:	e0 91 06 01 	lds	r30, 0x0106
     8c6:	f0 91 07 01 	lds	r31, 0x0107
     8ca:	89 ed       	ldi	r24, 0xD9	; 217
     8cc:	80 83       	st	Z, r24
     8ce:	e0 91 06 01 	lds	r30, 0x0106
     8d2:	f0 91 07 01 	lds	r31, 0x0107
     8d6:	81 e2       	ldi	r24, 0x21	; 33
     8d8:	80 83       	st	Z, r24
     8da:	e0 91 06 01 	lds	r30, 0x0106
     8de:	f0 91 07 01 	lds	r31, 0x0107
     8e2:	80 e2       	ldi	r24, 0x20	; 32
     8e4:	80 83       	st	Z, r24
     8e6:	e0 91 06 01 	lds	r30, 0x0106
     8ea:	f0 91 07 01 	lds	r31, 0x0107
     8ee:	82 e0       	ldi	r24, 0x02	; 2
     8f0:	80 83       	st	Z, r24
     8f2:	e0 91 06 01 	lds	r30, 0x0106
     8f6:	f0 91 07 01 	lds	r31, 0x0107
     8fa:	8b ed       	ldi	r24, 0xDB	; 219
     8fc:	80 83       	st	Z, r24
     8fe:	e0 91 06 01 	lds	r30, 0x0106
     902:	f0 91 07 01 	lds	r31, 0x0107
     906:	80 e3       	ldi	r24, 0x30	; 48
     908:	80 83       	st	Z, r24
     90a:	e0 91 06 01 	lds	r30, 0x0106
     90e:	f0 91 07 01 	lds	r31, 0x0107
     912:	8d ea       	ldi	r24, 0xAD	; 173
     914:	80 83       	st	Z, r24
     916:	e0 91 06 01 	lds	r30, 0x0106
     91a:	f0 91 07 01 	lds	r31, 0x0107
     91e:	10 82       	st	Z, r1
     920:	e0 91 06 01 	lds	r30, 0x0106
     924:	f0 91 07 01 	lds	r31, 0x0107
     928:	84 ea       	ldi	r24, 0xA4	; 164
     92a:	80 83       	st	Z, r24
     92c:	e0 91 06 01 	lds	r30, 0x0106
     930:	f0 91 07 01 	lds	r31, 0x0107
     934:	86 ea       	ldi	r24, 0xA6	; 166
     936:	80 83       	st	Z, r24
     938:	e0 91 06 01 	lds	r30, 0x0106
     93c:	f0 91 07 01 	lds	r31, 0x0107
     940:	8f ea       	ldi	r24, 0xAF	; 175
     942:	80 83       	st	Z, r24
     944:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <oled_clear_screen>
     948:	63 e0       	ldi	r22, 0x03	; 3
     94a:	70 e0       	ldi	r23, 0x00	; 0
     94c:	82 e0       	ldi	r24, 0x02	; 2
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	0e 94 e7 03 	call	0x7ce	; 0x7ce <oled_pos>
     954:	81 ef       	ldi	r24, 0xF1	; 241
     956:	91 e0       	ldi	r25, 0x01	; 1
     958:	9f 93       	push	r25
     95a:	8f 93       	push	r24
     95c:	0e 94 0f 04 	call	0x81e	; 0x81e <oled_printf>
     960:	67 e0       	ldi	r22, 0x07	; 7
     962:	70 e0       	ldi	r23, 0x00	; 0
     964:	83 e0       	ldi	r24, 0x03	; 3
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	0e 94 e7 03 	call	0x7ce	; 0x7ce <oled_pos>
     96c:	88 ef       	ldi	r24, 0xF8	; 248
     96e:	91 e0       	ldi	r25, 0x01	; 1
     970:	9f 93       	push	r25
     972:	8f 93       	push	r24
     974:	0e 94 0f 04 	call	0x81e	; 0x81e <oled_printf>
     978:	69 e0       	ldi	r22, 0x09	; 9
     97a:	70 e0       	ldi	r23, 0x00	; 0
     97c:	84 e0       	ldi	r24, 0x04	; 4
     97e:	90 e0       	ldi	r25, 0x00	; 0
     980:	0e 94 e7 03 	call	0x7ce	; 0x7ce <oled_pos>
     984:	8c ef       	ldi	r24, 0xFC	; 252
     986:	91 e0       	ldi	r25, 0x01	; 1
     988:	9f 93       	push	r25
     98a:	8f 93       	push	r24
     98c:	0e 94 0f 04 	call	0x81e	; 0x81e <oled_printf>
     990:	2f ef       	ldi	r18, 0xFF	; 255
     992:	8f ef       	ldi	r24, 0xFF	; 255
     994:	9b e0       	ldi	r25, 0x0B	; 11
     996:	21 50       	subi	r18, 0x01	; 1
     998:	80 40       	sbci	r24, 0x00	; 0
     99a:	90 40       	sbci	r25, 0x00	; 0
     99c:	e1 f7       	brne	.-8      	; 0x996 <oled_init+0x158>
     99e:	00 c0       	rjmp	.+0      	; 0x9a0 <oled_init+0x162>
     9a0:	00 c0       	rjmp	.+0      	; 0x9a2 <oled_init+0x164>
     9a2:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <oled_clear_screen>
     9a6:	0f 90       	pop	r0
     9a8:	0f 90       	pop	r0
     9aa:	0f 90       	pop	r0
     9ac:	0f 90       	pop	r0
     9ae:	0f 90       	pop	r0
     9b0:	0f 90       	pop	r0
     9b2:	08 95       	ret

000009b4 <spi_init>:
     9b4:	87 b3       	in	r24, 0x17	; 23
     9b6:	80 6b       	ori	r24, 0xB0	; 176
     9b8:	87 bb       	out	0x17, r24	; 23
     9ba:	be 98       	cbi	0x17, 6	; 23
     9bc:	8d b1       	in	r24, 0x0d	; 13
     9be:	81 65       	ori	r24, 0x51	; 81
     9c0:	8d b9       	out	0x0d, r24	; 13
     9c2:	08 95       	ret

000009c4 <spi_send>:
     9c4:	8f b9       	out	0x0f, r24	; 15
     9c6:	77 9b       	sbis	0x0e, 7	; 14
     9c8:	fe cf       	rjmp	.-4      	; 0x9c6 <spi_send+0x2>
     9ca:	08 95       	ret

000009cc <spi_read>:
     9cc:	8a ea       	ldi	r24, 0xAA	; 170
     9ce:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <spi_send>
     9d2:	77 9b       	sbis	0x0e, 7	; 14
     9d4:	fe cf       	rjmp	.-4      	; 0x9d2 <spi_read+0x6>
     9d6:	8f b1       	in	r24, 0x0f	; 15
     9d8:	08 95       	ret

000009da <spi_select>:
     9da:	c4 98       	cbi	0x18, 4	; 24
     9dc:	08 95       	ret

000009de <spi_deselect>:
     9de:	c4 9a       	sbi	0x18, 4	; 24
     9e0:	08 95       	ret

000009e2 <SRAM_test>:
     9e2:	cf 92       	push	r12
     9e4:	df 92       	push	r13
     9e6:	ef 92       	push	r14
     9e8:	ff 92       	push	r15
     9ea:	0f 93       	push	r16
     9ec:	1f 93       	push	r17
     9ee:	cf 93       	push	r28
     9f0:	df 93       	push	r29
     9f2:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <oled_clear_screen>
     9f6:	62 e0       	ldi	r22, 0x02	; 2
     9f8:	70 e0       	ldi	r23, 0x00	; 0
     9fa:	83 e0       	ldi	r24, 0x03	; 3
     9fc:	90 e0       	ldi	r25, 0x00	; 0
     9fe:	0e 94 e7 03 	call	0x7ce	; 0x7ce <oled_pos>
     a02:	82 e0       	ldi	r24, 0x02	; 2
     a04:	92 e0       	ldi	r25, 0x02	; 2
     a06:	9f 93       	push	r25
     a08:	8f 93       	push	r24
     a0a:	0e 94 0f 04 	call	0x81e	; 0x81e <oled_printf>
     a0e:	8f e0       	ldi	r24, 0x0F	; 15
     a10:	92 e0       	ldi	r25, 0x02	; 2
     a12:	0e 94 83 06 	call	0xd06	; 0xd06 <puts>
     a16:	0e 94 5f 06 	call	0xcbe	; 0xcbe <rand>
     a1a:	6c 01       	movw	r12, r24
     a1c:	0e 94 64 06 	call	0xcc8	; 0xcc8 <srand>
     a20:	0f 90       	pop	r0
     a22:	0f 90       	pop	r0
     a24:	c0 e0       	ldi	r28, 0x00	; 0
     a26:	d0 e0       	ldi	r29, 0x00	; 0
     a28:	00 e0       	ldi	r16, 0x00	; 0
     a2a:	10 e0       	ldi	r17, 0x00	; 0
     a2c:	0f 2e       	mov	r0, r31
     a2e:	f6 e2       	ldi	r31, 0x26	; 38
     a30:	ef 2e       	mov	r14, r31
     a32:	f2 e0       	ldi	r31, 0x02	; 2
     a34:	ff 2e       	mov	r15, r31
     a36:	f0 2d       	mov	r31, r0
     a38:	0e 94 5f 06 	call	0xcbe	; 0xcbe <rand>
     a3c:	fe 01       	movw	r30, r28
     a3e:	f8 5e       	subi	r31, 0xE8	; 232
     a40:	80 83       	st	Z, r24
     a42:	20 81       	ld	r18, Z
     a44:	28 17       	cp	r18, r24
     a46:	a9 f0       	breq	.+42     	; 0xa72 <SRAM_test+0x90>
     a48:	99 27       	eor	r25, r25
     a4a:	9f 93       	push	r25
     a4c:	8f 93       	push	r24
     a4e:	1f 92       	push	r1
     a50:	2f 93       	push	r18
     a52:	df 93       	push	r29
     a54:	cf 93       	push	r28
     a56:	ff 92       	push	r15
     a58:	ef 92       	push	r14
     a5a:	0e 94 6f 06 	call	0xcde	; 0xcde <printf>
     a5e:	0f 5f       	subi	r16, 0xFF	; 255
     a60:	1f 4f       	sbci	r17, 0xFF	; 255
     a62:	8d b7       	in	r24, 0x3d	; 61
     a64:	9e b7       	in	r25, 0x3e	; 62
     a66:	08 96       	adiw	r24, 0x08	; 8
     a68:	0f b6       	in	r0, 0x3f	; 63
     a6a:	f8 94       	cli
     a6c:	9e bf       	out	0x3e, r25	; 62
     a6e:	0f be       	out	0x3f, r0	; 63
     a70:	8d bf       	out	0x3d, r24	; 61
     a72:	21 96       	adiw	r28, 0x01	; 1
     a74:	c1 15       	cp	r28, r1
     a76:	98 e0       	ldi	r25, 0x08	; 8
     a78:	d9 07       	cpc	r29, r25
     a7a:	f1 f6       	brne	.-68     	; 0xa38 <SRAM_test+0x56>
     a7c:	c6 01       	movw	r24, r12
     a7e:	0e 94 64 06 	call	0xcc8	; 0xcc8 <srand>
     a82:	c0 e0       	ldi	r28, 0x00	; 0
     a84:	d0 e0       	ldi	r29, 0x00	; 0
     a86:	e1 2c       	mov	r14, r1
     a88:	f1 2c       	mov	r15, r1
     a8a:	0f 2e       	mov	r0, r31
     a8c:	ff e5       	ldi	r31, 0x5F	; 95
     a8e:	cf 2e       	mov	r12, r31
     a90:	f2 e0       	ldi	r31, 0x02	; 2
     a92:	df 2e       	mov	r13, r31
     a94:	f0 2d       	mov	r31, r0
     a96:	0e 94 5f 06 	call	0xcbe	; 0xcbe <rand>
     a9a:	fe 01       	movw	r30, r28
     a9c:	f8 5e       	subi	r31, 0xE8	; 232
     a9e:	20 81       	ld	r18, Z
     aa0:	28 17       	cp	r18, r24
     aa2:	b1 f0       	breq	.+44     	; 0xad0 <SRAM_test+0xee>
     aa4:	99 27       	eor	r25, r25
     aa6:	9f 93       	push	r25
     aa8:	8f 93       	push	r24
     aaa:	1f 92       	push	r1
     aac:	2f 93       	push	r18
     aae:	df 93       	push	r29
     ab0:	cf 93       	push	r28
     ab2:	df 92       	push	r13
     ab4:	cf 92       	push	r12
     ab6:	0e 94 6f 06 	call	0xcde	; 0xcde <printf>
     aba:	9f ef       	ldi	r25, 0xFF	; 255
     abc:	e9 1a       	sub	r14, r25
     abe:	f9 0a       	sbc	r15, r25
     ac0:	8d b7       	in	r24, 0x3d	; 61
     ac2:	9e b7       	in	r25, 0x3e	; 62
     ac4:	08 96       	adiw	r24, 0x08	; 8
     ac6:	0f b6       	in	r0, 0x3f	; 63
     ac8:	f8 94       	cli
     aca:	9e bf       	out	0x3e, r25	; 62
     acc:	0f be       	out	0x3f, r0	; 63
     ace:	8d bf       	out	0x3d, r24	; 61
     ad0:	21 96       	adiw	r28, 0x01	; 1
     ad2:	c1 15       	cp	r28, r1
     ad4:	98 e0       	ldi	r25, 0x08	; 8
     ad6:	d9 07       	cpc	r29, r25
     ad8:	f1 f6       	brne	.-68     	; 0xa96 <SRAM_test+0xb4>
     ada:	e1 14       	cp	r14, r1
     adc:	f1 04       	cpc	r15, r1
     ade:	19 f4       	brne	.+6      	; 0xae6 <SRAM_test+0x104>
     ae0:	01 15       	cp	r16, r1
     ae2:	11 05       	cpc	r17, r1
     ae4:	71 f1       	breq	.+92     	; 0xb42 <SRAM_test+0x160>
     ae6:	60 e0       	ldi	r22, 0x00	; 0
     ae8:	70 e0       	ldi	r23, 0x00	; 0
     aea:	85 e0       	ldi	r24, 0x05	; 5
     aec:	90 e0       	ldi	r25, 0x00	; 0
     aee:	0e 94 e7 03 	call	0x7ce	; 0x7ce <oled_pos>
     af2:	ff 92       	push	r15
     af4:	ef 92       	push	r14
     af6:	8c e9       	ldi	r24, 0x9C	; 156
     af8:	92 e0       	ldi	r25, 0x02	; 2
     afa:	9f 93       	push	r25
     afc:	8f 93       	push	r24
     afe:	0e 94 0f 04 	call	0x81e	; 0x81e <oled_printf>
     b02:	60 e0       	ldi	r22, 0x00	; 0
     b04:	70 e0       	ldi	r23, 0x00	; 0
     b06:	86 e0       	ldi	r24, 0x06	; 6
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	0e 94 e7 03 	call	0x7ce	; 0x7ce <oled_pos>
     b0e:	1f 93       	push	r17
     b10:	0f 93       	push	r16
     b12:	8b ea       	ldi	r24, 0xAB	; 171
     b14:	92 e0       	ldi	r25, 0x02	; 2
     b16:	9f 93       	push	r25
     b18:	8f 93       	push	r24
     b1a:	0e 94 0f 04 	call	0x81e	; 0x81e <oled_printf>
     b1e:	2f ef       	ldi	r18, 0xFF	; 255
     b20:	8f ef       	ldi	r24, 0xFF	; 255
     b22:	9b e3       	ldi	r25, 0x3B	; 59
     b24:	21 50       	subi	r18, 0x01	; 1
     b26:	80 40       	sbci	r24, 0x00	; 0
     b28:	90 40       	sbci	r25, 0x00	; 0
     b2a:	e1 f7       	brne	.-8      	; 0xb24 <SRAM_test+0x142>
     b2c:	00 c0       	rjmp	.+0      	; 0xb2e <SRAM_test+0x14c>
     b2e:	00 00       	nop
     b30:	8d b7       	in	r24, 0x3d	; 61
     b32:	9e b7       	in	r25, 0x3e	; 62
     b34:	08 96       	adiw	r24, 0x08	; 8
     b36:	0f b6       	in	r0, 0x3f	; 63
     b38:	f8 94       	cli
     b3a:	9e bf       	out	0x3e, r25	; 62
     b3c:	0f be       	out	0x3f, r0	; 63
     b3e:	8d bf       	out	0x3d, r24	; 61
     b40:	0e c0       	rjmp	.+28     	; 0xb5e <SRAM_test+0x17c>
     b42:	64 e0       	ldi	r22, 0x04	; 4
     b44:	70 e0       	ldi	r23, 0x00	; 0
     b46:	86 e0       	ldi	r24, 0x06	; 6
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	0e 94 e7 03 	call	0x7ce	; 0x7ce <oled_pos>
     b4e:	8a eb       	ldi	r24, 0xBA	; 186
     b50:	92 e0       	ldi	r25, 0x02	; 2
     b52:	9f 93       	push	r25
     b54:	8f 93       	push	r24
     b56:	0e 94 0f 04 	call	0x81e	; 0x81e <oled_printf>
     b5a:	0f 90       	pop	r0
     b5c:	0f 90       	pop	r0
     b5e:	ff 92       	push	r15
     b60:	ef 92       	push	r14
     b62:	1f 93       	push	r17
     b64:	0f 93       	push	r16
     b66:	84 ec       	ldi	r24, 0xC4	; 196
     b68:	92 e0       	ldi	r25, 0x02	; 2
     b6a:	9f 93       	push	r25
     b6c:	8f 93       	push	r24
     b6e:	0e 94 6f 06 	call	0xcde	; 0xcde <printf>
     b72:	0f 90       	pop	r0
     b74:	0f 90       	pop	r0
     b76:	0f 90       	pop	r0
     b78:	0f 90       	pop	r0
     b7a:	0f 90       	pop	r0
     b7c:	0f 90       	pop	r0
     b7e:	df 91       	pop	r29
     b80:	cf 91       	pop	r28
     b82:	1f 91       	pop	r17
     b84:	0f 91       	pop	r16
     b86:	ff 90       	pop	r15
     b88:	ef 90       	pop	r14
     b8a:	df 90       	pop	r13
     b8c:	cf 90       	pop	r12
     b8e:	08 95       	ret

00000b90 <SRAM_init>:
     b90:	80 e8       	ldi	r24, 0x80	; 128
     b92:	85 bf       	out	0x35, r24	; 53
     b94:	8f ef       	ldi	r24, 0xFF	; 255
     b96:	8a bb       	out	0x1a, r24	; 26
     b98:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <SRAM_test>
     b9c:	08 95       	ret

00000b9e <uart_sendChar>:
     b9e:	5d 9b       	sbis	0x0b, 5	; 11
     ba0:	fe cf       	rjmp	.-4      	; 0xb9e <uart_sendChar>
     ba2:	8c b9       	out	0x0c, r24	; 12
     ba4:	08 95       	ret

00000ba6 <uart_getChar>:
     ba6:	5f 9b       	sbis	0x0b, 7	; 11
     ba8:	fe cf       	rjmp	.-4      	; 0xba6 <uart_getChar>
     baa:	8c b1       	in	r24, 0x0c	; 12
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	08 95       	ret

00000bb0 <uart_init>:
     bb0:	89 b9       	out	0x09, r24	; 9
     bb2:	88 e1       	ldi	r24, 0x18	; 24
     bb4:	8a b9       	out	0x0a, r24	; 10
     bb6:	86 e1       	ldi	r24, 0x16	; 22
     bb8:	91 e0       	ldi	r25, 0x01	; 1
     bba:	90 93 42 03 	sts	0x0342, r25
     bbe:	80 93 41 03 	sts	0x0341, r24
     bc2:	90 93 40 03 	sts	0x0340, r25
     bc6:	80 93 3f 03 	sts	0x033F, r24
     bca:	08 95       	ret

00000bcc <main>:
#include "Drivers/uart_driver.h"
#include "Drivers/mcp2515_driver.h"
#include "Drivers/can_driver.h"

int main(void) {
    uart_init(MYUBRR);
     bcc:	8f e1       	ldi	r24, 0x1F	; 31
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <uart_init>
	printf("\nREBOOTED\n");
     bd4:	8d e1       	ldi	r24, 0x1D	; 29
     bd6:	93 e0       	ldi	r25, 0x03	; 3
     bd8:	0e 94 83 06 	call	0xd06	; 0xd06 <puts>
	SRAM_init();
     bdc:	0e 94 c8 05 	call	0xb90	; 0xb90 <SRAM_init>
	joystick_init();
     be0:	0e 94 06 03 	call	0x60c	; 0x60c <joystick_init>
	oled_init();
     be4:	0e 94 1f 04 	call	0x83e	; 0x83e <oled_init>
	//mcp2515_init();
	can_init();	
     be8:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <can_init>

	printf("\nAll init done\n\n");
     bec:	87 e2       	ldi	r24, 0x27	; 39
     bee:	93 e0       	ldi	r25, 0x03	; 3
     bf0:	0e 94 83 06 	call	0xd06	; 0xd06 <puts>
	//_delay_ms(1000);

	//mcp2515_test();
	//can_test();
	can_joy_test();
     bf4:	0e 94 c8 02 	call	0x590	; 0x590 <can_joy_test>
     bf8:	2f ef       	ldi	r18, 0xFF	; 255
     bfa:	8f e7       	ldi	r24, 0x7F	; 127
     bfc:	91 e0       	ldi	r25, 0x01	; 1
     bfe:	21 50       	subi	r18, 0x01	; 1
     c00:	80 40       	sbci	r24, 0x00	; 0
     c02:	90 40       	sbci	r25, 0x00	; 0
     c04:	e1 f7       	brne	.-8      	; 0xbfe <main+0x32>
     c06:	00 c0       	rjmp	.+0      	; 0xc08 <main+0x3c>
     c08:	00 c0       	rjmp	.+0      	; 0xc0a <main+0x3e>
     c0a:	f6 cf       	rjmp	.-20     	; 0xbf8 <main+0x2c>

00000c0c <flash_diode>:
#include "Drivers/oled_driver.h"


//Simple test, Ex 1, task 6
void flash_diode(){
	PORTB |= (1<<PINB0);
     c0c:	c0 9a       	sbi	0x18, 0	; 24
     c0e:	80 e0       	ldi	r24, 0x00	; 0
     c10:	90 ef       	ldi	r25, 0xF0	; 240
     c12:	01 97       	sbiw	r24, 0x01	; 1
     c14:	f1 f7       	brne	.-4      	; 0xc12 <flash_diode+0x6>
	_delay_ms(50);
	PORTB &= ~(1<<PINB0);
     c16:	c0 98       	cbi	0x18, 0	; 24
     c18:	80 e0       	ldi	r24, 0x00	; 0
     c1a:	90 ef       	ldi	r25, 0xF0	; 240
     c1c:	01 97       	sbiw	r24, 0x01	; 1
     c1e:	f1 f7       	brne	.-4      	; 0xc1c <flash_diode+0x10>
     c20:	08 95       	ret

00000c22 <do_rand>:
     c22:	8f 92       	push	r8
     c24:	9f 92       	push	r9
     c26:	af 92       	push	r10
     c28:	bf 92       	push	r11
     c2a:	cf 92       	push	r12
     c2c:	df 92       	push	r13
     c2e:	ef 92       	push	r14
     c30:	ff 92       	push	r15
     c32:	cf 93       	push	r28
     c34:	df 93       	push	r29
     c36:	ec 01       	movw	r28, r24
     c38:	68 81       	ld	r22, Y
     c3a:	79 81       	ldd	r23, Y+1	; 0x01
     c3c:	8a 81       	ldd	r24, Y+2	; 0x02
     c3e:	9b 81       	ldd	r25, Y+3	; 0x03
     c40:	61 15       	cp	r22, r1
     c42:	71 05       	cpc	r23, r1
     c44:	81 05       	cpc	r24, r1
     c46:	91 05       	cpc	r25, r1
     c48:	21 f4       	brne	.+8      	; 0xc52 <do_rand+0x30>
     c4a:	64 e2       	ldi	r22, 0x24	; 36
     c4c:	79 ed       	ldi	r23, 0xD9	; 217
     c4e:	8b e5       	ldi	r24, 0x5B	; 91
     c50:	97 e0       	ldi	r25, 0x07	; 7
     c52:	2d e1       	ldi	r18, 0x1D	; 29
     c54:	33 ef       	ldi	r19, 0xF3	; 243
     c56:	41 e0       	ldi	r20, 0x01	; 1
     c58:	50 e0       	ldi	r21, 0x00	; 0
     c5a:	0e 94 28 09 	call	0x1250	; 0x1250 <__divmodsi4>
     c5e:	49 01       	movw	r8, r18
     c60:	5a 01       	movw	r10, r20
     c62:	9b 01       	movw	r18, r22
     c64:	ac 01       	movw	r20, r24
     c66:	a7 ea       	ldi	r26, 0xA7	; 167
     c68:	b1 e4       	ldi	r27, 0x41	; 65
     c6a:	0e 94 47 09 	call	0x128e	; 0x128e <__muluhisi3>
     c6e:	6b 01       	movw	r12, r22
     c70:	7c 01       	movw	r14, r24
     c72:	ac ee       	ldi	r26, 0xEC	; 236
     c74:	b4 ef       	ldi	r27, 0xF4	; 244
     c76:	a5 01       	movw	r20, r10
     c78:	94 01       	movw	r18, r8
     c7a:	0e 94 55 09 	call	0x12aa	; 0x12aa <__mulohisi3>
     c7e:	c6 0e       	add	r12, r22
     c80:	d7 1e       	adc	r13, r23
     c82:	e8 1e       	adc	r14, r24
     c84:	f9 1e       	adc	r15, r25
     c86:	f7 fe       	sbrs	r15, 7
     c88:	06 c0       	rjmp	.+12     	; 0xc96 <do_rand+0x74>
     c8a:	81 e0       	ldi	r24, 0x01	; 1
     c8c:	c8 1a       	sub	r12, r24
     c8e:	d1 08       	sbc	r13, r1
     c90:	e1 08       	sbc	r14, r1
     c92:	80 e8       	ldi	r24, 0x80	; 128
     c94:	f8 0a       	sbc	r15, r24
     c96:	c8 82       	st	Y, r12
     c98:	d9 82       	std	Y+1, r13	; 0x01
     c9a:	ea 82       	std	Y+2, r14	; 0x02
     c9c:	fb 82       	std	Y+3, r15	; 0x03
     c9e:	c6 01       	movw	r24, r12
     ca0:	9f 77       	andi	r25, 0x7F	; 127
     ca2:	df 91       	pop	r29
     ca4:	cf 91       	pop	r28
     ca6:	ff 90       	pop	r15
     ca8:	ef 90       	pop	r14
     caa:	df 90       	pop	r13
     cac:	cf 90       	pop	r12
     cae:	bf 90       	pop	r11
     cb0:	af 90       	pop	r10
     cb2:	9f 90       	pop	r9
     cb4:	8f 90       	pop	r8
     cb6:	08 95       	ret

00000cb8 <rand_r>:
     cb8:	0e 94 11 06 	call	0xc22	; 0xc22 <do_rand>
     cbc:	08 95       	ret

00000cbe <rand>:
     cbe:	80 e0       	ldi	r24, 0x00	; 0
     cc0:	91 e0       	ldi	r25, 0x01	; 1
     cc2:	0e 94 11 06 	call	0xc22	; 0xc22 <do_rand>
     cc6:	08 95       	ret

00000cc8 <srand>:
     cc8:	a0 e0       	ldi	r26, 0x00	; 0
     cca:	b0 e0       	ldi	r27, 0x00	; 0
     ccc:	80 93 00 01 	sts	0x0100, r24
     cd0:	90 93 01 01 	sts	0x0101, r25
     cd4:	a0 93 02 01 	sts	0x0102, r26
     cd8:	b0 93 03 01 	sts	0x0103, r27
     cdc:	08 95       	ret

00000cde <printf>:
     cde:	a0 e0       	ldi	r26, 0x00	; 0
     ce0:	b0 e0       	ldi	r27, 0x00	; 0
     ce2:	e5 e7       	ldi	r30, 0x75	; 117
     ce4:	f6 e0       	ldi	r31, 0x06	; 6
     ce6:	0c 94 6a 09 	jmp	0x12d4	; 0x12d4 <__prologue_saves__+0x20>
     cea:	fe 01       	movw	r30, r28
     cec:	35 96       	adiw	r30, 0x05	; 5
     cee:	61 91       	ld	r22, Z+
     cf0:	71 91       	ld	r23, Z+
     cf2:	af 01       	movw	r20, r30
     cf4:	80 91 41 03 	lds	r24, 0x0341
     cf8:	90 91 42 03 	lds	r25, 0x0342
     cfc:	0e 94 b0 06 	call	0xd60	; 0xd60 <vfprintf>
     d00:	e2 e0       	ldi	r30, 0x02	; 2
     d02:	0c 94 86 09 	jmp	0x130c	; 0x130c <__epilogue_restores__+0x20>

00000d06 <puts>:
     d06:	0f 93       	push	r16
     d08:	1f 93       	push	r17
     d0a:	cf 93       	push	r28
     d0c:	df 93       	push	r29
     d0e:	e0 91 41 03 	lds	r30, 0x0341
     d12:	f0 91 42 03 	lds	r31, 0x0342
     d16:	23 81       	ldd	r18, Z+3	; 0x03
     d18:	21 ff       	sbrs	r18, 1
     d1a:	1b c0       	rjmp	.+54     	; 0xd52 <puts+0x4c>
     d1c:	ec 01       	movw	r28, r24
     d1e:	00 e0       	ldi	r16, 0x00	; 0
     d20:	10 e0       	ldi	r17, 0x00	; 0
     d22:	89 91       	ld	r24, Y+
     d24:	60 91 41 03 	lds	r22, 0x0341
     d28:	70 91 42 03 	lds	r23, 0x0342
     d2c:	db 01       	movw	r26, r22
     d2e:	18 96       	adiw	r26, 0x08	; 8
     d30:	ed 91       	ld	r30, X+
     d32:	fc 91       	ld	r31, X
     d34:	19 97       	sbiw	r26, 0x09	; 9
     d36:	88 23       	and	r24, r24
     d38:	31 f0       	breq	.+12     	; 0xd46 <puts+0x40>
     d3a:	09 95       	icall
     d3c:	89 2b       	or	r24, r25
     d3e:	89 f3       	breq	.-30     	; 0xd22 <puts+0x1c>
     d40:	0f ef       	ldi	r16, 0xFF	; 255
     d42:	1f ef       	ldi	r17, 0xFF	; 255
     d44:	ee cf       	rjmp	.-36     	; 0xd22 <puts+0x1c>
     d46:	8a e0       	ldi	r24, 0x0A	; 10
     d48:	09 95       	icall
     d4a:	89 2b       	or	r24, r25
     d4c:	11 f4       	brne	.+4      	; 0xd52 <puts+0x4c>
     d4e:	c8 01       	movw	r24, r16
     d50:	02 c0       	rjmp	.+4      	; 0xd56 <puts+0x50>
     d52:	8f ef       	ldi	r24, 0xFF	; 255
     d54:	9f ef       	ldi	r25, 0xFF	; 255
     d56:	df 91       	pop	r29
     d58:	cf 91       	pop	r28
     d5a:	1f 91       	pop	r17
     d5c:	0f 91       	pop	r16
     d5e:	08 95       	ret

00000d60 <vfprintf>:
     d60:	ac e0       	ldi	r26, 0x0C	; 12
     d62:	b0 e0       	ldi	r27, 0x00	; 0
     d64:	e6 eb       	ldi	r30, 0xB6	; 182
     d66:	f6 e0       	ldi	r31, 0x06	; 6
     d68:	0c 94 5a 09 	jmp	0x12b4	; 0x12b4 <__prologue_saves__>
     d6c:	7c 01       	movw	r14, r24
     d6e:	6b 01       	movw	r12, r22
     d70:	8a 01       	movw	r16, r20
     d72:	fc 01       	movw	r30, r24
     d74:	17 82       	std	Z+7, r1	; 0x07
     d76:	16 82       	std	Z+6, r1	; 0x06
     d78:	83 81       	ldd	r24, Z+3	; 0x03
     d7a:	81 ff       	sbrs	r24, 1
     d7c:	bd c1       	rjmp	.+890    	; 0x10f8 <vfprintf+0x398>
     d7e:	ce 01       	movw	r24, r28
     d80:	01 96       	adiw	r24, 0x01	; 1
     d82:	4c 01       	movw	r8, r24
     d84:	f7 01       	movw	r30, r14
     d86:	93 81       	ldd	r25, Z+3	; 0x03
     d88:	f6 01       	movw	r30, r12
     d8a:	93 fd       	sbrc	r25, 3
     d8c:	85 91       	lpm	r24, Z+
     d8e:	93 ff       	sbrs	r25, 3
     d90:	81 91       	ld	r24, Z+
     d92:	6f 01       	movw	r12, r30
     d94:	88 23       	and	r24, r24
     d96:	09 f4       	brne	.+2      	; 0xd9a <vfprintf+0x3a>
     d98:	ab c1       	rjmp	.+854    	; 0x10f0 <vfprintf+0x390>
     d9a:	85 32       	cpi	r24, 0x25	; 37
     d9c:	39 f4       	brne	.+14     	; 0xdac <vfprintf+0x4c>
     d9e:	93 fd       	sbrc	r25, 3
     da0:	85 91       	lpm	r24, Z+
     da2:	93 ff       	sbrs	r25, 3
     da4:	81 91       	ld	r24, Z+
     da6:	6f 01       	movw	r12, r30
     da8:	85 32       	cpi	r24, 0x25	; 37
     daa:	29 f4       	brne	.+10     	; 0xdb6 <vfprintf+0x56>
     dac:	b7 01       	movw	r22, r14
     dae:	90 e0       	ldi	r25, 0x00	; 0
     db0:	0e 94 98 08 	call	0x1130	; 0x1130 <fputc>
     db4:	e7 cf       	rjmp	.-50     	; 0xd84 <vfprintf+0x24>
     db6:	51 2c       	mov	r5, r1
     db8:	31 2c       	mov	r3, r1
     dba:	20 e0       	ldi	r18, 0x00	; 0
     dbc:	20 32       	cpi	r18, 0x20	; 32
     dbe:	a0 f4       	brcc	.+40     	; 0xde8 <vfprintf+0x88>
     dc0:	8b 32       	cpi	r24, 0x2B	; 43
     dc2:	69 f0       	breq	.+26     	; 0xdde <vfprintf+0x7e>
     dc4:	30 f4       	brcc	.+12     	; 0xdd2 <vfprintf+0x72>
     dc6:	80 32       	cpi	r24, 0x20	; 32
     dc8:	59 f0       	breq	.+22     	; 0xde0 <vfprintf+0x80>
     dca:	83 32       	cpi	r24, 0x23	; 35
     dcc:	69 f4       	brne	.+26     	; 0xde8 <vfprintf+0x88>
     dce:	20 61       	ori	r18, 0x10	; 16
     dd0:	2c c0       	rjmp	.+88     	; 0xe2a <vfprintf+0xca>
     dd2:	8d 32       	cpi	r24, 0x2D	; 45
     dd4:	39 f0       	breq	.+14     	; 0xde4 <vfprintf+0x84>
     dd6:	80 33       	cpi	r24, 0x30	; 48
     dd8:	39 f4       	brne	.+14     	; 0xde8 <vfprintf+0x88>
     dda:	21 60       	ori	r18, 0x01	; 1
     ddc:	26 c0       	rjmp	.+76     	; 0xe2a <vfprintf+0xca>
     dde:	22 60       	ori	r18, 0x02	; 2
     de0:	24 60       	ori	r18, 0x04	; 4
     de2:	23 c0       	rjmp	.+70     	; 0xe2a <vfprintf+0xca>
     de4:	28 60       	ori	r18, 0x08	; 8
     de6:	21 c0       	rjmp	.+66     	; 0xe2a <vfprintf+0xca>
     de8:	27 fd       	sbrc	r18, 7
     dea:	27 c0       	rjmp	.+78     	; 0xe3a <vfprintf+0xda>
     dec:	30 ed       	ldi	r19, 0xD0	; 208
     dee:	38 0f       	add	r19, r24
     df0:	3a 30       	cpi	r19, 0x0A	; 10
     df2:	78 f4       	brcc	.+30     	; 0xe12 <vfprintf+0xb2>
     df4:	26 ff       	sbrs	r18, 6
     df6:	06 c0       	rjmp	.+12     	; 0xe04 <vfprintf+0xa4>
     df8:	fa e0       	ldi	r31, 0x0A	; 10
     dfa:	5f 9e       	mul	r5, r31
     dfc:	30 0d       	add	r19, r0
     dfe:	11 24       	eor	r1, r1
     e00:	53 2e       	mov	r5, r19
     e02:	13 c0       	rjmp	.+38     	; 0xe2a <vfprintf+0xca>
     e04:	8a e0       	ldi	r24, 0x0A	; 10
     e06:	38 9e       	mul	r3, r24
     e08:	30 0d       	add	r19, r0
     e0a:	11 24       	eor	r1, r1
     e0c:	33 2e       	mov	r3, r19
     e0e:	20 62       	ori	r18, 0x20	; 32
     e10:	0c c0       	rjmp	.+24     	; 0xe2a <vfprintf+0xca>
     e12:	8e 32       	cpi	r24, 0x2E	; 46
     e14:	21 f4       	brne	.+8      	; 0xe1e <vfprintf+0xbe>
     e16:	26 fd       	sbrc	r18, 6
     e18:	6b c1       	rjmp	.+726    	; 0x10f0 <vfprintf+0x390>
     e1a:	20 64       	ori	r18, 0x40	; 64
     e1c:	06 c0       	rjmp	.+12     	; 0xe2a <vfprintf+0xca>
     e1e:	8c 36       	cpi	r24, 0x6C	; 108
     e20:	11 f4       	brne	.+4      	; 0xe26 <vfprintf+0xc6>
     e22:	20 68       	ori	r18, 0x80	; 128
     e24:	02 c0       	rjmp	.+4      	; 0xe2a <vfprintf+0xca>
     e26:	88 36       	cpi	r24, 0x68	; 104
     e28:	41 f4       	brne	.+16     	; 0xe3a <vfprintf+0xda>
     e2a:	f6 01       	movw	r30, r12
     e2c:	93 fd       	sbrc	r25, 3
     e2e:	85 91       	lpm	r24, Z+
     e30:	93 ff       	sbrs	r25, 3
     e32:	81 91       	ld	r24, Z+
     e34:	6f 01       	movw	r12, r30
     e36:	81 11       	cpse	r24, r1
     e38:	c1 cf       	rjmp	.-126    	; 0xdbc <vfprintf+0x5c>
     e3a:	98 2f       	mov	r25, r24
     e3c:	9f 7d       	andi	r25, 0xDF	; 223
     e3e:	95 54       	subi	r25, 0x45	; 69
     e40:	93 30       	cpi	r25, 0x03	; 3
     e42:	28 f4       	brcc	.+10     	; 0xe4e <vfprintf+0xee>
     e44:	0c 5f       	subi	r16, 0xFC	; 252
     e46:	1f 4f       	sbci	r17, 0xFF	; 255
     e48:	ff e3       	ldi	r31, 0x3F	; 63
     e4a:	f9 83       	std	Y+1, r31	; 0x01
     e4c:	0d c0       	rjmp	.+26     	; 0xe68 <vfprintf+0x108>
     e4e:	83 36       	cpi	r24, 0x63	; 99
     e50:	31 f0       	breq	.+12     	; 0xe5e <vfprintf+0xfe>
     e52:	83 37       	cpi	r24, 0x73	; 115
     e54:	71 f0       	breq	.+28     	; 0xe72 <vfprintf+0x112>
     e56:	83 35       	cpi	r24, 0x53	; 83
     e58:	09 f0       	breq	.+2      	; 0xe5c <vfprintf+0xfc>
     e5a:	5b c0       	rjmp	.+182    	; 0xf12 <vfprintf+0x1b2>
     e5c:	22 c0       	rjmp	.+68     	; 0xea2 <vfprintf+0x142>
     e5e:	f8 01       	movw	r30, r16
     e60:	80 81       	ld	r24, Z
     e62:	89 83       	std	Y+1, r24	; 0x01
     e64:	0e 5f       	subi	r16, 0xFE	; 254
     e66:	1f 4f       	sbci	r17, 0xFF	; 255
     e68:	44 24       	eor	r4, r4
     e6a:	43 94       	inc	r4
     e6c:	51 2c       	mov	r5, r1
     e6e:	54 01       	movw	r10, r8
     e70:	15 c0       	rjmp	.+42     	; 0xe9c <vfprintf+0x13c>
     e72:	38 01       	movw	r6, r16
     e74:	f2 e0       	ldi	r31, 0x02	; 2
     e76:	6f 0e       	add	r6, r31
     e78:	71 1c       	adc	r7, r1
     e7a:	f8 01       	movw	r30, r16
     e7c:	a0 80       	ld	r10, Z
     e7e:	b1 80       	ldd	r11, Z+1	; 0x01
     e80:	26 ff       	sbrs	r18, 6
     e82:	03 c0       	rjmp	.+6      	; 0xe8a <vfprintf+0x12a>
     e84:	65 2d       	mov	r22, r5
     e86:	70 e0       	ldi	r23, 0x00	; 0
     e88:	02 c0       	rjmp	.+4      	; 0xe8e <vfprintf+0x12e>
     e8a:	6f ef       	ldi	r22, 0xFF	; 255
     e8c:	7f ef       	ldi	r23, 0xFF	; 255
     e8e:	c5 01       	movw	r24, r10
     e90:	2c 87       	std	Y+12, r18	; 0x0c
     e92:	0e 94 8d 08 	call	0x111a	; 0x111a <strnlen>
     e96:	2c 01       	movw	r4, r24
     e98:	83 01       	movw	r16, r6
     e9a:	2c 85       	ldd	r18, Y+12	; 0x0c
     e9c:	2f 77       	andi	r18, 0x7F	; 127
     e9e:	22 2e       	mov	r2, r18
     ea0:	17 c0       	rjmp	.+46     	; 0xed0 <vfprintf+0x170>
     ea2:	38 01       	movw	r6, r16
     ea4:	f2 e0       	ldi	r31, 0x02	; 2
     ea6:	6f 0e       	add	r6, r31
     ea8:	71 1c       	adc	r7, r1
     eaa:	f8 01       	movw	r30, r16
     eac:	a0 80       	ld	r10, Z
     eae:	b1 80       	ldd	r11, Z+1	; 0x01
     eb0:	26 ff       	sbrs	r18, 6
     eb2:	03 c0       	rjmp	.+6      	; 0xeba <vfprintf+0x15a>
     eb4:	65 2d       	mov	r22, r5
     eb6:	70 e0       	ldi	r23, 0x00	; 0
     eb8:	02 c0       	rjmp	.+4      	; 0xebe <vfprintf+0x15e>
     eba:	6f ef       	ldi	r22, 0xFF	; 255
     ebc:	7f ef       	ldi	r23, 0xFF	; 255
     ebe:	c5 01       	movw	r24, r10
     ec0:	2c 87       	std	Y+12, r18	; 0x0c
     ec2:	0e 94 82 08 	call	0x1104	; 0x1104 <strnlen_P>
     ec6:	2c 01       	movw	r4, r24
     ec8:	2c 85       	ldd	r18, Y+12	; 0x0c
     eca:	20 68       	ori	r18, 0x80	; 128
     ecc:	22 2e       	mov	r2, r18
     ece:	83 01       	movw	r16, r6
     ed0:	23 fc       	sbrc	r2, 3
     ed2:	1b c0       	rjmp	.+54     	; 0xf0a <vfprintf+0x1aa>
     ed4:	83 2d       	mov	r24, r3
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	48 16       	cp	r4, r24
     eda:	59 06       	cpc	r5, r25
     edc:	b0 f4       	brcc	.+44     	; 0xf0a <vfprintf+0x1aa>
     ede:	b7 01       	movw	r22, r14
     ee0:	80 e2       	ldi	r24, 0x20	; 32
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	0e 94 98 08 	call	0x1130	; 0x1130 <fputc>
     ee8:	3a 94       	dec	r3
     eea:	f4 cf       	rjmp	.-24     	; 0xed4 <vfprintf+0x174>
     eec:	f5 01       	movw	r30, r10
     eee:	27 fc       	sbrc	r2, 7
     ef0:	85 91       	lpm	r24, Z+
     ef2:	27 fe       	sbrs	r2, 7
     ef4:	81 91       	ld	r24, Z+
     ef6:	5f 01       	movw	r10, r30
     ef8:	b7 01       	movw	r22, r14
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	0e 94 98 08 	call	0x1130	; 0x1130 <fputc>
     f00:	31 10       	cpse	r3, r1
     f02:	3a 94       	dec	r3
     f04:	f1 e0       	ldi	r31, 0x01	; 1
     f06:	4f 1a       	sub	r4, r31
     f08:	51 08       	sbc	r5, r1
     f0a:	41 14       	cp	r4, r1
     f0c:	51 04       	cpc	r5, r1
     f0e:	71 f7       	brne	.-36     	; 0xeec <vfprintf+0x18c>
     f10:	e5 c0       	rjmp	.+458    	; 0x10dc <vfprintf+0x37c>
     f12:	84 36       	cpi	r24, 0x64	; 100
     f14:	11 f0       	breq	.+4      	; 0xf1a <vfprintf+0x1ba>
     f16:	89 36       	cpi	r24, 0x69	; 105
     f18:	39 f5       	brne	.+78     	; 0xf68 <vfprintf+0x208>
     f1a:	f8 01       	movw	r30, r16
     f1c:	27 ff       	sbrs	r18, 7
     f1e:	07 c0       	rjmp	.+14     	; 0xf2e <vfprintf+0x1ce>
     f20:	60 81       	ld	r22, Z
     f22:	71 81       	ldd	r23, Z+1	; 0x01
     f24:	82 81       	ldd	r24, Z+2	; 0x02
     f26:	93 81       	ldd	r25, Z+3	; 0x03
     f28:	0c 5f       	subi	r16, 0xFC	; 252
     f2a:	1f 4f       	sbci	r17, 0xFF	; 255
     f2c:	08 c0       	rjmp	.+16     	; 0xf3e <vfprintf+0x1de>
     f2e:	60 81       	ld	r22, Z
     f30:	71 81       	ldd	r23, Z+1	; 0x01
     f32:	88 27       	eor	r24, r24
     f34:	77 fd       	sbrc	r23, 7
     f36:	80 95       	com	r24
     f38:	98 2f       	mov	r25, r24
     f3a:	0e 5f       	subi	r16, 0xFE	; 254
     f3c:	1f 4f       	sbci	r17, 0xFF	; 255
     f3e:	2f 76       	andi	r18, 0x6F	; 111
     f40:	b2 2e       	mov	r11, r18
     f42:	97 ff       	sbrs	r25, 7
     f44:	09 c0       	rjmp	.+18     	; 0xf58 <vfprintf+0x1f8>
     f46:	90 95       	com	r25
     f48:	80 95       	com	r24
     f4a:	70 95       	com	r23
     f4c:	61 95       	neg	r22
     f4e:	7f 4f       	sbci	r23, 0xFF	; 255
     f50:	8f 4f       	sbci	r24, 0xFF	; 255
     f52:	9f 4f       	sbci	r25, 0xFF	; 255
     f54:	20 68       	ori	r18, 0x80	; 128
     f56:	b2 2e       	mov	r11, r18
     f58:	2a e0       	ldi	r18, 0x0A	; 10
     f5a:	30 e0       	ldi	r19, 0x00	; 0
     f5c:	a4 01       	movw	r20, r8
     f5e:	0e 94 ca 08 	call	0x1194	; 0x1194 <__ultoa_invert>
     f62:	a8 2e       	mov	r10, r24
     f64:	a8 18       	sub	r10, r8
     f66:	44 c0       	rjmp	.+136    	; 0xff0 <vfprintf+0x290>
     f68:	85 37       	cpi	r24, 0x75	; 117
     f6a:	29 f4       	brne	.+10     	; 0xf76 <vfprintf+0x216>
     f6c:	2f 7e       	andi	r18, 0xEF	; 239
     f6e:	b2 2e       	mov	r11, r18
     f70:	2a e0       	ldi	r18, 0x0A	; 10
     f72:	30 e0       	ldi	r19, 0x00	; 0
     f74:	25 c0       	rjmp	.+74     	; 0xfc0 <vfprintf+0x260>
     f76:	f2 2f       	mov	r31, r18
     f78:	f9 7f       	andi	r31, 0xF9	; 249
     f7a:	bf 2e       	mov	r11, r31
     f7c:	8f 36       	cpi	r24, 0x6F	; 111
     f7e:	c1 f0       	breq	.+48     	; 0xfb0 <vfprintf+0x250>
     f80:	18 f4       	brcc	.+6      	; 0xf88 <vfprintf+0x228>
     f82:	88 35       	cpi	r24, 0x58	; 88
     f84:	79 f0       	breq	.+30     	; 0xfa4 <vfprintf+0x244>
     f86:	b4 c0       	rjmp	.+360    	; 0x10f0 <vfprintf+0x390>
     f88:	80 37       	cpi	r24, 0x70	; 112
     f8a:	19 f0       	breq	.+6      	; 0xf92 <vfprintf+0x232>
     f8c:	88 37       	cpi	r24, 0x78	; 120
     f8e:	21 f0       	breq	.+8      	; 0xf98 <vfprintf+0x238>
     f90:	af c0       	rjmp	.+350    	; 0x10f0 <vfprintf+0x390>
     f92:	2f 2f       	mov	r18, r31
     f94:	20 61       	ori	r18, 0x10	; 16
     f96:	b2 2e       	mov	r11, r18
     f98:	b4 fe       	sbrs	r11, 4
     f9a:	0d c0       	rjmp	.+26     	; 0xfb6 <vfprintf+0x256>
     f9c:	8b 2d       	mov	r24, r11
     f9e:	84 60       	ori	r24, 0x04	; 4
     fa0:	b8 2e       	mov	r11, r24
     fa2:	09 c0       	rjmp	.+18     	; 0xfb6 <vfprintf+0x256>
     fa4:	24 ff       	sbrs	r18, 4
     fa6:	0a c0       	rjmp	.+20     	; 0xfbc <vfprintf+0x25c>
     fa8:	9f 2f       	mov	r25, r31
     faa:	96 60       	ori	r25, 0x06	; 6
     fac:	b9 2e       	mov	r11, r25
     fae:	06 c0       	rjmp	.+12     	; 0xfbc <vfprintf+0x25c>
     fb0:	28 e0       	ldi	r18, 0x08	; 8
     fb2:	30 e0       	ldi	r19, 0x00	; 0
     fb4:	05 c0       	rjmp	.+10     	; 0xfc0 <vfprintf+0x260>
     fb6:	20 e1       	ldi	r18, 0x10	; 16
     fb8:	30 e0       	ldi	r19, 0x00	; 0
     fba:	02 c0       	rjmp	.+4      	; 0xfc0 <vfprintf+0x260>
     fbc:	20 e1       	ldi	r18, 0x10	; 16
     fbe:	32 e0       	ldi	r19, 0x02	; 2
     fc0:	f8 01       	movw	r30, r16
     fc2:	b7 fe       	sbrs	r11, 7
     fc4:	07 c0       	rjmp	.+14     	; 0xfd4 <vfprintf+0x274>
     fc6:	60 81       	ld	r22, Z
     fc8:	71 81       	ldd	r23, Z+1	; 0x01
     fca:	82 81       	ldd	r24, Z+2	; 0x02
     fcc:	93 81       	ldd	r25, Z+3	; 0x03
     fce:	0c 5f       	subi	r16, 0xFC	; 252
     fd0:	1f 4f       	sbci	r17, 0xFF	; 255
     fd2:	06 c0       	rjmp	.+12     	; 0xfe0 <vfprintf+0x280>
     fd4:	60 81       	ld	r22, Z
     fd6:	71 81       	ldd	r23, Z+1	; 0x01
     fd8:	80 e0       	ldi	r24, 0x00	; 0
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	0e 5f       	subi	r16, 0xFE	; 254
     fde:	1f 4f       	sbci	r17, 0xFF	; 255
     fe0:	a4 01       	movw	r20, r8
     fe2:	0e 94 ca 08 	call	0x1194	; 0x1194 <__ultoa_invert>
     fe6:	a8 2e       	mov	r10, r24
     fe8:	a8 18       	sub	r10, r8
     fea:	fb 2d       	mov	r31, r11
     fec:	ff 77       	andi	r31, 0x7F	; 127
     fee:	bf 2e       	mov	r11, r31
     ff0:	b6 fe       	sbrs	r11, 6
     ff2:	0b c0       	rjmp	.+22     	; 0x100a <vfprintf+0x2aa>
     ff4:	2b 2d       	mov	r18, r11
     ff6:	2e 7f       	andi	r18, 0xFE	; 254
     ff8:	a5 14       	cp	r10, r5
     ffa:	50 f4       	brcc	.+20     	; 0x1010 <vfprintf+0x2b0>
     ffc:	b4 fe       	sbrs	r11, 4
     ffe:	0a c0       	rjmp	.+20     	; 0x1014 <vfprintf+0x2b4>
    1000:	b2 fc       	sbrc	r11, 2
    1002:	08 c0       	rjmp	.+16     	; 0x1014 <vfprintf+0x2b4>
    1004:	2b 2d       	mov	r18, r11
    1006:	2e 7e       	andi	r18, 0xEE	; 238
    1008:	05 c0       	rjmp	.+10     	; 0x1014 <vfprintf+0x2b4>
    100a:	7a 2c       	mov	r7, r10
    100c:	2b 2d       	mov	r18, r11
    100e:	03 c0       	rjmp	.+6      	; 0x1016 <vfprintf+0x2b6>
    1010:	7a 2c       	mov	r7, r10
    1012:	01 c0       	rjmp	.+2      	; 0x1016 <vfprintf+0x2b6>
    1014:	75 2c       	mov	r7, r5
    1016:	24 ff       	sbrs	r18, 4
    1018:	0d c0       	rjmp	.+26     	; 0x1034 <vfprintf+0x2d4>
    101a:	fe 01       	movw	r30, r28
    101c:	ea 0d       	add	r30, r10
    101e:	f1 1d       	adc	r31, r1
    1020:	80 81       	ld	r24, Z
    1022:	80 33       	cpi	r24, 0x30	; 48
    1024:	11 f4       	brne	.+4      	; 0x102a <vfprintf+0x2ca>
    1026:	29 7e       	andi	r18, 0xE9	; 233
    1028:	09 c0       	rjmp	.+18     	; 0x103c <vfprintf+0x2dc>
    102a:	22 ff       	sbrs	r18, 2
    102c:	06 c0       	rjmp	.+12     	; 0x103a <vfprintf+0x2da>
    102e:	73 94       	inc	r7
    1030:	73 94       	inc	r7
    1032:	04 c0       	rjmp	.+8      	; 0x103c <vfprintf+0x2dc>
    1034:	82 2f       	mov	r24, r18
    1036:	86 78       	andi	r24, 0x86	; 134
    1038:	09 f0       	breq	.+2      	; 0x103c <vfprintf+0x2dc>
    103a:	73 94       	inc	r7
    103c:	23 fd       	sbrc	r18, 3
    103e:	13 c0       	rjmp	.+38     	; 0x1066 <vfprintf+0x306>
    1040:	20 ff       	sbrs	r18, 0
    1042:	06 c0       	rjmp	.+12     	; 0x1050 <vfprintf+0x2f0>
    1044:	5a 2c       	mov	r5, r10
    1046:	73 14       	cp	r7, r3
    1048:	18 f4       	brcc	.+6      	; 0x1050 <vfprintf+0x2f0>
    104a:	53 0c       	add	r5, r3
    104c:	57 18       	sub	r5, r7
    104e:	73 2c       	mov	r7, r3
    1050:	73 14       	cp	r7, r3
    1052:	68 f4       	brcc	.+26     	; 0x106e <vfprintf+0x30e>
    1054:	b7 01       	movw	r22, r14
    1056:	80 e2       	ldi	r24, 0x20	; 32
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	2c 87       	std	Y+12, r18	; 0x0c
    105c:	0e 94 98 08 	call	0x1130	; 0x1130 <fputc>
    1060:	73 94       	inc	r7
    1062:	2c 85       	ldd	r18, Y+12	; 0x0c
    1064:	f5 cf       	rjmp	.-22     	; 0x1050 <vfprintf+0x2f0>
    1066:	73 14       	cp	r7, r3
    1068:	10 f4       	brcc	.+4      	; 0x106e <vfprintf+0x30e>
    106a:	37 18       	sub	r3, r7
    106c:	01 c0       	rjmp	.+2      	; 0x1070 <vfprintf+0x310>
    106e:	31 2c       	mov	r3, r1
    1070:	24 ff       	sbrs	r18, 4
    1072:	12 c0       	rjmp	.+36     	; 0x1098 <vfprintf+0x338>
    1074:	b7 01       	movw	r22, r14
    1076:	80 e3       	ldi	r24, 0x30	; 48
    1078:	90 e0       	ldi	r25, 0x00	; 0
    107a:	2c 87       	std	Y+12, r18	; 0x0c
    107c:	0e 94 98 08 	call	0x1130	; 0x1130 <fputc>
    1080:	2c 85       	ldd	r18, Y+12	; 0x0c
    1082:	22 ff       	sbrs	r18, 2
    1084:	17 c0       	rjmp	.+46     	; 0x10b4 <vfprintf+0x354>
    1086:	21 ff       	sbrs	r18, 1
    1088:	03 c0       	rjmp	.+6      	; 0x1090 <vfprintf+0x330>
    108a:	88 e5       	ldi	r24, 0x58	; 88
    108c:	90 e0       	ldi	r25, 0x00	; 0
    108e:	02 c0       	rjmp	.+4      	; 0x1094 <vfprintf+0x334>
    1090:	88 e7       	ldi	r24, 0x78	; 120
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	b7 01       	movw	r22, r14
    1096:	0c c0       	rjmp	.+24     	; 0x10b0 <vfprintf+0x350>
    1098:	82 2f       	mov	r24, r18
    109a:	86 78       	andi	r24, 0x86	; 134
    109c:	59 f0       	breq	.+22     	; 0x10b4 <vfprintf+0x354>
    109e:	21 fd       	sbrc	r18, 1
    10a0:	02 c0       	rjmp	.+4      	; 0x10a6 <vfprintf+0x346>
    10a2:	80 e2       	ldi	r24, 0x20	; 32
    10a4:	01 c0       	rjmp	.+2      	; 0x10a8 <vfprintf+0x348>
    10a6:	8b e2       	ldi	r24, 0x2B	; 43
    10a8:	27 fd       	sbrc	r18, 7
    10aa:	8d e2       	ldi	r24, 0x2D	; 45
    10ac:	b7 01       	movw	r22, r14
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	0e 94 98 08 	call	0x1130	; 0x1130 <fputc>
    10b4:	a5 14       	cp	r10, r5
    10b6:	38 f4       	brcc	.+14     	; 0x10c6 <vfprintf+0x366>
    10b8:	b7 01       	movw	r22, r14
    10ba:	80 e3       	ldi	r24, 0x30	; 48
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	0e 94 98 08 	call	0x1130	; 0x1130 <fputc>
    10c2:	5a 94       	dec	r5
    10c4:	f7 cf       	rjmp	.-18     	; 0x10b4 <vfprintf+0x354>
    10c6:	aa 94       	dec	r10
    10c8:	f4 01       	movw	r30, r8
    10ca:	ea 0d       	add	r30, r10
    10cc:	f1 1d       	adc	r31, r1
    10ce:	80 81       	ld	r24, Z
    10d0:	b7 01       	movw	r22, r14
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	0e 94 98 08 	call	0x1130	; 0x1130 <fputc>
    10d8:	a1 10       	cpse	r10, r1
    10da:	f5 cf       	rjmp	.-22     	; 0x10c6 <vfprintf+0x366>
    10dc:	33 20       	and	r3, r3
    10de:	09 f4       	brne	.+2      	; 0x10e2 <vfprintf+0x382>
    10e0:	51 ce       	rjmp	.-862    	; 0xd84 <vfprintf+0x24>
    10e2:	b7 01       	movw	r22, r14
    10e4:	80 e2       	ldi	r24, 0x20	; 32
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	0e 94 98 08 	call	0x1130	; 0x1130 <fputc>
    10ec:	3a 94       	dec	r3
    10ee:	f6 cf       	rjmp	.-20     	; 0x10dc <vfprintf+0x37c>
    10f0:	f7 01       	movw	r30, r14
    10f2:	86 81       	ldd	r24, Z+6	; 0x06
    10f4:	97 81       	ldd	r25, Z+7	; 0x07
    10f6:	02 c0       	rjmp	.+4      	; 0x10fc <vfprintf+0x39c>
    10f8:	8f ef       	ldi	r24, 0xFF	; 255
    10fa:	9f ef       	ldi	r25, 0xFF	; 255
    10fc:	2c 96       	adiw	r28, 0x0c	; 12
    10fe:	e2 e1       	ldi	r30, 0x12	; 18
    1100:	0c 94 76 09 	jmp	0x12ec	; 0x12ec <__epilogue_restores__>

00001104 <strnlen_P>:
    1104:	fc 01       	movw	r30, r24
    1106:	05 90       	lpm	r0, Z+
    1108:	61 50       	subi	r22, 0x01	; 1
    110a:	70 40       	sbci	r23, 0x00	; 0
    110c:	01 10       	cpse	r0, r1
    110e:	d8 f7       	brcc	.-10     	; 0x1106 <strnlen_P+0x2>
    1110:	80 95       	com	r24
    1112:	90 95       	com	r25
    1114:	8e 0f       	add	r24, r30
    1116:	9f 1f       	adc	r25, r31
    1118:	08 95       	ret

0000111a <strnlen>:
    111a:	fc 01       	movw	r30, r24
    111c:	61 50       	subi	r22, 0x01	; 1
    111e:	70 40       	sbci	r23, 0x00	; 0
    1120:	01 90       	ld	r0, Z+
    1122:	01 10       	cpse	r0, r1
    1124:	d8 f7       	brcc	.-10     	; 0x111c <strnlen+0x2>
    1126:	80 95       	com	r24
    1128:	90 95       	com	r25
    112a:	8e 0f       	add	r24, r30
    112c:	9f 1f       	adc	r25, r31
    112e:	08 95       	ret

00001130 <fputc>:
    1130:	0f 93       	push	r16
    1132:	1f 93       	push	r17
    1134:	cf 93       	push	r28
    1136:	df 93       	push	r29
    1138:	18 2f       	mov	r17, r24
    113a:	09 2f       	mov	r16, r25
    113c:	eb 01       	movw	r28, r22
    113e:	8b 81       	ldd	r24, Y+3	; 0x03
    1140:	81 fd       	sbrc	r24, 1
    1142:	03 c0       	rjmp	.+6      	; 0x114a <fputc+0x1a>
    1144:	8f ef       	ldi	r24, 0xFF	; 255
    1146:	9f ef       	ldi	r25, 0xFF	; 255
    1148:	20 c0       	rjmp	.+64     	; 0x118a <fputc+0x5a>
    114a:	82 ff       	sbrs	r24, 2
    114c:	10 c0       	rjmp	.+32     	; 0x116e <fputc+0x3e>
    114e:	4e 81       	ldd	r20, Y+6	; 0x06
    1150:	5f 81       	ldd	r21, Y+7	; 0x07
    1152:	2c 81       	ldd	r18, Y+4	; 0x04
    1154:	3d 81       	ldd	r19, Y+5	; 0x05
    1156:	42 17       	cp	r20, r18
    1158:	53 07       	cpc	r21, r19
    115a:	7c f4       	brge	.+30     	; 0x117a <fputc+0x4a>
    115c:	e8 81       	ld	r30, Y
    115e:	f9 81       	ldd	r31, Y+1	; 0x01
    1160:	9f 01       	movw	r18, r30
    1162:	2f 5f       	subi	r18, 0xFF	; 255
    1164:	3f 4f       	sbci	r19, 0xFF	; 255
    1166:	39 83       	std	Y+1, r19	; 0x01
    1168:	28 83       	st	Y, r18
    116a:	10 83       	st	Z, r17
    116c:	06 c0       	rjmp	.+12     	; 0x117a <fputc+0x4a>
    116e:	e8 85       	ldd	r30, Y+8	; 0x08
    1170:	f9 85       	ldd	r31, Y+9	; 0x09
    1172:	81 2f       	mov	r24, r17
    1174:	09 95       	icall
    1176:	89 2b       	or	r24, r25
    1178:	29 f7       	brne	.-54     	; 0x1144 <fputc+0x14>
    117a:	2e 81       	ldd	r18, Y+6	; 0x06
    117c:	3f 81       	ldd	r19, Y+7	; 0x07
    117e:	2f 5f       	subi	r18, 0xFF	; 255
    1180:	3f 4f       	sbci	r19, 0xFF	; 255
    1182:	3f 83       	std	Y+7, r19	; 0x07
    1184:	2e 83       	std	Y+6, r18	; 0x06
    1186:	81 2f       	mov	r24, r17
    1188:	90 2f       	mov	r25, r16
    118a:	df 91       	pop	r29
    118c:	cf 91       	pop	r28
    118e:	1f 91       	pop	r17
    1190:	0f 91       	pop	r16
    1192:	08 95       	ret

00001194 <__ultoa_invert>:
    1194:	fa 01       	movw	r30, r20
    1196:	aa 27       	eor	r26, r26
    1198:	28 30       	cpi	r18, 0x08	; 8
    119a:	51 f1       	breq	.+84     	; 0x11f0 <__ultoa_invert+0x5c>
    119c:	20 31       	cpi	r18, 0x10	; 16
    119e:	81 f1       	breq	.+96     	; 0x1200 <__ultoa_invert+0x6c>
    11a0:	e8 94       	clt
    11a2:	6f 93       	push	r22
    11a4:	6e 7f       	andi	r22, 0xFE	; 254
    11a6:	6e 5f       	subi	r22, 0xFE	; 254
    11a8:	7f 4f       	sbci	r23, 0xFF	; 255
    11aa:	8f 4f       	sbci	r24, 0xFF	; 255
    11ac:	9f 4f       	sbci	r25, 0xFF	; 255
    11ae:	af 4f       	sbci	r26, 0xFF	; 255
    11b0:	b1 e0       	ldi	r27, 0x01	; 1
    11b2:	3e d0       	rcall	.+124    	; 0x1230 <__ultoa_invert+0x9c>
    11b4:	b4 e0       	ldi	r27, 0x04	; 4
    11b6:	3c d0       	rcall	.+120    	; 0x1230 <__ultoa_invert+0x9c>
    11b8:	67 0f       	add	r22, r23
    11ba:	78 1f       	adc	r23, r24
    11bc:	89 1f       	adc	r24, r25
    11be:	9a 1f       	adc	r25, r26
    11c0:	a1 1d       	adc	r26, r1
    11c2:	68 0f       	add	r22, r24
    11c4:	79 1f       	adc	r23, r25
    11c6:	8a 1f       	adc	r24, r26
    11c8:	91 1d       	adc	r25, r1
    11ca:	a1 1d       	adc	r26, r1
    11cc:	6a 0f       	add	r22, r26
    11ce:	71 1d       	adc	r23, r1
    11d0:	81 1d       	adc	r24, r1
    11d2:	91 1d       	adc	r25, r1
    11d4:	a1 1d       	adc	r26, r1
    11d6:	20 d0       	rcall	.+64     	; 0x1218 <__ultoa_invert+0x84>
    11d8:	09 f4       	brne	.+2      	; 0x11dc <__ultoa_invert+0x48>
    11da:	68 94       	set
    11dc:	3f 91       	pop	r19
    11de:	2a e0       	ldi	r18, 0x0A	; 10
    11e0:	26 9f       	mul	r18, r22
    11e2:	11 24       	eor	r1, r1
    11e4:	30 19       	sub	r19, r0
    11e6:	30 5d       	subi	r19, 0xD0	; 208
    11e8:	31 93       	st	Z+, r19
    11ea:	de f6       	brtc	.-74     	; 0x11a2 <__ultoa_invert+0xe>
    11ec:	cf 01       	movw	r24, r30
    11ee:	08 95       	ret
    11f0:	46 2f       	mov	r20, r22
    11f2:	47 70       	andi	r20, 0x07	; 7
    11f4:	40 5d       	subi	r20, 0xD0	; 208
    11f6:	41 93       	st	Z+, r20
    11f8:	b3 e0       	ldi	r27, 0x03	; 3
    11fa:	0f d0       	rcall	.+30     	; 0x121a <__ultoa_invert+0x86>
    11fc:	c9 f7       	brne	.-14     	; 0x11f0 <__ultoa_invert+0x5c>
    11fe:	f6 cf       	rjmp	.-20     	; 0x11ec <__ultoa_invert+0x58>
    1200:	46 2f       	mov	r20, r22
    1202:	4f 70       	andi	r20, 0x0F	; 15
    1204:	40 5d       	subi	r20, 0xD0	; 208
    1206:	4a 33       	cpi	r20, 0x3A	; 58
    1208:	18 f0       	brcs	.+6      	; 0x1210 <__ultoa_invert+0x7c>
    120a:	49 5d       	subi	r20, 0xD9	; 217
    120c:	31 fd       	sbrc	r19, 1
    120e:	40 52       	subi	r20, 0x20	; 32
    1210:	41 93       	st	Z+, r20
    1212:	02 d0       	rcall	.+4      	; 0x1218 <__ultoa_invert+0x84>
    1214:	a9 f7       	brne	.-22     	; 0x1200 <__ultoa_invert+0x6c>
    1216:	ea cf       	rjmp	.-44     	; 0x11ec <__ultoa_invert+0x58>
    1218:	b4 e0       	ldi	r27, 0x04	; 4
    121a:	a6 95       	lsr	r26
    121c:	97 95       	ror	r25
    121e:	87 95       	ror	r24
    1220:	77 95       	ror	r23
    1222:	67 95       	ror	r22
    1224:	ba 95       	dec	r27
    1226:	c9 f7       	brne	.-14     	; 0x121a <__ultoa_invert+0x86>
    1228:	00 97       	sbiw	r24, 0x00	; 0
    122a:	61 05       	cpc	r22, r1
    122c:	71 05       	cpc	r23, r1
    122e:	08 95       	ret
    1230:	9b 01       	movw	r18, r22
    1232:	ac 01       	movw	r20, r24
    1234:	0a 2e       	mov	r0, r26
    1236:	06 94       	lsr	r0
    1238:	57 95       	ror	r21
    123a:	47 95       	ror	r20
    123c:	37 95       	ror	r19
    123e:	27 95       	ror	r18
    1240:	ba 95       	dec	r27
    1242:	c9 f7       	brne	.-14     	; 0x1236 <__ultoa_invert+0xa2>
    1244:	62 0f       	add	r22, r18
    1246:	73 1f       	adc	r23, r19
    1248:	84 1f       	adc	r24, r20
    124a:	95 1f       	adc	r25, r21
    124c:	a0 1d       	adc	r26, r0
    124e:	08 95       	ret

00001250 <__divmodsi4>:
    1250:	05 2e       	mov	r0, r21
    1252:	97 fb       	bst	r25, 7
    1254:	1e f4       	brtc	.+6      	; 0x125c <__divmodsi4+0xc>
    1256:	00 94       	com	r0
    1258:	0e 94 3f 09 	call	0x127e	; 0x127e <__negsi2>
    125c:	57 fd       	sbrc	r21, 7
    125e:	07 d0       	rcall	.+14     	; 0x126e <__divmodsi4_neg2>
    1260:	0e 94 91 09 	call	0x1322	; 0x1322 <__udivmodsi4>
    1264:	07 fc       	sbrc	r0, 7
    1266:	03 d0       	rcall	.+6      	; 0x126e <__divmodsi4_neg2>
    1268:	4e f4       	brtc	.+18     	; 0x127c <__divmodsi4_exit>
    126a:	0c 94 3f 09 	jmp	0x127e	; 0x127e <__negsi2>

0000126e <__divmodsi4_neg2>:
    126e:	50 95       	com	r21
    1270:	40 95       	com	r20
    1272:	30 95       	com	r19
    1274:	21 95       	neg	r18
    1276:	3f 4f       	sbci	r19, 0xFF	; 255
    1278:	4f 4f       	sbci	r20, 0xFF	; 255
    127a:	5f 4f       	sbci	r21, 0xFF	; 255

0000127c <__divmodsi4_exit>:
    127c:	08 95       	ret

0000127e <__negsi2>:
    127e:	90 95       	com	r25
    1280:	80 95       	com	r24
    1282:	70 95       	com	r23
    1284:	61 95       	neg	r22
    1286:	7f 4f       	sbci	r23, 0xFF	; 255
    1288:	8f 4f       	sbci	r24, 0xFF	; 255
    128a:	9f 4f       	sbci	r25, 0xFF	; 255
    128c:	08 95       	ret

0000128e <__muluhisi3>:
    128e:	0e 94 b3 09 	call	0x1366	; 0x1366 <__umulhisi3>
    1292:	a5 9f       	mul	r26, r21
    1294:	90 0d       	add	r25, r0
    1296:	b4 9f       	mul	r27, r20
    1298:	90 0d       	add	r25, r0
    129a:	a4 9f       	mul	r26, r20
    129c:	80 0d       	add	r24, r0
    129e:	91 1d       	adc	r25, r1
    12a0:	11 24       	eor	r1, r1
    12a2:	08 95       	ret

000012a4 <__mulshisi3>:
    12a4:	b7 ff       	sbrs	r27, 7
    12a6:	0c 94 47 09 	jmp	0x128e	; 0x128e <__muluhisi3>

000012aa <__mulohisi3>:
    12aa:	0e 94 47 09 	call	0x128e	; 0x128e <__muluhisi3>
    12ae:	82 1b       	sub	r24, r18
    12b0:	93 0b       	sbc	r25, r19
    12b2:	08 95       	ret

000012b4 <__prologue_saves__>:
    12b4:	2f 92       	push	r2
    12b6:	3f 92       	push	r3
    12b8:	4f 92       	push	r4
    12ba:	5f 92       	push	r5
    12bc:	6f 92       	push	r6
    12be:	7f 92       	push	r7
    12c0:	8f 92       	push	r8
    12c2:	9f 92       	push	r9
    12c4:	af 92       	push	r10
    12c6:	bf 92       	push	r11
    12c8:	cf 92       	push	r12
    12ca:	df 92       	push	r13
    12cc:	ef 92       	push	r14
    12ce:	ff 92       	push	r15
    12d0:	0f 93       	push	r16
    12d2:	1f 93       	push	r17
    12d4:	cf 93       	push	r28
    12d6:	df 93       	push	r29
    12d8:	cd b7       	in	r28, 0x3d	; 61
    12da:	de b7       	in	r29, 0x3e	; 62
    12dc:	ca 1b       	sub	r28, r26
    12de:	db 0b       	sbc	r29, r27
    12e0:	0f b6       	in	r0, 0x3f	; 63
    12e2:	f8 94       	cli
    12e4:	de bf       	out	0x3e, r29	; 62
    12e6:	0f be       	out	0x3f, r0	; 63
    12e8:	cd bf       	out	0x3d, r28	; 61
    12ea:	09 94       	ijmp

000012ec <__epilogue_restores__>:
    12ec:	2a 88       	ldd	r2, Y+18	; 0x12
    12ee:	39 88       	ldd	r3, Y+17	; 0x11
    12f0:	48 88       	ldd	r4, Y+16	; 0x10
    12f2:	5f 84       	ldd	r5, Y+15	; 0x0f
    12f4:	6e 84       	ldd	r6, Y+14	; 0x0e
    12f6:	7d 84       	ldd	r7, Y+13	; 0x0d
    12f8:	8c 84       	ldd	r8, Y+12	; 0x0c
    12fa:	9b 84       	ldd	r9, Y+11	; 0x0b
    12fc:	aa 84       	ldd	r10, Y+10	; 0x0a
    12fe:	b9 84       	ldd	r11, Y+9	; 0x09
    1300:	c8 84       	ldd	r12, Y+8	; 0x08
    1302:	df 80       	ldd	r13, Y+7	; 0x07
    1304:	ee 80       	ldd	r14, Y+6	; 0x06
    1306:	fd 80       	ldd	r15, Y+5	; 0x05
    1308:	0c 81       	ldd	r16, Y+4	; 0x04
    130a:	1b 81       	ldd	r17, Y+3	; 0x03
    130c:	aa 81       	ldd	r26, Y+2	; 0x02
    130e:	b9 81       	ldd	r27, Y+1	; 0x01
    1310:	ce 0f       	add	r28, r30
    1312:	d1 1d       	adc	r29, r1
    1314:	0f b6       	in	r0, 0x3f	; 63
    1316:	f8 94       	cli
    1318:	de bf       	out	0x3e, r29	; 62
    131a:	0f be       	out	0x3f, r0	; 63
    131c:	cd bf       	out	0x3d, r28	; 61
    131e:	ed 01       	movw	r28, r26
    1320:	08 95       	ret

00001322 <__udivmodsi4>:
    1322:	a1 e2       	ldi	r26, 0x21	; 33
    1324:	1a 2e       	mov	r1, r26
    1326:	aa 1b       	sub	r26, r26
    1328:	bb 1b       	sub	r27, r27
    132a:	fd 01       	movw	r30, r26
    132c:	0d c0       	rjmp	.+26     	; 0x1348 <__udivmodsi4_ep>

0000132e <__udivmodsi4_loop>:
    132e:	aa 1f       	adc	r26, r26
    1330:	bb 1f       	adc	r27, r27
    1332:	ee 1f       	adc	r30, r30
    1334:	ff 1f       	adc	r31, r31
    1336:	a2 17       	cp	r26, r18
    1338:	b3 07       	cpc	r27, r19
    133a:	e4 07       	cpc	r30, r20
    133c:	f5 07       	cpc	r31, r21
    133e:	20 f0       	brcs	.+8      	; 0x1348 <__udivmodsi4_ep>
    1340:	a2 1b       	sub	r26, r18
    1342:	b3 0b       	sbc	r27, r19
    1344:	e4 0b       	sbc	r30, r20
    1346:	f5 0b       	sbc	r31, r21

00001348 <__udivmodsi4_ep>:
    1348:	66 1f       	adc	r22, r22
    134a:	77 1f       	adc	r23, r23
    134c:	88 1f       	adc	r24, r24
    134e:	99 1f       	adc	r25, r25
    1350:	1a 94       	dec	r1
    1352:	69 f7       	brne	.-38     	; 0x132e <__udivmodsi4_loop>
    1354:	60 95       	com	r22
    1356:	70 95       	com	r23
    1358:	80 95       	com	r24
    135a:	90 95       	com	r25
    135c:	9b 01       	movw	r18, r22
    135e:	ac 01       	movw	r20, r24
    1360:	bd 01       	movw	r22, r26
    1362:	cf 01       	movw	r24, r30
    1364:	08 95       	ret

00001366 <__umulhisi3>:
    1366:	a2 9f       	mul	r26, r18
    1368:	b0 01       	movw	r22, r0
    136a:	b3 9f       	mul	r27, r19
    136c:	c0 01       	movw	r24, r0
    136e:	a3 9f       	mul	r26, r19
    1370:	70 0d       	add	r23, r0
    1372:	81 1d       	adc	r24, r1
    1374:	11 24       	eor	r1, r1
    1376:	91 1d       	adc	r25, r1
    1378:	b2 9f       	mul	r27, r18
    137a:	70 0d       	add	r23, r0
    137c:	81 1d       	adc	r24, r1
    137e:	11 24       	eor	r1, r1
    1380:	91 1d       	adc	r25, r1
    1382:	08 95       	ret

00001384 <_exit>:
    1384:	f8 94       	cli

00001386 <__stop_program>:
    1386:	ff cf       	rjmp	.-2      	; 0x1386 <__stop_program>
