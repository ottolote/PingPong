
Ping_Pong_Shit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000380  00800100  00001a90  00001b24  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a90  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800480  00800480  00001ea4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001ea4  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000002f8  00000000  00000000  00001f00  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003256  00000000  00000000  000021f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000012c8  00000000  00000000  0000544e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000013b8  00000000  00000000  00006716  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000810  00000000  00000000  00007ad0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000008cf  00000000  00000000  000082e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001951  00000000  00000000  00008baf  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000002a0  00000000  00000000  0000a500  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 3b 02 	jmp	0x476	; 0x476 <__vector_1>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <SRAM_test+0xc>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	14 e0       	ldi	r17, 0x04	; 4
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e0 e9       	ldi	r30, 0x90	; 144
     37c:	fa e1       	ldi	r31, 0x1A	; 26
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a0 38       	cpi	r26, 0x80	; 128
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	24 e0       	ldi	r18, 0x04	; 4
     38c:	a0 e8       	ldi	r26, 0x80	; 128
     38e:	b4 e0       	ldi	r27, 0x04	; 4
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a2 39       	cpi	r26, 0x92	; 146
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 90 06 	call	0xd20	; 0xd20 <main>
     39e:	0c 94 46 0d 	jmp	0x1a8c	; 0x1a8c <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <can_init>:

#include <util/delay.h>

void can_init(){
	//Enter config mode
	mcp2515_init();
     3a6:	0e 94 ba 03 	call	0x774	; 0x774 <mcp2515_init>
	printf("CANCTRL (expect 0x87): 0x%02x\n", mcp2515_read(MCP_CANCTRL));
     3aa:	8f e0       	ldi	r24, 0x0F	; 15
     3ac:	0e 94 a8 03 	call	0x750	; 0x750 <mcp2515_read>
     3b0:	1f 92       	push	r1
     3b2:	8f 93       	push	r24
     3b4:	8c e2       	ldi	r24, 0x2C	; 44
     3b6:	91 e0       	ldi	r25, 0x01	; 1
     3b8:	9f 93       	push	r25
     3ba:	8f 93       	push	r24
     3bc:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <printf>

	//RX0 - Turn mask/filter off
	mcp2515_bit_modify(MCP_RXB0CTRL, 0b01100000, 0xFF);
     3c0:	4f ef       	ldi	r20, 0xFF	; 255
     3c2:	60 e6       	ldi	r22, 0x60	; 96
     3c4:	80 e6       	ldi	r24, 0x60	; 96
     3c6:	0e 94 86 03 	call	0x70c	; 0x70c <mcp2515_bit_modify>
	//RX0 - Disable rollover
	mcp2515_bit_modify(MCP_RXB0CTRL, 0b00000100, 0);
     3ca:	40 e0       	ldi	r20, 0x00	; 0
     3cc:	64 e0       	ldi	r22, 0x04	; 4
     3ce:	80 e6       	ldi	r24, 0x60	; 96
     3d0:	0e 94 86 03 	call	0x70c	; 0x70c <mcp2515_bit_modify>

	mcp2515_bit_modify(MCP_CANINTE, MCP_RX0IF, 0xff);
     3d4:	4f ef       	ldi	r20, 0xFF	; 255
     3d6:	61 e0       	ldi	r22, 0x01	; 1
     3d8:	8b e2       	ldi	r24, 0x2B	; 43
     3da:	0e 94 86 03 	call	0x70c	; 0x70c <mcp2515_bit_modify>
     3de:	0f 90       	pop	r0
     3e0:	0f 90       	pop	r0
     3e2:	0f 90       	pop	r0
     3e4:	0f 90       	pop	r0
     3e6:	08 95       	ret

000003e8 <can_transmit_complete>:
	return 1;
}

int can_transmit_complete(){
	//Check if TX buffer is not pending
	if(test_bit(mcp2515_read(MCP_TXB0CTRL), 3)){
     3e8:	80 e3       	ldi	r24, 0x30	; 48
     3ea:	0e 94 a8 03 	call	0x750	; 0x750 <mcp2515_read>
     3ee:	86 95       	lsr	r24
     3f0:	86 95       	lsr	r24
     3f2:	86 95       	lsr	r24
     3f4:	91 e0       	ldi	r25, 0x01	; 1
     3f6:	89 27       	eor	r24, r25
		return 0;
	} else {
		return 1;
	 }
}
     3f8:	81 70       	andi	r24, 0x01	; 1
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	08 95       	ret

000003fe <can_message_send>:
	//mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_NORMAL);

	//Enable interrupt when message is recieved (RX0IE = 1)
}

void can_message_send(can_message_t* message){
     3fe:	1f 93       	push	r17
     400:	cf 93       	push	r28
     402:	df 93       	push	r29
     404:	ec 01       	movw	r28, r24
	while (!can_transmit_complete()) {}
     406:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <can_transmit_complete>
     40a:	89 2b       	or	r24, r25
     40c:	e1 f3       	breq	.-8      	; 0x406 <can_message_send+0x8>
	//Use standard ID to set the message
	mcp2515_write(MCP_TXB0SIDH, (int8_t)(message->id >> 3));
     40e:	68 81       	ld	r22, Y
     410:	79 81       	ldd	r23, Y+1	; 0x01
     412:	75 95       	asr	r23
     414:	67 95       	ror	r22
     416:	75 95       	asr	r23
     418:	67 95       	ror	r22
     41a:	75 95       	asr	r23
     41c:	67 95       	ror	r22
     41e:	81 e3       	ldi	r24, 0x31	; 49
     420:	0e 94 62 03 	call	0x6c4	; 0x6c4 <mcp2515_write>
	mcp2515_write(MCP_TXB0SIDL, (int8_t)(message->id << 5));
     424:	68 81       	ld	r22, Y
     426:	79 81       	ldd	r23, Y+1	; 0x01
     428:	66 0f       	add	r22, r22
     42a:	77 1f       	adc	r23, r23
     42c:	62 95       	swap	r22
     42e:	72 95       	swap	r23
     430:	70 7f       	andi	r23, 0xF0	; 240
     432:	76 27       	eor	r23, r22
     434:	60 7f       	andi	r22, 0xF0	; 240
     436:	76 27       	eor	r23, r22
     438:	82 e3       	ldi	r24, 0x32	; 50
     43a:	0e 94 62 03 	call	0x6c4	; 0x6c4 <mcp2515_write>

	//Set correct data lenght and use data frame, max 8 bytes
	mcp2515_write(MCP_TXB0DLC, (0x0F) & (message->length));
     43e:	6a 81       	ldd	r22, Y+2	; 0x02
     440:	6f 70       	andi	r22, 0x0F	; 15
     442:	85 e3       	ldi	r24, 0x35	; 53
     444:	0e 94 62 03 	call	0x6c4	; 0x6c4 <mcp2515_write>

	//For loop to set data bytes
	for (uint8_t i = 0; i < message->length; i++) {
     448:	8a 81       	ldd	r24, Y+2	; 0x02
     44a:	88 23       	and	r24, r24
     44c:	69 f0       	breq	.+26     	; 0x468 <can_message_send+0x6a>
     44e:	10 e0       	ldi	r17, 0x00	; 0
		mcp2515_write(MCP_TXB0D0 + i, message->data[i]);
     450:	fe 01       	movw	r30, r28
     452:	e1 0f       	add	r30, r17
     454:	f1 1d       	adc	r31, r1
     456:	63 81       	ldd	r22, Z+3	; 0x03
     458:	86 e3       	ldi	r24, 0x36	; 54
     45a:	81 0f       	add	r24, r17
     45c:	0e 94 62 03 	call	0x6c4	; 0x6c4 <mcp2515_write>

	//Set correct data lenght and use data frame, max 8 bytes
	mcp2515_write(MCP_TXB0DLC, (0x0F) & (message->length));

	//For loop to set data bytes
	for (uint8_t i = 0; i < message->length; i++) {
     460:	1f 5f       	subi	r17, 0xFF	; 255
     462:	8a 81       	ldd	r24, Y+2	; 0x02
     464:	18 17       	cp	r17, r24
     466:	a0 f3       	brcs	.-24     	; 0x450 <can_message_send+0x52>
		mcp2515_write(MCP_TXB0D0 + i, message->data[i]);
	}

	mcp2515_request_to_send(1);
     468:	81 e0       	ldi	r24, 0x01	; 1
     46a:	0e 94 76 03 	call	0x6ec	; 0x6ec <mcp2515_request_to_send>
}
     46e:	df 91       	pop	r29
     470:	cf 91       	pop	r28
     472:	1f 91       	pop	r17
     474:	08 95       	ret

00000476 <__vector_1>:

	return message;
}

//Interrupt routine for CAN bus
ISR(INT0_vect){
     476:	1f 92       	push	r1
     478:	0f 92       	push	r0
     47a:	0f b6       	in	r0, 0x3f	; 63
     47c:	0f 92       	push	r0
     47e:	11 24       	eor	r1, r1
     480:	8f 93       	push	r24
     482:	9f 93       	push	r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     484:	8f ef       	ldi	r24, 0xFF	; 255
     486:	9f e2       	ldi	r25, 0x2F	; 47
     488:	01 97       	sbiw	r24, 0x01	; 1
     48a:	f1 f7       	brne	.-4      	; 0x488 <__vector_1+0x12>
     48c:	00 c0       	rjmp	.+0      	; 0x48e <__vector_1+0x18>
     48e:	00 00       	nop
	 }
}

void can_interrupt_vector(){
	//Clear interrupt flag
	rx_flag = 1;
     490:	81 e0       	ldi	r24, 0x01	; 1
     492:	80 93 81 04 	sts	0x0481, r24

//Interrupt routine for CAN bus
ISR(INT0_vect){
	_delay_ms(10);
	can_interrupt_vector();
}
     496:	9f 91       	pop	r25
     498:	8f 91       	pop	r24
     49a:	0f 90       	pop	r0
     49c:	0f be       	out	0x3f, r0	; 63
     49e:	0f 90       	pop	r0
     4a0:	1f 90       	pop	r1
     4a2:	18 95       	reti

000004a4 <can_print_message>:
		testmessage.id++;
		_delay_ms(1000);
	}
}

void can_print_message(const can_message_t *message) {
     4a4:	ff 92       	push	r15
     4a6:	0f 93       	push	r16
     4a8:	1f 93       	push	r17
     4aa:	cf 93       	push	r28
     4ac:	df 93       	push	r29
     4ae:	ec 01       	movw	r28, r24
	printf("Message id: %d\nMessage length %d\n", message->id, message->length);
     4b0:	8a 81       	ldd	r24, Y+2	; 0x02
     4b2:	1f 92       	push	r1
     4b4:	8f 93       	push	r24
     4b6:	89 81       	ldd	r24, Y+1	; 0x01
     4b8:	8f 93       	push	r24
     4ba:	88 81       	ld	r24, Y
     4bc:	8f 93       	push	r24
     4be:	8b e4       	ldi	r24, 0x4B	; 75
     4c0:	91 e0       	ldi	r25, 0x01	; 1
     4c2:	9f 93       	push	r25
     4c4:	8f 93       	push	r24
     4c6:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <printf>
	printf("Message data: [ %x", message->data[0]);
     4ca:	2b 81       	ldd	r18, Y+3	; 0x03
     4cc:	82 2f       	mov	r24, r18
     4ce:	99 27       	eor	r25, r25
     4d0:	87 fd       	sbrc	r24, 7
     4d2:	90 95       	com	r25
     4d4:	9f 93       	push	r25
     4d6:	2f 93       	push	r18
     4d8:	8d e6       	ldi	r24, 0x6D	; 109
     4da:	91 e0       	ldi	r25, 0x01	; 1
     4dc:	9f 93       	push	r25
     4de:	8f 93       	push	r24
     4e0:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <printf>
	for(uint8_t i = 1; i < message->length; i++) {
     4e4:	8d b7       	in	r24, 0x3d	; 61
     4e6:	9e b7       	in	r25, 0x3e	; 62
     4e8:	0a 96       	adiw	r24, 0x0a	; 10
     4ea:	0f b6       	in	r0, 0x3f	; 63
     4ec:	f8 94       	cli
     4ee:	9e bf       	out	0x3e, r25	; 62
     4f0:	0f be       	out	0x3f, r0	; 63
     4f2:	8d bf       	out	0x3d, r24	; 61
     4f4:	8a 81       	ldd	r24, Y+2	; 0x02
     4f6:	82 30       	cpi	r24, 0x02	; 2
     4f8:	d0 f0       	brcs	.+52     	; 0x52e <__stack+0x2f>
     4fa:	ff 24       	eor	r15, r15
     4fc:	f3 94       	inc	r15
		printf(", %d",message->data[i]);
     4fe:	00 e8       	ldi	r16, 0x80	; 128
     500:	11 e0       	ldi	r17, 0x01	; 1
     502:	fe 01       	movw	r30, r28
     504:	ef 0d       	add	r30, r15
     506:	f1 1d       	adc	r31, r1
     508:	23 81       	ldd	r18, Z+3	; 0x03
     50a:	82 2f       	mov	r24, r18
     50c:	99 27       	eor	r25, r25
     50e:	87 fd       	sbrc	r24, 7
     510:	90 95       	com	r25
     512:	9f 93       	push	r25
     514:	2f 93       	push	r18
     516:	1f 93       	push	r17
     518:	0f 93       	push	r16
     51a:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <printf>
}

void can_print_message(const can_message_t *message) {
	printf("Message id: %d\nMessage length %d\n", message->id, message->length);
	printf("Message data: [ %x", message->data[0]);
	for(uint8_t i = 1; i < message->length; i++) {
     51e:	f3 94       	inc	r15
     520:	0f 90       	pop	r0
     522:	0f 90       	pop	r0
     524:	0f 90       	pop	r0
     526:	0f 90       	pop	r0
     528:	8a 81       	ldd	r24, Y+2	; 0x02
     52a:	f8 16       	cp	r15, r24
     52c:	50 f3       	brcs	.-44     	; 0x502 <__stack+0x3>
		printf(", %d",message->data[i]);
	}
	printf(" ]\n\n");
     52e:	85 e8       	ldi	r24, 0x85	; 133
     530:	91 e0       	ldi	r25, 0x01	; 1
     532:	0e 94 07 0a 	call	0x140e	; 0x140e <puts>
     536:	df 91       	pop	r29
     538:	cf 91       	pop	r28
     53a:	1f 91       	pop	r17
     53c:	0f 91       	pop	r16
     53e:	ff 90       	pop	r15
     540:	08 95       	ret

00000542 <can_test>:
ISR(INT0_vect){
	_delay_ms(10);
	can_interrupt_vector();
}

void can_test(){
     542:	cf 93       	push	r28
     544:	df 93       	push	r29
     546:	cd b7       	in	r28, 0x3d	; 61
     548:	de b7       	in	r29, 0x3e	; 62
     54a:	2b 97       	sbiw	r28, 0x0b	; 11
     54c:	0f b6       	in	r0, 0x3f	; 63
     54e:	f8 94       	cli
     550:	de bf       	out	0x3e, r29	; 62
     552:	0f be       	out	0x3f, r0	; 63
     554:	cd bf       	out	0x3d, r28	; 61
	printf("CANCTRL: %02x\n", mcp2515_read(MCP_CANCTRL));
     556:	8f e0       	ldi	r24, 0x0F	; 15
     558:	0e 94 a8 03 	call	0x750	; 0x750 <mcp2515_read>
     55c:	1f 92       	push	r1
     55e:	8f 93       	push	r24
     560:	09 e8       	ldi	r16, 0x89	; 137
     562:	11 e0       	ldi	r17, 0x01	; 1
     564:	1f 93       	push	r17
     566:	0f 93       	push	r16
     568:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <printf>
	mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_NORMAL);
     56c:	40 e0       	ldi	r20, 0x00	; 0
     56e:	60 ee       	ldi	r22, 0xE0	; 224
     570:	8f e0       	ldi	r24, 0x0F	; 15
     572:	0e 94 86 03 	call	0x70c	; 0x70c <mcp2515_bit_modify>
	//mcp2515_set_loopback_mode();

	can_message_t testmessage;

	testmessage.id = 1;
     576:	81 e0       	ldi	r24, 0x01	; 1
     578:	90 e0       	ldi	r25, 0x00	; 0
     57a:	9a 83       	std	Y+2, r25	; 0x02
     57c:	89 83       	std	Y+1, r24	; 0x01
	testmessage.length = 8;
     57e:	88 e0       	ldi	r24, 0x08	; 8
     580:	8b 83       	std	Y+3, r24	; 0x03
	for (uint8_t i = 0; i < testmessage.length; i++){
		testmessage.data[i] = 20*i;
     582:	1c 82       	std	Y+4, r1	; 0x04
     584:	84 e1       	ldi	r24, 0x14	; 20
     586:	8d 83       	std	Y+5, r24	; 0x05
     588:	88 e2       	ldi	r24, 0x28	; 40
     58a:	8e 83       	std	Y+6, r24	; 0x06
     58c:	8c e3       	ldi	r24, 0x3C	; 60
     58e:	8f 83       	std	Y+7, r24	; 0x07
     590:	80 e5       	ldi	r24, 0x50	; 80
     592:	88 87       	std	Y+8, r24	; 0x08
     594:	84 e6       	ldi	r24, 0x64	; 100
     596:	89 87       	std	Y+9, r24	; 0x09
     598:	88 e7       	ldi	r24, 0x78	; 120
     59a:	8a 87       	std	Y+10, r24	; 0x0a
     59c:	8c e8       	ldi	r24, 0x8C	; 140
     59e:	8b 87       	std	Y+11, r24	; 0x0b
	}
	
	printf("CANCTRL: %02x\n", mcp2515_read(MCP_CANCTRL));
     5a0:	8f e0       	ldi	r24, 0x0F	; 15
     5a2:	0e 94 a8 03 	call	0x750	; 0x750 <mcp2515_read>
     5a6:	1f 92       	push	r1
     5a8:	8f 93       	push	r24
     5aa:	1f 93       	push	r17
     5ac:	0f 93       	push	r16
     5ae:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <printf>
     5b2:	0f b6       	in	r0, 0x3f	; 63
     5b4:	f8 94       	cli
     5b6:	de bf       	out	0x3e, r29	; 62
     5b8:	0f be       	out	0x3f, r0	; 63
     5ba:	cd bf       	out	0x3d, r28	; 61
	//can_message_t rcv;
	while(1){
		can_message_send(&testmessage);
     5bc:	ce 01       	movw	r24, r28
     5be:	01 96       	adiw	r24, 0x01	; 1
     5c0:	0e 94 ff 01 	call	0x3fe	; 0x3fe <can_message_send>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     5c4:	90 e1       	ldi	r25, 0x10	; 16
     5c6:	9a 95       	dec	r25
     5c8:	f1 f7       	brne	.-4      	; 0x5c6 <can_test+0x84>
     5ca:	00 c0       	rjmp	.+0      	; 0x5cc <can_test+0x8a>

		_delay_us(10);
		/*
		rcv = can_data_receive();*/
		can_print_message(&testmessage);
     5cc:	ce 01       	movw	r24, r28
     5ce:	01 96       	adiw	r24, 0x01	; 1
     5d0:	0e 94 52 02 	call	0x4a4	; 0x4a4 <can_print_message>
		testmessage.data[0]++;
     5d4:	8c 81       	ldd	r24, Y+4	; 0x04
     5d6:	8f 5f       	subi	r24, 0xFF	; 255
     5d8:	8c 83       	std	Y+4, r24	; 0x04
		testmessage.id++;
     5da:	89 81       	ldd	r24, Y+1	; 0x01
     5dc:	9a 81       	ldd	r25, Y+2	; 0x02
     5de:	01 96       	adiw	r24, 0x01	; 1
     5e0:	9a 83       	std	Y+2, r25	; 0x02
     5e2:	89 83       	std	Y+1, r24	; 0x01
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     5e4:	2f ef       	ldi	r18, 0xFF	; 255
     5e6:	8f ef       	ldi	r24, 0xFF	; 255
     5e8:	9e e0       	ldi	r25, 0x0E	; 14
     5ea:	21 50       	subi	r18, 0x01	; 1
     5ec:	80 40       	sbci	r24, 0x00	; 0
     5ee:	90 40       	sbci	r25, 0x00	; 0
     5f0:	e1 f7       	brne	.-8      	; 0x5ea <can_test+0xa8>
     5f2:	00 c0       	rjmp	.+0      	; 0x5f4 <can_test+0xb2>
     5f4:	00 00       	nop
     5f6:	e2 cf       	rjmp	.-60     	; 0x5bc <can_test+0x7a>

000005f8 <joystick_read>:
     5f8:	8c 5f       	subi	r24, 0xFC	; 252
     5fa:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     5fe:	81 e4       	ldi	r24, 0x41	; 65
     600:	8a 95       	dec	r24
     602:	f1 f7       	brne	.-4      	; 0x600 <joystick_read+0x8>
     604:	00 c0       	rjmp	.+0      	; 0x606 <joystick_read+0xe>
     606:	80 91 00 14 	lds	r24, 0x1400
     60a:	90 e0       	ldi	r25, 0x00	; 0
     60c:	08 95       	ret

0000060e <joystick_init>:
     60e:	80 e0       	ldi	r24, 0x00	; 0
     610:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <joystick_read>
     614:	90 93 83 04 	sts	0x0483, r25
     618:	80 93 82 04 	sts	0x0482, r24
     61c:	81 e0       	ldi	r24, 0x01	; 1
     61e:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <joystick_read>
     622:	90 93 85 04 	sts	0x0485, r25
     626:	80 93 84 04 	sts	0x0484, r24
     62a:	08 95       	ret

0000062c <read_converted>:
     62c:	cf 93       	push	r28
     62e:	c8 2f       	mov	r28, r24
     630:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <joystick_read>
     634:	c1 11       	cpse	r28, r1
     636:	07 c0       	rjmp	.+14     	; 0x646 <read_converted+0x1a>
     638:	20 91 82 04 	lds	r18, 0x0482
     63c:	30 91 83 04 	lds	r19, 0x0483
     640:	82 1b       	sub	r24, r18
     642:	93 0b       	sbc	r25, r19
     644:	08 c0       	rjmp	.+16     	; 0x656 <read_converted+0x2a>
     646:	c1 30       	cpi	r28, 0x01	; 1
     648:	31 f4       	brne	.+12     	; 0x656 <read_converted+0x2a>
     64a:	20 91 84 04 	lds	r18, 0x0484
     64e:	30 91 85 04 	lds	r19, 0x0485
     652:	82 1b       	sub	r24, r18
     654:	93 0b       	sbc	r25, r19
     656:	80 38       	cpi	r24, 0x80	; 128
     658:	2f ef       	ldi	r18, 0xFF	; 255
     65a:	92 07       	cpc	r25, r18
     65c:	14 f4       	brge	.+4      	; 0x662 <read_converted+0x36>
     65e:	80 e8       	ldi	r24, 0x80	; 128
     660:	9f ef       	ldi	r25, 0xFF	; 255
     662:	80 38       	cpi	r24, 0x80	; 128
     664:	91 05       	cpc	r25, r1
     666:	14 f0       	brlt	.+4      	; 0x66c <read_converted+0x40>
     668:	8f e7       	ldi	r24, 0x7F	; 127
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	cf 91       	pop	r28
     66e:	08 95       	ret

00000670 <joystick_direction_Y>:
     670:	81 e0       	ldi	r24, 0x01	; 1
     672:	0e 94 16 03 	call	0x62c	; 0x62c <read_converted>
     676:	84 36       	cpi	r24, 0x64	; 100
     678:	91 05       	cpc	r25, r1
     67a:	64 f4       	brge	.+24     	; 0x694 <joystick_direction_Y+0x24>
     67c:	21 e0       	ldi	r18, 0x01	; 1
     67e:	30 e0       	ldi	r19, 0x00	; 0
     680:	8d 39       	cpi	r24, 0x9D	; 157
     682:	9f 4f       	sbci	r25, 0xFF	; 255
     684:	14 f0       	brlt	.+4      	; 0x68a <joystick_direction_Y+0x1a>
     686:	20 e0       	ldi	r18, 0x00	; 0
     688:	30 e0       	ldi	r19, 0x00	; 0
     68a:	88 27       	eor	r24, r24
     68c:	99 27       	eor	r25, r25
     68e:	82 1b       	sub	r24, r18
     690:	93 0b       	sbc	r25, r19
     692:	08 95       	ret
     694:	81 e0       	ldi	r24, 0x01	; 1
     696:	90 e0       	ldi	r25, 0x00	; 0
     698:	08 95       	ret

0000069a <joystick_direction_X>:
     69a:	80 e0       	ldi	r24, 0x00	; 0
     69c:	0e 94 16 03 	call	0x62c	; 0x62c <read_converted>
     6a0:	84 36       	cpi	r24, 0x64	; 100
     6a2:	91 05       	cpc	r25, r1
     6a4:	64 f4       	brge	.+24     	; 0x6be <joystick_direction_X+0x24>
     6a6:	21 e0       	ldi	r18, 0x01	; 1
     6a8:	30 e0       	ldi	r19, 0x00	; 0
     6aa:	8d 39       	cpi	r24, 0x9D	; 157
     6ac:	9f 4f       	sbci	r25, 0xFF	; 255
     6ae:	14 f0       	brlt	.+4      	; 0x6b4 <joystick_direction_X+0x1a>
     6b0:	20 e0       	ldi	r18, 0x00	; 0
     6b2:	30 e0       	ldi	r19, 0x00	; 0
     6b4:	88 27       	eor	r24, r24
     6b6:	99 27       	eor	r25, r25
     6b8:	82 1b       	sub	r24, r18
     6ba:	93 0b       	sbc	r25, r19
     6bc:	08 95       	ret
     6be:	81 e0       	ldi	r24, 0x01	; 1
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	08 95       	ret

000006c4 <mcp2515_write>:
     6c4:	cf 93       	push	r28
     6c6:	df 93       	push	r29
     6c8:	d8 2f       	mov	r29, r24
     6ca:	c6 2f       	mov	r28, r22
     6cc:	0e 94 97 05 	call	0xb2e	; 0xb2e <spi_select>
     6d0:	82 e0       	ldi	r24, 0x02	; 2
     6d2:	0e 94 8c 05 	call	0xb18	; 0xb18 <spi_send>
     6d6:	8d 2f       	mov	r24, r29
     6d8:	0e 94 8c 05 	call	0xb18	; 0xb18 <spi_send>
     6dc:	8c 2f       	mov	r24, r28
     6de:	0e 94 8c 05 	call	0xb18	; 0xb18 <spi_send>
     6e2:	0e 94 99 05 	call	0xb32	; 0xb32 <spi_deselect>
     6e6:	df 91       	pop	r29
     6e8:	cf 91       	pop	r28
     6ea:	08 95       	ret

000006ec <mcp2515_request_to_send>:
     6ec:	cf 93       	push	r28
     6ee:	88 30       	cpi	r24, 0x08	; 8
     6f0:	18 f4       	brcc	.+6      	; 0x6f8 <mcp2515_request_to_send+0xc>
     6f2:	c8 2f       	mov	r28, r24
     6f4:	c0 68       	ori	r28, 0x80	; 128
     6f6:	01 c0       	rjmp	.+2      	; 0x6fa <mcp2515_request_to_send+0xe>
     6f8:	c0 e8       	ldi	r28, 0x80	; 128
     6fa:	0e 94 97 05 	call	0xb2e	; 0xb2e <spi_select>
     6fe:	8c 2f       	mov	r24, r28
     700:	0e 94 8c 05 	call	0xb18	; 0xb18 <spi_send>
     704:	0e 94 99 05 	call	0xb32	; 0xb32 <spi_deselect>
     708:	cf 91       	pop	r28
     70a:	08 95       	ret

0000070c <mcp2515_bit_modify>:
     70c:	1f 93       	push	r17
     70e:	cf 93       	push	r28
     710:	df 93       	push	r29
     712:	18 2f       	mov	r17, r24
     714:	d6 2f       	mov	r29, r22
     716:	c4 2f       	mov	r28, r20
     718:	0e 94 97 05 	call	0xb2e	; 0xb2e <spi_select>
     71c:	85 e0       	ldi	r24, 0x05	; 5
     71e:	0e 94 8c 05 	call	0xb18	; 0xb18 <spi_send>
     722:	81 2f       	mov	r24, r17
     724:	0e 94 8c 05 	call	0xb18	; 0xb18 <spi_send>
     728:	8d 2f       	mov	r24, r29
     72a:	0e 94 8c 05 	call	0xb18	; 0xb18 <spi_send>
     72e:	8c 2f       	mov	r24, r28
     730:	0e 94 8c 05 	call	0xb18	; 0xb18 <spi_send>
     734:	0e 94 99 05 	call	0xb32	; 0xb32 <spi_deselect>
     738:	df 91       	pop	r29
     73a:	cf 91       	pop	r28
     73c:	1f 91       	pop	r17
     73e:	08 95       	ret

00000740 <mcp2515_reset>:
     740:	0e 94 97 05 	call	0xb2e	; 0xb2e <spi_select>
     744:	80 ec       	ldi	r24, 0xC0	; 192
     746:	0e 94 8c 05 	call	0xb18	; 0xb18 <spi_send>
     74a:	0e 94 99 05 	call	0xb32	; 0xb32 <spi_deselect>
     74e:	08 95       	ret

00000750 <mcp2515_read>:
     750:	cf 93       	push	r28
     752:	c8 2f       	mov	r28, r24
     754:	0e 94 97 05 	call	0xb2e	; 0xb2e <spi_select>
     758:	83 e0       	ldi	r24, 0x03	; 3
     75a:	0e 94 8c 05 	call	0xb18	; 0xb18 <spi_send>
     75e:	8c 2f       	mov	r24, r28
     760:	0e 94 8c 05 	call	0xb18	; 0xb18 <spi_send>
     764:	0e 94 90 05 	call	0xb20	; 0xb20 <spi_read>
     768:	c8 2f       	mov	r28, r24
     76a:	0e 94 99 05 	call	0xb32	; 0xb32 <spi_deselect>
     76e:	8c 2f       	mov	r24, r28
     770:	cf 91       	pop	r28
     772:	08 95       	ret

00000774 <mcp2515_init>:
     774:	cf 93       	push	r28
     776:	df 93       	push	r29
     778:	1f 92       	push	r1
     77a:	cd b7       	in	r28, 0x3d	; 61
     77c:	de b7       	in	r29, 0x3e	; 62
     77e:	0e 94 84 05 	call	0xb08	; 0xb08 <spi_init>
     782:	0e 94 a0 03 	call	0x740	; 0x740 <mcp2515_reset>
     786:	8e e0       	ldi	r24, 0x0E	; 14
     788:	0e 94 a8 03 	call	0x750	; 0x750 <mcp2515_read>
     78c:	89 83       	std	Y+1, r24	; 0x01
     78e:	89 81       	ldd	r24, Y+1	; 0x01
     790:	80 7e       	andi	r24, 0xE0	; 224
     792:	80 38       	cpi	r24, 0x80	; 128
     794:	21 f0       	breq	.+8      	; 0x79e <mcp2515_init+0x2a>
     796:	88 e9       	ldi	r24, 0x98	; 152
     798:	91 e0       	ldi	r25, 0x01	; 1
     79a:	0e 94 07 0a 	call	0x140e	; 0x140e <puts>
     79e:	0f 90       	pop	r0
     7a0:	df 91       	pop	r29
     7a2:	cf 91       	pop	r28
     7a4:	08 95       	ret

000007a6 <oled_print_char>:
     7a6:	28 e0       	ldi	r18, 0x08	; 8
     7a8:	82 9f       	mul	r24, r18
     7aa:	c0 01       	movw	r24, r0
     7ac:	11 24       	eor	r1, r1
     7ae:	fc 01       	movw	r30, r24
     7b0:	e0 59       	subi	r30, 0x90	; 144
     7b2:	f0 40       	sbci	r31, 0x00	; 0
     7b4:	80 e0       	ldi	r24, 0x00	; 0
     7b6:	94 91       	lpm	r25, Z
     7b8:	a0 91 0a 01 	lds	r26, 0x010A
     7bc:	b0 91 0b 01 	lds	r27, 0x010B
     7c0:	9c 93       	st	X, r25
     7c2:	8f 5f       	subi	r24, 0xFF	; 255
     7c4:	31 96       	adiw	r30, 0x01	; 1
     7c6:	88 30       	cpi	r24, 0x08	; 8
     7c8:	b1 f7       	brne	.-20     	; 0x7b6 <oled_print_char+0x10>
     7ca:	08 95       	ret

000007cc <oled_goto_page>:
     7cc:	90 eb       	ldi	r25, 0xB0	; 176
     7ce:	98 0f       	add	r25, r24
     7d0:	e0 91 0c 01 	lds	r30, 0x010C
     7d4:	f0 91 0d 01 	lds	r31, 0x010D
     7d8:	90 83       	st	Z, r25
     7da:	80 93 86 04 	sts	0x0486, r24
     7de:	82 e5       	ldi	r24, 0x52	; 82
     7e0:	8a 95       	dec	r24
     7e2:	f1 f7       	brne	.-4      	; 0x7e0 <oled_goto_page+0x14>
     7e4:	08 95       	ret

000007e6 <oled_clear_line>:
     7e6:	80 e8       	ldi	r24, 0x80	; 128
     7e8:	90 e0       	ldi	r25, 0x00	; 0
     7ea:	e0 91 0a 01 	lds	r30, 0x010A
     7ee:	f0 91 0b 01 	lds	r31, 0x010B
     7f2:	10 82       	st	Z, r1
     7f4:	01 97       	sbiw	r24, 0x01	; 1
     7f6:	00 97       	sbiw	r24, 0x00	; 0
     7f8:	c1 f7       	brne	.-16     	; 0x7ea <oled_clear_line+0x4>
     7fa:	08 95       	ret

000007fc <oled_clear_screen>:
     7fc:	cf 93       	push	r28
     7fe:	df 93       	push	r29
     800:	c0 e0       	ldi	r28, 0x00	; 0
     802:	d0 e0       	ldi	r29, 0x00	; 0
     804:	ce 01       	movw	r24, r28
     806:	0e 94 e6 03 	call	0x7cc	; 0x7cc <oled_goto_page>
     80a:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <oled_clear_line>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     80e:	80 e0       	ldi	r24, 0x00	; 0
     810:	90 ef       	ldi	r25, 0xF0	; 240
     812:	01 97       	sbiw	r24, 0x01	; 1
     814:	f1 f7       	brne	.-4      	; 0x812 <oled_clear_screen+0x16>
     816:	21 96       	adiw	r28, 0x01	; 1
     818:	c8 30       	cpi	r28, 0x08	; 8
     81a:	d1 05       	cpc	r29, r1
     81c:	99 f7       	brne	.-26     	; 0x804 <oled_clear_screen+0x8>
     81e:	df 91       	pop	r29
     820:	cf 91       	pop	r28
     822:	08 95       	ret

00000824 <oled_pos>:
     824:	cf 93       	push	r28
     826:	df 93       	push	r29
     828:	eb 01       	movw	r28, r22
     82a:	0e 94 e6 03 	call	0x7cc	; 0x7cc <oled_goto_page>
     82e:	c0 31       	cpi	r28, 0x10	; 16
     830:	d1 05       	cpc	r29, r1
     832:	e8 f4       	brcc	.+58     	; 0x86e <oled_pos+0x4a>
     834:	8c 2f       	mov	r24, r28
     836:	88 0f       	add	r24, r24
     838:	88 0f       	add	r24, r24
     83a:	88 0f       	add	r24, r24
     83c:	80 93 87 04 	sts	0x0487, r24
     840:	e0 91 0c 01 	lds	r30, 0x010C
     844:	f0 91 0d 01 	lds	r31, 0x010D
     848:	cc 0f       	add	r28, r28
     84a:	dd 1f       	adc	r29, r29
     84c:	cc 0f       	add	r28, r28
     84e:	dd 1f       	adc	r29, r29
     850:	cc 0f       	add	r28, r28
     852:	dd 1f       	adc	r29, r29
     854:	d2 95       	swap	r29
     856:	c2 95       	swap	r28
     858:	cf 70       	andi	r28, 0x0F	; 15
     85a:	cd 27       	eor	r28, r29
     85c:	df 70       	andi	r29, 0x0F	; 15
     85e:	cd 27       	eor	r28, r29
     860:	c0 83       	st	Z, r28
     862:	e0 91 0c 01 	lds	r30, 0x010C
     866:	f0 91 0d 01 	lds	r31, 0x010D
     86a:	c0 5f       	subi	r28, 0xF0	; 240
     86c:	c0 83       	st	Z, r28
     86e:	df 91       	pop	r29
     870:	cf 91       	pop	r28
     872:	08 95       	ret

00000874 <oled_printf>:
     874:	cf 93       	push	r28
     876:	df 93       	push	r29
     878:	cd b7       	in	r28, 0x3d	; 61
     87a:	de b7       	in	r29, 0x3e	; 62
     87c:	fe 01       	movw	r30, r28
     87e:	35 96       	adiw	r30, 0x05	; 5
     880:	61 91       	ld	r22, Z+
     882:	71 91       	ld	r23, Z+
     884:	af 01       	movw	r20, r30
     886:	8e e0       	ldi	r24, 0x0E	; 14
     888:	91 e0       	ldi	r25, 0x01	; 1
     88a:	0e 94 34 0a 	call	0x1468	; 0x1468 <vfprintf>
     88e:	df 91       	pop	r29
     890:	cf 91       	pop	r28
     892:	08 95       	ret

00000894 <oled_init>:
     894:	e0 91 0c 01 	lds	r30, 0x010C
     898:	f0 91 0d 01 	lds	r31, 0x010D
     89c:	8e ea       	ldi	r24, 0xAE	; 174
     89e:	80 83       	st	Z, r24
     8a0:	e0 91 0c 01 	lds	r30, 0x010C
     8a4:	f0 91 0d 01 	lds	r31, 0x010D
     8a8:	81 ea       	ldi	r24, 0xA1	; 161
     8aa:	80 83       	st	Z, r24
     8ac:	e0 91 0c 01 	lds	r30, 0x010C
     8b0:	f0 91 0d 01 	lds	r31, 0x010D
     8b4:	8a ed       	ldi	r24, 0xDA	; 218
     8b6:	80 83       	st	Z, r24
     8b8:	e0 91 0c 01 	lds	r30, 0x010C
     8bc:	f0 91 0d 01 	lds	r31, 0x010D
     8c0:	82 e1       	ldi	r24, 0x12	; 18
     8c2:	80 83       	st	Z, r24
     8c4:	e0 91 0c 01 	lds	r30, 0x010C
     8c8:	f0 91 0d 01 	lds	r31, 0x010D
     8cc:	88 ec       	ldi	r24, 0xC8	; 200
     8ce:	80 83       	st	Z, r24
     8d0:	e0 91 0c 01 	lds	r30, 0x010C
     8d4:	f0 91 0d 01 	lds	r31, 0x010D
     8d8:	88 ea       	ldi	r24, 0xA8	; 168
     8da:	80 83       	st	Z, r24
     8dc:	e0 91 0c 01 	lds	r30, 0x010C
     8e0:	f0 91 0d 01 	lds	r31, 0x010D
     8e4:	8f e3       	ldi	r24, 0x3F	; 63
     8e6:	80 83       	st	Z, r24
     8e8:	e0 91 0c 01 	lds	r30, 0x010C
     8ec:	f0 91 0d 01 	lds	r31, 0x010D
     8f0:	85 ed       	ldi	r24, 0xD5	; 213
     8f2:	80 83       	st	Z, r24
     8f4:	e0 91 0c 01 	lds	r30, 0x010C
     8f8:	f0 91 0d 01 	lds	r31, 0x010D
     8fc:	80 e8       	ldi	r24, 0x80	; 128
     8fe:	80 83       	st	Z, r24
     900:	e0 91 0c 01 	lds	r30, 0x010C
     904:	f0 91 0d 01 	lds	r31, 0x010D
     908:	81 e8       	ldi	r24, 0x81	; 129
     90a:	80 83       	st	Z, r24
     90c:	e0 91 0c 01 	lds	r30, 0x010C
     910:	f0 91 0d 01 	lds	r31, 0x010D
     914:	80 e5       	ldi	r24, 0x50	; 80
     916:	80 83       	st	Z, r24
     918:	e0 91 0c 01 	lds	r30, 0x010C
     91c:	f0 91 0d 01 	lds	r31, 0x010D
     920:	89 ed       	ldi	r24, 0xD9	; 217
     922:	80 83       	st	Z, r24
     924:	e0 91 0c 01 	lds	r30, 0x010C
     928:	f0 91 0d 01 	lds	r31, 0x010D
     92c:	81 e2       	ldi	r24, 0x21	; 33
     92e:	80 83       	st	Z, r24
     930:	e0 91 0c 01 	lds	r30, 0x010C
     934:	f0 91 0d 01 	lds	r31, 0x010D
     938:	80 e2       	ldi	r24, 0x20	; 32
     93a:	80 83       	st	Z, r24
     93c:	e0 91 0c 01 	lds	r30, 0x010C
     940:	f0 91 0d 01 	lds	r31, 0x010D
     944:	82 e0       	ldi	r24, 0x02	; 2
     946:	80 83       	st	Z, r24
     948:	e0 91 0c 01 	lds	r30, 0x010C
     94c:	f0 91 0d 01 	lds	r31, 0x010D
     950:	8b ed       	ldi	r24, 0xDB	; 219
     952:	80 83       	st	Z, r24
     954:	e0 91 0c 01 	lds	r30, 0x010C
     958:	f0 91 0d 01 	lds	r31, 0x010D
     95c:	80 e3       	ldi	r24, 0x30	; 48
     95e:	80 83       	st	Z, r24
     960:	e0 91 0c 01 	lds	r30, 0x010C
     964:	f0 91 0d 01 	lds	r31, 0x010D
     968:	8d ea       	ldi	r24, 0xAD	; 173
     96a:	80 83       	st	Z, r24
     96c:	e0 91 0c 01 	lds	r30, 0x010C
     970:	f0 91 0d 01 	lds	r31, 0x010D
     974:	10 82       	st	Z, r1
     976:	e0 91 0c 01 	lds	r30, 0x010C
     97a:	f0 91 0d 01 	lds	r31, 0x010D
     97e:	84 ea       	ldi	r24, 0xA4	; 164
     980:	80 83       	st	Z, r24
     982:	e0 91 0c 01 	lds	r30, 0x010C
     986:	f0 91 0d 01 	lds	r31, 0x010D
     98a:	86 ea       	ldi	r24, 0xA6	; 166
     98c:	80 83       	st	Z, r24
     98e:	e0 91 0c 01 	lds	r30, 0x010C
     992:	f0 91 0d 01 	lds	r31, 0x010D
     996:	8f ea       	ldi	r24, 0xAF	; 175
     998:	80 83       	st	Z, r24
     99a:	0e 94 fe 03 	call	0x7fc	; 0x7fc <oled_clear_screen>
     99e:	63 e0       	ldi	r22, 0x03	; 3
     9a0:	70 e0       	ldi	r23, 0x00	; 0
     9a2:	82 e0       	ldi	r24, 0x02	; 2
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	0e 94 12 04 	call	0x824	; 0x824 <oled_pos>
     9aa:	89 ef       	ldi	r24, 0xF9	; 249
     9ac:	91 e0       	ldi	r25, 0x01	; 1
     9ae:	9f 93       	push	r25
     9b0:	8f 93       	push	r24
     9b2:	0e 94 3a 04 	call	0x874	; 0x874 <oled_printf>
     9b6:	67 e0       	ldi	r22, 0x07	; 7
     9b8:	70 e0       	ldi	r23, 0x00	; 0
     9ba:	83 e0       	ldi	r24, 0x03	; 3
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	0e 94 12 04 	call	0x824	; 0x824 <oled_pos>
     9c2:	80 e0       	ldi	r24, 0x00	; 0
     9c4:	92 e0       	ldi	r25, 0x02	; 2
     9c6:	9f 93       	push	r25
     9c8:	8f 93       	push	r24
     9ca:	0e 94 3a 04 	call	0x874	; 0x874 <oled_printf>
     9ce:	69 e0       	ldi	r22, 0x09	; 9
     9d0:	70 e0       	ldi	r23, 0x00	; 0
     9d2:	84 e0       	ldi	r24, 0x04	; 4
     9d4:	90 e0       	ldi	r25, 0x00	; 0
     9d6:	0e 94 12 04 	call	0x824	; 0x824 <oled_pos>
     9da:	84 e0       	ldi	r24, 0x04	; 4
     9dc:	92 e0       	ldi	r25, 0x02	; 2
     9de:	9f 93       	push	r25
     9e0:	8f 93       	push	r24
     9e2:	0e 94 3a 04 	call	0x874	; 0x874 <oled_printf>
     9e6:	2f ef       	ldi	r18, 0xFF	; 255
     9e8:	8f ef       	ldi	r24, 0xFF	; 255
     9ea:	9b e0       	ldi	r25, 0x0B	; 11
     9ec:	21 50       	subi	r18, 0x01	; 1
     9ee:	80 40       	sbci	r24, 0x00	; 0
     9f0:	90 40       	sbci	r25, 0x00	; 0
     9f2:	e1 f7       	brne	.-8      	; 0x9ec <oled_init+0x158>
     9f4:	00 c0       	rjmp	.+0      	; 0x9f6 <oled_init+0x162>
     9f6:	00 c0       	rjmp	.+0      	; 0x9f8 <oled_init+0x164>
     9f8:	0e 94 fe 03 	call	0x7fc	; 0x7fc <oled_clear_screen>
     9fc:	0f 90       	pop	r0
     9fe:	0f 90       	pop	r0
     a00:	0f 90       	pop	r0
     a02:	0f 90       	pop	r0
     a04:	0f 90       	pop	r0
     a06:	0f 90       	pop	r0
     a08:	08 95       	ret

00000a0a <oled_get_arrow_page>:
     a0a:	80 91 80 04 	lds	r24, 0x0480
     a0e:	08 95       	ret

00000a10 <oled_print_arrow>:
     a10:	80 93 80 04 	sts	0x0480, r24
     a14:	70 e0       	ldi	r23, 0x00	; 0
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	0e 94 12 04 	call	0x824	; 0x824 <oled_pos>
     a1c:	e0 91 0a 01 	lds	r30, 0x010A
     a20:	f0 91 0b 01 	lds	r31, 0x010B
     a24:	88 e1       	ldi	r24, 0x18	; 24
     a26:	80 83       	st	Z, r24
     a28:	e0 91 0a 01 	lds	r30, 0x010A
     a2c:	f0 91 0b 01 	lds	r31, 0x010B
     a30:	80 83       	st	Z, r24
     a32:	e0 91 0a 01 	lds	r30, 0x010A
     a36:	f0 91 0b 01 	lds	r31, 0x010B
     a3a:	9e e7       	ldi	r25, 0x7E	; 126
     a3c:	90 83       	st	Z, r25
     a3e:	e0 91 0a 01 	lds	r30, 0x010A
     a42:	f0 91 0b 01 	lds	r31, 0x010B
     a46:	9c e3       	ldi	r25, 0x3C	; 60
     a48:	90 83       	st	Z, r25
     a4a:	e0 91 0a 01 	lds	r30, 0x010A
     a4e:	f0 91 0b 01 	lds	r31, 0x010B
     a52:	80 83       	st	Z, r24
     a54:	08 95       	ret

00000a56 <oled_clear_arrow>:
     a56:	70 e0       	ldi	r23, 0x00	; 0
     a58:	90 e0       	ldi	r25, 0x00	; 0
     a5a:	0e 94 12 04 	call	0x824	; 0x824 <oled_pos>
     a5e:	e0 91 0a 01 	lds	r30, 0x010A
     a62:	f0 91 0b 01 	lds	r31, 0x010B
     a66:	10 82       	st	Z, r1
     a68:	e0 91 0a 01 	lds	r30, 0x010A
     a6c:	f0 91 0b 01 	lds	r31, 0x010B
     a70:	10 82       	st	Z, r1
     a72:	e0 91 0a 01 	lds	r30, 0x010A
     a76:	f0 91 0b 01 	lds	r31, 0x010B
     a7a:	10 82       	st	Z, r1
     a7c:	e0 91 0a 01 	lds	r30, 0x010A
     a80:	f0 91 0b 01 	lds	r31, 0x010B
     a84:	10 82       	st	Z, r1
     a86:	e0 91 0a 01 	lds	r30, 0x010A
     a8a:	f0 91 0b 01 	lds	r31, 0x010B
     a8e:	10 82       	st	Z, r1
     a90:	08 95       	ret

00000a92 <oled_move_arrow>:
     a92:	99 23       	and	r25, r25
     a94:	a4 f4       	brge	.+40     	; 0xabe <oled_move_arrow+0x2c>
     a96:	e0 91 80 04 	lds	r30, 0x0480
     a9a:	2e 2f       	mov	r18, r30
     a9c:	30 e0       	ldi	r19, 0x00	; 0
     a9e:	24 17       	cp	r18, r20
     aa0:	35 07       	cpc	r19, r21
     aa2:	68 f4       	brcc	.+26     	; 0xabe <oled_move_arrow+0x2c>
     aa4:	60 e0       	ldi	r22, 0x00	; 0
     aa6:	8e 2f       	mov	r24, r30
     aa8:	0e 94 2b 05 	call	0xa56	; 0xa56 <oled_clear_arrow>
     aac:	80 91 80 04 	lds	r24, 0x0480
     ab0:	8f 5f       	subi	r24, 0xFF	; 255
     ab2:	80 93 80 04 	sts	0x0480, r24
     ab6:	60 e0       	ldi	r22, 0x00	; 0
     ab8:	0e 94 08 05 	call	0xa10	; 0xa10 <oled_print_arrow>
     abc:	08 95       	ret
     abe:	18 16       	cp	r1, r24
     ac0:	19 06       	cpc	r1, r25
     ac2:	94 f4       	brge	.+36     	; 0xae8 <oled_move_arrow+0x56>
     ac4:	80 91 80 04 	lds	r24, 0x0480
     ac8:	28 2f       	mov	r18, r24
     aca:	30 e0       	ldi	r19, 0x00	; 0
     acc:	62 17       	cp	r22, r18
     ace:	73 07       	cpc	r23, r19
     ad0:	58 f4       	brcc	.+22     	; 0xae8 <oled_move_arrow+0x56>
     ad2:	60 e0       	ldi	r22, 0x00	; 0
     ad4:	0e 94 2b 05 	call	0xa56	; 0xa56 <oled_clear_arrow>
     ad8:	80 91 80 04 	lds	r24, 0x0480
     adc:	81 50       	subi	r24, 0x01	; 1
     ade:	80 93 80 04 	sts	0x0480, r24
     ae2:	60 e0       	ldi	r22, 0x00	; 0
     ae4:	0e 94 08 05 	call	0xa10	; 0xa10 <oled_print_arrow>
     ae8:	08 95       	ret

00000aea <oled_arrow_handler>:
     aea:	0e 94 49 05 	call	0xa92	; 0xa92 <oled_move_arrow>
     aee:	2f ef       	ldi	r18, 0xFF	; 255
     af0:	8f e7       	ldi	r24, 0x7F	; 127
     af2:	97 e0       	ldi	r25, 0x07	; 7
     af4:	21 50       	subi	r18, 0x01	; 1
     af6:	80 40       	sbci	r24, 0x00	; 0
     af8:	90 40       	sbci	r25, 0x00	; 0
     afa:	e1 f7       	brne	.-8      	; 0xaf4 <oled_arrow_handler+0xa>
     afc:	00 c0       	rjmp	.+0      	; 0xafe <oled_arrow_handler+0x14>
     afe:	00 00       	nop
     b00:	80 91 80 04 	lds	r24, 0x0480
     b04:	90 e0       	ldi	r25, 0x00	; 0
     b06:	08 95       	ret

00000b08 <spi_init>:
     b08:	87 b3       	in	r24, 0x17	; 23
     b0a:	80 6b       	ori	r24, 0xB0	; 176
     b0c:	87 bb       	out	0x17, r24	; 23
     b0e:	be 98       	cbi	0x17, 6	; 23
     b10:	8d b1       	in	r24, 0x0d	; 13
     b12:	81 65       	ori	r24, 0x51	; 81
     b14:	8d b9       	out	0x0d, r24	; 13
     b16:	08 95       	ret

00000b18 <spi_send>:
     b18:	8f b9       	out	0x0f, r24	; 15
     b1a:	77 9b       	sbis	0x0e, 7	; 14
     b1c:	fe cf       	rjmp	.-4      	; 0xb1a <spi_send+0x2>
     b1e:	08 95       	ret

00000b20 <spi_read>:
     b20:	8a ea       	ldi	r24, 0xAA	; 170
     b22:	0e 94 8c 05 	call	0xb18	; 0xb18 <spi_send>
     b26:	77 9b       	sbis	0x0e, 7	; 14
     b28:	fe cf       	rjmp	.-4      	; 0xb26 <spi_read+0x6>
     b2a:	8f b1       	in	r24, 0x0f	; 15
     b2c:	08 95       	ret

00000b2e <spi_select>:
     b2e:	c4 98       	cbi	0x18, 4	; 24
     b30:	08 95       	ret

00000b32 <spi_deselect>:
     b32:	c4 9a       	sbi	0x18, 4	; 24
     b34:	08 95       	ret

00000b36 <SRAM_test>:
     b36:	cf 92       	push	r12
     b38:	df 92       	push	r13
     b3a:	ef 92       	push	r14
     b3c:	ff 92       	push	r15
     b3e:	0f 93       	push	r16
     b40:	1f 93       	push	r17
     b42:	cf 93       	push	r28
     b44:	df 93       	push	r29
     b46:	0e 94 fe 03 	call	0x7fc	; 0x7fc <oled_clear_screen>
     b4a:	62 e0       	ldi	r22, 0x02	; 2
     b4c:	70 e0       	ldi	r23, 0x00	; 0
     b4e:	83 e0       	ldi	r24, 0x03	; 3
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	0e 94 12 04 	call	0x824	; 0x824 <oled_pos>
     b56:	8a e0       	ldi	r24, 0x0A	; 10
     b58:	92 e0       	ldi	r25, 0x02	; 2
     b5a:	9f 93       	push	r25
     b5c:	8f 93       	push	r24
     b5e:	0e 94 3a 04 	call	0x874	; 0x874 <oled_printf>
     b62:	87 e1       	ldi	r24, 0x17	; 23
     b64:	92 e0       	ldi	r25, 0x02	; 2
     b66:	0e 94 07 0a 	call	0x140e	; 0x140e <puts>
     b6a:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <rand>
     b6e:	6c 01       	movw	r12, r24
     b70:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <srand>
     b74:	0f 90       	pop	r0
     b76:	0f 90       	pop	r0
     b78:	c0 e0       	ldi	r28, 0x00	; 0
     b7a:	d0 e0       	ldi	r29, 0x00	; 0
     b7c:	00 e0       	ldi	r16, 0x00	; 0
     b7e:	10 e0       	ldi	r17, 0x00	; 0
     b80:	0f 2e       	mov	r0, r31
     b82:	fe e2       	ldi	r31, 0x2E	; 46
     b84:	ef 2e       	mov	r14, r31
     b86:	f2 e0       	ldi	r31, 0x02	; 2
     b88:	ff 2e       	mov	r15, r31
     b8a:	f0 2d       	mov	r31, r0
     b8c:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <rand>
     b90:	fe 01       	movw	r30, r28
     b92:	f8 5e       	subi	r31, 0xE8	; 232
     b94:	80 83       	st	Z, r24
     b96:	20 81       	ld	r18, Z
     b98:	28 17       	cp	r18, r24
     b9a:	a9 f0       	breq	.+42     	; 0xbc6 <SRAM_test+0x90>
     b9c:	99 27       	eor	r25, r25
     b9e:	9f 93       	push	r25
     ba0:	8f 93       	push	r24
     ba2:	1f 92       	push	r1
     ba4:	2f 93       	push	r18
     ba6:	df 93       	push	r29
     ba8:	cf 93       	push	r28
     baa:	ff 92       	push	r15
     bac:	ef 92       	push	r14
     bae:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <printf>
     bb2:	0f 5f       	subi	r16, 0xFF	; 255
     bb4:	1f 4f       	sbci	r17, 0xFF	; 255
     bb6:	8d b7       	in	r24, 0x3d	; 61
     bb8:	9e b7       	in	r25, 0x3e	; 62
     bba:	08 96       	adiw	r24, 0x08	; 8
     bbc:	0f b6       	in	r0, 0x3f	; 63
     bbe:	f8 94       	cli
     bc0:	9e bf       	out	0x3e, r25	; 62
     bc2:	0f be       	out	0x3f, r0	; 63
     bc4:	8d bf       	out	0x3d, r24	; 61
     bc6:	21 96       	adiw	r28, 0x01	; 1
     bc8:	c1 15       	cp	r28, r1
     bca:	98 e0       	ldi	r25, 0x08	; 8
     bcc:	d9 07       	cpc	r29, r25
     bce:	f1 f6       	brne	.-68     	; 0xb8c <SRAM_test+0x56>
     bd0:	c6 01       	movw	r24, r12
     bd2:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <srand>
     bd6:	c0 e0       	ldi	r28, 0x00	; 0
     bd8:	d0 e0       	ldi	r29, 0x00	; 0
     bda:	e1 2c       	mov	r14, r1
     bdc:	f1 2c       	mov	r15, r1
     bde:	0f 2e       	mov	r0, r31
     be0:	f7 e6       	ldi	r31, 0x67	; 103
     be2:	cf 2e       	mov	r12, r31
     be4:	f2 e0       	ldi	r31, 0x02	; 2
     be6:	df 2e       	mov	r13, r31
     be8:	f0 2d       	mov	r31, r0
     bea:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <rand>
     bee:	fe 01       	movw	r30, r28
     bf0:	f8 5e       	subi	r31, 0xE8	; 232
     bf2:	20 81       	ld	r18, Z
     bf4:	28 17       	cp	r18, r24
     bf6:	b1 f0       	breq	.+44     	; 0xc24 <SRAM_test+0xee>
     bf8:	99 27       	eor	r25, r25
     bfa:	9f 93       	push	r25
     bfc:	8f 93       	push	r24
     bfe:	1f 92       	push	r1
     c00:	2f 93       	push	r18
     c02:	df 93       	push	r29
     c04:	cf 93       	push	r28
     c06:	df 92       	push	r13
     c08:	cf 92       	push	r12
     c0a:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <printf>
     c0e:	9f ef       	ldi	r25, 0xFF	; 255
     c10:	e9 1a       	sub	r14, r25
     c12:	f9 0a       	sbc	r15, r25
     c14:	8d b7       	in	r24, 0x3d	; 61
     c16:	9e b7       	in	r25, 0x3e	; 62
     c18:	08 96       	adiw	r24, 0x08	; 8
     c1a:	0f b6       	in	r0, 0x3f	; 63
     c1c:	f8 94       	cli
     c1e:	9e bf       	out	0x3e, r25	; 62
     c20:	0f be       	out	0x3f, r0	; 63
     c22:	8d bf       	out	0x3d, r24	; 61
     c24:	21 96       	adiw	r28, 0x01	; 1
     c26:	c1 15       	cp	r28, r1
     c28:	98 e0       	ldi	r25, 0x08	; 8
     c2a:	d9 07       	cpc	r29, r25
     c2c:	f1 f6       	brne	.-68     	; 0xbea <SRAM_test+0xb4>
     c2e:	e1 14       	cp	r14, r1
     c30:	f1 04       	cpc	r15, r1
     c32:	19 f4       	brne	.+6      	; 0xc3a <SRAM_test+0x104>
     c34:	01 15       	cp	r16, r1
     c36:	11 05       	cpc	r17, r1
     c38:	71 f1       	breq	.+92     	; 0xc96 <SRAM_test+0x160>
     c3a:	60 e0       	ldi	r22, 0x00	; 0
     c3c:	70 e0       	ldi	r23, 0x00	; 0
     c3e:	85 e0       	ldi	r24, 0x05	; 5
     c40:	90 e0       	ldi	r25, 0x00	; 0
     c42:	0e 94 12 04 	call	0x824	; 0x824 <oled_pos>
     c46:	ff 92       	push	r15
     c48:	ef 92       	push	r14
     c4a:	84 ea       	ldi	r24, 0xA4	; 164
     c4c:	92 e0       	ldi	r25, 0x02	; 2
     c4e:	9f 93       	push	r25
     c50:	8f 93       	push	r24
     c52:	0e 94 3a 04 	call	0x874	; 0x874 <oled_printf>
     c56:	60 e0       	ldi	r22, 0x00	; 0
     c58:	70 e0       	ldi	r23, 0x00	; 0
     c5a:	86 e0       	ldi	r24, 0x06	; 6
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	0e 94 12 04 	call	0x824	; 0x824 <oled_pos>
     c62:	1f 93       	push	r17
     c64:	0f 93       	push	r16
     c66:	83 eb       	ldi	r24, 0xB3	; 179
     c68:	92 e0       	ldi	r25, 0x02	; 2
     c6a:	9f 93       	push	r25
     c6c:	8f 93       	push	r24
     c6e:	0e 94 3a 04 	call	0x874	; 0x874 <oled_printf>
     c72:	2f ef       	ldi	r18, 0xFF	; 255
     c74:	8f ef       	ldi	r24, 0xFF	; 255
     c76:	9b e3       	ldi	r25, 0x3B	; 59
     c78:	21 50       	subi	r18, 0x01	; 1
     c7a:	80 40       	sbci	r24, 0x00	; 0
     c7c:	90 40       	sbci	r25, 0x00	; 0
     c7e:	e1 f7       	brne	.-8      	; 0xc78 <SRAM_test+0x142>
     c80:	00 c0       	rjmp	.+0      	; 0xc82 <SRAM_test+0x14c>
     c82:	00 00       	nop
     c84:	8d b7       	in	r24, 0x3d	; 61
     c86:	9e b7       	in	r25, 0x3e	; 62
     c88:	08 96       	adiw	r24, 0x08	; 8
     c8a:	0f b6       	in	r0, 0x3f	; 63
     c8c:	f8 94       	cli
     c8e:	9e bf       	out	0x3e, r25	; 62
     c90:	0f be       	out	0x3f, r0	; 63
     c92:	8d bf       	out	0x3d, r24	; 61
     c94:	0e c0       	rjmp	.+28     	; 0xcb2 <SRAM_test+0x17c>
     c96:	64 e0       	ldi	r22, 0x04	; 4
     c98:	70 e0       	ldi	r23, 0x00	; 0
     c9a:	86 e0       	ldi	r24, 0x06	; 6
     c9c:	90 e0       	ldi	r25, 0x00	; 0
     c9e:	0e 94 12 04 	call	0x824	; 0x824 <oled_pos>
     ca2:	82 ec       	ldi	r24, 0xC2	; 194
     ca4:	92 e0       	ldi	r25, 0x02	; 2
     ca6:	9f 93       	push	r25
     ca8:	8f 93       	push	r24
     caa:	0e 94 3a 04 	call	0x874	; 0x874 <oled_printf>
     cae:	0f 90       	pop	r0
     cb0:	0f 90       	pop	r0
     cb2:	ff 92       	push	r15
     cb4:	ef 92       	push	r14
     cb6:	1f 93       	push	r17
     cb8:	0f 93       	push	r16
     cba:	8c ec       	ldi	r24, 0xCC	; 204
     cbc:	92 e0       	ldi	r25, 0x02	; 2
     cbe:	9f 93       	push	r25
     cc0:	8f 93       	push	r24
     cc2:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <printf>
     cc6:	0f 90       	pop	r0
     cc8:	0f 90       	pop	r0
     cca:	0f 90       	pop	r0
     ccc:	0f 90       	pop	r0
     cce:	0f 90       	pop	r0
     cd0:	0f 90       	pop	r0
     cd2:	df 91       	pop	r29
     cd4:	cf 91       	pop	r28
     cd6:	1f 91       	pop	r17
     cd8:	0f 91       	pop	r16
     cda:	ff 90       	pop	r15
     cdc:	ef 90       	pop	r14
     cde:	df 90       	pop	r13
     ce0:	cf 90       	pop	r12
     ce2:	08 95       	ret

00000ce4 <SRAM_init>:
     ce4:	80 e8       	ldi	r24, 0x80	; 128
     ce6:	85 bf       	out	0x35, r24	; 53
     ce8:	8f ef       	ldi	r24, 0xFF	; 255
     cea:	8a bb       	out	0x1a, r24	; 26
     cec:	0e 94 9b 05 	call	0xb36	; 0xb36 <SRAM_test>
     cf0:	08 95       	ret

00000cf2 <uart_sendChar>:
     cf2:	5d 9b       	sbis	0x0b, 5	; 11
     cf4:	fe cf       	rjmp	.-4      	; 0xcf2 <uart_sendChar>
     cf6:	8c b9       	out	0x0c, r24	; 12
     cf8:	08 95       	ret

00000cfa <uart_getChar>:
     cfa:	5f 9b       	sbis	0x0b, 7	; 11
     cfc:	fe cf       	rjmp	.-4      	; 0xcfa <uart_getChar>
     cfe:	8c b1       	in	r24, 0x0c	; 12
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	08 95       	ret

00000d04 <uart_init>:
     d04:	89 b9       	out	0x09, r24	; 9
     d06:	88 e1       	ldi	r24, 0x18	; 24
     d08:	8a b9       	out	0x0a, r24	; 10
     d0a:	8c e1       	ldi	r24, 0x1C	; 28
     d0c:	91 e0       	ldi	r25, 0x01	; 1
     d0e:	90 93 8f 04 	sts	0x048F, r25
     d12:	80 93 8e 04 	sts	0x048E, r24
     d16:	90 93 8d 04 	sts	0x048D, r25
     d1a:	80 93 8c 04 	sts	0x048C, r24
     d1e:	08 95       	ret

00000d20 <main>:
#include "Drivers/uart_driver.h"
#include "Drivers/mcp2515_driver.h"
#include "Drivers/can_driver.h"

int main(void) {
    uart_init(MYUBRR);
     d20:	8f e1       	ldi	r24, 0x1F	; 31
     d22:	90 e0       	ldi	r25, 0x00	; 0
     d24:	0e 94 82 06 	call	0xd04	; 0xd04 <uart_init>
	printf("\nREBOOTED\n");
     d28:	85 e2       	ldi	r24, 0x25	; 37
     d2a:	93 e0       	ldi	r25, 0x03	; 3
     d2c:	0e 94 07 0a 	call	0x140e	; 0x140e <puts>
	SRAM_init();
     d30:	0e 94 72 06 	call	0xce4	; 0xce4 <SRAM_init>
	joystick_init();
     d34:	0e 94 07 03 	call	0x60e	; 0x60e <joystick_init>
	oled_init();
     d38:	0e 94 4a 04 	call	0x894	; 0x894 <oled_init>
	//mcp2515_init();
	can_init();	
     d3c:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <can_init>

	printf("\nAll init done\n\n");
     d40:	8f e2       	ldi	r24, 0x2F	; 47
     d42:	93 e0       	ldi	r25, 0x03	; 3
     d44:	0e 94 07 0a 	call	0x140e	; 0x140e <puts>
	//_delay_ms(1000);

	//mcp2515_test();
	can_test();
     d48:	0e 94 a1 02 	call	0x542	; 0x542 <can_test>

	while(1) { 
		//shell();
		//spi_test();

		menuitem* test_menu = MENU_create_menu();
     d4c:	0e 94 02 07 	call	0xe04	; 0xe04 <MENU_create_menu>
		MENU_navigate(test_menu);
     d50:	0e 94 ae 07 	call	0xf5c	; 0xf5c <MENU_navigate>
     d54:	fb cf       	rjmp	.-10     	; 0xd4c <main+0x2c>

00000d56 <MENU_new_item>:
	new_menu[0].items[0].child = NULL;
	
	return new_menu;	
}*/

menuitem* MENU_new_item(char *name, void (*handlerFunc)(void), uint8_t number_of_submenus) {
     d56:	df 92       	push	r13
     d58:	ef 92       	push	r14
     d5a:	ff 92       	push	r15
     d5c:	0f 93       	push	r16
     d5e:	1f 93       	push	r17
     d60:	cf 93       	push	r28
     d62:	df 93       	push	r29
     d64:	7c 01       	movw	r14, r24
     d66:	8b 01       	movw	r16, r22
     d68:	d4 2e       	mov	r13, r20
	menuitem* new_item = malloc(sizeof(menuitem));
     d6a:	89 e0       	ldi	r24, 0x09	; 9
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	0e 94 6e 08 	call	0x10dc	; 0x10dc <malloc>
     d72:	ec 01       	movw	r28, r24
	
	new_item->name = name;
     d74:	fe 82       	std	Y+6, r15	; 0x06
     d76:	ed 82       	std	Y+5, r14	; 0x05
	new_item->handlerFunc = handlerFunc;
     d78:	18 87       	std	Y+8, r17	; 0x08
     d7a:	0f 83       	std	Y+7, r16	; 0x07
	new_item->number_of_submenus = number_of_submenus;
     d7c:	d8 82       	st	Y, r13
	new_item->submenus = malloc(number_of_submenus * sizeof(menuitem));
     d7e:	4d 2d       	mov	r20, r13
     d80:	50 e0       	ldi	r21, 0x00	; 0
     d82:	ca 01       	movw	r24, r20
     d84:	88 0f       	add	r24, r24
     d86:	99 1f       	adc	r25, r25
     d88:	88 0f       	add	r24, r24
     d8a:	99 1f       	adc	r25, r25
     d8c:	88 0f       	add	r24, r24
     d8e:	99 1f       	adc	r25, r25
     d90:	84 0f       	add	r24, r20
     d92:	95 1f       	adc	r25, r21
     d94:	0e 94 6e 08 	call	0x10dc	; 0x10dc <malloc>
     d98:	9a 83       	std	Y+2, r25	; 0x02
     d9a:	89 83       	std	Y+1, r24	; 0x01
	
	return new_item;
}
     d9c:	ce 01       	movw	r24, r28
     d9e:	df 91       	pop	r29
     da0:	cf 91       	pop	r28
     da2:	1f 91       	pop	r17
     da4:	0f 91       	pop	r16
     da6:	ff 90       	pop	r15
     da8:	ef 90       	pop	r14
     daa:	df 90       	pop	r13
     dac:	08 95       	ret

00000dae <MENU_assign_parents>:

void MENU_assign_parents(menuitem *current_menu){
     dae:	1f 93       	push	r17
     db0:	cf 93       	push	r28
     db2:	df 93       	push	r29
     db4:	ec 01       	movw	r28, r24
	for (uint8_t n = 0; n < current_menu->number_of_submenus; n++) {
     db6:	88 81       	ld	r24, Y
     db8:	88 23       	and	r24, r24
     dba:	01 f1       	breq	.+64     	; 0xdfc <MENU_assign_parents+0x4e>
     dbc:	10 e0       	ldi	r17, 0x00	; 0
		current_menu->submenus[n]->parent = current_menu;
     dbe:	81 2f       	mov	r24, r17
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	88 0f       	add	r24, r24
     dc4:	99 1f       	adc	r25, r25
     dc6:	e9 81       	ldd	r30, Y+1	; 0x01
     dc8:	fa 81       	ldd	r31, Y+2	; 0x02
     dca:	e8 0f       	add	r30, r24
     dcc:	f9 1f       	adc	r31, r25
     dce:	01 90       	ld	r0, Z+
     dd0:	f0 81       	ld	r31, Z
     dd2:	e0 2d       	mov	r30, r0
     dd4:	d4 83       	std	Z+4, r29	; 0x04
     dd6:	c3 83       	std	Z+3, r28	; 0x03
		if (current_menu->submenus[n]->number_of_submenus > 0) {
     dd8:	29 81       	ldd	r18, Y+1	; 0x01
     dda:	3a 81       	ldd	r19, Y+2	; 0x02
     ddc:	f9 01       	movw	r30, r18
     dde:	e8 0f       	add	r30, r24
     de0:	f9 1f       	adc	r31, r25
     de2:	01 90       	ld	r0, Z+
     de4:	f0 81       	ld	r31, Z
     de6:	e0 2d       	mov	r30, r0
     de8:	80 81       	ld	r24, Z
     dea:	88 23       	and	r24, r24
     dec:	19 f0       	breq	.+6      	; 0xdf4 <MENU_assign_parents+0x46>
			MENU_assign_parents(current_menu->submenus[n]);
     dee:	cf 01       	movw	r24, r30
     df0:	0e 94 d7 06 	call	0xdae	; 0xdae <MENU_assign_parents>
	
	return new_item;
}

void MENU_assign_parents(menuitem *current_menu){
	for (uint8_t n = 0; n < current_menu->number_of_submenus; n++) {
     df4:	1f 5f       	subi	r17, 0xFF	; 255
     df6:	88 81       	ld	r24, Y
     df8:	18 17       	cp	r17, r24
     dfa:	08 f3       	brcs	.-62     	; 0xdbe <MENU_assign_parents+0x10>
		current_menu->submenus[n]->parent = current_menu;
		if (current_menu->submenus[n]->number_of_submenus > 0) {
			MENU_assign_parents(current_menu->submenus[n]);
		}
	}
}
     dfc:	df 91       	pop	r29
     dfe:	cf 91       	pop	r28
     e00:	1f 91       	pop	r17
     e02:	08 95       	ret

00000e04 <MENU_create_menu>:


menuitem* MENU_create_menu(){
     e04:	0f 93       	push	r16
     e06:	1f 93       	push	r17
     e08:	cf 93       	push	r28
     e0a:	df 93       	push	r29
	menuitem* root_menu = MENU_new_item("Main", NULL, 3);
     e0c:	43 e0       	ldi	r20, 0x03	; 3
     e0e:	60 e0       	ldi	r22, 0x00	; 0
     e10:	70 e0       	ldi	r23, 0x00	; 0
     e12:	8f e3       	ldi	r24, 0x3F	; 63
     e14:	93 e0       	ldi	r25, 0x03	; 3
     e16:	0e 94 ab 06 	call	0xd56	; 0xd56 <MENU_new_item>
     e1a:	ec 01       	movw	r28, r24
	root_menu->parent = NULL;
     e1c:	1c 82       	std	Y+4, r1	; 0x04
     e1e:	1b 82       	std	Y+3, r1	; 0x03
	root_menu->submenus[0] = MENU_new_item("Play game", SRAM_test, 0);
     e20:	09 81       	ldd	r16, Y+1	; 0x01
     e22:	1a 81       	ldd	r17, Y+2	; 0x02
     e24:	40 e0       	ldi	r20, 0x00	; 0
     e26:	6b e9       	ldi	r22, 0x9B	; 155
     e28:	75 e0       	ldi	r23, 0x05	; 5
     e2a:	84 e4       	ldi	r24, 0x44	; 68
     e2c:	93 e0       	ldi	r25, 0x03	; 3
     e2e:	0e 94 ab 06 	call	0xd56	; 0xd56 <MENU_new_item>
     e32:	f8 01       	movw	r30, r16
     e34:	91 83       	std	Z+1, r25	; 0x01
     e36:	80 83       	st	Z, r24
	root_menu->submenus[1] = MENU_new_item("Snake", SRAM_test, 0);
     e38:	09 81       	ldd	r16, Y+1	; 0x01
     e3a:	1a 81       	ldd	r17, Y+2	; 0x02
     e3c:	40 e0       	ldi	r20, 0x00	; 0
     e3e:	6b e9       	ldi	r22, 0x9B	; 155
     e40:	75 e0       	ldi	r23, 0x05	; 5
     e42:	8e e4       	ldi	r24, 0x4E	; 78
     e44:	93 e0       	ldi	r25, 0x03	; 3
     e46:	0e 94 ab 06 	call	0xd56	; 0xd56 <MENU_new_item>
     e4a:	f8 01       	movw	r30, r16
     e4c:	93 83       	std	Z+3, r25	; 0x03
     e4e:	82 83       	std	Z+2, r24	; 0x02
	root_menu->submenus[2] = MENU_new_item("Test functions", NULL, 2);
     e50:	09 81       	ldd	r16, Y+1	; 0x01
     e52:	1a 81       	ldd	r17, Y+2	; 0x02
     e54:	42 e0       	ldi	r20, 0x02	; 2
     e56:	60 e0       	ldi	r22, 0x00	; 0
     e58:	70 e0       	ldi	r23, 0x00	; 0
     e5a:	84 e5       	ldi	r24, 0x54	; 84
     e5c:	93 e0       	ldi	r25, 0x03	; 3
     e5e:	0e 94 ab 06 	call	0xd56	; 0xd56 <MENU_new_item>
     e62:	f8 01       	movw	r30, r16
     e64:	95 83       	std	Z+5, r25	; 0x05
     e66:	84 83       	std	Z+4, r24	; 0x04
	root_menu->submenus[2]->submenus[0] = MENU_new_item("Flash diode", flash_diode, 0);
     e68:	e9 81       	ldd	r30, Y+1	; 0x01
     e6a:	fa 81       	ldd	r31, Y+2	; 0x02
     e6c:	04 80       	ldd	r0, Z+4	; 0x04
     e6e:	f5 81       	ldd	r31, Z+5	; 0x05
     e70:	e0 2d       	mov	r30, r0
     e72:	01 81       	ldd	r16, Z+1	; 0x01
     e74:	12 81       	ldd	r17, Z+2	; 0x02
     e76:	40 e0       	ldi	r20, 0x00	; 0
     e78:	60 e4       	ldi	r22, 0x40	; 64
     e7a:	78 e0       	ldi	r23, 0x08	; 8
     e7c:	83 e6       	ldi	r24, 0x63	; 99
     e7e:	93 e0       	ldi	r25, 0x03	; 3
     e80:	0e 94 ab 06 	call	0xd56	; 0xd56 <MENU_new_item>
     e84:	f8 01       	movw	r30, r16
     e86:	91 83       	std	Z+1, r25	; 0x01
     e88:	80 83       	st	Z, r24
	root_menu->submenus[2]->submenus[1] = MENU_new_item("CAN loopback", SRAM_test, 0);
     e8a:	e9 81       	ldd	r30, Y+1	; 0x01
     e8c:	fa 81       	ldd	r31, Y+2	; 0x02
     e8e:	04 80       	ldd	r0, Z+4	; 0x04
     e90:	f5 81       	ldd	r31, Z+5	; 0x05
     e92:	e0 2d       	mov	r30, r0
     e94:	01 81       	ldd	r16, Z+1	; 0x01
     e96:	12 81       	ldd	r17, Z+2	; 0x02
     e98:	40 e0       	ldi	r20, 0x00	; 0
     e9a:	6b e9       	ldi	r22, 0x9B	; 155
     e9c:	75 e0       	ldi	r23, 0x05	; 5
     e9e:	8f e6       	ldi	r24, 0x6F	; 111
     ea0:	93 e0       	ldi	r25, 0x03	; 3
     ea2:	0e 94 ab 06 	call	0xd56	; 0xd56 <MENU_new_item>
     ea6:	f8 01       	movw	r30, r16
     ea8:	93 83       	std	Z+3, r25	; 0x03
     eaa:	82 83       	std	Z+2, r24	; 0x02

	
	MENU_assign_parents(root_menu);
     eac:	ce 01       	movw	r24, r28
     eae:	0e 94 d7 06 	call	0xdae	; 0xdae <MENU_assign_parents>
		
	return root_menu;
}
     eb2:	ce 01       	movw	r24, r28
     eb4:	df 91       	pop	r29
     eb6:	cf 91       	pop	r28
     eb8:	1f 91       	pop	r17
     eba:	0f 91       	pop	r16
     ebc:	08 95       	ret

00000ebe <MENU_print>:

//fixed
void MENU_print(menuitem *current_menu_item){
     ebe:	ef 92       	push	r14
     ec0:	ff 92       	push	r15
     ec2:	0f 93       	push	r16
     ec4:	1f 93       	push	r17
     ec6:	cf 93       	push	r28
     ec8:	df 93       	push	r29
     eca:	7c 01       	movw	r14, r24
	oled_clear_screen();
     ecc:	0e 94 fe 03 	call	0x7fc	; 0x7fc <oled_clear_screen>
	oled_print_arrow(last_arrow_pos, 0);
     ed0:	60 e0       	ldi	r22, 0x00	; 0
     ed2:	80 91 2a 01 	lds	r24, 0x012A
     ed6:	0e 94 08 05 	call	0xa10	; 0xa10 <oled_print_arrow>
	oled_pos(0,0);
     eda:	60 e0       	ldi	r22, 0x00	; 0
     edc:	70 e0       	ldi	r23, 0x00	; 0
     ede:	80 e0       	ldi	r24, 0x00	; 0
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	0e 94 12 04 	call	0x824	; 0x824 <oled_pos>
	oled_printf(current_menu_item->name);
     ee6:	d7 01       	movw	r26, r14
     ee8:	16 96       	adiw	r26, 0x06	; 6
     eea:	8c 91       	ld	r24, X
     eec:	16 97       	sbiw	r26, 0x06	; 6
     eee:	8f 93       	push	r24
     ef0:	15 96       	adiw	r26, 0x05	; 5
     ef2:	8c 91       	ld	r24, X
     ef4:	8f 93       	push	r24
     ef6:	0e 94 3a 04 	call	0x874	; 0x874 <oled_printf>
	//printf("%s\n", current_menu_item->name);
	
	for (unsigned int i = 0; i < current_menu_item->number_of_submenus; i++) {
     efa:	0f 90       	pop	r0
     efc:	0f 90       	pop	r0
     efe:	f7 01       	movw	r30, r14
     f00:	80 81       	ld	r24, Z
     f02:	88 23       	and	r24, r24
     f04:	21 f1       	breq	.+72     	; 0xf4e <MENU_print+0x90>
     f06:	00 e0       	ldi	r16, 0x00	; 0
     f08:	10 e0       	ldi	r17, 0x00	; 0
     f0a:	c0 e0       	ldi	r28, 0x00	; 0
     f0c:	d0 e0       	ldi	r29, 0x00	; 0
		oled_pos(i + 1, MENU_INDENT);
     f0e:	21 96       	adiw	r28, 0x01	; 1
     f10:	62 e0       	ldi	r22, 0x02	; 2
     f12:	70 e0       	ldi	r23, 0x00	; 0
     f14:	ce 01       	movw	r24, r28
     f16:	0e 94 12 04 	call	0x824	; 0x824 <oled_pos>
		oled_printf(current_menu_item->submenus[i]->name);
     f1a:	d7 01       	movw	r26, r14
     f1c:	11 96       	adiw	r26, 0x01	; 1
     f1e:	ed 91       	ld	r30, X+
     f20:	fc 91       	ld	r31, X
     f22:	12 97       	sbiw	r26, 0x02	; 2
     f24:	e0 0f       	add	r30, r16
     f26:	f1 1f       	adc	r31, r17
     f28:	01 90       	ld	r0, Z+
     f2a:	f0 81       	ld	r31, Z
     f2c:	e0 2d       	mov	r30, r0
     f2e:	86 81       	ldd	r24, Z+6	; 0x06
     f30:	8f 93       	push	r24
     f32:	85 81       	ldd	r24, Z+5	; 0x05
     f34:	8f 93       	push	r24
     f36:	0e 94 3a 04 	call	0x874	; 0x874 <oled_printf>
     f3a:	0e 5f       	subi	r16, 0xFE	; 254
     f3c:	1f 4f       	sbci	r17, 0xFF	; 255
	oled_print_arrow(last_arrow_pos, 0);
	oled_pos(0,0);
	oled_printf(current_menu_item->name);
	//printf("%s\n", current_menu_item->name);
	
	for (unsigned int i = 0; i < current_menu_item->number_of_submenus; i++) {
     f3e:	f7 01       	movw	r30, r14
     f40:	80 81       	ld	r24, Z
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	0f 90       	pop	r0
     f46:	0f 90       	pop	r0
     f48:	c8 17       	cp	r28, r24
     f4a:	d9 07       	cpc	r29, r25
     f4c:	00 f3       	brcs	.-64     	; 0xf0e <MENU_print+0x50>
		oled_pos(i + 1, MENU_INDENT);
		oled_printf(current_menu_item->submenus[i]->name);
		//printf("%s\n",current_menu_item->submenus[i]->name);
	}
}
     f4e:	df 91       	pop	r29
     f50:	cf 91       	pop	r28
     f52:	1f 91       	pop	r17
     f54:	0f 91       	pop	r16
     f56:	ff 90       	pop	r15
     f58:	ef 90       	pop	r14
     f5a:	08 95       	ret

00000f5c <MENU_navigate>:

void MENU_navigate(menuitem *current_menu){
     f5c:	8c 01       	movw	r16, r24
	MENU_print(current_menu);
     f5e:	0e 94 5f 07 	call	0xebe	; 0xebe <MENU_print>
	while(1){
		if(joystick_direction_Y() != 0){
     f62:	0e 94 38 03 	call	0x670	; 0x670 <joystick_direction_Y>
     f66:	89 2b       	or	r24, r25
     f68:	71 f0       	breq	.+28     	; 0xf86 <MENU_navigate+0x2a>
			last_arrow_pos = oled_arrow_handler(joystick_direction_Y(), 1, current_menu->number_of_submenus);
     f6a:	f8 01       	movw	r30, r16
     f6c:	c0 81       	ld	r28, Z
     f6e:	d0 e0       	ldi	r29, 0x00	; 0
     f70:	0e 94 38 03 	call	0x670	; 0x670 <joystick_direction_Y>
     f74:	ae 01       	movw	r20, r28
     f76:	61 e0       	ldi	r22, 0x01	; 1
     f78:	70 e0       	ldi	r23, 0x00	; 0
     f7a:	0e 94 75 05 	call	0xaea	; 0xaea <oled_arrow_handler>
     f7e:	90 93 2b 01 	sts	0x012B, r25
     f82:	80 93 2a 01 	sts	0x012A, r24
		}
		
		if(joystick_direction_X() != 0){
     f86:	0e 94 4d 03 	call	0x69a	; 0x69a <joystick_direction_X>
     f8a:	89 2b       	or	r24, r25
     f8c:	51 f3       	breq	.-44     	; 0xf62 <MENU_navigate+0x6>
			if (joystick_direction_X() == 1) {
     f8e:	0e 94 4d 03 	call	0x69a	; 0x69a <joystick_direction_X>
     f92:	01 97       	sbiw	r24, 0x01	; 1
     f94:	09 f0       	breq	.+2      	; 0xf98 <MENU_navigate+0x3c>
     f96:	57 c0       	rjmp	.+174    	; 0x1046 <MENU_navigate+0xea>
				if (current_menu->submenus[oled_get_arrow_page() - 1]->number_of_submenus > 0) {
     f98:	f8 01       	movw	r30, r16
     f9a:	c1 81       	ldd	r28, Z+1	; 0x01
     f9c:	d2 81       	ldd	r29, Z+2	; 0x02
     f9e:	0e 94 05 05 	call	0xa0a	; 0xa0a <oled_get_arrow_page>
     fa2:	90 e0       	ldi	r25, 0x00	; 0
     fa4:	81 50       	subi	r24, 0x01	; 1
     fa6:	90 48       	sbci	r25, 0x80	; 128
     fa8:	88 0f       	add	r24, r24
     faa:	99 1f       	adc	r25, r25
     fac:	c8 0f       	add	r28, r24
     fae:	d9 1f       	adc	r29, r25
     fb0:	e8 81       	ld	r30, Y
     fb2:	f9 81       	ldd	r31, Y+1	; 0x01
     fb4:	80 81       	ld	r24, Z
     fb6:	88 23       	and	r24, r24
     fb8:	c1 f0       	breq	.+48     	; 0xfea <MENU_navigate+0x8e>
					current_menu = current_menu->submenus[oled_get_arrow_page() - 1];
     fba:	f8 01       	movw	r30, r16
     fbc:	c1 81       	ldd	r28, Z+1	; 0x01
     fbe:	d2 81       	ldd	r29, Z+2	; 0x02
     fc0:	0e 94 05 05 	call	0xa0a	; 0xa0a <oled_get_arrow_page>
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	81 50       	subi	r24, 0x01	; 1
     fc8:	90 48       	sbci	r25, 0x80	; 128
     fca:	88 0f       	add	r24, r24
     fcc:	99 1f       	adc	r25, r25
     fce:	c8 0f       	add	r28, r24
     fd0:	d9 1f       	adc	r29, r25
     fd2:	08 81       	ld	r16, Y
     fd4:	19 81       	ldd	r17, Y+1	; 0x01
					//printf(current_menu->submenus[0]->name);
					last_arrow_pos = 1;
     fd6:	81 e0       	ldi	r24, 0x01	; 1
     fd8:	90 e0       	ldi	r25, 0x00	; 0
     fda:	90 93 2b 01 	sts	0x012B, r25
     fde:	80 93 2a 01 	sts	0x012A, r24
					MENU_print(current_menu);
     fe2:	c8 01       	movw	r24, r16
     fe4:	0e 94 5f 07 	call	0xebe	; 0xebe <MENU_print>
     fe8:	41 c0       	rjmp	.+130    	; 0x106c <MENU_navigate+0x110>
				} else  if (current_menu->submenus[oled_get_arrow_page() - 1]->handlerFunc != NULL) {
     fea:	f8 01       	movw	r30, r16
     fec:	c1 81       	ldd	r28, Z+1	; 0x01
     fee:	d2 81       	ldd	r29, Z+2	; 0x02
     ff0:	0e 94 05 05 	call	0xa0a	; 0xa0a <oled_get_arrow_page>
     ff4:	90 e0       	ldi	r25, 0x00	; 0
     ff6:	81 50       	subi	r24, 0x01	; 1
     ff8:	90 48       	sbci	r25, 0x80	; 128
     ffa:	88 0f       	add	r24, r24
     ffc:	99 1f       	adc	r25, r25
     ffe:	c8 0f       	add	r28, r24
    1000:	d9 1f       	adc	r29, r25
    1002:	e8 81       	ld	r30, Y
    1004:	f9 81       	ldd	r31, Y+1	; 0x01
    1006:	87 81       	ldd	r24, Z+7	; 0x07
    1008:	90 85       	ldd	r25, Z+8	; 0x08
    100a:	89 2b       	or	r24, r25
    100c:	79 f1       	breq	.+94     	; 0x106c <MENU_navigate+0x110>
					current_menu->submenus[oled_get_arrow_page() - 1]->handlerFunc();
    100e:	f8 01       	movw	r30, r16
    1010:	c1 81       	ldd	r28, Z+1	; 0x01
    1012:	d2 81       	ldd	r29, Z+2	; 0x02
    1014:	0e 94 05 05 	call	0xa0a	; 0xa0a <oled_get_arrow_page>
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	81 50       	subi	r24, 0x01	; 1
    101c:	90 48       	sbci	r25, 0x80	; 128
    101e:	88 0f       	add	r24, r24
    1020:	99 1f       	adc	r25, r25
    1022:	c8 0f       	add	r28, r24
    1024:	d9 1f       	adc	r29, r25
    1026:	e8 81       	ld	r30, Y
    1028:	f9 81       	ldd	r31, Y+1	; 0x01
    102a:	07 80       	ldd	r0, Z+7	; 0x07
    102c:	f0 85       	ldd	r31, Z+8	; 0x08
    102e:	e0 2d       	mov	r30, r0
    1030:	09 95       	icall
					last_arrow_pos = 1;
    1032:	81 e0       	ldi	r24, 0x01	; 1
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	90 93 2b 01 	sts	0x012B, r25
    103a:	80 93 2a 01 	sts	0x012A, r24
					MENU_print(current_menu);
    103e:	c8 01       	movw	r24, r16
    1040:	0e 94 5f 07 	call	0xebe	; 0xebe <MENU_print>
    1044:	13 c0       	rjmp	.+38     	; 0x106c <MENU_navigate+0x110>
				}
			} else if (joystick_direction_X() == -1 && current_menu->parent != NULL) {
    1046:	0e 94 4d 03 	call	0x69a	; 0x69a <joystick_direction_X>
    104a:	01 96       	adiw	r24, 0x01	; 1
    104c:	79 f4       	brne	.+30     	; 0x106c <MENU_navigate+0x110>
    104e:	f8 01       	movw	r30, r16
    1050:	c3 81       	ldd	r28, Z+3	; 0x03
    1052:	d4 81       	ldd	r29, Z+4	; 0x04
    1054:	20 97       	sbiw	r28, 0x00	; 0
    1056:	51 f0       	breq	.+20     	; 0x106c <MENU_navigate+0x110>
				current_menu = current_menu->parent;
				last_arrow_pos = 1;
    1058:	81 e0       	ldi	r24, 0x01	; 1
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	90 93 2b 01 	sts	0x012B, r25
    1060:	80 93 2a 01 	sts	0x012A, r24
				MENU_print(current_menu);
    1064:	ce 01       	movw	r24, r28
    1066:	0e 94 5f 07 	call	0xebe	; 0xebe <MENU_print>
					current_menu->submenus[oled_get_arrow_page() - 1]->handlerFunc();
					last_arrow_pos = 1;
					MENU_print(current_menu);
				}
			} else if (joystick_direction_X() == -1 && current_menu->parent != NULL) {
				current_menu = current_menu->parent;
    106a:	8e 01       	movw	r16, r28
    106c:	ff ef       	ldi	r31, 0xFF	; 255
    106e:	2f e7       	ldi	r18, 0x7F	; 127
    1070:	87 e0       	ldi	r24, 0x07	; 7
    1072:	f1 50       	subi	r31, 0x01	; 1
    1074:	20 40       	sbci	r18, 0x00	; 0
    1076:	80 40       	sbci	r24, 0x00	; 0
    1078:	e1 f7       	brne	.-8      	; 0x1072 <MENU_navigate+0x116>
    107a:	00 c0       	rjmp	.+0      	; 0x107c <MENU_navigate+0x120>
    107c:	00 00       	nop
    107e:	71 cf       	rjmp	.-286    	; 0xf62 <MENU_navigate+0x6>

00001080 <flash_diode>:
    1080:	0e 94 fe 03 	call	0x7fc	; 0x7fc <oled_clear_screen>
    1084:	63 e0       	ldi	r22, 0x03	; 3
    1086:	70 e0       	ldi	r23, 0x00	; 0
    1088:	82 e0       	ldi	r24, 0x02	; 2
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	0e 94 12 04 	call	0x824	; 0x824 <oled_pos>
    1090:	8c e7       	ldi	r24, 0x7C	; 124
    1092:	93 e0       	ldi	r25, 0x03	; 3
    1094:	9f 93       	push	r25
    1096:	8f 93       	push	r24
    1098:	0e 94 3a 04 	call	0x874	; 0x874 <oled_printf>
    109c:	64 e0       	ldi	r22, 0x04	; 4
    109e:	70 e0       	ldi	r23, 0x00	; 0
    10a0:	84 e0       	ldi	r24, 0x04	; 4
    10a2:	90 e0       	ldi	r25, 0x00	; 0
    10a4:	0e 94 12 04 	call	0x824	; 0x824 <oled_pos>
    10a8:	85 e8       	ldi	r24, 0x85	; 133
    10aa:	93 e0       	ldi	r25, 0x03	; 3
    10ac:	9f 93       	push	r25
    10ae:	8f 93       	push	r24
    10b0:	0e 94 3a 04 	call	0x874	; 0x874 <oled_printf>
    10b4:	0f 90       	pop	r0
    10b6:	0f 90       	pop	r0
    10b8:	0f 90       	pop	r0
    10ba:	0f 90       	pop	r0
    10bc:	84 e1       	ldi	r24, 0x14	; 20
    10be:	90 e0       	ldi	r25, 0x00	; 0
    10c0:	c0 9a       	sbi	0x18, 0	; 24
    10c2:	e0 e0       	ldi	r30, 0x00	; 0
    10c4:	f0 ef       	ldi	r31, 0xF0	; 240
    10c6:	31 97       	sbiw	r30, 0x01	; 1
    10c8:	f1 f7       	brne	.-4      	; 0x10c6 <flash_diode+0x46>
    10ca:	c0 98       	cbi	0x18, 0	; 24
    10cc:	e0 e0       	ldi	r30, 0x00	; 0
    10ce:	f0 ef       	ldi	r31, 0xF0	; 240
    10d0:	31 97       	sbiw	r30, 0x01	; 1
    10d2:	f1 f7       	brne	.-4      	; 0x10d0 <flash_diode+0x50>
    10d4:	01 97       	sbiw	r24, 0x01	; 1
    10d6:	00 97       	sbiw	r24, 0x00	; 0
    10d8:	99 f7       	brne	.-26     	; 0x10c0 <flash_diode+0x40>
    10da:	08 95       	ret

000010dc <malloc>:
    10dc:	cf 93       	push	r28
    10de:	df 93       	push	r29
    10e0:	82 30       	cpi	r24, 0x02	; 2
    10e2:	91 05       	cpc	r25, r1
    10e4:	10 f4       	brcc	.+4      	; 0x10ea <malloc+0xe>
    10e6:	82 e0       	ldi	r24, 0x02	; 2
    10e8:	90 e0       	ldi	r25, 0x00	; 0
    10ea:	e0 91 8a 04 	lds	r30, 0x048A
    10ee:	f0 91 8b 04 	lds	r31, 0x048B
    10f2:	20 e0       	ldi	r18, 0x00	; 0
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	a0 e0       	ldi	r26, 0x00	; 0
    10f8:	b0 e0       	ldi	r27, 0x00	; 0
    10fa:	30 97       	sbiw	r30, 0x00	; 0
    10fc:	39 f1       	breq	.+78     	; 0x114c <malloc+0x70>
    10fe:	40 81       	ld	r20, Z
    1100:	51 81       	ldd	r21, Z+1	; 0x01
    1102:	48 17       	cp	r20, r24
    1104:	59 07       	cpc	r21, r25
    1106:	b8 f0       	brcs	.+46     	; 0x1136 <malloc+0x5a>
    1108:	48 17       	cp	r20, r24
    110a:	59 07       	cpc	r21, r25
    110c:	71 f4       	brne	.+28     	; 0x112a <malloc+0x4e>
    110e:	82 81       	ldd	r24, Z+2	; 0x02
    1110:	93 81       	ldd	r25, Z+3	; 0x03
    1112:	10 97       	sbiw	r26, 0x00	; 0
    1114:	29 f0       	breq	.+10     	; 0x1120 <malloc+0x44>
    1116:	13 96       	adiw	r26, 0x03	; 3
    1118:	9c 93       	st	X, r25
    111a:	8e 93       	st	-X, r24
    111c:	12 97       	sbiw	r26, 0x02	; 2
    111e:	2c c0       	rjmp	.+88     	; 0x1178 <malloc+0x9c>
    1120:	90 93 8b 04 	sts	0x048B, r25
    1124:	80 93 8a 04 	sts	0x048A, r24
    1128:	27 c0       	rjmp	.+78     	; 0x1178 <malloc+0x9c>
    112a:	21 15       	cp	r18, r1
    112c:	31 05       	cpc	r19, r1
    112e:	31 f0       	breq	.+12     	; 0x113c <malloc+0x60>
    1130:	42 17       	cp	r20, r18
    1132:	53 07       	cpc	r21, r19
    1134:	18 f0       	brcs	.+6      	; 0x113c <malloc+0x60>
    1136:	a9 01       	movw	r20, r18
    1138:	db 01       	movw	r26, r22
    113a:	01 c0       	rjmp	.+2      	; 0x113e <malloc+0x62>
    113c:	ef 01       	movw	r28, r30
    113e:	9a 01       	movw	r18, r20
    1140:	bd 01       	movw	r22, r26
    1142:	df 01       	movw	r26, r30
    1144:	02 80       	ldd	r0, Z+2	; 0x02
    1146:	f3 81       	ldd	r31, Z+3	; 0x03
    1148:	e0 2d       	mov	r30, r0
    114a:	d7 cf       	rjmp	.-82     	; 0x10fa <malloc+0x1e>
    114c:	21 15       	cp	r18, r1
    114e:	31 05       	cpc	r19, r1
    1150:	f9 f0       	breq	.+62     	; 0x1190 <malloc+0xb4>
    1152:	28 1b       	sub	r18, r24
    1154:	39 0b       	sbc	r19, r25
    1156:	24 30       	cpi	r18, 0x04	; 4
    1158:	31 05       	cpc	r19, r1
    115a:	80 f4       	brcc	.+32     	; 0x117c <malloc+0xa0>
    115c:	8a 81       	ldd	r24, Y+2	; 0x02
    115e:	9b 81       	ldd	r25, Y+3	; 0x03
    1160:	61 15       	cp	r22, r1
    1162:	71 05       	cpc	r23, r1
    1164:	21 f0       	breq	.+8      	; 0x116e <malloc+0x92>
    1166:	fb 01       	movw	r30, r22
    1168:	93 83       	std	Z+3, r25	; 0x03
    116a:	82 83       	std	Z+2, r24	; 0x02
    116c:	04 c0       	rjmp	.+8      	; 0x1176 <malloc+0x9a>
    116e:	90 93 8b 04 	sts	0x048B, r25
    1172:	80 93 8a 04 	sts	0x048A, r24
    1176:	fe 01       	movw	r30, r28
    1178:	32 96       	adiw	r30, 0x02	; 2
    117a:	44 c0       	rjmp	.+136    	; 0x1204 <malloc+0x128>
    117c:	fe 01       	movw	r30, r28
    117e:	e2 0f       	add	r30, r18
    1180:	f3 1f       	adc	r31, r19
    1182:	81 93       	st	Z+, r24
    1184:	91 93       	st	Z+, r25
    1186:	22 50       	subi	r18, 0x02	; 2
    1188:	31 09       	sbc	r19, r1
    118a:	39 83       	std	Y+1, r19	; 0x01
    118c:	28 83       	st	Y, r18
    118e:	3a c0       	rjmp	.+116    	; 0x1204 <malloc+0x128>
    1190:	20 91 88 04 	lds	r18, 0x0488
    1194:	30 91 89 04 	lds	r19, 0x0489
    1198:	23 2b       	or	r18, r19
    119a:	41 f4       	brne	.+16     	; 0x11ac <malloc+0xd0>
    119c:	20 91 02 01 	lds	r18, 0x0102
    11a0:	30 91 03 01 	lds	r19, 0x0103
    11a4:	30 93 89 04 	sts	0x0489, r19
    11a8:	20 93 88 04 	sts	0x0488, r18
    11ac:	20 91 00 01 	lds	r18, 0x0100
    11b0:	30 91 01 01 	lds	r19, 0x0101
    11b4:	21 15       	cp	r18, r1
    11b6:	31 05       	cpc	r19, r1
    11b8:	41 f4       	brne	.+16     	; 0x11ca <malloc+0xee>
    11ba:	2d b7       	in	r18, 0x3d	; 61
    11bc:	3e b7       	in	r19, 0x3e	; 62
    11be:	40 91 04 01 	lds	r20, 0x0104
    11c2:	50 91 05 01 	lds	r21, 0x0105
    11c6:	24 1b       	sub	r18, r20
    11c8:	35 0b       	sbc	r19, r21
    11ca:	e0 91 88 04 	lds	r30, 0x0488
    11ce:	f0 91 89 04 	lds	r31, 0x0489
    11d2:	e2 17       	cp	r30, r18
    11d4:	f3 07       	cpc	r31, r19
    11d6:	a0 f4       	brcc	.+40     	; 0x1200 <malloc+0x124>
    11d8:	2e 1b       	sub	r18, r30
    11da:	3f 0b       	sbc	r19, r31
    11dc:	28 17       	cp	r18, r24
    11de:	39 07       	cpc	r19, r25
    11e0:	78 f0       	brcs	.+30     	; 0x1200 <malloc+0x124>
    11e2:	ac 01       	movw	r20, r24
    11e4:	4e 5f       	subi	r20, 0xFE	; 254
    11e6:	5f 4f       	sbci	r21, 0xFF	; 255
    11e8:	24 17       	cp	r18, r20
    11ea:	35 07       	cpc	r19, r21
    11ec:	48 f0       	brcs	.+18     	; 0x1200 <malloc+0x124>
    11ee:	4e 0f       	add	r20, r30
    11f0:	5f 1f       	adc	r21, r31
    11f2:	50 93 89 04 	sts	0x0489, r21
    11f6:	40 93 88 04 	sts	0x0488, r20
    11fa:	81 93       	st	Z+, r24
    11fc:	91 93       	st	Z+, r25
    11fe:	02 c0       	rjmp	.+4      	; 0x1204 <malloc+0x128>
    1200:	e0 e0       	ldi	r30, 0x00	; 0
    1202:	f0 e0       	ldi	r31, 0x00	; 0
    1204:	cf 01       	movw	r24, r30
    1206:	df 91       	pop	r29
    1208:	cf 91       	pop	r28
    120a:	08 95       	ret

0000120c <free>:
    120c:	cf 93       	push	r28
    120e:	df 93       	push	r29
    1210:	00 97       	sbiw	r24, 0x00	; 0
    1212:	09 f4       	brne	.+2      	; 0x1216 <free+0xa>
    1214:	87 c0       	rjmp	.+270    	; 0x1324 <free+0x118>
    1216:	fc 01       	movw	r30, r24
    1218:	32 97       	sbiw	r30, 0x02	; 2
    121a:	13 82       	std	Z+3, r1	; 0x03
    121c:	12 82       	std	Z+2, r1	; 0x02
    121e:	c0 91 8a 04 	lds	r28, 0x048A
    1222:	d0 91 8b 04 	lds	r29, 0x048B
    1226:	20 97       	sbiw	r28, 0x00	; 0
    1228:	81 f4       	brne	.+32     	; 0x124a <free+0x3e>
    122a:	20 81       	ld	r18, Z
    122c:	31 81       	ldd	r19, Z+1	; 0x01
    122e:	28 0f       	add	r18, r24
    1230:	39 1f       	adc	r19, r25
    1232:	80 91 88 04 	lds	r24, 0x0488
    1236:	90 91 89 04 	lds	r25, 0x0489
    123a:	82 17       	cp	r24, r18
    123c:	93 07       	cpc	r25, r19
    123e:	79 f5       	brne	.+94     	; 0x129e <free+0x92>
    1240:	f0 93 89 04 	sts	0x0489, r31
    1244:	e0 93 88 04 	sts	0x0488, r30
    1248:	6d c0       	rjmp	.+218    	; 0x1324 <free+0x118>
    124a:	de 01       	movw	r26, r28
    124c:	20 e0       	ldi	r18, 0x00	; 0
    124e:	30 e0       	ldi	r19, 0x00	; 0
    1250:	ae 17       	cp	r26, r30
    1252:	bf 07       	cpc	r27, r31
    1254:	50 f4       	brcc	.+20     	; 0x126a <free+0x5e>
    1256:	12 96       	adiw	r26, 0x02	; 2
    1258:	4d 91       	ld	r20, X+
    125a:	5c 91       	ld	r21, X
    125c:	13 97       	sbiw	r26, 0x03	; 3
    125e:	9d 01       	movw	r18, r26
    1260:	41 15       	cp	r20, r1
    1262:	51 05       	cpc	r21, r1
    1264:	09 f1       	breq	.+66     	; 0x12a8 <free+0x9c>
    1266:	da 01       	movw	r26, r20
    1268:	f3 cf       	rjmp	.-26     	; 0x1250 <free+0x44>
    126a:	b3 83       	std	Z+3, r27	; 0x03
    126c:	a2 83       	std	Z+2, r26	; 0x02
    126e:	40 81       	ld	r20, Z
    1270:	51 81       	ldd	r21, Z+1	; 0x01
    1272:	84 0f       	add	r24, r20
    1274:	95 1f       	adc	r25, r21
    1276:	8a 17       	cp	r24, r26
    1278:	9b 07       	cpc	r25, r27
    127a:	71 f4       	brne	.+28     	; 0x1298 <free+0x8c>
    127c:	8d 91       	ld	r24, X+
    127e:	9c 91       	ld	r25, X
    1280:	11 97       	sbiw	r26, 0x01	; 1
    1282:	84 0f       	add	r24, r20
    1284:	95 1f       	adc	r25, r21
    1286:	02 96       	adiw	r24, 0x02	; 2
    1288:	91 83       	std	Z+1, r25	; 0x01
    128a:	80 83       	st	Z, r24
    128c:	12 96       	adiw	r26, 0x02	; 2
    128e:	8d 91       	ld	r24, X+
    1290:	9c 91       	ld	r25, X
    1292:	13 97       	sbiw	r26, 0x03	; 3
    1294:	93 83       	std	Z+3, r25	; 0x03
    1296:	82 83       	std	Z+2, r24	; 0x02
    1298:	21 15       	cp	r18, r1
    129a:	31 05       	cpc	r19, r1
    129c:	29 f4       	brne	.+10     	; 0x12a8 <free+0x9c>
    129e:	f0 93 8b 04 	sts	0x048B, r31
    12a2:	e0 93 8a 04 	sts	0x048A, r30
    12a6:	3e c0       	rjmp	.+124    	; 0x1324 <free+0x118>
    12a8:	d9 01       	movw	r26, r18
    12aa:	13 96       	adiw	r26, 0x03	; 3
    12ac:	fc 93       	st	X, r31
    12ae:	ee 93       	st	-X, r30
    12b0:	12 97       	sbiw	r26, 0x02	; 2
    12b2:	4d 91       	ld	r20, X+
    12b4:	5d 91       	ld	r21, X+
    12b6:	a4 0f       	add	r26, r20
    12b8:	b5 1f       	adc	r27, r21
    12ba:	ea 17       	cp	r30, r26
    12bc:	fb 07       	cpc	r31, r27
    12be:	79 f4       	brne	.+30     	; 0x12de <free+0xd2>
    12c0:	80 81       	ld	r24, Z
    12c2:	91 81       	ldd	r25, Z+1	; 0x01
    12c4:	84 0f       	add	r24, r20
    12c6:	95 1f       	adc	r25, r21
    12c8:	02 96       	adiw	r24, 0x02	; 2
    12ca:	d9 01       	movw	r26, r18
    12cc:	11 96       	adiw	r26, 0x01	; 1
    12ce:	9c 93       	st	X, r25
    12d0:	8e 93       	st	-X, r24
    12d2:	82 81       	ldd	r24, Z+2	; 0x02
    12d4:	93 81       	ldd	r25, Z+3	; 0x03
    12d6:	13 96       	adiw	r26, 0x03	; 3
    12d8:	9c 93       	st	X, r25
    12da:	8e 93       	st	-X, r24
    12dc:	12 97       	sbiw	r26, 0x02	; 2
    12de:	e0 e0       	ldi	r30, 0x00	; 0
    12e0:	f0 e0       	ldi	r31, 0x00	; 0
    12e2:	8a 81       	ldd	r24, Y+2	; 0x02
    12e4:	9b 81       	ldd	r25, Y+3	; 0x03
    12e6:	00 97       	sbiw	r24, 0x00	; 0
    12e8:	19 f0       	breq	.+6      	; 0x12f0 <free+0xe4>
    12ea:	fe 01       	movw	r30, r28
    12ec:	ec 01       	movw	r28, r24
    12ee:	f9 cf       	rjmp	.-14     	; 0x12e2 <free+0xd6>
    12f0:	ce 01       	movw	r24, r28
    12f2:	02 96       	adiw	r24, 0x02	; 2
    12f4:	28 81       	ld	r18, Y
    12f6:	39 81       	ldd	r19, Y+1	; 0x01
    12f8:	82 0f       	add	r24, r18
    12fa:	93 1f       	adc	r25, r19
    12fc:	20 91 88 04 	lds	r18, 0x0488
    1300:	30 91 89 04 	lds	r19, 0x0489
    1304:	28 17       	cp	r18, r24
    1306:	39 07       	cpc	r19, r25
    1308:	69 f4       	brne	.+26     	; 0x1324 <free+0x118>
    130a:	30 97       	sbiw	r30, 0x00	; 0
    130c:	29 f4       	brne	.+10     	; 0x1318 <free+0x10c>
    130e:	10 92 8b 04 	sts	0x048B, r1
    1312:	10 92 8a 04 	sts	0x048A, r1
    1316:	02 c0       	rjmp	.+4      	; 0x131c <free+0x110>
    1318:	13 82       	std	Z+3, r1	; 0x03
    131a:	12 82       	std	Z+2, r1	; 0x02
    131c:	d0 93 89 04 	sts	0x0489, r29
    1320:	c0 93 88 04 	sts	0x0488, r28
    1324:	df 91       	pop	r29
    1326:	cf 91       	pop	r28
    1328:	08 95       	ret

0000132a <do_rand>:
    132a:	8f 92       	push	r8
    132c:	9f 92       	push	r9
    132e:	af 92       	push	r10
    1330:	bf 92       	push	r11
    1332:	cf 92       	push	r12
    1334:	df 92       	push	r13
    1336:	ef 92       	push	r14
    1338:	ff 92       	push	r15
    133a:	cf 93       	push	r28
    133c:	df 93       	push	r29
    133e:	ec 01       	movw	r28, r24
    1340:	68 81       	ld	r22, Y
    1342:	79 81       	ldd	r23, Y+1	; 0x01
    1344:	8a 81       	ldd	r24, Y+2	; 0x02
    1346:	9b 81       	ldd	r25, Y+3	; 0x03
    1348:	61 15       	cp	r22, r1
    134a:	71 05       	cpc	r23, r1
    134c:	81 05       	cpc	r24, r1
    134e:	91 05       	cpc	r25, r1
    1350:	21 f4       	brne	.+8      	; 0x135a <do_rand+0x30>
    1352:	64 e2       	ldi	r22, 0x24	; 36
    1354:	79 ed       	ldi	r23, 0xD9	; 217
    1356:	8b e5       	ldi	r24, 0x5B	; 91
    1358:	97 e0       	ldi	r25, 0x07	; 7
    135a:	2d e1       	ldi	r18, 0x1D	; 29
    135c:	33 ef       	ldi	r19, 0xF3	; 243
    135e:	41 e0       	ldi	r20, 0x01	; 1
    1360:	50 e0       	ldi	r21, 0x00	; 0
    1362:	0e 94 ac 0c 	call	0x1958	; 0x1958 <__divmodsi4>
    1366:	49 01       	movw	r8, r18
    1368:	5a 01       	movw	r10, r20
    136a:	9b 01       	movw	r18, r22
    136c:	ac 01       	movw	r20, r24
    136e:	a7 ea       	ldi	r26, 0xA7	; 167
    1370:	b1 e4       	ldi	r27, 0x41	; 65
    1372:	0e 94 cb 0c 	call	0x1996	; 0x1996 <__muluhisi3>
    1376:	6b 01       	movw	r12, r22
    1378:	7c 01       	movw	r14, r24
    137a:	ac ee       	ldi	r26, 0xEC	; 236
    137c:	b4 ef       	ldi	r27, 0xF4	; 244
    137e:	a5 01       	movw	r20, r10
    1380:	94 01       	movw	r18, r8
    1382:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__mulohisi3>
    1386:	c6 0e       	add	r12, r22
    1388:	d7 1e       	adc	r13, r23
    138a:	e8 1e       	adc	r14, r24
    138c:	f9 1e       	adc	r15, r25
    138e:	f7 fe       	sbrs	r15, 7
    1390:	06 c0       	rjmp	.+12     	; 0x139e <do_rand+0x74>
    1392:	81 e0       	ldi	r24, 0x01	; 1
    1394:	c8 1a       	sub	r12, r24
    1396:	d1 08       	sbc	r13, r1
    1398:	e1 08       	sbc	r14, r1
    139a:	80 e8       	ldi	r24, 0x80	; 128
    139c:	f8 0a       	sbc	r15, r24
    139e:	c8 82       	st	Y, r12
    13a0:	d9 82       	std	Y+1, r13	; 0x01
    13a2:	ea 82       	std	Y+2, r14	; 0x02
    13a4:	fb 82       	std	Y+3, r15	; 0x03
    13a6:	c6 01       	movw	r24, r12
    13a8:	9f 77       	andi	r25, 0x7F	; 127
    13aa:	df 91       	pop	r29
    13ac:	cf 91       	pop	r28
    13ae:	ff 90       	pop	r15
    13b0:	ef 90       	pop	r14
    13b2:	df 90       	pop	r13
    13b4:	cf 90       	pop	r12
    13b6:	bf 90       	pop	r11
    13b8:	af 90       	pop	r10
    13ba:	9f 90       	pop	r9
    13bc:	8f 90       	pop	r8
    13be:	08 95       	ret

000013c0 <rand_r>:
    13c0:	0e 94 95 09 	call	0x132a	; 0x132a <do_rand>
    13c4:	08 95       	ret

000013c6 <rand>:
    13c6:	86 e0       	ldi	r24, 0x06	; 6
    13c8:	91 e0       	ldi	r25, 0x01	; 1
    13ca:	0e 94 95 09 	call	0x132a	; 0x132a <do_rand>
    13ce:	08 95       	ret

000013d0 <srand>:
    13d0:	a0 e0       	ldi	r26, 0x00	; 0
    13d2:	b0 e0       	ldi	r27, 0x00	; 0
    13d4:	80 93 06 01 	sts	0x0106, r24
    13d8:	90 93 07 01 	sts	0x0107, r25
    13dc:	a0 93 08 01 	sts	0x0108, r26
    13e0:	b0 93 09 01 	sts	0x0109, r27
    13e4:	08 95       	ret

000013e6 <printf>:
    13e6:	a0 e0       	ldi	r26, 0x00	; 0
    13e8:	b0 e0       	ldi	r27, 0x00	; 0
    13ea:	e9 ef       	ldi	r30, 0xF9	; 249
    13ec:	f9 e0       	ldi	r31, 0x09	; 9
    13ee:	0c 94 ee 0c 	jmp	0x19dc	; 0x19dc <__prologue_saves__+0x20>
    13f2:	fe 01       	movw	r30, r28
    13f4:	35 96       	adiw	r30, 0x05	; 5
    13f6:	61 91       	ld	r22, Z+
    13f8:	71 91       	ld	r23, Z+
    13fa:	af 01       	movw	r20, r30
    13fc:	80 91 8e 04 	lds	r24, 0x048E
    1400:	90 91 8f 04 	lds	r25, 0x048F
    1404:	0e 94 34 0a 	call	0x1468	; 0x1468 <vfprintf>
    1408:	e2 e0       	ldi	r30, 0x02	; 2
    140a:	0c 94 0a 0d 	jmp	0x1a14	; 0x1a14 <__epilogue_restores__+0x20>

0000140e <puts>:
    140e:	0f 93       	push	r16
    1410:	1f 93       	push	r17
    1412:	cf 93       	push	r28
    1414:	df 93       	push	r29
    1416:	e0 91 8e 04 	lds	r30, 0x048E
    141a:	f0 91 8f 04 	lds	r31, 0x048F
    141e:	23 81       	ldd	r18, Z+3	; 0x03
    1420:	21 ff       	sbrs	r18, 1
    1422:	1b c0       	rjmp	.+54     	; 0x145a <puts+0x4c>
    1424:	ec 01       	movw	r28, r24
    1426:	00 e0       	ldi	r16, 0x00	; 0
    1428:	10 e0       	ldi	r17, 0x00	; 0
    142a:	89 91       	ld	r24, Y+
    142c:	60 91 8e 04 	lds	r22, 0x048E
    1430:	70 91 8f 04 	lds	r23, 0x048F
    1434:	db 01       	movw	r26, r22
    1436:	18 96       	adiw	r26, 0x08	; 8
    1438:	ed 91       	ld	r30, X+
    143a:	fc 91       	ld	r31, X
    143c:	19 97       	sbiw	r26, 0x09	; 9
    143e:	88 23       	and	r24, r24
    1440:	31 f0       	breq	.+12     	; 0x144e <puts+0x40>
    1442:	09 95       	icall
    1444:	89 2b       	or	r24, r25
    1446:	89 f3       	breq	.-30     	; 0x142a <puts+0x1c>
    1448:	0f ef       	ldi	r16, 0xFF	; 255
    144a:	1f ef       	ldi	r17, 0xFF	; 255
    144c:	ee cf       	rjmp	.-36     	; 0x142a <puts+0x1c>
    144e:	8a e0       	ldi	r24, 0x0A	; 10
    1450:	09 95       	icall
    1452:	89 2b       	or	r24, r25
    1454:	11 f4       	brne	.+4      	; 0x145a <puts+0x4c>
    1456:	c8 01       	movw	r24, r16
    1458:	02 c0       	rjmp	.+4      	; 0x145e <puts+0x50>
    145a:	8f ef       	ldi	r24, 0xFF	; 255
    145c:	9f ef       	ldi	r25, 0xFF	; 255
    145e:	df 91       	pop	r29
    1460:	cf 91       	pop	r28
    1462:	1f 91       	pop	r17
    1464:	0f 91       	pop	r16
    1466:	08 95       	ret

00001468 <vfprintf>:
    1468:	ac e0       	ldi	r26, 0x0C	; 12
    146a:	b0 e0       	ldi	r27, 0x00	; 0
    146c:	ea e3       	ldi	r30, 0x3A	; 58
    146e:	fa e0       	ldi	r31, 0x0A	; 10
    1470:	0c 94 de 0c 	jmp	0x19bc	; 0x19bc <__prologue_saves__>
    1474:	7c 01       	movw	r14, r24
    1476:	6b 01       	movw	r12, r22
    1478:	8a 01       	movw	r16, r20
    147a:	fc 01       	movw	r30, r24
    147c:	17 82       	std	Z+7, r1	; 0x07
    147e:	16 82       	std	Z+6, r1	; 0x06
    1480:	83 81       	ldd	r24, Z+3	; 0x03
    1482:	81 ff       	sbrs	r24, 1
    1484:	bd c1       	rjmp	.+890    	; 0x1800 <vfprintf+0x398>
    1486:	ce 01       	movw	r24, r28
    1488:	01 96       	adiw	r24, 0x01	; 1
    148a:	4c 01       	movw	r8, r24
    148c:	f7 01       	movw	r30, r14
    148e:	93 81       	ldd	r25, Z+3	; 0x03
    1490:	f6 01       	movw	r30, r12
    1492:	93 fd       	sbrc	r25, 3
    1494:	85 91       	lpm	r24, Z+
    1496:	93 ff       	sbrs	r25, 3
    1498:	81 91       	ld	r24, Z+
    149a:	6f 01       	movw	r12, r30
    149c:	88 23       	and	r24, r24
    149e:	09 f4       	brne	.+2      	; 0x14a2 <vfprintf+0x3a>
    14a0:	ab c1       	rjmp	.+854    	; 0x17f8 <vfprintf+0x390>
    14a2:	85 32       	cpi	r24, 0x25	; 37
    14a4:	39 f4       	brne	.+14     	; 0x14b4 <vfprintf+0x4c>
    14a6:	93 fd       	sbrc	r25, 3
    14a8:	85 91       	lpm	r24, Z+
    14aa:	93 ff       	sbrs	r25, 3
    14ac:	81 91       	ld	r24, Z+
    14ae:	6f 01       	movw	r12, r30
    14b0:	85 32       	cpi	r24, 0x25	; 37
    14b2:	29 f4       	brne	.+10     	; 0x14be <vfprintf+0x56>
    14b4:	b7 01       	movw	r22, r14
    14b6:	90 e0       	ldi	r25, 0x00	; 0
    14b8:	0e 94 1c 0c 	call	0x1838	; 0x1838 <fputc>
    14bc:	e7 cf       	rjmp	.-50     	; 0x148c <vfprintf+0x24>
    14be:	51 2c       	mov	r5, r1
    14c0:	31 2c       	mov	r3, r1
    14c2:	20 e0       	ldi	r18, 0x00	; 0
    14c4:	20 32       	cpi	r18, 0x20	; 32
    14c6:	a0 f4       	brcc	.+40     	; 0x14f0 <vfprintf+0x88>
    14c8:	8b 32       	cpi	r24, 0x2B	; 43
    14ca:	69 f0       	breq	.+26     	; 0x14e6 <vfprintf+0x7e>
    14cc:	30 f4       	brcc	.+12     	; 0x14da <vfprintf+0x72>
    14ce:	80 32       	cpi	r24, 0x20	; 32
    14d0:	59 f0       	breq	.+22     	; 0x14e8 <vfprintf+0x80>
    14d2:	83 32       	cpi	r24, 0x23	; 35
    14d4:	69 f4       	brne	.+26     	; 0x14f0 <vfprintf+0x88>
    14d6:	20 61       	ori	r18, 0x10	; 16
    14d8:	2c c0       	rjmp	.+88     	; 0x1532 <vfprintf+0xca>
    14da:	8d 32       	cpi	r24, 0x2D	; 45
    14dc:	39 f0       	breq	.+14     	; 0x14ec <vfprintf+0x84>
    14de:	80 33       	cpi	r24, 0x30	; 48
    14e0:	39 f4       	brne	.+14     	; 0x14f0 <vfprintf+0x88>
    14e2:	21 60       	ori	r18, 0x01	; 1
    14e4:	26 c0       	rjmp	.+76     	; 0x1532 <vfprintf+0xca>
    14e6:	22 60       	ori	r18, 0x02	; 2
    14e8:	24 60       	ori	r18, 0x04	; 4
    14ea:	23 c0       	rjmp	.+70     	; 0x1532 <vfprintf+0xca>
    14ec:	28 60       	ori	r18, 0x08	; 8
    14ee:	21 c0       	rjmp	.+66     	; 0x1532 <vfprintf+0xca>
    14f0:	27 fd       	sbrc	r18, 7
    14f2:	27 c0       	rjmp	.+78     	; 0x1542 <vfprintf+0xda>
    14f4:	30 ed       	ldi	r19, 0xD0	; 208
    14f6:	38 0f       	add	r19, r24
    14f8:	3a 30       	cpi	r19, 0x0A	; 10
    14fa:	78 f4       	brcc	.+30     	; 0x151a <vfprintf+0xb2>
    14fc:	26 ff       	sbrs	r18, 6
    14fe:	06 c0       	rjmp	.+12     	; 0x150c <vfprintf+0xa4>
    1500:	fa e0       	ldi	r31, 0x0A	; 10
    1502:	5f 9e       	mul	r5, r31
    1504:	30 0d       	add	r19, r0
    1506:	11 24       	eor	r1, r1
    1508:	53 2e       	mov	r5, r19
    150a:	13 c0       	rjmp	.+38     	; 0x1532 <vfprintf+0xca>
    150c:	8a e0       	ldi	r24, 0x0A	; 10
    150e:	38 9e       	mul	r3, r24
    1510:	30 0d       	add	r19, r0
    1512:	11 24       	eor	r1, r1
    1514:	33 2e       	mov	r3, r19
    1516:	20 62       	ori	r18, 0x20	; 32
    1518:	0c c0       	rjmp	.+24     	; 0x1532 <vfprintf+0xca>
    151a:	8e 32       	cpi	r24, 0x2E	; 46
    151c:	21 f4       	brne	.+8      	; 0x1526 <vfprintf+0xbe>
    151e:	26 fd       	sbrc	r18, 6
    1520:	6b c1       	rjmp	.+726    	; 0x17f8 <vfprintf+0x390>
    1522:	20 64       	ori	r18, 0x40	; 64
    1524:	06 c0       	rjmp	.+12     	; 0x1532 <vfprintf+0xca>
    1526:	8c 36       	cpi	r24, 0x6C	; 108
    1528:	11 f4       	brne	.+4      	; 0x152e <vfprintf+0xc6>
    152a:	20 68       	ori	r18, 0x80	; 128
    152c:	02 c0       	rjmp	.+4      	; 0x1532 <vfprintf+0xca>
    152e:	88 36       	cpi	r24, 0x68	; 104
    1530:	41 f4       	brne	.+16     	; 0x1542 <vfprintf+0xda>
    1532:	f6 01       	movw	r30, r12
    1534:	93 fd       	sbrc	r25, 3
    1536:	85 91       	lpm	r24, Z+
    1538:	93 ff       	sbrs	r25, 3
    153a:	81 91       	ld	r24, Z+
    153c:	6f 01       	movw	r12, r30
    153e:	81 11       	cpse	r24, r1
    1540:	c1 cf       	rjmp	.-126    	; 0x14c4 <vfprintf+0x5c>
    1542:	98 2f       	mov	r25, r24
    1544:	9f 7d       	andi	r25, 0xDF	; 223
    1546:	95 54       	subi	r25, 0x45	; 69
    1548:	93 30       	cpi	r25, 0x03	; 3
    154a:	28 f4       	brcc	.+10     	; 0x1556 <vfprintf+0xee>
    154c:	0c 5f       	subi	r16, 0xFC	; 252
    154e:	1f 4f       	sbci	r17, 0xFF	; 255
    1550:	ff e3       	ldi	r31, 0x3F	; 63
    1552:	f9 83       	std	Y+1, r31	; 0x01
    1554:	0d c0       	rjmp	.+26     	; 0x1570 <vfprintf+0x108>
    1556:	83 36       	cpi	r24, 0x63	; 99
    1558:	31 f0       	breq	.+12     	; 0x1566 <vfprintf+0xfe>
    155a:	83 37       	cpi	r24, 0x73	; 115
    155c:	71 f0       	breq	.+28     	; 0x157a <vfprintf+0x112>
    155e:	83 35       	cpi	r24, 0x53	; 83
    1560:	09 f0       	breq	.+2      	; 0x1564 <vfprintf+0xfc>
    1562:	5b c0       	rjmp	.+182    	; 0x161a <vfprintf+0x1b2>
    1564:	22 c0       	rjmp	.+68     	; 0x15aa <vfprintf+0x142>
    1566:	f8 01       	movw	r30, r16
    1568:	80 81       	ld	r24, Z
    156a:	89 83       	std	Y+1, r24	; 0x01
    156c:	0e 5f       	subi	r16, 0xFE	; 254
    156e:	1f 4f       	sbci	r17, 0xFF	; 255
    1570:	44 24       	eor	r4, r4
    1572:	43 94       	inc	r4
    1574:	51 2c       	mov	r5, r1
    1576:	54 01       	movw	r10, r8
    1578:	15 c0       	rjmp	.+42     	; 0x15a4 <vfprintf+0x13c>
    157a:	38 01       	movw	r6, r16
    157c:	f2 e0       	ldi	r31, 0x02	; 2
    157e:	6f 0e       	add	r6, r31
    1580:	71 1c       	adc	r7, r1
    1582:	f8 01       	movw	r30, r16
    1584:	a0 80       	ld	r10, Z
    1586:	b1 80       	ldd	r11, Z+1	; 0x01
    1588:	26 ff       	sbrs	r18, 6
    158a:	03 c0       	rjmp	.+6      	; 0x1592 <vfprintf+0x12a>
    158c:	65 2d       	mov	r22, r5
    158e:	70 e0       	ldi	r23, 0x00	; 0
    1590:	02 c0       	rjmp	.+4      	; 0x1596 <vfprintf+0x12e>
    1592:	6f ef       	ldi	r22, 0xFF	; 255
    1594:	7f ef       	ldi	r23, 0xFF	; 255
    1596:	c5 01       	movw	r24, r10
    1598:	2c 87       	std	Y+12, r18	; 0x0c
    159a:	0e 94 11 0c 	call	0x1822	; 0x1822 <strnlen>
    159e:	2c 01       	movw	r4, r24
    15a0:	83 01       	movw	r16, r6
    15a2:	2c 85       	ldd	r18, Y+12	; 0x0c
    15a4:	2f 77       	andi	r18, 0x7F	; 127
    15a6:	22 2e       	mov	r2, r18
    15a8:	17 c0       	rjmp	.+46     	; 0x15d8 <vfprintf+0x170>
    15aa:	38 01       	movw	r6, r16
    15ac:	f2 e0       	ldi	r31, 0x02	; 2
    15ae:	6f 0e       	add	r6, r31
    15b0:	71 1c       	adc	r7, r1
    15b2:	f8 01       	movw	r30, r16
    15b4:	a0 80       	ld	r10, Z
    15b6:	b1 80       	ldd	r11, Z+1	; 0x01
    15b8:	26 ff       	sbrs	r18, 6
    15ba:	03 c0       	rjmp	.+6      	; 0x15c2 <vfprintf+0x15a>
    15bc:	65 2d       	mov	r22, r5
    15be:	70 e0       	ldi	r23, 0x00	; 0
    15c0:	02 c0       	rjmp	.+4      	; 0x15c6 <vfprintf+0x15e>
    15c2:	6f ef       	ldi	r22, 0xFF	; 255
    15c4:	7f ef       	ldi	r23, 0xFF	; 255
    15c6:	c5 01       	movw	r24, r10
    15c8:	2c 87       	std	Y+12, r18	; 0x0c
    15ca:	0e 94 06 0c 	call	0x180c	; 0x180c <strnlen_P>
    15ce:	2c 01       	movw	r4, r24
    15d0:	2c 85       	ldd	r18, Y+12	; 0x0c
    15d2:	20 68       	ori	r18, 0x80	; 128
    15d4:	22 2e       	mov	r2, r18
    15d6:	83 01       	movw	r16, r6
    15d8:	23 fc       	sbrc	r2, 3
    15da:	1b c0       	rjmp	.+54     	; 0x1612 <vfprintf+0x1aa>
    15dc:	83 2d       	mov	r24, r3
    15de:	90 e0       	ldi	r25, 0x00	; 0
    15e0:	48 16       	cp	r4, r24
    15e2:	59 06       	cpc	r5, r25
    15e4:	b0 f4       	brcc	.+44     	; 0x1612 <vfprintf+0x1aa>
    15e6:	b7 01       	movw	r22, r14
    15e8:	80 e2       	ldi	r24, 0x20	; 32
    15ea:	90 e0       	ldi	r25, 0x00	; 0
    15ec:	0e 94 1c 0c 	call	0x1838	; 0x1838 <fputc>
    15f0:	3a 94       	dec	r3
    15f2:	f4 cf       	rjmp	.-24     	; 0x15dc <vfprintf+0x174>
    15f4:	f5 01       	movw	r30, r10
    15f6:	27 fc       	sbrc	r2, 7
    15f8:	85 91       	lpm	r24, Z+
    15fa:	27 fe       	sbrs	r2, 7
    15fc:	81 91       	ld	r24, Z+
    15fe:	5f 01       	movw	r10, r30
    1600:	b7 01       	movw	r22, r14
    1602:	90 e0       	ldi	r25, 0x00	; 0
    1604:	0e 94 1c 0c 	call	0x1838	; 0x1838 <fputc>
    1608:	31 10       	cpse	r3, r1
    160a:	3a 94       	dec	r3
    160c:	f1 e0       	ldi	r31, 0x01	; 1
    160e:	4f 1a       	sub	r4, r31
    1610:	51 08       	sbc	r5, r1
    1612:	41 14       	cp	r4, r1
    1614:	51 04       	cpc	r5, r1
    1616:	71 f7       	brne	.-36     	; 0x15f4 <vfprintf+0x18c>
    1618:	e5 c0       	rjmp	.+458    	; 0x17e4 <vfprintf+0x37c>
    161a:	84 36       	cpi	r24, 0x64	; 100
    161c:	11 f0       	breq	.+4      	; 0x1622 <vfprintf+0x1ba>
    161e:	89 36       	cpi	r24, 0x69	; 105
    1620:	39 f5       	brne	.+78     	; 0x1670 <vfprintf+0x208>
    1622:	f8 01       	movw	r30, r16
    1624:	27 ff       	sbrs	r18, 7
    1626:	07 c0       	rjmp	.+14     	; 0x1636 <vfprintf+0x1ce>
    1628:	60 81       	ld	r22, Z
    162a:	71 81       	ldd	r23, Z+1	; 0x01
    162c:	82 81       	ldd	r24, Z+2	; 0x02
    162e:	93 81       	ldd	r25, Z+3	; 0x03
    1630:	0c 5f       	subi	r16, 0xFC	; 252
    1632:	1f 4f       	sbci	r17, 0xFF	; 255
    1634:	08 c0       	rjmp	.+16     	; 0x1646 <vfprintf+0x1de>
    1636:	60 81       	ld	r22, Z
    1638:	71 81       	ldd	r23, Z+1	; 0x01
    163a:	88 27       	eor	r24, r24
    163c:	77 fd       	sbrc	r23, 7
    163e:	80 95       	com	r24
    1640:	98 2f       	mov	r25, r24
    1642:	0e 5f       	subi	r16, 0xFE	; 254
    1644:	1f 4f       	sbci	r17, 0xFF	; 255
    1646:	2f 76       	andi	r18, 0x6F	; 111
    1648:	b2 2e       	mov	r11, r18
    164a:	97 ff       	sbrs	r25, 7
    164c:	09 c0       	rjmp	.+18     	; 0x1660 <vfprintf+0x1f8>
    164e:	90 95       	com	r25
    1650:	80 95       	com	r24
    1652:	70 95       	com	r23
    1654:	61 95       	neg	r22
    1656:	7f 4f       	sbci	r23, 0xFF	; 255
    1658:	8f 4f       	sbci	r24, 0xFF	; 255
    165a:	9f 4f       	sbci	r25, 0xFF	; 255
    165c:	20 68       	ori	r18, 0x80	; 128
    165e:	b2 2e       	mov	r11, r18
    1660:	2a e0       	ldi	r18, 0x0A	; 10
    1662:	30 e0       	ldi	r19, 0x00	; 0
    1664:	a4 01       	movw	r20, r8
    1666:	0e 94 4e 0c 	call	0x189c	; 0x189c <__ultoa_invert>
    166a:	a8 2e       	mov	r10, r24
    166c:	a8 18       	sub	r10, r8
    166e:	44 c0       	rjmp	.+136    	; 0x16f8 <vfprintf+0x290>
    1670:	85 37       	cpi	r24, 0x75	; 117
    1672:	29 f4       	brne	.+10     	; 0x167e <vfprintf+0x216>
    1674:	2f 7e       	andi	r18, 0xEF	; 239
    1676:	b2 2e       	mov	r11, r18
    1678:	2a e0       	ldi	r18, 0x0A	; 10
    167a:	30 e0       	ldi	r19, 0x00	; 0
    167c:	25 c0       	rjmp	.+74     	; 0x16c8 <vfprintf+0x260>
    167e:	f2 2f       	mov	r31, r18
    1680:	f9 7f       	andi	r31, 0xF9	; 249
    1682:	bf 2e       	mov	r11, r31
    1684:	8f 36       	cpi	r24, 0x6F	; 111
    1686:	c1 f0       	breq	.+48     	; 0x16b8 <vfprintf+0x250>
    1688:	18 f4       	brcc	.+6      	; 0x1690 <vfprintf+0x228>
    168a:	88 35       	cpi	r24, 0x58	; 88
    168c:	79 f0       	breq	.+30     	; 0x16ac <vfprintf+0x244>
    168e:	b4 c0       	rjmp	.+360    	; 0x17f8 <vfprintf+0x390>
    1690:	80 37       	cpi	r24, 0x70	; 112
    1692:	19 f0       	breq	.+6      	; 0x169a <vfprintf+0x232>
    1694:	88 37       	cpi	r24, 0x78	; 120
    1696:	21 f0       	breq	.+8      	; 0x16a0 <vfprintf+0x238>
    1698:	af c0       	rjmp	.+350    	; 0x17f8 <vfprintf+0x390>
    169a:	2f 2f       	mov	r18, r31
    169c:	20 61       	ori	r18, 0x10	; 16
    169e:	b2 2e       	mov	r11, r18
    16a0:	b4 fe       	sbrs	r11, 4
    16a2:	0d c0       	rjmp	.+26     	; 0x16be <vfprintf+0x256>
    16a4:	8b 2d       	mov	r24, r11
    16a6:	84 60       	ori	r24, 0x04	; 4
    16a8:	b8 2e       	mov	r11, r24
    16aa:	09 c0       	rjmp	.+18     	; 0x16be <vfprintf+0x256>
    16ac:	24 ff       	sbrs	r18, 4
    16ae:	0a c0       	rjmp	.+20     	; 0x16c4 <vfprintf+0x25c>
    16b0:	9f 2f       	mov	r25, r31
    16b2:	96 60       	ori	r25, 0x06	; 6
    16b4:	b9 2e       	mov	r11, r25
    16b6:	06 c0       	rjmp	.+12     	; 0x16c4 <vfprintf+0x25c>
    16b8:	28 e0       	ldi	r18, 0x08	; 8
    16ba:	30 e0       	ldi	r19, 0x00	; 0
    16bc:	05 c0       	rjmp	.+10     	; 0x16c8 <vfprintf+0x260>
    16be:	20 e1       	ldi	r18, 0x10	; 16
    16c0:	30 e0       	ldi	r19, 0x00	; 0
    16c2:	02 c0       	rjmp	.+4      	; 0x16c8 <vfprintf+0x260>
    16c4:	20 e1       	ldi	r18, 0x10	; 16
    16c6:	32 e0       	ldi	r19, 0x02	; 2
    16c8:	f8 01       	movw	r30, r16
    16ca:	b7 fe       	sbrs	r11, 7
    16cc:	07 c0       	rjmp	.+14     	; 0x16dc <vfprintf+0x274>
    16ce:	60 81       	ld	r22, Z
    16d0:	71 81       	ldd	r23, Z+1	; 0x01
    16d2:	82 81       	ldd	r24, Z+2	; 0x02
    16d4:	93 81       	ldd	r25, Z+3	; 0x03
    16d6:	0c 5f       	subi	r16, 0xFC	; 252
    16d8:	1f 4f       	sbci	r17, 0xFF	; 255
    16da:	06 c0       	rjmp	.+12     	; 0x16e8 <vfprintf+0x280>
    16dc:	60 81       	ld	r22, Z
    16de:	71 81       	ldd	r23, Z+1	; 0x01
    16e0:	80 e0       	ldi	r24, 0x00	; 0
    16e2:	90 e0       	ldi	r25, 0x00	; 0
    16e4:	0e 5f       	subi	r16, 0xFE	; 254
    16e6:	1f 4f       	sbci	r17, 0xFF	; 255
    16e8:	a4 01       	movw	r20, r8
    16ea:	0e 94 4e 0c 	call	0x189c	; 0x189c <__ultoa_invert>
    16ee:	a8 2e       	mov	r10, r24
    16f0:	a8 18       	sub	r10, r8
    16f2:	fb 2d       	mov	r31, r11
    16f4:	ff 77       	andi	r31, 0x7F	; 127
    16f6:	bf 2e       	mov	r11, r31
    16f8:	b6 fe       	sbrs	r11, 6
    16fa:	0b c0       	rjmp	.+22     	; 0x1712 <vfprintf+0x2aa>
    16fc:	2b 2d       	mov	r18, r11
    16fe:	2e 7f       	andi	r18, 0xFE	; 254
    1700:	a5 14       	cp	r10, r5
    1702:	50 f4       	brcc	.+20     	; 0x1718 <vfprintf+0x2b0>
    1704:	b4 fe       	sbrs	r11, 4
    1706:	0a c0       	rjmp	.+20     	; 0x171c <vfprintf+0x2b4>
    1708:	b2 fc       	sbrc	r11, 2
    170a:	08 c0       	rjmp	.+16     	; 0x171c <vfprintf+0x2b4>
    170c:	2b 2d       	mov	r18, r11
    170e:	2e 7e       	andi	r18, 0xEE	; 238
    1710:	05 c0       	rjmp	.+10     	; 0x171c <vfprintf+0x2b4>
    1712:	7a 2c       	mov	r7, r10
    1714:	2b 2d       	mov	r18, r11
    1716:	03 c0       	rjmp	.+6      	; 0x171e <vfprintf+0x2b6>
    1718:	7a 2c       	mov	r7, r10
    171a:	01 c0       	rjmp	.+2      	; 0x171e <vfprintf+0x2b6>
    171c:	75 2c       	mov	r7, r5
    171e:	24 ff       	sbrs	r18, 4
    1720:	0d c0       	rjmp	.+26     	; 0x173c <vfprintf+0x2d4>
    1722:	fe 01       	movw	r30, r28
    1724:	ea 0d       	add	r30, r10
    1726:	f1 1d       	adc	r31, r1
    1728:	80 81       	ld	r24, Z
    172a:	80 33       	cpi	r24, 0x30	; 48
    172c:	11 f4       	brne	.+4      	; 0x1732 <vfprintf+0x2ca>
    172e:	29 7e       	andi	r18, 0xE9	; 233
    1730:	09 c0       	rjmp	.+18     	; 0x1744 <vfprintf+0x2dc>
    1732:	22 ff       	sbrs	r18, 2
    1734:	06 c0       	rjmp	.+12     	; 0x1742 <vfprintf+0x2da>
    1736:	73 94       	inc	r7
    1738:	73 94       	inc	r7
    173a:	04 c0       	rjmp	.+8      	; 0x1744 <vfprintf+0x2dc>
    173c:	82 2f       	mov	r24, r18
    173e:	86 78       	andi	r24, 0x86	; 134
    1740:	09 f0       	breq	.+2      	; 0x1744 <vfprintf+0x2dc>
    1742:	73 94       	inc	r7
    1744:	23 fd       	sbrc	r18, 3
    1746:	13 c0       	rjmp	.+38     	; 0x176e <vfprintf+0x306>
    1748:	20 ff       	sbrs	r18, 0
    174a:	06 c0       	rjmp	.+12     	; 0x1758 <vfprintf+0x2f0>
    174c:	5a 2c       	mov	r5, r10
    174e:	73 14       	cp	r7, r3
    1750:	18 f4       	brcc	.+6      	; 0x1758 <vfprintf+0x2f0>
    1752:	53 0c       	add	r5, r3
    1754:	57 18       	sub	r5, r7
    1756:	73 2c       	mov	r7, r3
    1758:	73 14       	cp	r7, r3
    175a:	68 f4       	brcc	.+26     	; 0x1776 <vfprintf+0x30e>
    175c:	b7 01       	movw	r22, r14
    175e:	80 e2       	ldi	r24, 0x20	; 32
    1760:	90 e0       	ldi	r25, 0x00	; 0
    1762:	2c 87       	std	Y+12, r18	; 0x0c
    1764:	0e 94 1c 0c 	call	0x1838	; 0x1838 <fputc>
    1768:	73 94       	inc	r7
    176a:	2c 85       	ldd	r18, Y+12	; 0x0c
    176c:	f5 cf       	rjmp	.-22     	; 0x1758 <vfprintf+0x2f0>
    176e:	73 14       	cp	r7, r3
    1770:	10 f4       	brcc	.+4      	; 0x1776 <vfprintf+0x30e>
    1772:	37 18       	sub	r3, r7
    1774:	01 c0       	rjmp	.+2      	; 0x1778 <vfprintf+0x310>
    1776:	31 2c       	mov	r3, r1
    1778:	24 ff       	sbrs	r18, 4
    177a:	12 c0       	rjmp	.+36     	; 0x17a0 <vfprintf+0x338>
    177c:	b7 01       	movw	r22, r14
    177e:	80 e3       	ldi	r24, 0x30	; 48
    1780:	90 e0       	ldi	r25, 0x00	; 0
    1782:	2c 87       	std	Y+12, r18	; 0x0c
    1784:	0e 94 1c 0c 	call	0x1838	; 0x1838 <fputc>
    1788:	2c 85       	ldd	r18, Y+12	; 0x0c
    178a:	22 ff       	sbrs	r18, 2
    178c:	17 c0       	rjmp	.+46     	; 0x17bc <vfprintf+0x354>
    178e:	21 ff       	sbrs	r18, 1
    1790:	03 c0       	rjmp	.+6      	; 0x1798 <vfprintf+0x330>
    1792:	88 e5       	ldi	r24, 0x58	; 88
    1794:	90 e0       	ldi	r25, 0x00	; 0
    1796:	02 c0       	rjmp	.+4      	; 0x179c <vfprintf+0x334>
    1798:	88 e7       	ldi	r24, 0x78	; 120
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	b7 01       	movw	r22, r14
    179e:	0c c0       	rjmp	.+24     	; 0x17b8 <vfprintf+0x350>
    17a0:	82 2f       	mov	r24, r18
    17a2:	86 78       	andi	r24, 0x86	; 134
    17a4:	59 f0       	breq	.+22     	; 0x17bc <vfprintf+0x354>
    17a6:	21 fd       	sbrc	r18, 1
    17a8:	02 c0       	rjmp	.+4      	; 0x17ae <vfprintf+0x346>
    17aa:	80 e2       	ldi	r24, 0x20	; 32
    17ac:	01 c0       	rjmp	.+2      	; 0x17b0 <vfprintf+0x348>
    17ae:	8b e2       	ldi	r24, 0x2B	; 43
    17b0:	27 fd       	sbrc	r18, 7
    17b2:	8d e2       	ldi	r24, 0x2D	; 45
    17b4:	b7 01       	movw	r22, r14
    17b6:	90 e0       	ldi	r25, 0x00	; 0
    17b8:	0e 94 1c 0c 	call	0x1838	; 0x1838 <fputc>
    17bc:	a5 14       	cp	r10, r5
    17be:	38 f4       	brcc	.+14     	; 0x17ce <vfprintf+0x366>
    17c0:	b7 01       	movw	r22, r14
    17c2:	80 e3       	ldi	r24, 0x30	; 48
    17c4:	90 e0       	ldi	r25, 0x00	; 0
    17c6:	0e 94 1c 0c 	call	0x1838	; 0x1838 <fputc>
    17ca:	5a 94       	dec	r5
    17cc:	f7 cf       	rjmp	.-18     	; 0x17bc <vfprintf+0x354>
    17ce:	aa 94       	dec	r10
    17d0:	f4 01       	movw	r30, r8
    17d2:	ea 0d       	add	r30, r10
    17d4:	f1 1d       	adc	r31, r1
    17d6:	80 81       	ld	r24, Z
    17d8:	b7 01       	movw	r22, r14
    17da:	90 e0       	ldi	r25, 0x00	; 0
    17dc:	0e 94 1c 0c 	call	0x1838	; 0x1838 <fputc>
    17e0:	a1 10       	cpse	r10, r1
    17e2:	f5 cf       	rjmp	.-22     	; 0x17ce <vfprintf+0x366>
    17e4:	33 20       	and	r3, r3
    17e6:	09 f4       	brne	.+2      	; 0x17ea <vfprintf+0x382>
    17e8:	51 ce       	rjmp	.-862    	; 0x148c <vfprintf+0x24>
    17ea:	b7 01       	movw	r22, r14
    17ec:	80 e2       	ldi	r24, 0x20	; 32
    17ee:	90 e0       	ldi	r25, 0x00	; 0
    17f0:	0e 94 1c 0c 	call	0x1838	; 0x1838 <fputc>
    17f4:	3a 94       	dec	r3
    17f6:	f6 cf       	rjmp	.-20     	; 0x17e4 <vfprintf+0x37c>
    17f8:	f7 01       	movw	r30, r14
    17fa:	86 81       	ldd	r24, Z+6	; 0x06
    17fc:	97 81       	ldd	r25, Z+7	; 0x07
    17fe:	02 c0       	rjmp	.+4      	; 0x1804 <vfprintf+0x39c>
    1800:	8f ef       	ldi	r24, 0xFF	; 255
    1802:	9f ef       	ldi	r25, 0xFF	; 255
    1804:	2c 96       	adiw	r28, 0x0c	; 12
    1806:	e2 e1       	ldi	r30, 0x12	; 18
    1808:	0c 94 fa 0c 	jmp	0x19f4	; 0x19f4 <__epilogue_restores__>

0000180c <strnlen_P>:
    180c:	fc 01       	movw	r30, r24
    180e:	05 90       	lpm	r0, Z+
    1810:	61 50       	subi	r22, 0x01	; 1
    1812:	70 40       	sbci	r23, 0x00	; 0
    1814:	01 10       	cpse	r0, r1
    1816:	d8 f7       	brcc	.-10     	; 0x180e <strnlen_P+0x2>
    1818:	80 95       	com	r24
    181a:	90 95       	com	r25
    181c:	8e 0f       	add	r24, r30
    181e:	9f 1f       	adc	r25, r31
    1820:	08 95       	ret

00001822 <strnlen>:
    1822:	fc 01       	movw	r30, r24
    1824:	61 50       	subi	r22, 0x01	; 1
    1826:	70 40       	sbci	r23, 0x00	; 0
    1828:	01 90       	ld	r0, Z+
    182a:	01 10       	cpse	r0, r1
    182c:	d8 f7       	brcc	.-10     	; 0x1824 <strnlen+0x2>
    182e:	80 95       	com	r24
    1830:	90 95       	com	r25
    1832:	8e 0f       	add	r24, r30
    1834:	9f 1f       	adc	r25, r31
    1836:	08 95       	ret

00001838 <fputc>:
    1838:	0f 93       	push	r16
    183a:	1f 93       	push	r17
    183c:	cf 93       	push	r28
    183e:	df 93       	push	r29
    1840:	18 2f       	mov	r17, r24
    1842:	09 2f       	mov	r16, r25
    1844:	eb 01       	movw	r28, r22
    1846:	8b 81       	ldd	r24, Y+3	; 0x03
    1848:	81 fd       	sbrc	r24, 1
    184a:	03 c0       	rjmp	.+6      	; 0x1852 <fputc+0x1a>
    184c:	8f ef       	ldi	r24, 0xFF	; 255
    184e:	9f ef       	ldi	r25, 0xFF	; 255
    1850:	20 c0       	rjmp	.+64     	; 0x1892 <fputc+0x5a>
    1852:	82 ff       	sbrs	r24, 2
    1854:	10 c0       	rjmp	.+32     	; 0x1876 <fputc+0x3e>
    1856:	4e 81       	ldd	r20, Y+6	; 0x06
    1858:	5f 81       	ldd	r21, Y+7	; 0x07
    185a:	2c 81       	ldd	r18, Y+4	; 0x04
    185c:	3d 81       	ldd	r19, Y+5	; 0x05
    185e:	42 17       	cp	r20, r18
    1860:	53 07       	cpc	r21, r19
    1862:	7c f4       	brge	.+30     	; 0x1882 <fputc+0x4a>
    1864:	e8 81       	ld	r30, Y
    1866:	f9 81       	ldd	r31, Y+1	; 0x01
    1868:	9f 01       	movw	r18, r30
    186a:	2f 5f       	subi	r18, 0xFF	; 255
    186c:	3f 4f       	sbci	r19, 0xFF	; 255
    186e:	39 83       	std	Y+1, r19	; 0x01
    1870:	28 83       	st	Y, r18
    1872:	10 83       	st	Z, r17
    1874:	06 c0       	rjmp	.+12     	; 0x1882 <fputc+0x4a>
    1876:	e8 85       	ldd	r30, Y+8	; 0x08
    1878:	f9 85       	ldd	r31, Y+9	; 0x09
    187a:	81 2f       	mov	r24, r17
    187c:	09 95       	icall
    187e:	89 2b       	or	r24, r25
    1880:	29 f7       	brne	.-54     	; 0x184c <fputc+0x14>
    1882:	2e 81       	ldd	r18, Y+6	; 0x06
    1884:	3f 81       	ldd	r19, Y+7	; 0x07
    1886:	2f 5f       	subi	r18, 0xFF	; 255
    1888:	3f 4f       	sbci	r19, 0xFF	; 255
    188a:	3f 83       	std	Y+7, r19	; 0x07
    188c:	2e 83       	std	Y+6, r18	; 0x06
    188e:	81 2f       	mov	r24, r17
    1890:	90 2f       	mov	r25, r16
    1892:	df 91       	pop	r29
    1894:	cf 91       	pop	r28
    1896:	1f 91       	pop	r17
    1898:	0f 91       	pop	r16
    189a:	08 95       	ret

0000189c <__ultoa_invert>:
    189c:	fa 01       	movw	r30, r20
    189e:	aa 27       	eor	r26, r26
    18a0:	28 30       	cpi	r18, 0x08	; 8
    18a2:	51 f1       	breq	.+84     	; 0x18f8 <__ultoa_invert+0x5c>
    18a4:	20 31       	cpi	r18, 0x10	; 16
    18a6:	81 f1       	breq	.+96     	; 0x1908 <__ultoa_invert+0x6c>
    18a8:	e8 94       	clt
    18aa:	6f 93       	push	r22
    18ac:	6e 7f       	andi	r22, 0xFE	; 254
    18ae:	6e 5f       	subi	r22, 0xFE	; 254
    18b0:	7f 4f       	sbci	r23, 0xFF	; 255
    18b2:	8f 4f       	sbci	r24, 0xFF	; 255
    18b4:	9f 4f       	sbci	r25, 0xFF	; 255
    18b6:	af 4f       	sbci	r26, 0xFF	; 255
    18b8:	b1 e0       	ldi	r27, 0x01	; 1
    18ba:	3e d0       	rcall	.+124    	; 0x1938 <__ultoa_invert+0x9c>
    18bc:	b4 e0       	ldi	r27, 0x04	; 4
    18be:	3c d0       	rcall	.+120    	; 0x1938 <__ultoa_invert+0x9c>
    18c0:	67 0f       	add	r22, r23
    18c2:	78 1f       	adc	r23, r24
    18c4:	89 1f       	adc	r24, r25
    18c6:	9a 1f       	adc	r25, r26
    18c8:	a1 1d       	adc	r26, r1
    18ca:	68 0f       	add	r22, r24
    18cc:	79 1f       	adc	r23, r25
    18ce:	8a 1f       	adc	r24, r26
    18d0:	91 1d       	adc	r25, r1
    18d2:	a1 1d       	adc	r26, r1
    18d4:	6a 0f       	add	r22, r26
    18d6:	71 1d       	adc	r23, r1
    18d8:	81 1d       	adc	r24, r1
    18da:	91 1d       	adc	r25, r1
    18dc:	a1 1d       	adc	r26, r1
    18de:	20 d0       	rcall	.+64     	; 0x1920 <__ultoa_invert+0x84>
    18e0:	09 f4       	brne	.+2      	; 0x18e4 <__ultoa_invert+0x48>
    18e2:	68 94       	set
    18e4:	3f 91       	pop	r19
    18e6:	2a e0       	ldi	r18, 0x0A	; 10
    18e8:	26 9f       	mul	r18, r22
    18ea:	11 24       	eor	r1, r1
    18ec:	30 19       	sub	r19, r0
    18ee:	30 5d       	subi	r19, 0xD0	; 208
    18f0:	31 93       	st	Z+, r19
    18f2:	de f6       	brtc	.-74     	; 0x18aa <__ultoa_invert+0xe>
    18f4:	cf 01       	movw	r24, r30
    18f6:	08 95       	ret
    18f8:	46 2f       	mov	r20, r22
    18fa:	47 70       	andi	r20, 0x07	; 7
    18fc:	40 5d       	subi	r20, 0xD0	; 208
    18fe:	41 93       	st	Z+, r20
    1900:	b3 e0       	ldi	r27, 0x03	; 3
    1902:	0f d0       	rcall	.+30     	; 0x1922 <__ultoa_invert+0x86>
    1904:	c9 f7       	brne	.-14     	; 0x18f8 <__ultoa_invert+0x5c>
    1906:	f6 cf       	rjmp	.-20     	; 0x18f4 <__ultoa_invert+0x58>
    1908:	46 2f       	mov	r20, r22
    190a:	4f 70       	andi	r20, 0x0F	; 15
    190c:	40 5d       	subi	r20, 0xD0	; 208
    190e:	4a 33       	cpi	r20, 0x3A	; 58
    1910:	18 f0       	brcs	.+6      	; 0x1918 <__ultoa_invert+0x7c>
    1912:	49 5d       	subi	r20, 0xD9	; 217
    1914:	31 fd       	sbrc	r19, 1
    1916:	40 52       	subi	r20, 0x20	; 32
    1918:	41 93       	st	Z+, r20
    191a:	02 d0       	rcall	.+4      	; 0x1920 <__ultoa_invert+0x84>
    191c:	a9 f7       	brne	.-22     	; 0x1908 <__ultoa_invert+0x6c>
    191e:	ea cf       	rjmp	.-44     	; 0x18f4 <__ultoa_invert+0x58>
    1920:	b4 e0       	ldi	r27, 0x04	; 4
    1922:	a6 95       	lsr	r26
    1924:	97 95       	ror	r25
    1926:	87 95       	ror	r24
    1928:	77 95       	ror	r23
    192a:	67 95       	ror	r22
    192c:	ba 95       	dec	r27
    192e:	c9 f7       	brne	.-14     	; 0x1922 <__ultoa_invert+0x86>
    1930:	00 97       	sbiw	r24, 0x00	; 0
    1932:	61 05       	cpc	r22, r1
    1934:	71 05       	cpc	r23, r1
    1936:	08 95       	ret
    1938:	9b 01       	movw	r18, r22
    193a:	ac 01       	movw	r20, r24
    193c:	0a 2e       	mov	r0, r26
    193e:	06 94       	lsr	r0
    1940:	57 95       	ror	r21
    1942:	47 95       	ror	r20
    1944:	37 95       	ror	r19
    1946:	27 95       	ror	r18
    1948:	ba 95       	dec	r27
    194a:	c9 f7       	brne	.-14     	; 0x193e <__ultoa_invert+0xa2>
    194c:	62 0f       	add	r22, r18
    194e:	73 1f       	adc	r23, r19
    1950:	84 1f       	adc	r24, r20
    1952:	95 1f       	adc	r25, r21
    1954:	a0 1d       	adc	r26, r0
    1956:	08 95       	ret

00001958 <__divmodsi4>:
    1958:	05 2e       	mov	r0, r21
    195a:	97 fb       	bst	r25, 7
    195c:	1e f4       	brtc	.+6      	; 0x1964 <__divmodsi4+0xc>
    195e:	00 94       	com	r0
    1960:	0e 94 c3 0c 	call	0x1986	; 0x1986 <__negsi2>
    1964:	57 fd       	sbrc	r21, 7
    1966:	07 d0       	rcall	.+14     	; 0x1976 <__divmodsi4_neg2>
    1968:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <__udivmodsi4>
    196c:	07 fc       	sbrc	r0, 7
    196e:	03 d0       	rcall	.+6      	; 0x1976 <__divmodsi4_neg2>
    1970:	4e f4       	brtc	.+18     	; 0x1984 <__divmodsi4_exit>
    1972:	0c 94 c3 0c 	jmp	0x1986	; 0x1986 <__negsi2>

00001976 <__divmodsi4_neg2>:
    1976:	50 95       	com	r21
    1978:	40 95       	com	r20
    197a:	30 95       	com	r19
    197c:	21 95       	neg	r18
    197e:	3f 4f       	sbci	r19, 0xFF	; 255
    1980:	4f 4f       	sbci	r20, 0xFF	; 255
    1982:	5f 4f       	sbci	r21, 0xFF	; 255

00001984 <__divmodsi4_exit>:
    1984:	08 95       	ret

00001986 <__negsi2>:
    1986:	90 95       	com	r25
    1988:	80 95       	com	r24
    198a:	70 95       	com	r23
    198c:	61 95       	neg	r22
    198e:	7f 4f       	sbci	r23, 0xFF	; 255
    1990:	8f 4f       	sbci	r24, 0xFF	; 255
    1992:	9f 4f       	sbci	r25, 0xFF	; 255
    1994:	08 95       	ret

00001996 <__muluhisi3>:
    1996:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__umulhisi3>
    199a:	a5 9f       	mul	r26, r21
    199c:	90 0d       	add	r25, r0
    199e:	b4 9f       	mul	r27, r20
    19a0:	90 0d       	add	r25, r0
    19a2:	a4 9f       	mul	r26, r20
    19a4:	80 0d       	add	r24, r0
    19a6:	91 1d       	adc	r25, r1
    19a8:	11 24       	eor	r1, r1
    19aa:	08 95       	ret

000019ac <__mulshisi3>:
    19ac:	b7 ff       	sbrs	r27, 7
    19ae:	0c 94 cb 0c 	jmp	0x1996	; 0x1996 <__muluhisi3>

000019b2 <__mulohisi3>:
    19b2:	0e 94 cb 0c 	call	0x1996	; 0x1996 <__muluhisi3>
    19b6:	82 1b       	sub	r24, r18
    19b8:	93 0b       	sbc	r25, r19
    19ba:	08 95       	ret

000019bc <__prologue_saves__>:
    19bc:	2f 92       	push	r2
    19be:	3f 92       	push	r3
    19c0:	4f 92       	push	r4
    19c2:	5f 92       	push	r5
    19c4:	6f 92       	push	r6
    19c6:	7f 92       	push	r7
    19c8:	8f 92       	push	r8
    19ca:	9f 92       	push	r9
    19cc:	af 92       	push	r10
    19ce:	bf 92       	push	r11
    19d0:	cf 92       	push	r12
    19d2:	df 92       	push	r13
    19d4:	ef 92       	push	r14
    19d6:	ff 92       	push	r15
    19d8:	0f 93       	push	r16
    19da:	1f 93       	push	r17
    19dc:	cf 93       	push	r28
    19de:	df 93       	push	r29
    19e0:	cd b7       	in	r28, 0x3d	; 61
    19e2:	de b7       	in	r29, 0x3e	; 62
    19e4:	ca 1b       	sub	r28, r26
    19e6:	db 0b       	sbc	r29, r27
    19e8:	0f b6       	in	r0, 0x3f	; 63
    19ea:	f8 94       	cli
    19ec:	de bf       	out	0x3e, r29	; 62
    19ee:	0f be       	out	0x3f, r0	; 63
    19f0:	cd bf       	out	0x3d, r28	; 61
    19f2:	09 94       	ijmp

000019f4 <__epilogue_restores__>:
    19f4:	2a 88       	ldd	r2, Y+18	; 0x12
    19f6:	39 88       	ldd	r3, Y+17	; 0x11
    19f8:	48 88       	ldd	r4, Y+16	; 0x10
    19fa:	5f 84       	ldd	r5, Y+15	; 0x0f
    19fc:	6e 84       	ldd	r6, Y+14	; 0x0e
    19fe:	7d 84       	ldd	r7, Y+13	; 0x0d
    1a00:	8c 84       	ldd	r8, Y+12	; 0x0c
    1a02:	9b 84       	ldd	r9, Y+11	; 0x0b
    1a04:	aa 84       	ldd	r10, Y+10	; 0x0a
    1a06:	b9 84       	ldd	r11, Y+9	; 0x09
    1a08:	c8 84       	ldd	r12, Y+8	; 0x08
    1a0a:	df 80       	ldd	r13, Y+7	; 0x07
    1a0c:	ee 80       	ldd	r14, Y+6	; 0x06
    1a0e:	fd 80       	ldd	r15, Y+5	; 0x05
    1a10:	0c 81       	ldd	r16, Y+4	; 0x04
    1a12:	1b 81       	ldd	r17, Y+3	; 0x03
    1a14:	aa 81       	ldd	r26, Y+2	; 0x02
    1a16:	b9 81       	ldd	r27, Y+1	; 0x01
    1a18:	ce 0f       	add	r28, r30
    1a1a:	d1 1d       	adc	r29, r1
    1a1c:	0f b6       	in	r0, 0x3f	; 63
    1a1e:	f8 94       	cli
    1a20:	de bf       	out	0x3e, r29	; 62
    1a22:	0f be       	out	0x3f, r0	; 63
    1a24:	cd bf       	out	0x3d, r28	; 61
    1a26:	ed 01       	movw	r28, r26
    1a28:	08 95       	ret

00001a2a <__udivmodsi4>:
    1a2a:	a1 e2       	ldi	r26, 0x21	; 33
    1a2c:	1a 2e       	mov	r1, r26
    1a2e:	aa 1b       	sub	r26, r26
    1a30:	bb 1b       	sub	r27, r27
    1a32:	fd 01       	movw	r30, r26
    1a34:	0d c0       	rjmp	.+26     	; 0x1a50 <__udivmodsi4_ep>

00001a36 <__udivmodsi4_loop>:
    1a36:	aa 1f       	adc	r26, r26
    1a38:	bb 1f       	adc	r27, r27
    1a3a:	ee 1f       	adc	r30, r30
    1a3c:	ff 1f       	adc	r31, r31
    1a3e:	a2 17       	cp	r26, r18
    1a40:	b3 07       	cpc	r27, r19
    1a42:	e4 07       	cpc	r30, r20
    1a44:	f5 07       	cpc	r31, r21
    1a46:	20 f0       	brcs	.+8      	; 0x1a50 <__udivmodsi4_ep>
    1a48:	a2 1b       	sub	r26, r18
    1a4a:	b3 0b       	sbc	r27, r19
    1a4c:	e4 0b       	sbc	r30, r20
    1a4e:	f5 0b       	sbc	r31, r21

00001a50 <__udivmodsi4_ep>:
    1a50:	66 1f       	adc	r22, r22
    1a52:	77 1f       	adc	r23, r23
    1a54:	88 1f       	adc	r24, r24
    1a56:	99 1f       	adc	r25, r25
    1a58:	1a 94       	dec	r1
    1a5a:	69 f7       	brne	.-38     	; 0x1a36 <__udivmodsi4_loop>
    1a5c:	60 95       	com	r22
    1a5e:	70 95       	com	r23
    1a60:	80 95       	com	r24
    1a62:	90 95       	com	r25
    1a64:	9b 01       	movw	r18, r22
    1a66:	ac 01       	movw	r20, r24
    1a68:	bd 01       	movw	r22, r26
    1a6a:	cf 01       	movw	r24, r30
    1a6c:	08 95       	ret

00001a6e <__umulhisi3>:
    1a6e:	a2 9f       	mul	r26, r18
    1a70:	b0 01       	movw	r22, r0
    1a72:	b3 9f       	mul	r27, r19
    1a74:	c0 01       	movw	r24, r0
    1a76:	a3 9f       	mul	r26, r19
    1a78:	70 0d       	add	r23, r0
    1a7a:	81 1d       	adc	r24, r1
    1a7c:	11 24       	eor	r1, r1
    1a7e:	91 1d       	adc	r25, r1
    1a80:	b2 9f       	mul	r27, r18
    1a82:	70 0d       	add	r23, r0
    1a84:	81 1d       	adc	r24, r1
    1a86:	11 24       	eor	r1, r1
    1a88:	91 1d       	adc	r25, r1
    1a8a:	08 95       	ret

00001a8c <_exit>:
    1a8c:	f8 94       	cli

00001a8e <__stop_program>:
    1a8e:	ff cf       	rjmp	.-2      	; 0x1a8e <__stop_program>
