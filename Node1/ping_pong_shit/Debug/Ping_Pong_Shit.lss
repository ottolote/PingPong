
Ping_Pong_Shit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000238  00800100  00001386  0000141a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001386  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800338  00800338  00001652  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001652  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000002c8  00000000  00000000  000016ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002d15  00000000  00000000  00001976  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000010de  00000000  00000000  0000468b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000011fa  00000000  00000000  00005769  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000770  00000000  00000000  00006964  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000087f  00000000  00000000  000070d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001600  00000000  00000000  00007953  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000280  00000000  00000000  00008f53  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 40 02 	jmp	0x480	; 0x480 <__vector_1>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <SRAM_test+0x15c>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	13 e0       	ldi	r17, 0x03	; 3
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e6 e8       	ldi	r30, 0x86	; 134
     37c:	f3 e1       	ldi	r31, 0x13	; 19
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a8 33       	cpi	r26, 0x38	; 56
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	23 e0       	ldi	r18, 0x03	; 3
     38c:	a8 e3       	ldi	r26, 0x38	; 56
     38e:	b3 e0       	ldi	r27, 0x03	; 3
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a5 34       	cpi	r26, 0x45	; 69
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <main>
     39e:	0c 94 c1 09 	jmp	0x1382	; 0x1382 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <can_init>:

#define JOY_CAN_ID 1

void can_init(){
	//Enter config mode
	mcp2515_init();
     3a6:	0e 94 91 03 	call	0x722	; 0x722 <mcp2515_init>
	printf("CANCTRL (expect 0x87): 0x%02x\n", mcp2515_read(MCP_CANCTRL));
     3aa:	8f e0       	ldi	r24, 0x0F	; 15
     3ac:	0e 94 7f 03 	call	0x6fe	; 0x6fe <mcp2515_read>
     3b0:	1f 92       	push	r1
     3b2:	8f 93       	push	r24
     3b4:	84 e2       	ldi	r24, 0x24	; 36
     3b6:	91 e0       	ldi	r25, 0x01	; 1
     3b8:	9f 93       	push	r25
     3ba:	8f 93       	push	r24
     3bc:	0e 94 6e 06 	call	0xcdc	; 0xcdc <printf>

	//RX0 - Turn mask/filter off
	mcp2515_bit_modify(MCP_RXB0CTRL, 0b01100000, 0xFF);
     3c0:	4f ef       	ldi	r20, 0xFF	; 255
     3c2:	60 e6       	ldi	r22, 0x60	; 96
     3c4:	80 e6       	ldi	r24, 0x60	; 96
     3c6:	0e 94 5d 03 	call	0x6ba	; 0x6ba <mcp2515_bit_modify>
	//RX0 - Disable rollover
	mcp2515_bit_modify(MCP_RXB0CTRL, 0b00000100, 0);
     3ca:	40 e0       	ldi	r20, 0x00	; 0
     3cc:	64 e0       	ldi	r22, 0x04	; 4
     3ce:	80 e6       	ldi	r24, 0x60	; 96
     3d0:	0e 94 5d 03 	call	0x6ba	; 0x6ba <mcp2515_bit_modify>

	mcp2515_bit_modify(MCP_CANINTE, MCP_RX0IF, 0xff);
     3d4:	4f ef       	ldi	r20, 0xFF	; 255
     3d6:	61 e0       	ldi	r22, 0x01	; 1
     3d8:	8b e2       	ldi	r24, 0x2B	; 43
     3da:	0e 94 5d 03 	call	0x6ba	; 0x6ba <mcp2515_bit_modify>
	
	//Enable normal mode
	mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_NORMAL);
     3de:	40 e0       	ldi	r20, 0x00	; 0
     3e0:	60 ee       	ldi	r22, 0xE0	; 224
     3e2:	8f e0       	ldi	r24, 0x0F	; 15
     3e4:	0e 94 5d 03 	call	0x6ba	; 0x6ba <mcp2515_bit_modify>
     3e8:	0f 90       	pop	r0
     3ea:	0f 90       	pop	r0
     3ec:	0f 90       	pop	r0
     3ee:	0f 90       	pop	r0
     3f0:	08 95       	ret

000003f2 <can_transmit_complete>:
	return 1;
}

int can_transmit_complete(){
	//Check if TX buffer is not pending
	if(test_bit(mcp2515_read(MCP_TXB0CTRL), 3)){
     3f2:	80 e3       	ldi	r24, 0x30	; 48
     3f4:	0e 94 7f 03 	call	0x6fe	; 0x6fe <mcp2515_read>
     3f8:	86 95       	lsr	r24
     3fa:	86 95       	lsr	r24
     3fc:	86 95       	lsr	r24
     3fe:	91 e0       	ldi	r25, 0x01	; 1
     400:	89 27       	eor	r24, r25
		return 0;
	} else {
		return 1;
	 }
}
     402:	81 70       	andi	r24, 0x01	; 1
     404:	90 e0       	ldi	r25, 0x00	; 0
     406:	08 95       	ret

00000408 <can_message_send>:
	mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_NORMAL);

	//Enable interrupt when message is recieved (RX0IE = 1)
}

void can_message_send(can_message_t* message){
     408:	1f 93       	push	r17
     40a:	cf 93       	push	r28
     40c:	df 93       	push	r29
     40e:	ec 01       	movw	r28, r24
	while (!can_transmit_complete()) {}
     410:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <can_transmit_complete>
     414:	89 2b       	or	r24, r25
     416:	e1 f3       	breq	.-8      	; 0x410 <can_message_send+0x8>
	//Use standard ID to set the message
	mcp2515_write(MCP_TXB0SIDH, (int8_t)(message->id >> 3));
     418:	68 81       	ld	r22, Y
     41a:	79 81       	ldd	r23, Y+1	; 0x01
     41c:	75 95       	asr	r23
     41e:	67 95       	ror	r22
     420:	75 95       	asr	r23
     422:	67 95       	ror	r22
     424:	75 95       	asr	r23
     426:	67 95       	ror	r22
     428:	81 e3       	ldi	r24, 0x31	; 49
     42a:	0e 94 39 03 	call	0x672	; 0x672 <mcp2515_write>
	mcp2515_write(MCP_TXB0SIDL, (int8_t)(message->id << 5));
     42e:	68 81       	ld	r22, Y
     430:	79 81       	ldd	r23, Y+1	; 0x01
     432:	66 0f       	add	r22, r22
     434:	77 1f       	adc	r23, r23
     436:	62 95       	swap	r22
     438:	72 95       	swap	r23
     43a:	70 7f       	andi	r23, 0xF0	; 240
     43c:	76 27       	eor	r23, r22
     43e:	60 7f       	andi	r22, 0xF0	; 240
     440:	76 27       	eor	r23, r22
     442:	82 e3       	ldi	r24, 0x32	; 50
     444:	0e 94 39 03 	call	0x672	; 0x672 <mcp2515_write>

	//Set correct data lenght and use data frame, max 8 bytes
	mcp2515_write(MCP_TXB0DLC, (0x0F) & (message->length));
     448:	6a 81       	ldd	r22, Y+2	; 0x02
     44a:	6f 70       	andi	r22, 0x0F	; 15
     44c:	85 e3       	ldi	r24, 0x35	; 53
     44e:	0e 94 39 03 	call	0x672	; 0x672 <mcp2515_write>

	//For loop to set data bytes
	for (uint8_t i = 0; i < message->length; i++) {
     452:	8a 81       	ldd	r24, Y+2	; 0x02
     454:	88 23       	and	r24, r24
     456:	69 f0       	breq	.+26     	; 0x472 <can_message_send+0x6a>
     458:	10 e0       	ldi	r17, 0x00	; 0
		mcp2515_write(MCP_TXB0D0 + i, message->data[i]);
     45a:	fe 01       	movw	r30, r28
     45c:	e1 0f       	add	r30, r17
     45e:	f1 1d       	adc	r31, r1
     460:	63 81       	ldd	r22, Z+3	; 0x03
     462:	86 e3       	ldi	r24, 0x36	; 54
     464:	81 0f       	add	r24, r17
     466:	0e 94 39 03 	call	0x672	; 0x672 <mcp2515_write>

	//Set correct data lenght and use data frame, max 8 bytes
	mcp2515_write(MCP_TXB0DLC, (0x0F) & (message->length));

	//For loop to set data bytes
	for (uint8_t i = 0; i < message->length; i++) {
     46a:	1f 5f       	subi	r17, 0xFF	; 255
     46c:	8a 81       	ldd	r24, Y+2	; 0x02
     46e:	18 17       	cp	r17, r24
     470:	a0 f3       	brcs	.-24     	; 0x45a <can_message_send+0x52>
		mcp2515_write(MCP_TXB0D0 + i, message->data[i]);
	}

	mcp2515_request_to_send(1);
     472:	81 e0       	ldi	r24, 0x01	; 1
     474:	0e 94 4d 03 	call	0x69a	; 0x69a <mcp2515_request_to_send>
}
     478:	df 91       	pop	r29
     47a:	cf 91       	pop	r28
     47c:	1f 91       	pop	r17
     47e:	08 95       	ret

00000480 <__vector_1>:

	return message;
}

//Interrupt routine for CAN bus
ISR(INT0_vect){
     480:	1f 92       	push	r1
     482:	0f 92       	push	r0
     484:	0f b6       	in	r0, 0x3f	; 63
     486:	0f 92       	push	r0
     488:	11 24       	eor	r1, r1
     48a:	8f 93       	push	r24
     48c:	9f 93       	push	r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     48e:	8f ef       	ldi	r24, 0xFF	; 255
     490:	9f e2       	ldi	r25, 0x2F	; 47
     492:	01 97       	sbiw	r24, 0x01	; 1
     494:	f1 f7       	brne	.-4      	; 0x492 <__vector_1+0x12>
     496:	00 c0       	rjmp	.+0      	; 0x498 <__vector_1+0x18>
     498:	00 00       	nop
	 }
}

void can_interrupt_vector(){
	//Clear interrupt flag
	rx_flag = 1;
     49a:	81 e0       	ldi	r24, 0x01	; 1
     49c:	80 93 38 03 	sts	0x0338, r24

//Interrupt routine for CAN bus
ISR(INT0_vect){
	_delay_ms(10);
	can_interrupt_vector();
}
     4a0:	9f 91       	pop	r25
     4a2:	8f 91       	pop	r24
     4a4:	0f 90       	pop	r0
     4a6:	0f be       	out	0x3f, r0	; 63
     4a8:	0f 90       	pop	r0
     4aa:	1f 90       	pop	r1
     4ac:	18 95       	reti

000004ae <can_print_message>:
		testmessage.id++;
		_delay_ms(1000);
	}
}

void can_print_message(const can_message_t *message) {
     4ae:	ff 92       	push	r15
     4b0:	0f 93       	push	r16
     4b2:	1f 93       	push	r17
     4b4:	cf 93       	push	r28
     4b6:	df 93       	push	r29
     4b8:	ec 01       	movw	r28, r24
	printf("Message id: %d\nMessage length %d\n", message->id, message->length);
     4ba:	8a 81       	ldd	r24, Y+2	; 0x02
     4bc:	1f 92       	push	r1
     4be:	8f 93       	push	r24
     4c0:	89 81       	ldd	r24, Y+1	; 0x01
     4c2:	8f 93       	push	r24
     4c4:	88 81       	ld	r24, Y
     4c6:	8f 93       	push	r24
     4c8:	83 e4       	ldi	r24, 0x43	; 67
     4ca:	91 e0       	ldi	r25, 0x01	; 1
     4cc:	9f 93       	push	r25
     4ce:	8f 93       	push	r24
     4d0:	0e 94 6e 06 	call	0xcdc	; 0xcdc <printf>
	printf("Message data: [ %d", message->data[0]);
     4d4:	2b 81       	ldd	r18, Y+3	; 0x03
     4d6:	82 2f       	mov	r24, r18
     4d8:	99 27       	eor	r25, r25
     4da:	87 fd       	sbrc	r24, 7
     4dc:	90 95       	com	r25
     4de:	9f 93       	push	r25
     4e0:	2f 93       	push	r18
     4e2:	85 e6       	ldi	r24, 0x65	; 101
     4e4:	91 e0       	ldi	r25, 0x01	; 1
     4e6:	9f 93       	push	r25
     4e8:	8f 93       	push	r24
     4ea:	0e 94 6e 06 	call	0xcdc	; 0xcdc <printf>
	for(uint8_t i = 1; i < message->length; i++) {
     4ee:	8d b7       	in	r24, 0x3d	; 61
     4f0:	9e b7       	in	r25, 0x3e	; 62
     4f2:	0a 96       	adiw	r24, 0x0a	; 10
     4f4:	0f b6       	in	r0, 0x3f	; 63
     4f6:	f8 94       	cli
     4f8:	9e bf       	out	0x3e, r25	; 62
     4fa:	0f be       	out	0x3f, r0	; 63
     4fc:	8d bf       	out	0x3d, r24	; 61
     4fe:	8a 81       	ldd	r24, Y+2	; 0x02
     500:	82 30       	cpi	r24, 0x02	; 2
     502:	d0 f0       	brcs	.+52     	; 0x538 <__stack+0x39>
     504:	ff 24       	eor	r15, r15
     506:	f3 94       	inc	r15
		printf(", %d",message->data[i]);
     508:	08 e7       	ldi	r16, 0x78	; 120
     50a:	11 e0       	ldi	r17, 0x01	; 1
     50c:	fe 01       	movw	r30, r28
     50e:	ef 0d       	add	r30, r15
     510:	f1 1d       	adc	r31, r1
     512:	23 81       	ldd	r18, Z+3	; 0x03
     514:	82 2f       	mov	r24, r18
     516:	99 27       	eor	r25, r25
     518:	87 fd       	sbrc	r24, 7
     51a:	90 95       	com	r25
     51c:	9f 93       	push	r25
     51e:	2f 93       	push	r18
     520:	1f 93       	push	r17
     522:	0f 93       	push	r16
     524:	0e 94 6e 06 	call	0xcdc	; 0xcdc <printf>
}

void can_print_message(const can_message_t *message) {
	printf("Message id: %d\nMessage length %d\n", message->id, message->length);
	printf("Message data: [ %d", message->data[0]);
	for(uint8_t i = 1; i < message->length; i++) {
     528:	f3 94       	inc	r15
     52a:	0f 90       	pop	r0
     52c:	0f 90       	pop	r0
     52e:	0f 90       	pop	r0
     530:	0f 90       	pop	r0
     532:	8a 81       	ldd	r24, Y+2	; 0x02
     534:	f8 16       	cp	r15, r24
     536:	50 f3       	brcs	.-44     	; 0x50c <__stack+0xd>
		printf(", %d",message->data[i]);
	}
	printf(" ]\n\n");
     538:	8d e7       	ldi	r24, 0x7D	; 125
     53a:	91 e0       	ldi	r25, 0x01	; 1
     53c:	0e 94 82 06 	call	0xd04	; 0xd04 <puts>
}
     540:	df 91       	pop	r29
     542:	cf 91       	pop	r28
     544:	1f 91       	pop	r17
     546:	0f 91       	pop	r16
     548:	ff 90       	pop	r15
     54a:	08 95       	ret

0000054c <can_joystick_transmit>:
		_delay_ms(10);
		flash_diode();
	}
}

void can_joystick_transmit(unsigned int id){
     54c:	cf 93       	push	r28
     54e:	df 93       	push	r29
     550:	cd b7       	in	r28, 0x3d	; 61
     552:	de b7       	in	r29, 0x3e	; 62
     554:	2b 97       	sbiw	r28, 0x0b	; 11
     556:	0f b6       	in	r0, 0x3f	; 63
     558:	f8 94       	cli
     55a:	de bf       	out	0x3e, r29	; 62
     55c:	0f be       	out	0x3f, r0	; 63
     55e:	cd bf       	out	0x3d, r28	; 61
	can_message_t joy_message;

	joy_message.id = id; 
     560:	9a 83       	std	Y+2, r25	; 0x02
     562:	89 83       	std	Y+1, r24	; 0x01
	joy_message.length = 2;
     564:	82 e0       	ldi	r24, 0x02	; 2
     566:	8b 83       	std	Y+3, r24	; 0x03
	
	joy_message.data[0] = read_converted(JOYSTICK_X);
     568:	80 e0       	ldi	r24, 0x00	; 0
     56a:	0e 94 17 03 	call	0x62e	; 0x62e <read_converted>
     56e:	8c 83       	std	Y+4, r24	; 0x04
	joy_message.data[1] = read_converted(JOYSTICK_Y);
     570:	81 e0       	ldi	r24, 0x01	; 1
     572:	0e 94 17 03 	call	0x62e	; 0x62e <read_converted>
     576:	8d 83       	std	Y+5, r24	; 0x05

	can_print_message(&joy_message);
     578:	ce 01       	movw	r24, r28
     57a:	01 96       	adiw	r24, 0x01	; 1
     57c:	0e 94 57 02 	call	0x4ae	; 0x4ae <can_print_message>

	can_message_send(&joy_message);
     580:	ce 01       	movw	r24, r28
     582:	01 96       	adiw	r24, 0x01	; 1
     584:	0e 94 04 02 	call	0x408	; 0x408 <can_message_send>
}
     588:	2b 96       	adiw	r28, 0x0b	; 11
     58a:	0f b6       	in	r0, 0x3f	; 63
     58c:	f8 94       	cli
     58e:	de bf       	out	0x3e, r29	; 62
     590:	0f be       	out	0x3f, r0	; 63
     592:	cd bf       	out	0x3d, r28	; 61
     594:	df 91       	pop	r29
     596:	cf 91       	pop	r28
     598:	08 95       	ret

0000059a <can_joy_test>:
	}
	printf(" ]\n\n");
}

void can_joy_test(){
	printf("CANCTRL: %02x\n", mcp2515_read(MCP_CANCTRL));	
     59a:	8f e0       	ldi	r24, 0x0F	; 15
     59c:	0e 94 7f 03 	call	0x6fe	; 0x6fe <mcp2515_read>
     5a0:	1f 92       	push	r1
     5a2:	8f 93       	push	r24
     5a4:	c1 e8       	ldi	r28, 0x81	; 129
     5a6:	d1 e0       	ldi	r29, 0x01	; 1
     5a8:	df 93       	push	r29
     5aa:	cf 93       	push	r28
     5ac:	0e 94 6e 06 	call	0xcdc	; 0xcdc <printf>
	mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_NORMAL);
     5b0:	40 e0       	ldi	r20, 0x00	; 0
     5b2:	60 ee       	ldi	r22, 0xE0	; 224
     5b4:	8f e0       	ldi	r24, 0x0F	; 15
     5b6:	0e 94 5d 03 	call	0x6ba	; 0x6ba <mcp2515_bit_modify>
	printf("CANCTRL: %02x\n", mcp2515_read(MCP_CANCTRL));
     5ba:	8f e0       	ldi	r24, 0x0F	; 15
     5bc:	0e 94 7f 03 	call	0x6fe	; 0x6fe <mcp2515_read>
     5c0:	1f 92       	push	r1
     5c2:	8f 93       	push	r24
     5c4:	df 93       	push	r29
     5c6:	cf 93       	push	r28
     5c8:	0e 94 6e 06 	call	0xcdc	; 0xcdc <printf>
     5cc:	8d b7       	in	r24, 0x3d	; 61
     5ce:	9e b7       	in	r25, 0x3e	; 62
     5d0:	08 96       	adiw	r24, 0x08	; 8
     5d2:	0f b6       	in	r0, 0x3f	; 63
     5d4:	f8 94       	cli
     5d6:	9e bf       	out	0x3e, r25	; 62
     5d8:	0f be       	out	0x3f, r0	; 63
     5da:	8d bf       	out	0x3d, r24	; 61

	uint8_t id = 0;
     5dc:	c0 e0       	ldi	r28, 0x00	; 0
	while(1){
		can_joystick_transmit(id);
     5de:	8c 2f       	mov	r24, r28
     5e0:	90 e0       	ldi	r25, 0x00	; 0
     5e2:	0e 94 a6 02 	call	0x54c	; 0x54c <can_joystick_transmit>
		id++;
     5e6:	cf 5f       	subi	r28, 0xFF	; 255
     5e8:	8f ef       	ldi	r24, 0xFF	; 255
     5ea:	9f e2       	ldi	r25, 0x2F	; 47
     5ec:	01 97       	sbiw	r24, 0x01	; 1
     5ee:	f1 f7       	brne	.-4      	; 0x5ec <can_joy_test+0x52>
     5f0:	00 c0       	rjmp	.+0      	; 0x5f2 <can_joy_test+0x58>
     5f2:	00 00       	nop
		_delay_ms(10);
		flash_diode();
     5f4:	0e 94 05 06 	call	0xc0a	; 0xc0a <flash_diode>
     5f8:	f2 cf       	rjmp	.-28     	; 0x5de <can_joy_test+0x44>

000005fa <joystick_read>:
     5fa:	8c 5f       	subi	r24, 0xFC	; 252
     5fc:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     600:	81 e4       	ldi	r24, 0x41	; 65
     602:	8a 95       	dec	r24
     604:	f1 f7       	brne	.-4      	; 0x602 <joystick_read+0x8>
     606:	00 c0       	rjmp	.+0      	; 0x608 <joystick_read+0xe>
     608:	80 91 00 14 	lds	r24, 0x1400
     60c:	90 e0       	ldi	r25, 0x00	; 0
     60e:	08 95       	ret

00000610 <joystick_init>:
     610:	80 e0       	ldi	r24, 0x00	; 0
     612:	0e 94 fd 02 	call	0x5fa	; 0x5fa <joystick_read>
     616:	90 93 3a 03 	sts	0x033A, r25
     61a:	80 93 39 03 	sts	0x0339, r24
     61e:	81 e0       	ldi	r24, 0x01	; 1
     620:	0e 94 fd 02 	call	0x5fa	; 0x5fa <joystick_read>
     624:	90 93 3c 03 	sts	0x033C, r25
     628:	80 93 3b 03 	sts	0x033B, r24
     62c:	08 95       	ret

0000062e <read_converted>:
     62e:	cf 93       	push	r28
     630:	c8 2f       	mov	r28, r24
     632:	0e 94 fd 02 	call	0x5fa	; 0x5fa <joystick_read>
     636:	c1 11       	cpse	r28, r1
     638:	07 c0       	rjmp	.+14     	; 0x648 <read_converted+0x1a>
     63a:	20 91 39 03 	lds	r18, 0x0339
     63e:	30 91 3a 03 	lds	r19, 0x033A
     642:	82 1b       	sub	r24, r18
     644:	93 0b       	sbc	r25, r19
     646:	08 c0       	rjmp	.+16     	; 0x658 <read_converted+0x2a>
     648:	c1 30       	cpi	r28, 0x01	; 1
     64a:	31 f4       	brne	.+12     	; 0x658 <read_converted+0x2a>
     64c:	20 91 3b 03 	lds	r18, 0x033B
     650:	30 91 3c 03 	lds	r19, 0x033C
     654:	82 1b       	sub	r24, r18
     656:	93 0b       	sbc	r25, r19
     658:	80 38       	cpi	r24, 0x80	; 128
     65a:	2f ef       	ldi	r18, 0xFF	; 255
     65c:	92 07       	cpc	r25, r18
     65e:	14 f4       	brge	.+4      	; 0x664 <read_converted+0x36>
     660:	80 e8       	ldi	r24, 0x80	; 128
     662:	9f ef       	ldi	r25, 0xFF	; 255
     664:	80 38       	cpi	r24, 0x80	; 128
     666:	91 05       	cpc	r25, r1
     668:	14 f0       	brlt	.+4      	; 0x66e <read_converted+0x40>
     66a:	8f e7       	ldi	r24, 0x7F	; 127
     66c:	90 e0       	ldi	r25, 0x00	; 0
     66e:	cf 91       	pop	r28
     670:	08 95       	ret

00000672 <mcp2515_write>:
     672:	cf 93       	push	r28
     674:	df 93       	push	r29
     676:	d8 2f       	mov	r29, r24
     678:	c6 2f       	mov	r28, r22
     67a:	0e 94 ef 04 	call	0x9de	; 0x9de <spi_select>
     67e:	82 e0       	ldi	r24, 0x02	; 2
     680:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <spi_send>
     684:	8d 2f       	mov	r24, r29
     686:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <spi_send>
     68a:	8c 2f       	mov	r24, r28
     68c:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <spi_send>
     690:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <spi_deselect>
     694:	df 91       	pop	r29
     696:	cf 91       	pop	r28
     698:	08 95       	ret

0000069a <mcp2515_request_to_send>:
     69a:	cf 93       	push	r28
     69c:	88 30       	cpi	r24, 0x08	; 8
     69e:	18 f4       	brcc	.+6      	; 0x6a6 <mcp2515_request_to_send+0xc>
     6a0:	c8 2f       	mov	r28, r24
     6a2:	c0 68       	ori	r28, 0x80	; 128
     6a4:	01 c0       	rjmp	.+2      	; 0x6a8 <mcp2515_request_to_send+0xe>
     6a6:	c0 e8       	ldi	r28, 0x80	; 128
     6a8:	0e 94 ef 04 	call	0x9de	; 0x9de <spi_select>
     6ac:	8c 2f       	mov	r24, r28
     6ae:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <spi_send>
     6b2:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <spi_deselect>
     6b6:	cf 91       	pop	r28
     6b8:	08 95       	ret

000006ba <mcp2515_bit_modify>:
     6ba:	1f 93       	push	r17
     6bc:	cf 93       	push	r28
     6be:	df 93       	push	r29
     6c0:	18 2f       	mov	r17, r24
     6c2:	d6 2f       	mov	r29, r22
     6c4:	c4 2f       	mov	r28, r20
     6c6:	0e 94 ef 04 	call	0x9de	; 0x9de <spi_select>
     6ca:	85 e0       	ldi	r24, 0x05	; 5
     6cc:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <spi_send>
     6d0:	81 2f       	mov	r24, r17
     6d2:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <spi_send>
     6d6:	8d 2f       	mov	r24, r29
     6d8:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <spi_send>
     6dc:	8c 2f       	mov	r24, r28
     6de:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <spi_send>
     6e2:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <spi_deselect>
     6e6:	df 91       	pop	r29
     6e8:	cf 91       	pop	r28
     6ea:	1f 91       	pop	r17
     6ec:	08 95       	ret

000006ee <mcp2515_reset>:
     6ee:	0e 94 ef 04 	call	0x9de	; 0x9de <spi_select>
     6f2:	80 ec       	ldi	r24, 0xC0	; 192
     6f4:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <spi_send>
     6f8:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <spi_deselect>
     6fc:	08 95       	ret

000006fe <mcp2515_read>:
     6fe:	cf 93       	push	r28
     700:	c8 2f       	mov	r28, r24
     702:	0e 94 ef 04 	call	0x9de	; 0x9de <spi_select>
     706:	83 e0       	ldi	r24, 0x03	; 3
     708:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <spi_send>
     70c:	8c 2f       	mov	r24, r28
     70e:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <spi_send>
     712:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <spi_read>
     716:	c8 2f       	mov	r28, r24
     718:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <spi_deselect>
     71c:	8c 2f       	mov	r24, r28
     71e:	cf 91       	pop	r28
     720:	08 95       	ret

00000722 <mcp2515_init>:
     722:	cf 93       	push	r28
     724:	df 93       	push	r29
     726:	1f 92       	push	r1
     728:	cd b7       	in	r28, 0x3d	; 61
     72a:	de b7       	in	r29, 0x3e	; 62
     72c:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <spi_init>
     730:	0e 94 77 03 	call	0x6ee	; 0x6ee <mcp2515_reset>
     734:	8e e0       	ldi	r24, 0x0E	; 14
     736:	0e 94 7f 03 	call	0x6fe	; 0x6fe <mcp2515_read>
     73a:	89 83       	std	Y+1, r24	; 0x01
     73c:	89 81       	ldd	r24, Y+1	; 0x01
     73e:	80 7e       	andi	r24, 0xE0	; 224
     740:	80 38       	cpi	r24, 0x80	; 128
     742:	21 f0       	breq	.+8      	; 0x74c <mcp2515_init+0x2a>
     744:	80 e9       	ldi	r24, 0x90	; 144
     746:	91 e0       	ldi	r25, 0x01	; 1
     748:	0e 94 82 06 	call	0xd04	; 0xd04 <puts>
     74c:	0f 90       	pop	r0
     74e:	df 91       	pop	r29
     750:	cf 91       	pop	r28
     752:	08 95       	ret

00000754 <oled_print_char>:
     754:	28 e0       	ldi	r18, 0x08	; 8
     756:	82 9f       	mul	r24, r18
     758:	c0 01       	movw	r24, r0
     75a:	11 24       	eor	r1, r1
     75c:	fc 01       	movw	r30, r24
     75e:	e0 59       	subi	r30, 0x90	; 144
     760:	f0 40       	sbci	r31, 0x00	; 0
     762:	80 e0       	ldi	r24, 0x00	; 0
     764:	94 91       	lpm	r25, Z
     766:	a0 91 04 01 	lds	r26, 0x0104
     76a:	b0 91 05 01 	lds	r27, 0x0105
     76e:	9c 93       	st	X, r25
     770:	8f 5f       	subi	r24, 0xFF	; 255
     772:	31 96       	adiw	r30, 0x01	; 1
     774:	88 30       	cpi	r24, 0x08	; 8
     776:	b1 f7       	brne	.-20     	; 0x764 <oled_print_char+0x10>
     778:	08 95       	ret

0000077a <oled_goto_page>:
     77a:	90 eb       	ldi	r25, 0xB0	; 176
     77c:	98 0f       	add	r25, r24
     77e:	e0 91 06 01 	lds	r30, 0x0106
     782:	f0 91 07 01 	lds	r31, 0x0107
     786:	90 83       	st	Z, r25
     788:	80 93 3d 03 	sts	0x033D, r24
     78c:	82 e5       	ldi	r24, 0x52	; 82
     78e:	8a 95       	dec	r24
     790:	f1 f7       	brne	.-4      	; 0x78e <oled_goto_page+0x14>
     792:	08 95       	ret

00000794 <oled_clear_line>:
     794:	80 e8       	ldi	r24, 0x80	; 128
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	e0 91 04 01 	lds	r30, 0x0104
     79c:	f0 91 05 01 	lds	r31, 0x0105
     7a0:	10 82       	st	Z, r1
     7a2:	01 97       	sbiw	r24, 0x01	; 1
     7a4:	00 97       	sbiw	r24, 0x00	; 0
     7a6:	c1 f7       	brne	.-16     	; 0x798 <oled_clear_line+0x4>
     7a8:	08 95       	ret

000007aa <oled_clear_screen>:
     7aa:	cf 93       	push	r28
     7ac:	df 93       	push	r29
     7ae:	c0 e0       	ldi	r28, 0x00	; 0
     7b0:	d0 e0       	ldi	r29, 0x00	; 0
     7b2:	ce 01       	movw	r24, r28
     7b4:	0e 94 bd 03 	call	0x77a	; 0x77a <oled_goto_page>
     7b8:	0e 94 ca 03 	call	0x794	; 0x794 <oled_clear_line>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7bc:	80 e0       	ldi	r24, 0x00	; 0
     7be:	90 ef       	ldi	r25, 0xF0	; 240
     7c0:	01 97       	sbiw	r24, 0x01	; 1
     7c2:	f1 f7       	brne	.-4      	; 0x7c0 <oled_clear_screen+0x16>
     7c4:	21 96       	adiw	r28, 0x01	; 1
     7c6:	c8 30       	cpi	r28, 0x08	; 8
     7c8:	d1 05       	cpc	r29, r1
     7ca:	99 f7       	brne	.-26     	; 0x7b2 <oled_clear_screen+0x8>
     7cc:	df 91       	pop	r29
     7ce:	cf 91       	pop	r28
     7d0:	08 95       	ret

000007d2 <oled_pos>:
     7d2:	cf 93       	push	r28
     7d4:	df 93       	push	r29
     7d6:	eb 01       	movw	r28, r22
     7d8:	0e 94 bd 03 	call	0x77a	; 0x77a <oled_goto_page>
     7dc:	c0 31       	cpi	r28, 0x10	; 16
     7de:	d1 05       	cpc	r29, r1
     7e0:	e8 f4       	brcc	.+58     	; 0x81c <oled_pos+0x4a>
     7e2:	8c 2f       	mov	r24, r28
     7e4:	88 0f       	add	r24, r24
     7e6:	88 0f       	add	r24, r24
     7e8:	88 0f       	add	r24, r24
     7ea:	80 93 3e 03 	sts	0x033E, r24
     7ee:	e0 91 06 01 	lds	r30, 0x0106
     7f2:	f0 91 07 01 	lds	r31, 0x0107
     7f6:	cc 0f       	add	r28, r28
     7f8:	dd 1f       	adc	r29, r29
     7fa:	cc 0f       	add	r28, r28
     7fc:	dd 1f       	adc	r29, r29
     7fe:	cc 0f       	add	r28, r28
     800:	dd 1f       	adc	r29, r29
     802:	d2 95       	swap	r29
     804:	c2 95       	swap	r28
     806:	cf 70       	andi	r28, 0x0F	; 15
     808:	cd 27       	eor	r28, r29
     80a:	df 70       	andi	r29, 0x0F	; 15
     80c:	cd 27       	eor	r28, r29
     80e:	c0 83       	st	Z, r28
     810:	e0 91 06 01 	lds	r30, 0x0106
     814:	f0 91 07 01 	lds	r31, 0x0107
     818:	c0 5f       	subi	r28, 0xF0	; 240
     81a:	c0 83       	st	Z, r28
     81c:	df 91       	pop	r29
     81e:	cf 91       	pop	r28
     820:	08 95       	ret

00000822 <oled_printf>:
     822:	cf 93       	push	r28
     824:	df 93       	push	r29
     826:	cd b7       	in	r28, 0x3d	; 61
     828:	de b7       	in	r29, 0x3e	; 62
     82a:	fe 01       	movw	r30, r28
     82c:	35 96       	adiw	r30, 0x05	; 5
     82e:	61 91       	ld	r22, Z+
     830:	71 91       	ld	r23, Z+
     832:	af 01       	movw	r20, r30
     834:	88 e0       	ldi	r24, 0x08	; 8
     836:	91 e0       	ldi	r25, 0x01	; 1
     838:	0e 94 af 06 	call	0xd5e	; 0xd5e <vfprintf>
     83c:	df 91       	pop	r29
     83e:	cf 91       	pop	r28
     840:	08 95       	ret

00000842 <oled_init>:
     842:	e0 91 06 01 	lds	r30, 0x0106
     846:	f0 91 07 01 	lds	r31, 0x0107
     84a:	8e ea       	ldi	r24, 0xAE	; 174
     84c:	80 83       	st	Z, r24
     84e:	e0 91 06 01 	lds	r30, 0x0106
     852:	f0 91 07 01 	lds	r31, 0x0107
     856:	81 ea       	ldi	r24, 0xA1	; 161
     858:	80 83       	st	Z, r24
     85a:	e0 91 06 01 	lds	r30, 0x0106
     85e:	f0 91 07 01 	lds	r31, 0x0107
     862:	8a ed       	ldi	r24, 0xDA	; 218
     864:	80 83       	st	Z, r24
     866:	e0 91 06 01 	lds	r30, 0x0106
     86a:	f0 91 07 01 	lds	r31, 0x0107
     86e:	82 e1       	ldi	r24, 0x12	; 18
     870:	80 83       	st	Z, r24
     872:	e0 91 06 01 	lds	r30, 0x0106
     876:	f0 91 07 01 	lds	r31, 0x0107
     87a:	88 ec       	ldi	r24, 0xC8	; 200
     87c:	80 83       	st	Z, r24
     87e:	e0 91 06 01 	lds	r30, 0x0106
     882:	f0 91 07 01 	lds	r31, 0x0107
     886:	88 ea       	ldi	r24, 0xA8	; 168
     888:	80 83       	st	Z, r24
     88a:	e0 91 06 01 	lds	r30, 0x0106
     88e:	f0 91 07 01 	lds	r31, 0x0107
     892:	8f e3       	ldi	r24, 0x3F	; 63
     894:	80 83       	st	Z, r24
     896:	e0 91 06 01 	lds	r30, 0x0106
     89a:	f0 91 07 01 	lds	r31, 0x0107
     89e:	85 ed       	ldi	r24, 0xD5	; 213
     8a0:	80 83       	st	Z, r24
     8a2:	e0 91 06 01 	lds	r30, 0x0106
     8a6:	f0 91 07 01 	lds	r31, 0x0107
     8aa:	80 e8       	ldi	r24, 0x80	; 128
     8ac:	80 83       	st	Z, r24
     8ae:	e0 91 06 01 	lds	r30, 0x0106
     8b2:	f0 91 07 01 	lds	r31, 0x0107
     8b6:	81 e8       	ldi	r24, 0x81	; 129
     8b8:	80 83       	st	Z, r24
     8ba:	e0 91 06 01 	lds	r30, 0x0106
     8be:	f0 91 07 01 	lds	r31, 0x0107
     8c2:	80 e5       	ldi	r24, 0x50	; 80
     8c4:	80 83       	st	Z, r24
     8c6:	e0 91 06 01 	lds	r30, 0x0106
     8ca:	f0 91 07 01 	lds	r31, 0x0107
     8ce:	89 ed       	ldi	r24, 0xD9	; 217
     8d0:	80 83       	st	Z, r24
     8d2:	e0 91 06 01 	lds	r30, 0x0106
     8d6:	f0 91 07 01 	lds	r31, 0x0107
     8da:	81 e2       	ldi	r24, 0x21	; 33
     8dc:	80 83       	st	Z, r24
     8de:	e0 91 06 01 	lds	r30, 0x0106
     8e2:	f0 91 07 01 	lds	r31, 0x0107
     8e6:	80 e2       	ldi	r24, 0x20	; 32
     8e8:	80 83       	st	Z, r24
     8ea:	e0 91 06 01 	lds	r30, 0x0106
     8ee:	f0 91 07 01 	lds	r31, 0x0107
     8f2:	82 e0       	ldi	r24, 0x02	; 2
     8f4:	80 83       	st	Z, r24
     8f6:	e0 91 06 01 	lds	r30, 0x0106
     8fa:	f0 91 07 01 	lds	r31, 0x0107
     8fe:	8b ed       	ldi	r24, 0xDB	; 219
     900:	80 83       	st	Z, r24
     902:	e0 91 06 01 	lds	r30, 0x0106
     906:	f0 91 07 01 	lds	r31, 0x0107
     90a:	80 e3       	ldi	r24, 0x30	; 48
     90c:	80 83       	st	Z, r24
     90e:	e0 91 06 01 	lds	r30, 0x0106
     912:	f0 91 07 01 	lds	r31, 0x0107
     916:	8d ea       	ldi	r24, 0xAD	; 173
     918:	80 83       	st	Z, r24
     91a:	e0 91 06 01 	lds	r30, 0x0106
     91e:	f0 91 07 01 	lds	r31, 0x0107
     922:	10 82       	st	Z, r1
     924:	e0 91 06 01 	lds	r30, 0x0106
     928:	f0 91 07 01 	lds	r31, 0x0107
     92c:	84 ea       	ldi	r24, 0xA4	; 164
     92e:	80 83       	st	Z, r24
     930:	e0 91 06 01 	lds	r30, 0x0106
     934:	f0 91 07 01 	lds	r31, 0x0107
     938:	86 ea       	ldi	r24, 0xA6	; 166
     93a:	80 83       	st	Z, r24
     93c:	e0 91 06 01 	lds	r30, 0x0106
     940:	f0 91 07 01 	lds	r31, 0x0107
     944:	8f ea       	ldi	r24, 0xAF	; 175
     946:	80 83       	st	Z, r24
     948:	0e 94 d5 03 	call	0x7aa	; 0x7aa <oled_clear_screen>
     94c:	63 e0       	ldi	r22, 0x03	; 3
     94e:	70 e0       	ldi	r23, 0x00	; 0
     950:	82 e0       	ldi	r24, 0x02	; 2
     952:	90 e0       	ldi	r25, 0x00	; 0
     954:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <oled_pos>
     958:	81 ef       	ldi	r24, 0xF1	; 241
     95a:	91 e0       	ldi	r25, 0x01	; 1
     95c:	9f 93       	push	r25
     95e:	8f 93       	push	r24
     960:	0e 94 11 04 	call	0x822	; 0x822 <oled_printf>
     964:	67 e0       	ldi	r22, 0x07	; 7
     966:	70 e0       	ldi	r23, 0x00	; 0
     968:	83 e0       	ldi	r24, 0x03	; 3
     96a:	90 e0       	ldi	r25, 0x00	; 0
     96c:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <oled_pos>
     970:	88 ef       	ldi	r24, 0xF8	; 248
     972:	91 e0       	ldi	r25, 0x01	; 1
     974:	9f 93       	push	r25
     976:	8f 93       	push	r24
     978:	0e 94 11 04 	call	0x822	; 0x822 <oled_printf>
     97c:	69 e0       	ldi	r22, 0x09	; 9
     97e:	70 e0       	ldi	r23, 0x00	; 0
     980:	84 e0       	ldi	r24, 0x04	; 4
     982:	90 e0       	ldi	r25, 0x00	; 0
     984:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <oled_pos>
     988:	8c ef       	ldi	r24, 0xFC	; 252
     98a:	91 e0       	ldi	r25, 0x01	; 1
     98c:	9f 93       	push	r25
     98e:	8f 93       	push	r24
     990:	0e 94 11 04 	call	0x822	; 0x822 <oled_printf>
     994:	2f ef       	ldi	r18, 0xFF	; 255
     996:	8f ef       	ldi	r24, 0xFF	; 255
     998:	9b e0       	ldi	r25, 0x0B	; 11
     99a:	21 50       	subi	r18, 0x01	; 1
     99c:	80 40       	sbci	r24, 0x00	; 0
     99e:	90 40       	sbci	r25, 0x00	; 0
     9a0:	e1 f7       	brne	.-8      	; 0x99a <oled_init+0x158>
     9a2:	00 c0       	rjmp	.+0      	; 0x9a4 <oled_init+0x162>
     9a4:	00 c0       	rjmp	.+0      	; 0x9a6 <oled_init+0x164>
     9a6:	0e 94 d5 03 	call	0x7aa	; 0x7aa <oled_clear_screen>
     9aa:	0f 90       	pop	r0
     9ac:	0f 90       	pop	r0
     9ae:	0f 90       	pop	r0
     9b0:	0f 90       	pop	r0
     9b2:	0f 90       	pop	r0
     9b4:	0f 90       	pop	r0
     9b6:	08 95       	ret

000009b8 <spi_init>:
     9b8:	87 b3       	in	r24, 0x17	; 23
     9ba:	80 6b       	ori	r24, 0xB0	; 176
     9bc:	87 bb       	out	0x17, r24	; 23
     9be:	be 98       	cbi	0x17, 6	; 23
     9c0:	8d b1       	in	r24, 0x0d	; 13
     9c2:	81 65       	ori	r24, 0x51	; 81
     9c4:	8d b9       	out	0x0d, r24	; 13
     9c6:	08 95       	ret

000009c8 <spi_send>:
     9c8:	8f b9       	out	0x0f, r24	; 15
     9ca:	77 9b       	sbis	0x0e, 7	; 14
     9cc:	fe cf       	rjmp	.-4      	; 0x9ca <spi_send+0x2>
     9ce:	08 95       	ret

000009d0 <spi_read>:
     9d0:	8a ea       	ldi	r24, 0xAA	; 170
     9d2:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <spi_send>
     9d6:	77 9b       	sbis	0x0e, 7	; 14
     9d8:	fe cf       	rjmp	.-4      	; 0x9d6 <spi_read+0x6>
     9da:	8f b1       	in	r24, 0x0f	; 15
     9dc:	08 95       	ret

000009de <spi_select>:
     9de:	c4 98       	cbi	0x18, 4	; 24
     9e0:	08 95       	ret

000009e2 <spi_deselect>:
     9e2:	c4 9a       	sbi	0x18, 4	; 24
     9e4:	08 95       	ret

000009e6 <SRAM_test>:
     9e6:	cf 92       	push	r12
     9e8:	df 92       	push	r13
     9ea:	ef 92       	push	r14
     9ec:	ff 92       	push	r15
     9ee:	0f 93       	push	r16
     9f0:	1f 93       	push	r17
     9f2:	cf 93       	push	r28
     9f4:	df 93       	push	r29
     9f6:	0e 94 d5 03 	call	0x7aa	; 0x7aa <oled_clear_screen>
     9fa:	62 e0       	ldi	r22, 0x02	; 2
     9fc:	70 e0       	ldi	r23, 0x00	; 0
     9fe:	83 e0       	ldi	r24, 0x03	; 3
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <oled_pos>
     a06:	82 e0       	ldi	r24, 0x02	; 2
     a08:	92 e0       	ldi	r25, 0x02	; 2
     a0a:	9f 93       	push	r25
     a0c:	8f 93       	push	r24
     a0e:	0e 94 11 04 	call	0x822	; 0x822 <oled_printf>
     a12:	8f e0       	ldi	r24, 0x0F	; 15
     a14:	92 e0       	ldi	r25, 0x02	; 2
     a16:	0e 94 82 06 	call	0xd04	; 0xd04 <puts>
     a1a:	0e 94 5e 06 	call	0xcbc	; 0xcbc <rand>
     a1e:	6c 01       	movw	r12, r24
     a20:	0e 94 63 06 	call	0xcc6	; 0xcc6 <srand>
     a24:	0f 90       	pop	r0
     a26:	0f 90       	pop	r0
     a28:	c0 e0       	ldi	r28, 0x00	; 0
     a2a:	d0 e0       	ldi	r29, 0x00	; 0
     a2c:	00 e0       	ldi	r16, 0x00	; 0
     a2e:	10 e0       	ldi	r17, 0x00	; 0
     a30:	0f 2e       	mov	r0, r31
     a32:	f6 e2       	ldi	r31, 0x26	; 38
     a34:	ef 2e       	mov	r14, r31
     a36:	f2 e0       	ldi	r31, 0x02	; 2
     a38:	ff 2e       	mov	r15, r31
     a3a:	f0 2d       	mov	r31, r0
     a3c:	0e 94 5e 06 	call	0xcbc	; 0xcbc <rand>
     a40:	fe 01       	movw	r30, r28
     a42:	f8 5e       	subi	r31, 0xE8	; 232
     a44:	80 83       	st	Z, r24
     a46:	20 81       	ld	r18, Z
     a48:	28 17       	cp	r18, r24
     a4a:	a9 f0       	breq	.+42     	; 0xa76 <SRAM_test+0x90>
     a4c:	99 27       	eor	r25, r25
     a4e:	9f 93       	push	r25
     a50:	8f 93       	push	r24
     a52:	1f 92       	push	r1
     a54:	2f 93       	push	r18
     a56:	df 93       	push	r29
     a58:	cf 93       	push	r28
     a5a:	ff 92       	push	r15
     a5c:	ef 92       	push	r14
     a5e:	0e 94 6e 06 	call	0xcdc	; 0xcdc <printf>
     a62:	0f 5f       	subi	r16, 0xFF	; 255
     a64:	1f 4f       	sbci	r17, 0xFF	; 255
     a66:	8d b7       	in	r24, 0x3d	; 61
     a68:	9e b7       	in	r25, 0x3e	; 62
     a6a:	08 96       	adiw	r24, 0x08	; 8
     a6c:	0f b6       	in	r0, 0x3f	; 63
     a6e:	f8 94       	cli
     a70:	9e bf       	out	0x3e, r25	; 62
     a72:	0f be       	out	0x3f, r0	; 63
     a74:	8d bf       	out	0x3d, r24	; 61
     a76:	21 96       	adiw	r28, 0x01	; 1
     a78:	c1 15       	cp	r28, r1
     a7a:	98 e0       	ldi	r25, 0x08	; 8
     a7c:	d9 07       	cpc	r29, r25
     a7e:	f1 f6       	brne	.-68     	; 0xa3c <SRAM_test+0x56>
     a80:	c6 01       	movw	r24, r12
     a82:	0e 94 63 06 	call	0xcc6	; 0xcc6 <srand>
     a86:	c0 e0       	ldi	r28, 0x00	; 0
     a88:	d0 e0       	ldi	r29, 0x00	; 0
     a8a:	e1 2c       	mov	r14, r1
     a8c:	f1 2c       	mov	r15, r1
     a8e:	0f 2e       	mov	r0, r31
     a90:	ff e5       	ldi	r31, 0x5F	; 95
     a92:	cf 2e       	mov	r12, r31
     a94:	f2 e0       	ldi	r31, 0x02	; 2
     a96:	df 2e       	mov	r13, r31
     a98:	f0 2d       	mov	r31, r0
     a9a:	0e 94 5e 06 	call	0xcbc	; 0xcbc <rand>
     a9e:	fe 01       	movw	r30, r28
     aa0:	f8 5e       	subi	r31, 0xE8	; 232
     aa2:	20 81       	ld	r18, Z
     aa4:	28 17       	cp	r18, r24
     aa6:	b1 f0       	breq	.+44     	; 0xad4 <SRAM_test+0xee>
     aa8:	99 27       	eor	r25, r25
     aaa:	9f 93       	push	r25
     aac:	8f 93       	push	r24
     aae:	1f 92       	push	r1
     ab0:	2f 93       	push	r18
     ab2:	df 93       	push	r29
     ab4:	cf 93       	push	r28
     ab6:	df 92       	push	r13
     ab8:	cf 92       	push	r12
     aba:	0e 94 6e 06 	call	0xcdc	; 0xcdc <printf>
     abe:	9f ef       	ldi	r25, 0xFF	; 255
     ac0:	e9 1a       	sub	r14, r25
     ac2:	f9 0a       	sbc	r15, r25
     ac4:	8d b7       	in	r24, 0x3d	; 61
     ac6:	9e b7       	in	r25, 0x3e	; 62
     ac8:	08 96       	adiw	r24, 0x08	; 8
     aca:	0f b6       	in	r0, 0x3f	; 63
     acc:	f8 94       	cli
     ace:	9e bf       	out	0x3e, r25	; 62
     ad0:	0f be       	out	0x3f, r0	; 63
     ad2:	8d bf       	out	0x3d, r24	; 61
     ad4:	21 96       	adiw	r28, 0x01	; 1
     ad6:	c1 15       	cp	r28, r1
     ad8:	98 e0       	ldi	r25, 0x08	; 8
     ada:	d9 07       	cpc	r29, r25
     adc:	f1 f6       	brne	.-68     	; 0xa9a <SRAM_test+0xb4>
     ade:	e1 14       	cp	r14, r1
     ae0:	f1 04       	cpc	r15, r1
     ae2:	19 f4       	brne	.+6      	; 0xaea <SRAM_test+0x104>
     ae4:	01 15       	cp	r16, r1
     ae6:	11 05       	cpc	r17, r1
     ae8:	71 f1       	breq	.+92     	; 0xb46 <SRAM_test+0x160>
     aea:	60 e0       	ldi	r22, 0x00	; 0
     aec:	70 e0       	ldi	r23, 0x00	; 0
     aee:	85 e0       	ldi	r24, 0x05	; 5
     af0:	90 e0       	ldi	r25, 0x00	; 0
     af2:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <oled_pos>
     af6:	ff 92       	push	r15
     af8:	ef 92       	push	r14
     afa:	8c e9       	ldi	r24, 0x9C	; 156
     afc:	92 e0       	ldi	r25, 0x02	; 2
     afe:	9f 93       	push	r25
     b00:	8f 93       	push	r24
     b02:	0e 94 11 04 	call	0x822	; 0x822 <oled_printf>
     b06:	60 e0       	ldi	r22, 0x00	; 0
     b08:	70 e0       	ldi	r23, 0x00	; 0
     b0a:	86 e0       	ldi	r24, 0x06	; 6
     b0c:	90 e0       	ldi	r25, 0x00	; 0
     b0e:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <oled_pos>
     b12:	1f 93       	push	r17
     b14:	0f 93       	push	r16
     b16:	8b ea       	ldi	r24, 0xAB	; 171
     b18:	92 e0       	ldi	r25, 0x02	; 2
     b1a:	9f 93       	push	r25
     b1c:	8f 93       	push	r24
     b1e:	0e 94 11 04 	call	0x822	; 0x822 <oled_printf>
     b22:	2f ef       	ldi	r18, 0xFF	; 255
     b24:	8f ef       	ldi	r24, 0xFF	; 255
     b26:	9b e3       	ldi	r25, 0x3B	; 59
     b28:	21 50       	subi	r18, 0x01	; 1
     b2a:	80 40       	sbci	r24, 0x00	; 0
     b2c:	90 40       	sbci	r25, 0x00	; 0
     b2e:	e1 f7       	brne	.-8      	; 0xb28 <SRAM_test+0x142>
     b30:	00 c0       	rjmp	.+0      	; 0xb32 <SRAM_test+0x14c>
     b32:	00 00       	nop
     b34:	8d b7       	in	r24, 0x3d	; 61
     b36:	9e b7       	in	r25, 0x3e	; 62
     b38:	08 96       	adiw	r24, 0x08	; 8
     b3a:	0f b6       	in	r0, 0x3f	; 63
     b3c:	f8 94       	cli
     b3e:	9e bf       	out	0x3e, r25	; 62
     b40:	0f be       	out	0x3f, r0	; 63
     b42:	8d bf       	out	0x3d, r24	; 61
     b44:	0e c0       	rjmp	.+28     	; 0xb62 <SRAM_test+0x17c>
     b46:	64 e0       	ldi	r22, 0x04	; 4
     b48:	70 e0       	ldi	r23, 0x00	; 0
     b4a:	86 e0       	ldi	r24, 0x06	; 6
     b4c:	90 e0       	ldi	r25, 0x00	; 0
     b4e:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <oled_pos>
     b52:	8a eb       	ldi	r24, 0xBA	; 186
     b54:	92 e0       	ldi	r25, 0x02	; 2
     b56:	9f 93       	push	r25
     b58:	8f 93       	push	r24
     b5a:	0e 94 11 04 	call	0x822	; 0x822 <oled_printf>
     b5e:	0f 90       	pop	r0
     b60:	0f 90       	pop	r0
     b62:	ff 92       	push	r15
     b64:	ef 92       	push	r14
     b66:	1f 93       	push	r17
     b68:	0f 93       	push	r16
     b6a:	84 ec       	ldi	r24, 0xC4	; 196
     b6c:	92 e0       	ldi	r25, 0x02	; 2
     b6e:	9f 93       	push	r25
     b70:	8f 93       	push	r24
     b72:	0e 94 6e 06 	call	0xcdc	; 0xcdc <printf>
     b76:	0f 90       	pop	r0
     b78:	0f 90       	pop	r0
     b7a:	0f 90       	pop	r0
     b7c:	0f 90       	pop	r0
     b7e:	0f 90       	pop	r0
     b80:	0f 90       	pop	r0
     b82:	df 91       	pop	r29
     b84:	cf 91       	pop	r28
     b86:	1f 91       	pop	r17
     b88:	0f 91       	pop	r16
     b8a:	ff 90       	pop	r15
     b8c:	ef 90       	pop	r14
     b8e:	df 90       	pop	r13
     b90:	cf 90       	pop	r12
     b92:	08 95       	ret

00000b94 <SRAM_init>:
     b94:	80 e8       	ldi	r24, 0x80	; 128
     b96:	85 bf       	out	0x35, r24	; 53
     b98:	8f ef       	ldi	r24, 0xFF	; 255
     b9a:	8a bb       	out	0x1a, r24	; 26
     b9c:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <SRAM_test>
     ba0:	08 95       	ret

00000ba2 <uart_sendChar>:
     ba2:	5d 9b       	sbis	0x0b, 5	; 11
     ba4:	fe cf       	rjmp	.-4      	; 0xba2 <uart_sendChar>
     ba6:	8c b9       	out	0x0c, r24	; 12
     ba8:	08 95       	ret

00000baa <uart_getChar>:
     baa:	5f 9b       	sbis	0x0b, 7	; 11
     bac:	fe cf       	rjmp	.-4      	; 0xbaa <uart_getChar>
     bae:	8c b1       	in	r24, 0x0c	; 12
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	08 95       	ret

00000bb4 <uart_init>:
     bb4:	89 b9       	out	0x09, r24	; 9
     bb6:	88 e1       	ldi	r24, 0x18	; 24
     bb8:	8a b9       	out	0x0a, r24	; 10
     bba:	86 e1       	ldi	r24, 0x16	; 22
     bbc:	91 e0       	ldi	r25, 0x01	; 1
     bbe:	90 93 42 03 	sts	0x0342, r25
     bc2:	80 93 41 03 	sts	0x0341, r24
     bc6:	90 93 40 03 	sts	0x0340, r25
     bca:	80 93 3f 03 	sts	0x033F, r24
     bce:	08 95       	ret

00000bd0 <main>:
#include "Drivers/uart_driver.h"
#include "Drivers/mcp2515_driver.h"
#include "Drivers/can_driver.h"

int main(void) {
    uart_init(MYUBRR);
     bd0:	8f e1       	ldi	r24, 0x1F	; 31
     bd2:	90 e0       	ldi	r25, 0x00	; 0
     bd4:	0e 94 da 05 	call	0xbb4	; 0xbb4 <uart_init>
	printf("\nREBOOTED\n");
     bd8:	8d e1       	ldi	r24, 0x1D	; 29
     bda:	93 e0       	ldi	r25, 0x03	; 3
     bdc:	0e 94 82 06 	call	0xd04	; 0xd04 <puts>
	SRAM_init();
     be0:	0e 94 ca 05 	call	0xb94	; 0xb94 <SRAM_init>
	joystick_init();
     be4:	0e 94 08 03 	call	0x610	; 0x610 <joystick_init>
	oled_init();
     be8:	0e 94 21 04 	call	0x842	; 0x842 <oled_init>
	//mcp2515_init();
	can_init();	
     bec:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <can_init>

	printf("\nAll init done\n\n");
     bf0:	87 e2       	ldi	r24, 0x27	; 39
     bf2:	93 e0       	ldi	r25, 0x03	; 3
     bf4:	0e 94 82 06 	call	0xd04	; 0xd04 <puts>
	//_delay_ms(1000);

	//mcp2515_test();
	//can_test();
	can_joy_test();
     bf8:	0e 94 cd 02 	call	0x59a	; 0x59a <can_joy_test>
     bfc:	8f ef       	ldi	r24, 0xFF	; 255
     bfe:	9f e2       	ldi	r25, 0x2F	; 47
     c00:	01 97       	sbiw	r24, 0x01	; 1
     c02:	f1 f7       	brne	.-4      	; 0xc00 <main+0x30>
     c04:	00 c0       	rjmp	.+0      	; 0xc06 <main+0x36>
     c06:	00 00       	nop
     c08:	f9 cf       	rjmp	.-14     	; 0xbfc <main+0x2c>

00000c0a <flash_diode>:
#include "Drivers/oled_driver.h"


//Simple test, Ex 1, task 6
void flash_diode(){
	PORTB |= (1<<PINB0);
     c0a:	c0 9a       	sbi	0x18, 0	; 24
     c0c:	80 e0       	ldi	r24, 0x00	; 0
     c0e:	90 ef       	ldi	r25, 0xF0	; 240
     c10:	01 97       	sbiw	r24, 0x01	; 1
     c12:	f1 f7       	brne	.-4      	; 0xc10 <flash_diode+0x6>
	_delay_ms(50);
	PORTB &= ~(1<<PINB0);
     c14:	c0 98       	cbi	0x18, 0	; 24
     c16:	80 e0       	ldi	r24, 0x00	; 0
     c18:	90 ef       	ldi	r25, 0xF0	; 240
     c1a:	01 97       	sbiw	r24, 0x01	; 1
     c1c:	f1 f7       	brne	.-4      	; 0xc1a <flash_diode+0x10>
     c1e:	08 95       	ret

00000c20 <do_rand>:
     c20:	8f 92       	push	r8
     c22:	9f 92       	push	r9
     c24:	af 92       	push	r10
     c26:	bf 92       	push	r11
     c28:	cf 92       	push	r12
     c2a:	df 92       	push	r13
     c2c:	ef 92       	push	r14
     c2e:	ff 92       	push	r15
     c30:	cf 93       	push	r28
     c32:	df 93       	push	r29
     c34:	ec 01       	movw	r28, r24
     c36:	68 81       	ld	r22, Y
     c38:	79 81       	ldd	r23, Y+1	; 0x01
     c3a:	8a 81       	ldd	r24, Y+2	; 0x02
     c3c:	9b 81       	ldd	r25, Y+3	; 0x03
     c3e:	61 15       	cp	r22, r1
     c40:	71 05       	cpc	r23, r1
     c42:	81 05       	cpc	r24, r1
     c44:	91 05       	cpc	r25, r1
     c46:	21 f4       	brne	.+8      	; 0xc50 <do_rand+0x30>
     c48:	64 e2       	ldi	r22, 0x24	; 36
     c4a:	79 ed       	ldi	r23, 0xD9	; 217
     c4c:	8b e5       	ldi	r24, 0x5B	; 91
     c4e:	97 e0       	ldi	r25, 0x07	; 7
     c50:	2d e1       	ldi	r18, 0x1D	; 29
     c52:	33 ef       	ldi	r19, 0xF3	; 243
     c54:	41 e0       	ldi	r20, 0x01	; 1
     c56:	50 e0       	ldi	r21, 0x00	; 0
     c58:	0e 94 27 09 	call	0x124e	; 0x124e <__divmodsi4>
     c5c:	49 01       	movw	r8, r18
     c5e:	5a 01       	movw	r10, r20
     c60:	9b 01       	movw	r18, r22
     c62:	ac 01       	movw	r20, r24
     c64:	a7 ea       	ldi	r26, 0xA7	; 167
     c66:	b1 e4       	ldi	r27, 0x41	; 65
     c68:	0e 94 46 09 	call	0x128c	; 0x128c <__muluhisi3>
     c6c:	6b 01       	movw	r12, r22
     c6e:	7c 01       	movw	r14, r24
     c70:	ac ee       	ldi	r26, 0xEC	; 236
     c72:	b4 ef       	ldi	r27, 0xF4	; 244
     c74:	a5 01       	movw	r20, r10
     c76:	94 01       	movw	r18, r8
     c78:	0e 94 54 09 	call	0x12a8	; 0x12a8 <__mulohisi3>
     c7c:	c6 0e       	add	r12, r22
     c7e:	d7 1e       	adc	r13, r23
     c80:	e8 1e       	adc	r14, r24
     c82:	f9 1e       	adc	r15, r25
     c84:	f7 fe       	sbrs	r15, 7
     c86:	06 c0       	rjmp	.+12     	; 0xc94 <do_rand+0x74>
     c88:	81 e0       	ldi	r24, 0x01	; 1
     c8a:	c8 1a       	sub	r12, r24
     c8c:	d1 08       	sbc	r13, r1
     c8e:	e1 08       	sbc	r14, r1
     c90:	80 e8       	ldi	r24, 0x80	; 128
     c92:	f8 0a       	sbc	r15, r24
     c94:	c8 82       	st	Y, r12
     c96:	d9 82       	std	Y+1, r13	; 0x01
     c98:	ea 82       	std	Y+2, r14	; 0x02
     c9a:	fb 82       	std	Y+3, r15	; 0x03
     c9c:	c6 01       	movw	r24, r12
     c9e:	9f 77       	andi	r25, 0x7F	; 127
     ca0:	df 91       	pop	r29
     ca2:	cf 91       	pop	r28
     ca4:	ff 90       	pop	r15
     ca6:	ef 90       	pop	r14
     ca8:	df 90       	pop	r13
     caa:	cf 90       	pop	r12
     cac:	bf 90       	pop	r11
     cae:	af 90       	pop	r10
     cb0:	9f 90       	pop	r9
     cb2:	8f 90       	pop	r8
     cb4:	08 95       	ret

00000cb6 <rand_r>:
     cb6:	0e 94 10 06 	call	0xc20	; 0xc20 <do_rand>
     cba:	08 95       	ret

00000cbc <rand>:
     cbc:	80 e0       	ldi	r24, 0x00	; 0
     cbe:	91 e0       	ldi	r25, 0x01	; 1
     cc0:	0e 94 10 06 	call	0xc20	; 0xc20 <do_rand>
     cc4:	08 95       	ret

00000cc6 <srand>:
     cc6:	a0 e0       	ldi	r26, 0x00	; 0
     cc8:	b0 e0       	ldi	r27, 0x00	; 0
     cca:	80 93 00 01 	sts	0x0100, r24
     cce:	90 93 01 01 	sts	0x0101, r25
     cd2:	a0 93 02 01 	sts	0x0102, r26
     cd6:	b0 93 03 01 	sts	0x0103, r27
     cda:	08 95       	ret

00000cdc <printf>:
     cdc:	a0 e0       	ldi	r26, 0x00	; 0
     cde:	b0 e0       	ldi	r27, 0x00	; 0
     ce0:	e4 e7       	ldi	r30, 0x74	; 116
     ce2:	f6 e0       	ldi	r31, 0x06	; 6
     ce4:	0c 94 69 09 	jmp	0x12d2	; 0x12d2 <__prologue_saves__+0x20>
     ce8:	fe 01       	movw	r30, r28
     cea:	35 96       	adiw	r30, 0x05	; 5
     cec:	61 91       	ld	r22, Z+
     cee:	71 91       	ld	r23, Z+
     cf0:	af 01       	movw	r20, r30
     cf2:	80 91 41 03 	lds	r24, 0x0341
     cf6:	90 91 42 03 	lds	r25, 0x0342
     cfa:	0e 94 af 06 	call	0xd5e	; 0xd5e <vfprintf>
     cfe:	e2 e0       	ldi	r30, 0x02	; 2
     d00:	0c 94 85 09 	jmp	0x130a	; 0x130a <__epilogue_restores__+0x20>

00000d04 <puts>:
     d04:	0f 93       	push	r16
     d06:	1f 93       	push	r17
     d08:	cf 93       	push	r28
     d0a:	df 93       	push	r29
     d0c:	e0 91 41 03 	lds	r30, 0x0341
     d10:	f0 91 42 03 	lds	r31, 0x0342
     d14:	23 81       	ldd	r18, Z+3	; 0x03
     d16:	21 ff       	sbrs	r18, 1
     d18:	1b c0       	rjmp	.+54     	; 0xd50 <puts+0x4c>
     d1a:	ec 01       	movw	r28, r24
     d1c:	00 e0       	ldi	r16, 0x00	; 0
     d1e:	10 e0       	ldi	r17, 0x00	; 0
     d20:	89 91       	ld	r24, Y+
     d22:	60 91 41 03 	lds	r22, 0x0341
     d26:	70 91 42 03 	lds	r23, 0x0342
     d2a:	db 01       	movw	r26, r22
     d2c:	18 96       	adiw	r26, 0x08	; 8
     d2e:	ed 91       	ld	r30, X+
     d30:	fc 91       	ld	r31, X
     d32:	19 97       	sbiw	r26, 0x09	; 9
     d34:	88 23       	and	r24, r24
     d36:	31 f0       	breq	.+12     	; 0xd44 <puts+0x40>
     d38:	09 95       	icall
     d3a:	89 2b       	or	r24, r25
     d3c:	89 f3       	breq	.-30     	; 0xd20 <puts+0x1c>
     d3e:	0f ef       	ldi	r16, 0xFF	; 255
     d40:	1f ef       	ldi	r17, 0xFF	; 255
     d42:	ee cf       	rjmp	.-36     	; 0xd20 <puts+0x1c>
     d44:	8a e0       	ldi	r24, 0x0A	; 10
     d46:	09 95       	icall
     d48:	89 2b       	or	r24, r25
     d4a:	11 f4       	brne	.+4      	; 0xd50 <puts+0x4c>
     d4c:	c8 01       	movw	r24, r16
     d4e:	02 c0       	rjmp	.+4      	; 0xd54 <puts+0x50>
     d50:	8f ef       	ldi	r24, 0xFF	; 255
     d52:	9f ef       	ldi	r25, 0xFF	; 255
     d54:	df 91       	pop	r29
     d56:	cf 91       	pop	r28
     d58:	1f 91       	pop	r17
     d5a:	0f 91       	pop	r16
     d5c:	08 95       	ret

00000d5e <vfprintf>:
     d5e:	ac e0       	ldi	r26, 0x0C	; 12
     d60:	b0 e0       	ldi	r27, 0x00	; 0
     d62:	e5 eb       	ldi	r30, 0xB5	; 181
     d64:	f6 e0       	ldi	r31, 0x06	; 6
     d66:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__prologue_saves__>
     d6a:	7c 01       	movw	r14, r24
     d6c:	6b 01       	movw	r12, r22
     d6e:	8a 01       	movw	r16, r20
     d70:	fc 01       	movw	r30, r24
     d72:	17 82       	std	Z+7, r1	; 0x07
     d74:	16 82       	std	Z+6, r1	; 0x06
     d76:	83 81       	ldd	r24, Z+3	; 0x03
     d78:	81 ff       	sbrs	r24, 1
     d7a:	bd c1       	rjmp	.+890    	; 0x10f6 <vfprintf+0x398>
     d7c:	ce 01       	movw	r24, r28
     d7e:	01 96       	adiw	r24, 0x01	; 1
     d80:	4c 01       	movw	r8, r24
     d82:	f7 01       	movw	r30, r14
     d84:	93 81       	ldd	r25, Z+3	; 0x03
     d86:	f6 01       	movw	r30, r12
     d88:	93 fd       	sbrc	r25, 3
     d8a:	85 91       	lpm	r24, Z+
     d8c:	93 ff       	sbrs	r25, 3
     d8e:	81 91       	ld	r24, Z+
     d90:	6f 01       	movw	r12, r30
     d92:	88 23       	and	r24, r24
     d94:	09 f4       	brne	.+2      	; 0xd98 <vfprintf+0x3a>
     d96:	ab c1       	rjmp	.+854    	; 0x10ee <vfprintf+0x390>
     d98:	85 32       	cpi	r24, 0x25	; 37
     d9a:	39 f4       	brne	.+14     	; 0xdaa <vfprintf+0x4c>
     d9c:	93 fd       	sbrc	r25, 3
     d9e:	85 91       	lpm	r24, Z+
     da0:	93 ff       	sbrs	r25, 3
     da2:	81 91       	ld	r24, Z+
     da4:	6f 01       	movw	r12, r30
     da6:	85 32       	cpi	r24, 0x25	; 37
     da8:	29 f4       	brne	.+10     	; 0xdb4 <vfprintf+0x56>
     daa:	b7 01       	movw	r22, r14
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	0e 94 97 08 	call	0x112e	; 0x112e <fputc>
     db2:	e7 cf       	rjmp	.-50     	; 0xd82 <vfprintf+0x24>
     db4:	51 2c       	mov	r5, r1
     db6:	31 2c       	mov	r3, r1
     db8:	20 e0       	ldi	r18, 0x00	; 0
     dba:	20 32       	cpi	r18, 0x20	; 32
     dbc:	a0 f4       	brcc	.+40     	; 0xde6 <vfprintf+0x88>
     dbe:	8b 32       	cpi	r24, 0x2B	; 43
     dc0:	69 f0       	breq	.+26     	; 0xddc <vfprintf+0x7e>
     dc2:	30 f4       	brcc	.+12     	; 0xdd0 <vfprintf+0x72>
     dc4:	80 32       	cpi	r24, 0x20	; 32
     dc6:	59 f0       	breq	.+22     	; 0xdde <vfprintf+0x80>
     dc8:	83 32       	cpi	r24, 0x23	; 35
     dca:	69 f4       	brne	.+26     	; 0xde6 <vfprintf+0x88>
     dcc:	20 61       	ori	r18, 0x10	; 16
     dce:	2c c0       	rjmp	.+88     	; 0xe28 <vfprintf+0xca>
     dd0:	8d 32       	cpi	r24, 0x2D	; 45
     dd2:	39 f0       	breq	.+14     	; 0xde2 <vfprintf+0x84>
     dd4:	80 33       	cpi	r24, 0x30	; 48
     dd6:	39 f4       	brne	.+14     	; 0xde6 <vfprintf+0x88>
     dd8:	21 60       	ori	r18, 0x01	; 1
     dda:	26 c0       	rjmp	.+76     	; 0xe28 <vfprintf+0xca>
     ddc:	22 60       	ori	r18, 0x02	; 2
     dde:	24 60       	ori	r18, 0x04	; 4
     de0:	23 c0       	rjmp	.+70     	; 0xe28 <vfprintf+0xca>
     de2:	28 60       	ori	r18, 0x08	; 8
     de4:	21 c0       	rjmp	.+66     	; 0xe28 <vfprintf+0xca>
     de6:	27 fd       	sbrc	r18, 7
     de8:	27 c0       	rjmp	.+78     	; 0xe38 <vfprintf+0xda>
     dea:	30 ed       	ldi	r19, 0xD0	; 208
     dec:	38 0f       	add	r19, r24
     dee:	3a 30       	cpi	r19, 0x0A	; 10
     df0:	78 f4       	brcc	.+30     	; 0xe10 <vfprintf+0xb2>
     df2:	26 ff       	sbrs	r18, 6
     df4:	06 c0       	rjmp	.+12     	; 0xe02 <vfprintf+0xa4>
     df6:	fa e0       	ldi	r31, 0x0A	; 10
     df8:	5f 9e       	mul	r5, r31
     dfa:	30 0d       	add	r19, r0
     dfc:	11 24       	eor	r1, r1
     dfe:	53 2e       	mov	r5, r19
     e00:	13 c0       	rjmp	.+38     	; 0xe28 <vfprintf+0xca>
     e02:	8a e0       	ldi	r24, 0x0A	; 10
     e04:	38 9e       	mul	r3, r24
     e06:	30 0d       	add	r19, r0
     e08:	11 24       	eor	r1, r1
     e0a:	33 2e       	mov	r3, r19
     e0c:	20 62       	ori	r18, 0x20	; 32
     e0e:	0c c0       	rjmp	.+24     	; 0xe28 <vfprintf+0xca>
     e10:	8e 32       	cpi	r24, 0x2E	; 46
     e12:	21 f4       	brne	.+8      	; 0xe1c <vfprintf+0xbe>
     e14:	26 fd       	sbrc	r18, 6
     e16:	6b c1       	rjmp	.+726    	; 0x10ee <vfprintf+0x390>
     e18:	20 64       	ori	r18, 0x40	; 64
     e1a:	06 c0       	rjmp	.+12     	; 0xe28 <vfprintf+0xca>
     e1c:	8c 36       	cpi	r24, 0x6C	; 108
     e1e:	11 f4       	brne	.+4      	; 0xe24 <vfprintf+0xc6>
     e20:	20 68       	ori	r18, 0x80	; 128
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <vfprintf+0xca>
     e24:	88 36       	cpi	r24, 0x68	; 104
     e26:	41 f4       	brne	.+16     	; 0xe38 <vfprintf+0xda>
     e28:	f6 01       	movw	r30, r12
     e2a:	93 fd       	sbrc	r25, 3
     e2c:	85 91       	lpm	r24, Z+
     e2e:	93 ff       	sbrs	r25, 3
     e30:	81 91       	ld	r24, Z+
     e32:	6f 01       	movw	r12, r30
     e34:	81 11       	cpse	r24, r1
     e36:	c1 cf       	rjmp	.-126    	; 0xdba <vfprintf+0x5c>
     e38:	98 2f       	mov	r25, r24
     e3a:	9f 7d       	andi	r25, 0xDF	; 223
     e3c:	95 54       	subi	r25, 0x45	; 69
     e3e:	93 30       	cpi	r25, 0x03	; 3
     e40:	28 f4       	brcc	.+10     	; 0xe4c <vfprintf+0xee>
     e42:	0c 5f       	subi	r16, 0xFC	; 252
     e44:	1f 4f       	sbci	r17, 0xFF	; 255
     e46:	ff e3       	ldi	r31, 0x3F	; 63
     e48:	f9 83       	std	Y+1, r31	; 0x01
     e4a:	0d c0       	rjmp	.+26     	; 0xe66 <vfprintf+0x108>
     e4c:	83 36       	cpi	r24, 0x63	; 99
     e4e:	31 f0       	breq	.+12     	; 0xe5c <vfprintf+0xfe>
     e50:	83 37       	cpi	r24, 0x73	; 115
     e52:	71 f0       	breq	.+28     	; 0xe70 <vfprintf+0x112>
     e54:	83 35       	cpi	r24, 0x53	; 83
     e56:	09 f0       	breq	.+2      	; 0xe5a <vfprintf+0xfc>
     e58:	5b c0       	rjmp	.+182    	; 0xf10 <vfprintf+0x1b2>
     e5a:	22 c0       	rjmp	.+68     	; 0xea0 <vfprintf+0x142>
     e5c:	f8 01       	movw	r30, r16
     e5e:	80 81       	ld	r24, Z
     e60:	89 83       	std	Y+1, r24	; 0x01
     e62:	0e 5f       	subi	r16, 0xFE	; 254
     e64:	1f 4f       	sbci	r17, 0xFF	; 255
     e66:	44 24       	eor	r4, r4
     e68:	43 94       	inc	r4
     e6a:	51 2c       	mov	r5, r1
     e6c:	54 01       	movw	r10, r8
     e6e:	15 c0       	rjmp	.+42     	; 0xe9a <vfprintf+0x13c>
     e70:	38 01       	movw	r6, r16
     e72:	f2 e0       	ldi	r31, 0x02	; 2
     e74:	6f 0e       	add	r6, r31
     e76:	71 1c       	adc	r7, r1
     e78:	f8 01       	movw	r30, r16
     e7a:	a0 80       	ld	r10, Z
     e7c:	b1 80       	ldd	r11, Z+1	; 0x01
     e7e:	26 ff       	sbrs	r18, 6
     e80:	03 c0       	rjmp	.+6      	; 0xe88 <vfprintf+0x12a>
     e82:	65 2d       	mov	r22, r5
     e84:	70 e0       	ldi	r23, 0x00	; 0
     e86:	02 c0       	rjmp	.+4      	; 0xe8c <vfprintf+0x12e>
     e88:	6f ef       	ldi	r22, 0xFF	; 255
     e8a:	7f ef       	ldi	r23, 0xFF	; 255
     e8c:	c5 01       	movw	r24, r10
     e8e:	2c 87       	std	Y+12, r18	; 0x0c
     e90:	0e 94 8c 08 	call	0x1118	; 0x1118 <strnlen>
     e94:	2c 01       	movw	r4, r24
     e96:	83 01       	movw	r16, r6
     e98:	2c 85       	ldd	r18, Y+12	; 0x0c
     e9a:	2f 77       	andi	r18, 0x7F	; 127
     e9c:	22 2e       	mov	r2, r18
     e9e:	17 c0       	rjmp	.+46     	; 0xece <vfprintf+0x170>
     ea0:	38 01       	movw	r6, r16
     ea2:	f2 e0       	ldi	r31, 0x02	; 2
     ea4:	6f 0e       	add	r6, r31
     ea6:	71 1c       	adc	r7, r1
     ea8:	f8 01       	movw	r30, r16
     eaa:	a0 80       	ld	r10, Z
     eac:	b1 80       	ldd	r11, Z+1	; 0x01
     eae:	26 ff       	sbrs	r18, 6
     eb0:	03 c0       	rjmp	.+6      	; 0xeb8 <vfprintf+0x15a>
     eb2:	65 2d       	mov	r22, r5
     eb4:	70 e0       	ldi	r23, 0x00	; 0
     eb6:	02 c0       	rjmp	.+4      	; 0xebc <vfprintf+0x15e>
     eb8:	6f ef       	ldi	r22, 0xFF	; 255
     eba:	7f ef       	ldi	r23, 0xFF	; 255
     ebc:	c5 01       	movw	r24, r10
     ebe:	2c 87       	std	Y+12, r18	; 0x0c
     ec0:	0e 94 81 08 	call	0x1102	; 0x1102 <strnlen_P>
     ec4:	2c 01       	movw	r4, r24
     ec6:	2c 85       	ldd	r18, Y+12	; 0x0c
     ec8:	20 68       	ori	r18, 0x80	; 128
     eca:	22 2e       	mov	r2, r18
     ecc:	83 01       	movw	r16, r6
     ece:	23 fc       	sbrc	r2, 3
     ed0:	1b c0       	rjmp	.+54     	; 0xf08 <vfprintf+0x1aa>
     ed2:	83 2d       	mov	r24, r3
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	48 16       	cp	r4, r24
     ed8:	59 06       	cpc	r5, r25
     eda:	b0 f4       	brcc	.+44     	; 0xf08 <vfprintf+0x1aa>
     edc:	b7 01       	movw	r22, r14
     ede:	80 e2       	ldi	r24, 0x20	; 32
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	0e 94 97 08 	call	0x112e	; 0x112e <fputc>
     ee6:	3a 94       	dec	r3
     ee8:	f4 cf       	rjmp	.-24     	; 0xed2 <vfprintf+0x174>
     eea:	f5 01       	movw	r30, r10
     eec:	27 fc       	sbrc	r2, 7
     eee:	85 91       	lpm	r24, Z+
     ef0:	27 fe       	sbrs	r2, 7
     ef2:	81 91       	ld	r24, Z+
     ef4:	5f 01       	movw	r10, r30
     ef6:	b7 01       	movw	r22, r14
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	0e 94 97 08 	call	0x112e	; 0x112e <fputc>
     efe:	31 10       	cpse	r3, r1
     f00:	3a 94       	dec	r3
     f02:	f1 e0       	ldi	r31, 0x01	; 1
     f04:	4f 1a       	sub	r4, r31
     f06:	51 08       	sbc	r5, r1
     f08:	41 14       	cp	r4, r1
     f0a:	51 04       	cpc	r5, r1
     f0c:	71 f7       	brne	.-36     	; 0xeea <vfprintf+0x18c>
     f0e:	e5 c0       	rjmp	.+458    	; 0x10da <vfprintf+0x37c>
     f10:	84 36       	cpi	r24, 0x64	; 100
     f12:	11 f0       	breq	.+4      	; 0xf18 <vfprintf+0x1ba>
     f14:	89 36       	cpi	r24, 0x69	; 105
     f16:	39 f5       	brne	.+78     	; 0xf66 <vfprintf+0x208>
     f18:	f8 01       	movw	r30, r16
     f1a:	27 ff       	sbrs	r18, 7
     f1c:	07 c0       	rjmp	.+14     	; 0xf2c <vfprintf+0x1ce>
     f1e:	60 81       	ld	r22, Z
     f20:	71 81       	ldd	r23, Z+1	; 0x01
     f22:	82 81       	ldd	r24, Z+2	; 0x02
     f24:	93 81       	ldd	r25, Z+3	; 0x03
     f26:	0c 5f       	subi	r16, 0xFC	; 252
     f28:	1f 4f       	sbci	r17, 0xFF	; 255
     f2a:	08 c0       	rjmp	.+16     	; 0xf3c <vfprintf+0x1de>
     f2c:	60 81       	ld	r22, Z
     f2e:	71 81       	ldd	r23, Z+1	; 0x01
     f30:	88 27       	eor	r24, r24
     f32:	77 fd       	sbrc	r23, 7
     f34:	80 95       	com	r24
     f36:	98 2f       	mov	r25, r24
     f38:	0e 5f       	subi	r16, 0xFE	; 254
     f3a:	1f 4f       	sbci	r17, 0xFF	; 255
     f3c:	2f 76       	andi	r18, 0x6F	; 111
     f3e:	b2 2e       	mov	r11, r18
     f40:	97 ff       	sbrs	r25, 7
     f42:	09 c0       	rjmp	.+18     	; 0xf56 <vfprintf+0x1f8>
     f44:	90 95       	com	r25
     f46:	80 95       	com	r24
     f48:	70 95       	com	r23
     f4a:	61 95       	neg	r22
     f4c:	7f 4f       	sbci	r23, 0xFF	; 255
     f4e:	8f 4f       	sbci	r24, 0xFF	; 255
     f50:	9f 4f       	sbci	r25, 0xFF	; 255
     f52:	20 68       	ori	r18, 0x80	; 128
     f54:	b2 2e       	mov	r11, r18
     f56:	2a e0       	ldi	r18, 0x0A	; 10
     f58:	30 e0       	ldi	r19, 0x00	; 0
     f5a:	a4 01       	movw	r20, r8
     f5c:	0e 94 c9 08 	call	0x1192	; 0x1192 <__ultoa_invert>
     f60:	a8 2e       	mov	r10, r24
     f62:	a8 18       	sub	r10, r8
     f64:	44 c0       	rjmp	.+136    	; 0xfee <vfprintf+0x290>
     f66:	85 37       	cpi	r24, 0x75	; 117
     f68:	29 f4       	brne	.+10     	; 0xf74 <vfprintf+0x216>
     f6a:	2f 7e       	andi	r18, 0xEF	; 239
     f6c:	b2 2e       	mov	r11, r18
     f6e:	2a e0       	ldi	r18, 0x0A	; 10
     f70:	30 e0       	ldi	r19, 0x00	; 0
     f72:	25 c0       	rjmp	.+74     	; 0xfbe <vfprintf+0x260>
     f74:	f2 2f       	mov	r31, r18
     f76:	f9 7f       	andi	r31, 0xF9	; 249
     f78:	bf 2e       	mov	r11, r31
     f7a:	8f 36       	cpi	r24, 0x6F	; 111
     f7c:	c1 f0       	breq	.+48     	; 0xfae <vfprintf+0x250>
     f7e:	18 f4       	brcc	.+6      	; 0xf86 <vfprintf+0x228>
     f80:	88 35       	cpi	r24, 0x58	; 88
     f82:	79 f0       	breq	.+30     	; 0xfa2 <vfprintf+0x244>
     f84:	b4 c0       	rjmp	.+360    	; 0x10ee <vfprintf+0x390>
     f86:	80 37       	cpi	r24, 0x70	; 112
     f88:	19 f0       	breq	.+6      	; 0xf90 <vfprintf+0x232>
     f8a:	88 37       	cpi	r24, 0x78	; 120
     f8c:	21 f0       	breq	.+8      	; 0xf96 <vfprintf+0x238>
     f8e:	af c0       	rjmp	.+350    	; 0x10ee <vfprintf+0x390>
     f90:	2f 2f       	mov	r18, r31
     f92:	20 61       	ori	r18, 0x10	; 16
     f94:	b2 2e       	mov	r11, r18
     f96:	b4 fe       	sbrs	r11, 4
     f98:	0d c0       	rjmp	.+26     	; 0xfb4 <vfprintf+0x256>
     f9a:	8b 2d       	mov	r24, r11
     f9c:	84 60       	ori	r24, 0x04	; 4
     f9e:	b8 2e       	mov	r11, r24
     fa0:	09 c0       	rjmp	.+18     	; 0xfb4 <vfprintf+0x256>
     fa2:	24 ff       	sbrs	r18, 4
     fa4:	0a c0       	rjmp	.+20     	; 0xfba <vfprintf+0x25c>
     fa6:	9f 2f       	mov	r25, r31
     fa8:	96 60       	ori	r25, 0x06	; 6
     faa:	b9 2e       	mov	r11, r25
     fac:	06 c0       	rjmp	.+12     	; 0xfba <vfprintf+0x25c>
     fae:	28 e0       	ldi	r18, 0x08	; 8
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	05 c0       	rjmp	.+10     	; 0xfbe <vfprintf+0x260>
     fb4:	20 e1       	ldi	r18, 0x10	; 16
     fb6:	30 e0       	ldi	r19, 0x00	; 0
     fb8:	02 c0       	rjmp	.+4      	; 0xfbe <vfprintf+0x260>
     fba:	20 e1       	ldi	r18, 0x10	; 16
     fbc:	32 e0       	ldi	r19, 0x02	; 2
     fbe:	f8 01       	movw	r30, r16
     fc0:	b7 fe       	sbrs	r11, 7
     fc2:	07 c0       	rjmp	.+14     	; 0xfd2 <vfprintf+0x274>
     fc4:	60 81       	ld	r22, Z
     fc6:	71 81       	ldd	r23, Z+1	; 0x01
     fc8:	82 81       	ldd	r24, Z+2	; 0x02
     fca:	93 81       	ldd	r25, Z+3	; 0x03
     fcc:	0c 5f       	subi	r16, 0xFC	; 252
     fce:	1f 4f       	sbci	r17, 0xFF	; 255
     fd0:	06 c0       	rjmp	.+12     	; 0xfde <vfprintf+0x280>
     fd2:	60 81       	ld	r22, Z
     fd4:	71 81       	ldd	r23, Z+1	; 0x01
     fd6:	80 e0       	ldi	r24, 0x00	; 0
     fd8:	90 e0       	ldi	r25, 0x00	; 0
     fda:	0e 5f       	subi	r16, 0xFE	; 254
     fdc:	1f 4f       	sbci	r17, 0xFF	; 255
     fde:	a4 01       	movw	r20, r8
     fe0:	0e 94 c9 08 	call	0x1192	; 0x1192 <__ultoa_invert>
     fe4:	a8 2e       	mov	r10, r24
     fe6:	a8 18       	sub	r10, r8
     fe8:	fb 2d       	mov	r31, r11
     fea:	ff 77       	andi	r31, 0x7F	; 127
     fec:	bf 2e       	mov	r11, r31
     fee:	b6 fe       	sbrs	r11, 6
     ff0:	0b c0       	rjmp	.+22     	; 0x1008 <vfprintf+0x2aa>
     ff2:	2b 2d       	mov	r18, r11
     ff4:	2e 7f       	andi	r18, 0xFE	; 254
     ff6:	a5 14       	cp	r10, r5
     ff8:	50 f4       	brcc	.+20     	; 0x100e <vfprintf+0x2b0>
     ffa:	b4 fe       	sbrs	r11, 4
     ffc:	0a c0       	rjmp	.+20     	; 0x1012 <vfprintf+0x2b4>
     ffe:	b2 fc       	sbrc	r11, 2
    1000:	08 c0       	rjmp	.+16     	; 0x1012 <vfprintf+0x2b4>
    1002:	2b 2d       	mov	r18, r11
    1004:	2e 7e       	andi	r18, 0xEE	; 238
    1006:	05 c0       	rjmp	.+10     	; 0x1012 <vfprintf+0x2b4>
    1008:	7a 2c       	mov	r7, r10
    100a:	2b 2d       	mov	r18, r11
    100c:	03 c0       	rjmp	.+6      	; 0x1014 <vfprintf+0x2b6>
    100e:	7a 2c       	mov	r7, r10
    1010:	01 c0       	rjmp	.+2      	; 0x1014 <vfprintf+0x2b6>
    1012:	75 2c       	mov	r7, r5
    1014:	24 ff       	sbrs	r18, 4
    1016:	0d c0       	rjmp	.+26     	; 0x1032 <vfprintf+0x2d4>
    1018:	fe 01       	movw	r30, r28
    101a:	ea 0d       	add	r30, r10
    101c:	f1 1d       	adc	r31, r1
    101e:	80 81       	ld	r24, Z
    1020:	80 33       	cpi	r24, 0x30	; 48
    1022:	11 f4       	brne	.+4      	; 0x1028 <vfprintf+0x2ca>
    1024:	29 7e       	andi	r18, 0xE9	; 233
    1026:	09 c0       	rjmp	.+18     	; 0x103a <vfprintf+0x2dc>
    1028:	22 ff       	sbrs	r18, 2
    102a:	06 c0       	rjmp	.+12     	; 0x1038 <vfprintf+0x2da>
    102c:	73 94       	inc	r7
    102e:	73 94       	inc	r7
    1030:	04 c0       	rjmp	.+8      	; 0x103a <vfprintf+0x2dc>
    1032:	82 2f       	mov	r24, r18
    1034:	86 78       	andi	r24, 0x86	; 134
    1036:	09 f0       	breq	.+2      	; 0x103a <vfprintf+0x2dc>
    1038:	73 94       	inc	r7
    103a:	23 fd       	sbrc	r18, 3
    103c:	13 c0       	rjmp	.+38     	; 0x1064 <vfprintf+0x306>
    103e:	20 ff       	sbrs	r18, 0
    1040:	06 c0       	rjmp	.+12     	; 0x104e <vfprintf+0x2f0>
    1042:	5a 2c       	mov	r5, r10
    1044:	73 14       	cp	r7, r3
    1046:	18 f4       	brcc	.+6      	; 0x104e <vfprintf+0x2f0>
    1048:	53 0c       	add	r5, r3
    104a:	57 18       	sub	r5, r7
    104c:	73 2c       	mov	r7, r3
    104e:	73 14       	cp	r7, r3
    1050:	68 f4       	brcc	.+26     	; 0x106c <vfprintf+0x30e>
    1052:	b7 01       	movw	r22, r14
    1054:	80 e2       	ldi	r24, 0x20	; 32
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	2c 87       	std	Y+12, r18	; 0x0c
    105a:	0e 94 97 08 	call	0x112e	; 0x112e <fputc>
    105e:	73 94       	inc	r7
    1060:	2c 85       	ldd	r18, Y+12	; 0x0c
    1062:	f5 cf       	rjmp	.-22     	; 0x104e <vfprintf+0x2f0>
    1064:	73 14       	cp	r7, r3
    1066:	10 f4       	brcc	.+4      	; 0x106c <vfprintf+0x30e>
    1068:	37 18       	sub	r3, r7
    106a:	01 c0       	rjmp	.+2      	; 0x106e <vfprintf+0x310>
    106c:	31 2c       	mov	r3, r1
    106e:	24 ff       	sbrs	r18, 4
    1070:	12 c0       	rjmp	.+36     	; 0x1096 <vfprintf+0x338>
    1072:	b7 01       	movw	r22, r14
    1074:	80 e3       	ldi	r24, 0x30	; 48
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	2c 87       	std	Y+12, r18	; 0x0c
    107a:	0e 94 97 08 	call	0x112e	; 0x112e <fputc>
    107e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1080:	22 ff       	sbrs	r18, 2
    1082:	17 c0       	rjmp	.+46     	; 0x10b2 <vfprintf+0x354>
    1084:	21 ff       	sbrs	r18, 1
    1086:	03 c0       	rjmp	.+6      	; 0x108e <vfprintf+0x330>
    1088:	88 e5       	ldi	r24, 0x58	; 88
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	02 c0       	rjmp	.+4      	; 0x1092 <vfprintf+0x334>
    108e:	88 e7       	ldi	r24, 0x78	; 120
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	b7 01       	movw	r22, r14
    1094:	0c c0       	rjmp	.+24     	; 0x10ae <vfprintf+0x350>
    1096:	82 2f       	mov	r24, r18
    1098:	86 78       	andi	r24, 0x86	; 134
    109a:	59 f0       	breq	.+22     	; 0x10b2 <vfprintf+0x354>
    109c:	21 fd       	sbrc	r18, 1
    109e:	02 c0       	rjmp	.+4      	; 0x10a4 <vfprintf+0x346>
    10a0:	80 e2       	ldi	r24, 0x20	; 32
    10a2:	01 c0       	rjmp	.+2      	; 0x10a6 <vfprintf+0x348>
    10a4:	8b e2       	ldi	r24, 0x2B	; 43
    10a6:	27 fd       	sbrc	r18, 7
    10a8:	8d e2       	ldi	r24, 0x2D	; 45
    10aa:	b7 01       	movw	r22, r14
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	0e 94 97 08 	call	0x112e	; 0x112e <fputc>
    10b2:	a5 14       	cp	r10, r5
    10b4:	38 f4       	brcc	.+14     	; 0x10c4 <vfprintf+0x366>
    10b6:	b7 01       	movw	r22, r14
    10b8:	80 e3       	ldi	r24, 0x30	; 48
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	0e 94 97 08 	call	0x112e	; 0x112e <fputc>
    10c0:	5a 94       	dec	r5
    10c2:	f7 cf       	rjmp	.-18     	; 0x10b2 <vfprintf+0x354>
    10c4:	aa 94       	dec	r10
    10c6:	f4 01       	movw	r30, r8
    10c8:	ea 0d       	add	r30, r10
    10ca:	f1 1d       	adc	r31, r1
    10cc:	80 81       	ld	r24, Z
    10ce:	b7 01       	movw	r22, r14
    10d0:	90 e0       	ldi	r25, 0x00	; 0
    10d2:	0e 94 97 08 	call	0x112e	; 0x112e <fputc>
    10d6:	a1 10       	cpse	r10, r1
    10d8:	f5 cf       	rjmp	.-22     	; 0x10c4 <vfprintf+0x366>
    10da:	33 20       	and	r3, r3
    10dc:	09 f4       	brne	.+2      	; 0x10e0 <vfprintf+0x382>
    10de:	51 ce       	rjmp	.-862    	; 0xd82 <vfprintf+0x24>
    10e0:	b7 01       	movw	r22, r14
    10e2:	80 e2       	ldi	r24, 0x20	; 32
    10e4:	90 e0       	ldi	r25, 0x00	; 0
    10e6:	0e 94 97 08 	call	0x112e	; 0x112e <fputc>
    10ea:	3a 94       	dec	r3
    10ec:	f6 cf       	rjmp	.-20     	; 0x10da <vfprintf+0x37c>
    10ee:	f7 01       	movw	r30, r14
    10f0:	86 81       	ldd	r24, Z+6	; 0x06
    10f2:	97 81       	ldd	r25, Z+7	; 0x07
    10f4:	02 c0       	rjmp	.+4      	; 0x10fa <vfprintf+0x39c>
    10f6:	8f ef       	ldi	r24, 0xFF	; 255
    10f8:	9f ef       	ldi	r25, 0xFF	; 255
    10fa:	2c 96       	adiw	r28, 0x0c	; 12
    10fc:	e2 e1       	ldi	r30, 0x12	; 18
    10fe:	0c 94 75 09 	jmp	0x12ea	; 0x12ea <__epilogue_restores__>

00001102 <strnlen_P>:
    1102:	fc 01       	movw	r30, r24
    1104:	05 90       	lpm	r0, Z+
    1106:	61 50       	subi	r22, 0x01	; 1
    1108:	70 40       	sbci	r23, 0x00	; 0
    110a:	01 10       	cpse	r0, r1
    110c:	d8 f7       	brcc	.-10     	; 0x1104 <strnlen_P+0x2>
    110e:	80 95       	com	r24
    1110:	90 95       	com	r25
    1112:	8e 0f       	add	r24, r30
    1114:	9f 1f       	adc	r25, r31
    1116:	08 95       	ret

00001118 <strnlen>:
    1118:	fc 01       	movw	r30, r24
    111a:	61 50       	subi	r22, 0x01	; 1
    111c:	70 40       	sbci	r23, 0x00	; 0
    111e:	01 90       	ld	r0, Z+
    1120:	01 10       	cpse	r0, r1
    1122:	d8 f7       	brcc	.-10     	; 0x111a <strnlen+0x2>
    1124:	80 95       	com	r24
    1126:	90 95       	com	r25
    1128:	8e 0f       	add	r24, r30
    112a:	9f 1f       	adc	r25, r31
    112c:	08 95       	ret

0000112e <fputc>:
    112e:	0f 93       	push	r16
    1130:	1f 93       	push	r17
    1132:	cf 93       	push	r28
    1134:	df 93       	push	r29
    1136:	18 2f       	mov	r17, r24
    1138:	09 2f       	mov	r16, r25
    113a:	eb 01       	movw	r28, r22
    113c:	8b 81       	ldd	r24, Y+3	; 0x03
    113e:	81 fd       	sbrc	r24, 1
    1140:	03 c0       	rjmp	.+6      	; 0x1148 <fputc+0x1a>
    1142:	8f ef       	ldi	r24, 0xFF	; 255
    1144:	9f ef       	ldi	r25, 0xFF	; 255
    1146:	20 c0       	rjmp	.+64     	; 0x1188 <fputc+0x5a>
    1148:	82 ff       	sbrs	r24, 2
    114a:	10 c0       	rjmp	.+32     	; 0x116c <fputc+0x3e>
    114c:	4e 81       	ldd	r20, Y+6	; 0x06
    114e:	5f 81       	ldd	r21, Y+7	; 0x07
    1150:	2c 81       	ldd	r18, Y+4	; 0x04
    1152:	3d 81       	ldd	r19, Y+5	; 0x05
    1154:	42 17       	cp	r20, r18
    1156:	53 07       	cpc	r21, r19
    1158:	7c f4       	brge	.+30     	; 0x1178 <fputc+0x4a>
    115a:	e8 81       	ld	r30, Y
    115c:	f9 81       	ldd	r31, Y+1	; 0x01
    115e:	9f 01       	movw	r18, r30
    1160:	2f 5f       	subi	r18, 0xFF	; 255
    1162:	3f 4f       	sbci	r19, 0xFF	; 255
    1164:	39 83       	std	Y+1, r19	; 0x01
    1166:	28 83       	st	Y, r18
    1168:	10 83       	st	Z, r17
    116a:	06 c0       	rjmp	.+12     	; 0x1178 <fputc+0x4a>
    116c:	e8 85       	ldd	r30, Y+8	; 0x08
    116e:	f9 85       	ldd	r31, Y+9	; 0x09
    1170:	81 2f       	mov	r24, r17
    1172:	09 95       	icall
    1174:	89 2b       	or	r24, r25
    1176:	29 f7       	brne	.-54     	; 0x1142 <fputc+0x14>
    1178:	2e 81       	ldd	r18, Y+6	; 0x06
    117a:	3f 81       	ldd	r19, Y+7	; 0x07
    117c:	2f 5f       	subi	r18, 0xFF	; 255
    117e:	3f 4f       	sbci	r19, 0xFF	; 255
    1180:	3f 83       	std	Y+7, r19	; 0x07
    1182:	2e 83       	std	Y+6, r18	; 0x06
    1184:	81 2f       	mov	r24, r17
    1186:	90 2f       	mov	r25, r16
    1188:	df 91       	pop	r29
    118a:	cf 91       	pop	r28
    118c:	1f 91       	pop	r17
    118e:	0f 91       	pop	r16
    1190:	08 95       	ret

00001192 <__ultoa_invert>:
    1192:	fa 01       	movw	r30, r20
    1194:	aa 27       	eor	r26, r26
    1196:	28 30       	cpi	r18, 0x08	; 8
    1198:	51 f1       	breq	.+84     	; 0x11ee <__ultoa_invert+0x5c>
    119a:	20 31       	cpi	r18, 0x10	; 16
    119c:	81 f1       	breq	.+96     	; 0x11fe <__ultoa_invert+0x6c>
    119e:	e8 94       	clt
    11a0:	6f 93       	push	r22
    11a2:	6e 7f       	andi	r22, 0xFE	; 254
    11a4:	6e 5f       	subi	r22, 0xFE	; 254
    11a6:	7f 4f       	sbci	r23, 0xFF	; 255
    11a8:	8f 4f       	sbci	r24, 0xFF	; 255
    11aa:	9f 4f       	sbci	r25, 0xFF	; 255
    11ac:	af 4f       	sbci	r26, 0xFF	; 255
    11ae:	b1 e0       	ldi	r27, 0x01	; 1
    11b0:	3e d0       	rcall	.+124    	; 0x122e <__ultoa_invert+0x9c>
    11b2:	b4 e0       	ldi	r27, 0x04	; 4
    11b4:	3c d0       	rcall	.+120    	; 0x122e <__ultoa_invert+0x9c>
    11b6:	67 0f       	add	r22, r23
    11b8:	78 1f       	adc	r23, r24
    11ba:	89 1f       	adc	r24, r25
    11bc:	9a 1f       	adc	r25, r26
    11be:	a1 1d       	adc	r26, r1
    11c0:	68 0f       	add	r22, r24
    11c2:	79 1f       	adc	r23, r25
    11c4:	8a 1f       	adc	r24, r26
    11c6:	91 1d       	adc	r25, r1
    11c8:	a1 1d       	adc	r26, r1
    11ca:	6a 0f       	add	r22, r26
    11cc:	71 1d       	adc	r23, r1
    11ce:	81 1d       	adc	r24, r1
    11d0:	91 1d       	adc	r25, r1
    11d2:	a1 1d       	adc	r26, r1
    11d4:	20 d0       	rcall	.+64     	; 0x1216 <__ultoa_invert+0x84>
    11d6:	09 f4       	brne	.+2      	; 0x11da <__ultoa_invert+0x48>
    11d8:	68 94       	set
    11da:	3f 91       	pop	r19
    11dc:	2a e0       	ldi	r18, 0x0A	; 10
    11de:	26 9f       	mul	r18, r22
    11e0:	11 24       	eor	r1, r1
    11e2:	30 19       	sub	r19, r0
    11e4:	30 5d       	subi	r19, 0xD0	; 208
    11e6:	31 93       	st	Z+, r19
    11e8:	de f6       	brtc	.-74     	; 0x11a0 <__ultoa_invert+0xe>
    11ea:	cf 01       	movw	r24, r30
    11ec:	08 95       	ret
    11ee:	46 2f       	mov	r20, r22
    11f0:	47 70       	andi	r20, 0x07	; 7
    11f2:	40 5d       	subi	r20, 0xD0	; 208
    11f4:	41 93       	st	Z+, r20
    11f6:	b3 e0       	ldi	r27, 0x03	; 3
    11f8:	0f d0       	rcall	.+30     	; 0x1218 <__ultoa_invert+0x86>
    11fa:	c9 f7       	brne	.-14     	; 0x11ee <__ultoa_invert+0x5c>
    11fc:	f6 cf       	rjmp	.-20     	; 0x11ea <__ultoa_invert+0x58>
    11fe:	46 2f       	mov	r20, r22
    1200:	4f 70       	andi	r20, 0x0F	; 15
    1202:	40 5d       	subi	r20, 0xD0	; 208
    1204:	4a 33       	cpi	r20, 0x3A	; 58
    1206:	18 f0       	brcs	.+6      	; 0x120e <__ultoa_invert+0x7c>
    1208:	49 5d       	subi	r20, 0xD9	; 217
    120a:	31 fd       	sbrc	r19, 1
    120c:	40 52       	subi	r20, 0x20	; 32
    120e:	41 93       	st	Z+, r20
    1210:	02 d0       	rcall	.+4      	; 0x1216 <__ultoa_invert+0x84>
    1212:	a9 f7       	brne	.-22     	; 0x11fe <__ultoa_invert+0x6c>
    1214:	ea cf       	rjmp	.-44     	; 0x11ea <__ultoa_invert+0x58>
    1216:	b4 e0       	ldi	r27, 0x04	; 4
    1218:	a6 95       	lsr	r26
    121a:	97 95       	ror	r25
    121c:	87 95       	ror	r24
    121e:	77 95       	ror	r23
    1220:	67 95       	ror	r22
    1222:	ba 95       	dec	r27
    1224:	c9 f7       	brne	.-14     	; 0x1218 <__ultoa_invert+0x86>
    1226:	00 97       	sbiw	r24, 0x00	; 0
    1228:	61 05       	cpc	r22, r1
    122a:	71 05       	cpc	r23, r1
    122c:	08 95       	ret
    122e:	9b 01       	movw	r18, r22
    1230:	ac 01       	movw	r20, r24
    1232:	0a 2e       	mov	r0, r26
    1234:	06 94       	lsr	r0
    1236:	57 95       	ror	r21
    1238:	47 95       	ror	r20
    123a:	37 95       	ror	r19
    123c:	27 95       	ror	r18
    123e:	ba 95       	dec	r27
    1240:	c9 f7       	brne	.-14     	; 0x1234 <__ultoa_invert+0xa2>
    1242:	62 0f       	add	r22, r18
    1244:	73 1f       	adc	r23, r19
    1246:	84 1f       	adc	r24, r20
    1248:	95 1f       	adc	r25, r21
    124a:	a0 1d       	adc	r26, r0
    124c:	08 95       	ret

0000124e <__divmodsi4>:
    124e:	05 2e       	mov	r0, r21
    1250:	97 fb       	bst	r25, 7
    1252:	1e f4       	brtc	.+6      	; 0x125a <__divmodsi4+0xc>
    1254:	00 94       	com	r0
    1256:	0e 94 3e 09 	call	0x127c	; 0x127c <__negsi2>
    125a:	57 fd       	sbrc	r21, 7
    125c:	07 d0       	rcall	.+14     	; 0x126c <__divmodsi4_neg2>
    125e:	0e 94 90 09 	call	0x1320	; 0x1320 <__udivmodsi4>
    1262:	07 fc       	sbrc	r0, 7
    1264:	03 d0       	rcall	.+6      	; 0x126c <__divmodsi4_neg2>
    1266:	4e f4       	brtc	.+18     	; 0x127a <__divmodsi4_exit>
    1268:	0c 94 3e 09 	jmp	0x127c	; 0x127c <__negsi2>

0000126c <__divmodsi4_neg2>:
    126c:	50 95       	com	r21
    126e:	40 95       	com	r20
    1270:	30 95       	com	r19
    1272:	21 95       	neg	r18
    1274:	3f 4f       	sbci	r19, 0xFF	; 255
    1276:	4f 4f       	sbci	r20, 0xFF	; 255
    1278:	5f 4f       	sbci	r21, 0xFF	; 255

0000127a <__divmodsi4_exit>:
    127a:	08 95       	ret

0000127c <__negsi2>:
    127c:	90 95       	com	r25
    127e:	80 95       	com	r24
    1280:	70 95       	com	r23
    1282:	61 95       	neg	r22
    1284:	7f 4f       	sbci	r23, 0xFF	; 255
    1286:	8f 4f       	sbci	r24, 0xFF	; 255
    1288:	9f 4f       	sbci	r25, 0xFF	; 255
    128a:	08 95       	ret

0000128c <__muluhisi3>:
    128c:	0e 94 b2 09 	call	0x1364	; 0x1364 <__umulhisi3>
    1290:	a5 9f       	mul	r26, r21
    1292:	90 0d       	add	r25, r0
    1294:	b4 9f       	mul	r27, r20
    1296:	90 0d       	add	r25, r0
    1298:	a4 9f       	mul	r26, r20
    129a:	80 0d       	add	r24, r0
    129c:	91 1d       	adc	r25, r1
    129e:	11 24       	eor	r1, r1
    12a0:	08 95       	ret

000012a2 <__mulshisi3>:
    12a2:	b7 ff       	sbrs	r27, 7
    12a4:	0c 94 46 09 	jmp	0x128c	; 0x128c <__muluhisi3>

000012a8 <__mulohisi3>:
    12a8:	0e 94 46 09 	call	0x128c	; 0x128c <__muluhisi3>
    12ac:	82 1b       	sub	r24, r18
    12ae:	93 0b       	sbc	r25, r19
    12b0:	08 95       	ret

000012b2 <__prologue_saves__>:
    12b2:	2f 92       	push	r2
    12b4:	3f 92       	push	r3
    12b6:	4f 92       	push	r4
    12b8:	5f 92       	push	r5
    12ba:	6f 92       	push	r6
    12bc:	7f 92       	push	r7
    12be:	8f 92       	push	r8
    12c0:	9f 92       	push	r9
    12c2:	af 92       	push	r10
    12c4:	bf 92       	push	r11
    12c6:	cf 92       	push	r12
    12c8:	df 92       	push	r13
    12ca:	ef 92       	push	r14
    12cc:	ff 92       	push	r15
    12ce:	0f 93       	push	r16
    12d0:	1f 93       	push	r17
    12d2:	cf 93       	push	r28
    12d4:	df 93       	push	r29
    12d6:	cd b7       	in	r28, 0x3d	; 61
    12d8:	de b7       	in	r29, 0x3e	; 62
    12da:	ca 1b       	sub	r28, r26
    12dc:	db 0b       	sbc	r29, r27
    12de:	0f b6       	in	r0, 0x3f	; 63
    12e0:	f8 94       	cli
    12e2:	de bf       	out	0x3e, r29	; 62
    12e4:	0f be       	out	0x3f, r0	; 63
    12e6:	cd bf       	out	0x3d, r28	; 61
    12e8:	09 94       	ijmp

000012ea <__epilogue_restores__>:
    12ea:	2a 88       	ldd	r2, Y+18	; 0x12
    12ec:	39 88       	ldd	r3, Y+17	; 0x11
    12ee:	48 88       	ldd	r4, Y+16	; 0x10
    12f0:	5f 84       	ldd	r5, Y+15	; 0x0f
    12f2:	6e 84       	ldd	r6, Y+14	; 0x0e
    12f4:	7d 84       	ldd	r7, Y+13	; 0x0d
    12f6:	8c 84       	ldd	r8, Y+12	; 0x0c
    12f8:	9b 84       	ldd	r9, Y+11	; 0x0b
    12fa:	aa 84       	ldd	r10, Y+10	; 0x0a
    12fc:	b9 84       	ldd	r11, Y+9	; 0x09
    12fe:	c8 84       	ldd	r12, Y+8	; 0x08
    1300:	df 80       	ldd	r13, Y+7	; 0x07
    1302:	ee 80       	ldd	r14, Y+6	; 0x06
    1304:	fd 80       	ldd	r15, Y+5	; 0x05
    1306:	0c 81       	ldd	r16, Y+4	; 0x04
    1308:	1b 81       	ldd	r17, Y+3	; 0x03
    130a:	aa 81       	ldd	r26, Y+2	; 0x02
    130c:	b9 81       	ldd	r27, Y+1	; 0x01
    130e:	ce 0f       	add	r28, r30
    1310:	d1 1d       	adc	r29, r1
    1312:	0f b6       	in	r0, 0x3f	; 63
    1314:	f8 94       	cli
    1316:	de bf       	out	0x3e, r29	; 62
    1318:	0f be       	out	0x3f, r0	; 63
    131a:	cd bf       	out	0x3d, r28	; 61
    131c:	ed 01       	movw	r28, r26
    131e:	08 95       	ret

00001320 <__udivmodsi4>:
    1320:	a1 e2       	ldi	r26, 0x21	; 33
    1322:	1a 2e       	mov	r1, r26
    1324:	aa 1b       	sub	r26, r26
    1326:	bb 1b       	sub	r27, r27
    1328:	fd 01       	movw	r30, r26
    132a:	0d c0       	rjmp	.+26     	; 0x1346 <__udivmodsi4_ep>

0000132c <__udivmodsi4_loop>:
    132c:	aa 1f       	adc	r26, r26
    132e:	bb 1f       	adc	r27, r27
    1330:	ee 1f       	adc	r30, r30
    1332:	ff 1f       	adc	r31, r31
    1334:	a2 17       	cp	r26, r18
    1336:	b3 07       	cpc	r27, r19
    1338:	e4 07       	cpc	r30, r20
    133a:	f5 07       	cpc	r31, r21
    133c:	20 f0       	brcs	.+8      	; 0x1346 <__udivmodsi4_ep>
    133e:	a2 1b       	sub	r26, r18
    1340:	b3 0b       	sbc	r27, r19
    1342:	e4 0b       	sbc	r30, r20
    1344:	f5 0b       	sbc	r31, r21

00001346 <__udivmodsi4_ep>:
    1346:	66 1f       	adc	r22, r22
    1348:	77 1f       	adc	r23, r23
    134a:	88 1f       	adc	r24, r24
    134c:	99 1f       	adc	r25, r25
    134e:	1a 94       	dec	r1
    1350:	69 f7       	brne	.-38     	; 0x132c <__udivmodsi4_loop>
    1352:	60 95       	com	r22
    1354:	70 95       	com	r23
    1356:	80 95       	com	r24
    1358:	90 95       	com	r25
    135a:	9b 01       	movw	r18, r22
    135c:	ac 01       	movw	r20, r24
    135e:	bd 01       	movw	r22, r26
    1360:	cf 01       	movw	r24, r30
    1362:	08 95       	ret

00001364 <__umulhisi3>:
    1364:	a2 9f       	mul	r26, r18
    1366:	b0 01       	movw	r22, r0
    1368:	b3 9f       	mul	r27, r19
    136a:	c0 01       	movw	r24, r0
    136c:	a3 9f       	mul	r26, r19
    136e:	70 0d       	add	r23, r0
    1370:	81 1d       	adc	r24, r1
    1372:	11 24       	eor	r1, r1
    1374:	91 1d       	adc	r25, r1
    1376:	b2 9f       	mul	r27, r18
    1378:	70 0d       	add	r23, r0
    137a:	81 1d       	adc	r24, r1
    137c:	11 24       	eor	r1, r1
    137e:	91 1d       	adc	r25, r1
    1380:	08 95       	ret

00001382 <_exit>:
    1382:	f8 94       	cli

00001384 <__stop_program>:
    1384:	ff cf       	rjmp	.-2      	; 0x1384 <__stop_program>
