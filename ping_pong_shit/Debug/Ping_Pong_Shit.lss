
Ping_Pong_Shit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001e0  00800100  0000134a  000013de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000134a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008002e0  008002e0  000015be  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000015be  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000150  00000000  00000000  0000161a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000115f  00000000  00000000  0000176a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000868  00000000  00000000  000028c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000768  00000000  00000000  00003131  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002bc  00000000  00000000  0000389c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000479  00000000  00000000  00003b58  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004e4  00000000  00000000  00003fd1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000120  00000000  00000000  000044b5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	63 64       	ori	r22, 0x43	; 67
      72:	69 6e       	ori	r22, 0xE9	; 233
      74:	6f 70       	andi	r22, 0x0F	; 15
      76:	73 75       	andi	r23, 0x53	; 83
      78:	78 58       	subi	r23, 0x88	; 136
      7a:	5b 00       	.word	0x005b	; ????

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d4 e0       	ldi	r29, 0x04	; 4
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	12 e0       	ldi	r17, 0x02	; 2
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	ea e4       	ldi	r30, 0x4A	; 74
      90:	f3 e1       	ldi	r31, 0x13	; 19
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	a0 3e       	cpi	r26, 0xE0	; 224
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	22 e0       	ldi	r18, 0x02	; 2
      a0:	a0 ee       	ldi	r26, 0xE0	; 224
      a2:	b2 e0       	ldi	r27, 0x02	; 2
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	aa 3e       	cpi	r26, 0xEA	; 234
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 99 00 	call	0x132	; 0x132 <main>
      b2:	0c 94 a3 09 	jmp	0x1346	; 0x1346 <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <joystick_read>:
}


unsigned int joystick_read(joy_channel channel){
	volatile char* ext_ram = (char*) 0x1400;
	ext_ram[0] = 0x4 + channel;
      ba:	8c 5f       	subi	r24, 0xFC	; 252
      bc:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      c0:	81 e4       	ldi	r24, 0x41	; 65
      c2:	8a 95       	dec	r24
      c4:	f1 f7       	brne	.-4      	; 0xc2 <joystick_read+0x8>
      c6:	00 c0       	rjmp	.+0      	; 0xc8 <joystick_read+0xe>
	_delay_us(40);
	//sleep_enable();
	return (uint8_t) ext_ram[0];
      c8:	80 91 00 14 	lds	r24, 0x1400
}
      cc:	90 e0       	ldi	r25, 0x00	; 0
      ce:	08 95       	ret

000000d0 <joystick_init>:
	/*EMCUCR |= (0 << SM0);
	MCUCSR |= (1 << SM1);
	MCUCSR |= (0 << SM2);
	GICR |= (1 << INT0);
	sei();*/
	center_val_X = joystick_read(JOYSTICK_X);
      d0:	80 e0       	ldi	r24, 0x00	; 0
      d2:	0e 94 5d 00 	call	0xba	; 0xba <joystick_read>
      d6:	90 93 e1 02 	sts	0x02E1, r25
      da:	80 93 e0 02 	sts	0x02E0, r24
	center_val_Y = joystick_read(JOYSTICK_Y);
      de:	81 e0       	ldi	r24, 0x01	; 1
      e0:	0e 94 5d 00 	call	0xba	; 0xba <joystick_read>
      e4:	90 93 e3 02 	sts	0x02E3, r25
      e8:	80 93 e2 02 	sts	0x02E2, r24
      ec:	08 95       	ret

000000ee <read_converted>:
}*/




signed int read_converted(joy_channel channel){
      ee:	cf 93       	push	r28
      f0:	c8 2f       	mov	r28, r24

	int v = (joystick_read(channel));
      f2:	0e 94 5d 00 	call	0xba	; 0xba <joystick_read>

	if      (channel == JOYSTICK_X)  {v -= center_val_X;}
      f6:	c1 11       	cpse	r28, r1
      f8:	07 c0       	rjmp	.+14     	; 0x108 <read_converted+0x1a>
      fa:	20 91 e0 02 	lds	r18, 0x02E0
      fe:	30 91 e1 02 	lds	r19, 0x02E1
     102:	82 1b       	sub	r24, r18
     104:	93 0b       	sbc	r25, r19
     106:	08 c0       	rjmp	.+16     	; 0x118 <read_converted+0x2a>
	else if (channel == JOYSTICK_Y)  {v -= center_val_Y;}
     108:	c1 30       	cpi	r28, 0x01	; 1
     10a:	31 f4       	brne	.+12     	; 0x118 <read_converted+0x2a>
     10c:	20 91 e2 02 	lds	r18, 0x02E2
     110:	30 91 e3 02 	lds	r19, 0x02E3
     114:	82 1b       	sub	r24, r18
     116:	93 0b       	sbc	r25, r19

	return  (v > 127)	? 127 :
     118:	80 38       	cpi	r24, 0x80	; 128
     11a:	2f ef       	ldi	r18, 0xFF	; 255
     11c:	92 07       	cpc	r25, r18
     11e:	14 f4       	brge	.+4      	; 0x124 <read_converted+0x36>
     120:	80 e8       	ldi	r24, 0x80	; 128
     122:	9f ef       	ldi	r25, 0xFF	; 255
     124:	80 38       	cpi	r24, 0x80	; 128
     126:	91 05       	cpc	r25, r1
     128:	14 f0       	brlt	.+4      	; 0x12e <read_converted+0x40>
     12a:	8f e7       	ldi	r24, 0x7F	; 127
     12c:	90 e0       	ldi	r25, 0x00	; 0
			(v < -128)	? -128 :
			 v;
}
     12e:	cf 91       	pop	r28
     130:	08 95       	ret

00000132 <main>:
#include "SRAM_driver.h"
#include "joystick_driver.h"
#include "oled_driver.h"

int main(void) {
    uart_init(MYUBRR);
     132:	8f e1       	ldi	r24, 0x1F	; 31
     134:	90 e0       	ldi	r25, 0x00	; 0
     136:	0e 94 a5 02 	call	0x54a	; 0x54a <uart_init>
	SRAM_init();
     13a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <SRAM_init>
	joystick_init();
     13e:	0e 94 68 00 	call	0xd0	; 0xd0 <joystick_init>
	oled_init();
     142:	0e 94 a8 00 	call	0x150	; 0x150 <oled_init>
	
	while(1) { 
		shell();
     146:	0e 94 e6 01 	call	0x3cc	; 0x3cc <shell>
		flash_diode();
     14a:	0e 94 da 01 	call	0x3b4	; 0x3b4 <flash_diode>
     14e:	fb cf       	rjmp	.-10     	; 0x146 <main+0x14>

00000150 <oled_init>:
	oled_write_command(0xa6);    //set normal display
	oled_write_command(0xaf);    // display on
}

void oled_write_command(uint8_t command){
	*oled_command_addr = command;
     150:	e0 91 06 01 	lds	r30, 0x0106
     154:	f0 91 07 01 	lds	r31, 0x0107
     158:	8e ea       	ldi	r24, 0xAE	; 174
     15a:	80 83       	st	Z, r24
     15c:	e0 91 06 01 	lds	r30, 0x0106
     160:	f0 91 07 01 	lds	r31, 0x0107
     164:	81 ea       	ldi	r24, 0xA1	; 161
     166:	80 83       	st	Z, r24
     168:	e0 91 06 01 	lds	r30, 0x0106
     16c:	f0 91 07 01 	lds	r31, 0x0107
     170:	8a ed       	ldi	r24, 0xDA	; 218
     172:	80 83       	st	Z, r24
     174:	e0 91 06 01 	lds	r30, 0x0106
     178:	f0 91 07 01 	lds	r31, 0x0107
     17c:	82 e1       	ldi	r24, 0x12	; 18
     17e:	80 83       	st	Z, r24
     180:	e0 91 06 01 	lds	r30, 0x0106
     184:	f0 91 07 01 	lds	r31, 0x0107
     188:	88 ec       	ldi	r24, 0xC8	; 200
     18a:	80 83       	st	Z, r24
     18c:	e0 91 06 01 	lds	r30, 0x0106
     190:	f0 91 07 01 	lds	r31, 0x0107
     194:	88 ea       	ldi	r24, 0xA8	; 168
     196:	80 83       	st	Z, r24
     198:	e0 91 06 01 	lds	r30, 0x0106
     19c:	f0 91 07 01 	lds	r31, 0x0107
     1a0:	8f e3       	ldi	r24, 0x3F	; 63
     1a2:	80 83       	st	Z, r24
     1a4:	e0 91 06 01 	lds	r30, 0x0106
     1a8:	f0 91 07 01 	lds	r31, 0x0107
     1ac:	85 ed       	ldi	r24, 0xD5	; 213
     1ae:	80 83       	st	Z, r24
     1b0:	e0 91 06 01 	lds	r30, 0x0106
     1b4:	f0 91 07 01 	lds	r31, 0x0107
     1b8:	80 e8       	ldi	r24, 0x80	; 128
     1ba:	80 83       	st	Z, r24
     1bc:	e0 91 06 01 	lds	r30, 0x0106
     1c0:	f0 91 07 01 	lds	r31, 0x0107
     1c4:	81 e8       	ldi	r24, 0x81	; 129
     1c6:	80 83       	st	Z, r24
     1c8:	e0 91 06 01 	lds	r30, 0x0106
     1cc:	f0 91 07 01 	lds	r31, 0x0107
     1d0:	80 e5       	ldi	r24, 0x50	; 80
     1d2:	80 83       	st	Z, r24
     1d4:	e0 91 06 01 	lds	r30, 0x0106
     1d8:	f0 91 07 01 	lds	r31, 0x0107
     1dc:	89 ed       	ldi	r24, 0xD9	; 217
     1de:	80 83       	st	Z, r24
     1e0:	e0 91 06 01 	lds	r30, 0x0106
     1e4:	f0 91 07 01 	lds	r31, 0x0107
     1e8:	81 e2       	ldi	r24, 0x21	; 33
     1ea:	80 83       	st	Z, r24
     1ec:	e0 91 06 01 	lds	r30, 0x0106
     1f0:	f0 91 07 01 	lds	r31, 0x0107
     1f4:	80 e2       	ldi	r24, 0x20	; 32
     1f6:	80 83       	st	Z, r24
     1f8:	e0 91 06 01 	lds	r30, 0x0106
     1fc:	f0 91 07 01 	lds	r31, 0x0107
     200:	82 e0       	ldi	r24, 0x02	; 2
     202:	80 83       	st	Z, r24
     204:	e0 91 06 01 	lds	r30, 0x0106
     208:	f0 91 07 01 	lds	r31, 0x0107
     20c:	8b ed       	ldi	r24, 0xDB	; 219
     20e:	80 83       	st	Z, r24
     210:	e0 91 06 01 	lds	r30, 0x0106
     214:	f0 91 07 01 	lds	r31, 0x0107
     218:	80 e3       	ldi	r24, 0x30	; 48
     21a:	80 83       	st	Z, r24
     21c:	e0 91 06 01 	lds	r30, 0x0106
     220:	f0 91 07 01 	lds	r31, 0x0107
     224:	8d ea       	ldi	r24, 0xAD	; 173
     226:	80 83       	st	Z, r24
     228:	e0 91 06 01 	lds	r30, 0x0106
     22c:	f0 91 07 01 	lds	r31, 0x0107
     230:	10 82       	st	Z, r1
     232:	e0 91 06 01 	lds	r30, 0x0106
     236:	f0 91 07 01 	lds	r31, 0x0107
     23a:	84 ea       	ldi	r24, 0xA4	; 164
     23c:	80 83       	st	Z, r24
     23e:	e0 91 06 01 	lds	r30, 0x0106
     242:	f0 91 07 01 	lds	r31, 0x0107
     246:	86 ea       	ldi	r24, 0xA6	; 166
     248:	80 83       	st	Z, r24
     24a:	e0 91 06 01 	lds	r30, 0x0106
     24e:	f0 91 07 01 	lds	r31, 0x0107
     252:	8f ea       	ldi	r24, 0xAF	; 175
     254:	80 83       	st	Z, r24
     256:	08 95       	ret

00000258 <oled_goto_page>:
void oled_back(){
	
}

void oled_goto_page(unsigned int page) {
	oled_write_command(0xB0 + page);
     258:	80 55       	subi	r24, 0x50	; 80
	oled_write_command(0xa6);    //set normal display
	oled_write_command(0xaf);    // display on
}

void oled_write_command(uint8_t command){
	*oled_command_addr = command;
     25a:	e0 91 06 01 	lds	r30, 0x0106
     25e:	f0 91 07 01 	lds	r31, 0x0107
     262:	80 83       	st	Z, r24
     264:	08 95       	ret

00000266 <oled_clear_line>:

void oled_goto_page(unsigned int page) {
	oled_write_command(0xB0 + page);
}

void oled_clear_line(){
     266:	80 e8       	ldi	r24, 0x80	; 128
     268:	90 e0       	ldi	r25, 0x00	; 0
void oled_write_command(uint8_t command){
	*oled_command_addr = command;
}

void oled_write_data(uint8_t data){
	*oled_data_addr = data;
     26a:	e0 91 04 01 	lds	r30, 0x0104
     26e:	f0 91 05 01 	lds	r31, 0x0105
     272:	10 82       	st	Z, r1
     274:	01 97       	sbiw	r24, 0x01	; 1
void oled_goto_page(unsigned int page) {
	oled_write_command(0xB0 + page);
}

void oled_clear_line(){
	for (int i = 0; i<128; i++) {
     276:	00 97       	sbiw	r24, 0x00	; 0
     278:	c1 f7       	brne	.-16     	; 0x26a <oled_clear_line+0x4>
		oled_write_data(0b00000000);
	}
}
     27a:	08 95       	ret

0000027c <oled_clear_screen>:

void oled_clear_screen() {
     27c:	cf 93       	push	r28
     27e:	df 93       	push	r29
	for (int i = 0; i<8; i++) {
     280:	c0 e0       	ldi	r28, 0x00	; 0
     282:	d0 e0       	ldi	r29, 0x00	; 0
		oled_goto_page(i);
     284:	ce 01       	movw	r24, r28
     286:	0e 94 2c 01 	call	0x258	; 0x258 <oled_goto_page>
		oled_clear_line();
     28a:	0e 94 33 01 	call	0x266	; 0x266 <oled_clear_line>
		oled_write_data(0b00000000);
	}
}

void oled_clear_screen() {
	for (int i = 0; i<8; i++) {
     28e:	21 96       	adiw	r28, 0x01	; 1
     290:	c8 30       	cpi	r28, 0x08	; 8
     292:	d1 05       	cpc	r29, r1
     294:	b9 f7       	brne	.-18     	; 0x284 <oled_clear_screen+0x8>
		oled_goto_page(i);
		oled_clear_line();
	}
}
     296:	df 91       	pop	r29
     298:	cf 91       	pop	r28
     29a:	08 95       	ret

0000029c <SRAM_test>:
	if (address_offset > 0x100) { return 0; }
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	return ext_ram[address_offset];
}

void SRAM_test(void) {
     29c:	cf 92       	push	r12
     29e:	df 92       	push	r13
     2a0:	ef 92       	push	r14
     2a2:	ff 92       	push	r15
     2a4:	0f 93       	push	r16
     2a6:	1f 93       	push	r17
     2a8:	cf 93       	push	r28
     2aa:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size       = 0x800;
	uint16_t write_errors       = 0;
	uint16_t retrieval_errors   = 0;

	printf("\nStarting SRAM test...\n");
     2ac:	86 e1       	ldi	r24, 0x16	; 22
     2ae:	91 e0       	ldi	r25, 0x01	; 1
     2b0:	0e 94 2e 03 	call	0x65c	; 0x65c <puts>

	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
     2b4:	0e 94 01 03 	call	0x602	; 0x602 <rand>
     2b8:	6c 01       	movw	r12, r24

	// Write phase: Immediately check that the correct value was stored
	srand(seed);
     2ba:	0e 94 06 03 	call	0x60c	; 0x60c <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     2be:	c0 e0       	ldi	r28, 0x00	; 0
     2c0:	d0 e0       	ldi	r29, 0x00	; 0
}

void SRAM_test(void) {
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size       = 0x800;
	uint16_t write_errors       = 0;
     2c2:	00 e0       	ldi	r16, 0x00	; 0
     2c4:	10 e0       	ldi	r17, 0x00	; 0
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		ext_ram[i] = some_value;
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     2c6:	0f 2e       	mov	r0, r31
     2c8:	fd e2       	ldi	r31, 0x2D	; 45
     2ca:	ef 2e       	mov	r14, r31
     2cc:	f1 e0       	ldi	r31, 0x01	; 1
     2ce:	ff 2e       	mov	r15, r31
     2d0:	f0 2d       	mov	r31, r0
	uint16_t seed = rand();

	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
     2d2:	0e 94 01 03 	call	0x602	; 0x602 <rand>
     2d6:	fe 01       	movw	r30, r28
     2d8:	f8 5e       	subi	r31, 0xE8	; 232
		ext_ram[i] = some_value;
     2da:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
     2dc:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     2de:	28 17       	cp	r18, r24
     2e0:	a9 f0       	breq	.+42     	; 0x30c <SRAM_test+0x70>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     2e2:	99 27       	eor	r25, r25
     2e4:	9f 93       	push	r25
     2e6:	8f 93       	push	r24
     2e8:	1f 92       	push	r1
     2ea:	2f 93       	push	r18
     2ec:	df 93       	push	r29
     2ee:	cf 93       	push	r28
     2f0:	ff 92       	push	r15
     2f2:	ef 92       	push	r14
     2f4:	0e 94 1a 03 	call	0x634	; 0x634 <printf>
			write_errors++;
     2f8:	0f 5f       	subi	r16, 0xFF	; 255
     2fa:	1f 4f       	sbci	r17, 0xFF	; 255
     2fc:	8d b7       	in	r24, 0x3d	; 61
     2fe:	9e b7       	in	r25, 0x3e	; 62
     300:	08 96       	adiw	r24, 0x08	; 8
     302:	0f b6       	in	r0, 0x3f	; 63
     304:	f8 94       	cli
     306:	9e bf       	out	0x3e, r25	; 62
     308:	0f be       	out	0x3f, r0	; 63
     30a:	8d bf       	out	0x3d, r24	; 61
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();

	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     30c:	21 96       	adiw	r28, 0x01	; 1
     30e:	c1 15       	cp	r28, r1
     310:	98 e0       	ldi	r25, 0x08	; 8
     312:	d9 07       	cpc	r29, r25
     314:	f1 f6       	brne	.-68     	; 0x2d2 <SRAM_test+0x36>
			write_errors++;
		}
	}

	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);    // reset the PRNG to the state it had before the write phase
     316:	c6 01       	movw	r24, r12
     318:	0e 94 06 03 	call	0x60c	; 0x60c <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     31c:	c0 e0       	ldi	r28, 0x00	; 0
     31e:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void) {
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size       = 0x800;
	uint16_t write_errors       = 0;
	uint16_t retrieval_errors   = 0;
     320:	e1 2c       	mov	r14, r1
     322:	f1 2c       	mov	r15, r1
	srand(seed);    // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     324:	0f 2e       	mov	r0, r31
     326:	f6 e6       	ldi	r31, 0x66	; 102
     328:	cf 2e       	mov	r12, r31
     32a:	f1 e0       	ldi	r31, 0x01	; 1
     32c:	df 2e       	mov	r13, r31
     32e:	f0 2d       	mov	r31, r0
	}

	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);    // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
     330:	0e 94 01 03 	call	0x602	; 0x602 <rand>
     334:	fe 01       	movw	r30, r28
     336:	f8 5e       	subi	r31, 0xE8	; 232
		uint8_t retreived_value = ext_ram[i];
     338:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     33a:	28 17       	cp	r18, r24
     33c:	b1 f0       	breq	.+44     	; 0x36a <SRAM_test+0xce>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     33e:	99 27       	eor	r25, r25
     340:	9f 93       	push	r25
     342:	8f 93       	push	r24
     344:	1f 92       	push	r1
     346:	2f 93       	push	r18
     348:	df 93       	push	r29
     34a:	cf 93       	push	r28
     34c:	df 92       	push	r13
     34e:	cf 92       	push	r12
     350:	0e 94 1a 03 	call	0x634	; 0x634 <printf>
			retrieval_errors++;
     354:	8f ef       	ldi	r24, 0xFF	; 255
     356:	e8 1a       	sub	r14, r24
     358:	f8 0a       	sbc	r15, r24
     35a:	8d b7       	in	r24, 0x3d	; 61
     35c:	9e b7       	in	r25, 0x3e	; 62
     35e:	08 96       	adiw	r24, 0x08	; 8
     360:	0f b6       	in	r0, 0x3f	; 63
     362:	f8 94       	cli
     364:	9e bf       	out	0x3e, r25	; 62
     366:	0f be       	out	0x3f, r0	; 63
     368:	8d bf       	out	0x3d, r24	; 61
		}
	}

	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);    // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     36a:	21 96       	adiw	r28, 0x01	; 1
     36c:	c1 15       	cp	r28, r1
     36e:	98 e0       	ldi	r25, 0x08	; 8
     370:	d9 07       	cpc	r29, r25
     372:	f1 f6       	brne	.-68     	; 0x330 <SRAM_test+0x94>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
     374:	ff 92       	push	r15
     376:	ef 92       	push	r14
     378:	1f 93       	push	r17
     37a:	0f 93       	push	r16
     37c:	83 ea       	ldi	r24, 0xA3	; 163
     37e:	91 e0       	ldi	r25, 0x01	; 1
     380:	9f 93       	push	r25
     382:	8f 93       	push	r24
     384:	0e 94 1a 03 	call	0x634	; 0x634 <printf>
     388:	0f 90       	pop	r0
     38a:	0f 90       	pop	r0
     38c:	0f 90       	pop	r0
     38e:	0f 90       	pop	r0
     390:	0f 90       	pop	r0
     392:	0f 90       	pop	r0
     394:	df 91       	pop	r29
     396:	cf 91       	pop	r28
     398:	1f 91       	pop	r17
     39a:	0f 91       	pop	r16
     39c:	ff 90       	pop	r15
     39e:	ef 90       	pop	r14
     3a0:	df 90       	pop	r13
     3a2:	cf 90       	pop	r12
     3a4:	08 95       	ret

000003a6 <SRAM_init>:
#include <stdio.h>
#include "SRAM_driver.h"

//Simple setup for SRAM, also tests for correctness
void SRAM_init(){
	MCUCR = 0x80;
     3a6:	80 e8       	ldi	r24, 0x80	; 128
     3a8:	85 bf       	out	0x35, r24	; 53
	DDRA = 0xFF;
     3aa:	8f ef       	ldi	r24, 0xFF	; 255
     3ac:	8a bb       	out	0x1a, r24	; 26
	SRAM_test();
     3ae:	0e 94 4e 01 	call	0x29c	; 0x29c <SRAM_test>
     3b2:	08 95       	ret

000003b4 <flash_diode>:
#include "joystick_driver.h"
#include "oled_driver.h"

//Simple test, Ex 1, task 6
void flash_diode(){
	PORTB = 0xFF;
     3b4:	8f ef       	ldi	r24, 0xFF	; 255
     3b6:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3b8:	80 e0       	ldi	r24, 0x00	; 0
     3ba:	90 ef       	ldi	r25, 0xF0	; 240
     3bc:	01 97       	sbiw	r24, 0x01	; 1
     3be:	f1 f7       	brne	.-4      	; 0x3bc <flash_diode+0x8>
	_delay_ms(50);
	PORTB = 0x00;
     3c0:	18 ba       	out	0x18, r1	; 24
     3c2:	80 e0       	ldi	r24, 0x00	; 0
     3c4:	90 ef       	ldi	r25, 0xF0	; 240
     3c6:	01 97       	sbiw	r24, 0x01	; 1
     3c8:	f1 f7       	brne	.-4      	; 0x3c6 <flash_diode+0x12>
     3ca:	08 95       	ret

000003cc <shell>:
	uart_sendChar('X');
	_delay_ms(1000);
}

//Ex 1, task 10 and 11
void shell(){
     3cc:	af 92       	push	r10
     3ce:	bf 92       	push	r11
     3d0:	cf 92       	push	r12
     3d2:	df 92       	push	r13
     3d4:	ef 92       	push	r14
     3d6:	ff 92       	push	r15
     3d8:	0f 93       	push	r16
     3da:	1f 93       	push	r17
     3dc:	cf 93       	push	r28
     3de:	df 93       	push	r29
     3e0:	cd b7       	in	r28, 0x3d	; 61
     3e2:	de b7       	in	r29, 0x3e	; 62
     3e4:	da 95       	dec	r29
     3e6:	0f b6       	in	r0, 0x3f	; 63
     3e8:	f8 94       	cli
     3ea:	de bf       	out	0x3e, r29	; 62
     3ec:	0f be       	out	0x3f, r0	; 63
     3ee:	cd bf       	out	0x3d, r28	; 61
	char cmd[256];
	printf("\n[root@skynet]#:");
     3f0:	8c ef       	ldi	r24, 0xFC	; 252
     3f2:	91 e0       	ldi	r25, 0x01	; 1
     3f4:	9f 93       	push	r25
     3f6:	8f 93       	push	r24
     3f8:	0e 94 1a 03 	call	0x634	; 0x634 <printf>
	scanf("%s", cmd);
     3fc:	8e 01       	movw	r16, r28
     3fe:	0f 5f       	subi	r16, 0xFF	; 255
     400:	1f 4f       	sbci	r17, 0xFF	; 255
     402:	1f 93       	push	r17
     404:	0f 93       	push	r16
     406:	8d e0       	ldi	r24, 0x0D	; 13
     408:	92 e0       	ldi	r25, 0x02	; 2
     40a:	9f 93       	push	r25
     40c:	8f 93       	push	r24
     40e:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <scanf>
	printf( " %s\n", cmd);
     412:	1f 93       	push	r17
     414:	0f 93       	push	r16
     416:	80 e1       	ldi	r24, 0x10	; 16
     418:	92 e0       	ldi	r25, 0x02	; 2
     41a:	9f 93       	push	r25
     41c:	8f 93       	push	r24
     41e:	0e 94 1a 03 	call	0x634	; 0x634 <printf>
	
	if(strcmp(cmd, "testdiode") == 0) {
     422:	65 e1       	ldi	r22, 0x15	; 21
     424:	72 e0       	ldi	r23, 0x02	; 2
     426:	c8 01       	movw	r24, r16
     428:	0e 94 11 03 	call	0x622	; 0x622 <strcmp>
     42c:	0f b6       	in	r0, 0x3f	; 63
     42e:	f8 94       	cli
     430:	de bf       	out	0x3e, r29	; 62
     432:	0f be       	out	0x3f, r0	; 63
     434:	cd bf       	out	0x3d, r28	; 61
     436:	89 2b       	or	r24, r25
     438:	91 f4       	brne	.+36     	; 0x45e <shell+0x92>
		printf("testing diode...\n");
     43a:	8f e1       	ldi	r24, 0x1F	; 31
     43c:	92 e0       	ldi	r25, 0x02	; 2
     43e:	0e 94 2e 03 	call	0x65c	; 0x65c <puts>
     442:	04 e1       	ldi	r16, 0x14	; 20
     444:	10 e0       	ldi	r17, 0x00	; 0
		for (int i = 0; i<20; i++) {	flash_diode(); }
     446:	0e 94 da 01 	call	0x3b4	; 0x3b4 <flash_diode>
     44a:	01 50       	subi	r16, 0x01	; 1
     44c:	11 09       	sbc	r17, r1
     44e:	01 15       	cp	r16, r1
     450:	11 05       	cpc	r17, r1
     452:	c9 f7       	brne	.-14     	; 0x446 <shell+0x7a>
		printf("done testing diode\n");
     454:	80 e3       	ldi	r24, 0x30	; 48
     456:	92 e0       	ldi	r25, 0x02	; 2
     458:	0e 94 2e 03 	call	0x65c	; 0x65c <puts>
     45c:	5c c0       	rjmp	.+184    	; 0x516 <__stack+0x17>
	} 

	else if (strcmp(cmd, "SRAM_test") == 0) {
     45e:	63 e4       	ldi	r22, 0x43	; 67
     460:	72 e0       	ldi	r23, 0x02	; 2
     462:	ce 01       	movw	r24, r28
     464:	01 96       	adiw	r24, 0x01	; 1
     466:	0e 94 11 03 	call	0x622	; 0x622 <strcmp>
     46a:	89 2b       	or	r24, r25
     46c:	19 f4       	brne	.+6      	; 0x474 <shell+0xa8>
		SRAM_test();
     46e:	0e 94 4e 01 	call	0x29c	; 0x29c <SRAM_test>
     472:	51 c0       	rjmp	.+162    	; 0x516 <__stack+0x17>
	} 

	else if (strcmp(cmd, "ADC_test") == 0) {
     474:	6d e4       	ldi	r22, 0x4D	; 77
     476:	72 e0       	ldi	r23, 0x02	; 2
     478:	ce 01       	movw	r24, r28
     47a:	01 96       	adiw	r24, 0x01	; 1
     47c:	0e 94 11 03 	call	0x622	; 0x622 <strcmp>
     480:	89 2b       	or	r24, r25
     482:	41 f5       	brne	.+80     	; 0x4d4 <shell+0x108>
		while(1){
			printf("Joystick x-pos: %003i \tJoystick y-pos: %003i \tLeft slider: %003d \tRight slider: %003d \n", \
     484:	06 e5       	ldi	r16, 0x56	; 86
     486:	12 e0       	ldi	r17, 0x02	; 2
     488:	83 e0       	ldi	r24, 0x03	; 3
     48a:	0e 94 5d 00 	call	0xba	; 0xba <joystick_read>
     48e:	b8 2e       	mov	r11, r24
     490:	a9 2e       	mov	r10, r25
     492:	82 e0       	ldi	r24, 0x02	; 2
     494:	0e 94 5d 00 	call	0xba	; 0xba <joystick_read>
     498:	d8 2e       	mov	r13, r24
     49a:	c9 2e       	mov	r12, r25
     49c:	81 e0       	ldi	r24, 0x01	; 1
     49e:	90 e0       	ldi	r25, 0x00	; 0
     4a0:	0e 94 77 00 	call	0xee	; 0xee <read_converted>
     4a4:	f8 2e       	mov	r15, r24
     4a6:	e9 2e       	mov	r14, r25
     4a8:	80 e0       	ldi	r24, 0x00	; 0
     4aa:	90 e0       	ldi	r25, 0x00	; 0
     4ac:	0e 94 77 00 	call	0xee	; 0xee <read_converted>
     4b0:	af 92       	push	r10
     4b2:	bf 92       	push	r11
     4b4:	cf 92       	push	r12
     4b6:	df 92       	push	r13
     4b8:	ef 92       	push	r14
     4ba:	ff 92       	push	r15
     4bc:	9f 93       	push	r25
     4be:	8f 93       	push	r24
     4c0:	1f 93       	push	r17
     4c2:	0f 93       	push	r16
     4c4:	0e 94 1a 03 	call	0x634	; 0x634 <printf>
     4c8:	0f b6       	in	r0, 0x3f	; 63
     4ca:	f8 94       	cli
     4cc:	de bf       	out	0x3e, r29	; 62
     4ce:	0f be       	out	0x3f, r0	; 63
     4d0:	cd bf       	out	0x3d, r28	; 61
     4d2:	da cf       	rjmp	.-76     	; 0x488 <shell+0xbc>
					read_converted(JOYSTICK_X), read_converted(JOYSTICK_Y), joystick_read(SLIDE_L), joystick_read(SLIDE_R));
		}
	}  
	
	else if (strcmp(cmd, "OLED_test") == 0) {
     4d4:	6e ea       	ldi	r22, 0xAE	; 174
     4d6:	72 e0       	ldi	r23, 0x02	; 2
     4d8:	ce 01       	movw	r24, r28
     4da:	01 96       	adiw	r24, 0x01	; 1
     4dc:	0e 94 11 03 	call	0x622	; 0x622 <strcmp>
     4e0:	89 2b       	or	r24, r25
     4e2:	59 f4       	brne	.+22     	; 0x4fa <shell+0x12e>
		printf("oled_init(): done\n");
     4e4:	88 eb       	ldi	r24, 0xB8	; 184
     4e6:	92 e0       	ldi	r25, 0x02	; 2
     4e8:	0e 94 2e 03 	call	0x65c	; 0x65c <puts>
		oled_goto_page(0);
     4ec:	80 e0       	ldi	r24, 0x00	; 0
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	0e 94 2c 01 	call	0x258	; 0x258 <oled_goto_page>
		while(1){
			oled_clear_screen();
     4f4:	0e 94 3e 01 	call	0x27c	; 0x27c <oled_clear_screen>
     4f8:	fd cf       	rjmp	.-6      	; 0x4f4 <shell+0x128>
		}
		
	}

	else {
		printf("unknown command \"%s\"\n", cmd);
     4fa:	ce 01       	movw	r24, r28
     4fc:	01 96       	adiw	r24, 0x01	; 1
     4fe:	9f 93       	push	r25
     500:	8f 93       	push	r24
     502:	8a ec       	ldi	r24, 0xCA	; 202
     504:	92 e0       	ldi	r25, 0x02	; 2
     506:	9f 93       	push	r25
     508:	8f 93       	push	r24
     50a:	0e 94 1a 03 	call	0x634	; 0x634 <printf>
     50e:	0f 90       	pop	r0
     510:	0f 90       	pop	r0
     512:	0f 90       	pop	r0
     514:	0f 90       	pop	r0
	}

	
	
}
     516:	d3 95       	inc	r29
     518:	0f b6       	in	r0, 0x3f	; 63
     51a:	f8 94       	cli
     51c:	de bf       	out	0x3e, r29	; 62
     51e:	0f be       	out	0x3f, r0	; 63
     520:	cd bf       	out	0x3d, r28	; 61
     522:	df 91       	pop	r29
     524:	cf 91       	pop	r28
     526:	1f 91       	pop	r17
     528:	0f 91       	pop	r16
     52a:	ff 90       	pop	r15
     52c:	ef 90       	pop	r14
     52e:	df 90       	pop	r13
     530:	cf 90       	pop	r12
     532:	bf 90       	pop	r11
     534:	af 90       	pop	r10
     536:	08 95       	ret

00000538 <uart_sendChar>:
     538:	5d 9b       	sbis	0x0b, 5	; 11
     53a:	fe cf       	rjmp	.-4      	; 0x538 <uart_sendChar>
     53c:	8c b9       	out	0x0c, r24	; 12
     53e:	08 95       	ret

00000540 <uart_getChar>:
     540:	5f 9b       	sbis	0x0b, 7	; 11
     542:	fe cf       	rjmp	.-4      	; 0x540 <uart_getChar>
     544:	8c b1       	in	r24, 0x0c	; 12
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	08 95       	ret

0000054a <uart_init>:
     54a:	89 b9       	out	0x09, r24	; 9
     54c:	88 e1       	ldi	r24, 0x18	; 24
     54e:	8a b9       	out	0x0a, r24	; 10
     550:	88 e0       	ldi	r24, 0x08	; 8
     552:	91 e0       	ldi	r25, 0x01	; 1
     554:	90 93 e7 02 	sts	0x02E7, r25
     558:	80 93 e6 02 	sts	0x02E6, r24
     55c:	90 93 e5 02 	sts	0x02E5, r25
     560:	80 93 e4 02 	sts	0x02E4, r24
     564:	08 95       	ret

00000566 <do_rand>:
     566:	8f 92       	push	r8
     568:	9f 92       	push	r9
     56a:	af 92       	push	r10
     56c:	bf 92       	push	r11
     56e:	cf 92       	push	r12
     570:	df 92       	push	r13
     572:	ef 92       	push	r14
     574:	ff 92       	push	r15
     576:	cf 93       	push	r28
     578:	df 93       	push	r29
     57a:	ec 01       	movw	r28, r24
     57c:	68 81       	ld	r22, Y
     57e:	79 81       	ldd	r23, Y+1	; 0x01
     580:	8a 81       	ldd	r24, Y+2	; 0x02
     582:	9b 81       	ldd	r25, Y+3	; 0x03
     584:	61 15       	cp	r22, r1
     586:	71 05       	cpc	r23, r1
     588:	81 05       	cpc	r24, r1
     58a:	91 05       	cpc	r25, r1
     58c:	21 f4       	brne	.+8      	; 0x596 <do_rand+0x30>
     58e:	64 e2       	ldi	r22, 0x24	; 36
     590:	79 ed       	ldi	r23, 0xD9	; 217
     592:	8b e5       	ldi	r24, 0x5B	; 91
     594:	97 e0       	ldi	r25, 0x07	; 7
     596:	2d e1       	ldi	r18, 0x1D	; 29
     598:	33 ef       	ldi	r19, 0xF3	; 243
     59a:	41 e0       	ldi	r20, 0x01	; 1
     59c:	50 e0       	ldi	r21, 0x00	; 0
     59e:	0e 94 09 09 	call	0x1212	; 0x1212 <__divmodsi4>
     5a2:	49 01       	movw	r8, r18
     5a4:	5a 01       	movw	r10, r20
     5a6:	9b 01       	movw	r18, r22
     5a8:	ac 01       	movw	r20, r24
     5aa:	a7 ea       	ldi	r26, 0xA7	; 167
     5ac:	b1 e4       	ldi	r27, 0x41	; 65
     5ae:	0e 94 28 09 	call	0x1250	; 0x1250 <__muluhisi3>
     5b2:	6b 01       	movw	r12, r22
     5b4:	7c 01       	movw	r14, r24
     5b6:	ac ee       	ldi	r26, 0xEC	; 236
     5b8:	b4 ef       	ldi	r27, 0xF4	; 244
     5ba:	a5 01       	movw	r20, r10
     5bc:	94 01       	movw	r18, r8
     5be:	0e 94 36 09 	call	0x126c	; 0x126c <__mulohisi3>
     5c2:	c6 0e       	add	r12, r22
     5c4:	d7 1e       	adc	r13, r23
     5c6:	e8 1e       	adc	r14, r24
     5c8:	f9 1e       	adc	r15, r25
     5ca:	f7 fe       	sbrs	r15, 7
     5cc:	06 c0       	rjmp	.+12     	; 0x5da <do_rand+0x74>
     5ce:	81 e0       	ldi	r24, 0x01	; 1
     5d0:	c8 1a       	sub	r12, r24
     5d2:	d1 08       	sbc	r13, r1
     5d4:	e1 08       	sbc	r14, r1
     5d6:	80 e8       	ldi	r24, 0x80	; 128
     5d8:	f8 0a       	sbc	r15, r24
     5da:	c8 82       	st	Y, r12
     5dc:	d9 82       	std	Y+1, r13	; 0x01
     5de:	ea 82       	std	Y+2, r14	; 0x02
     5e0:	fb 82       	std	Y+3, r15	; 0x03
     5e2:	c6 01       	movw	r24, r12
     5e4:	9f 77       	andi	r25, 0x7F	; 127
     5e6:	df 91       	pop	r29
     5e8:	cf 91       	pop	r28
     5ea:	ff 90       	pop	r15
     5ec:	ef 90       	pop	r14
     5ee:	df 90       	pop	r13
     5f0:	cf 90       	pop	r12
     5f2:	bf 90       	pop	r11
     5f4:	af 90       	pop	r10
     5f6:	9f 90       	pop	r9
     5f8:	8f 90       	pop	r8
     5fa:	08 95       	ret

000005fc <rand_r>:
     5fc:	0e 94 b3 02 	call	0x566	; 0x566 <do_rand>
     600:	08 95       	ret

00000602 <rand>:
     602:	80 e0       	ldi	r24, 0x00	; 0
     604:	91 e0       	ldi	r25, 0x01	; 1
     606:	0e 94 b3 02 	call	0x566	; 0x566 <do_rand>
     60a:	08 95       	ret

0000060c <srand>:
     60c:	a0 e0       	ldi	r26, 0x00	; 0
     60e:	b0 e0       	ldi	r27, 0x00	; 0
     610:	80 93 00 01 	sts	0x0100, r24
     614:	90 93 01 01 	sts	0x0101, r25
     618:	a0 93 02 01 	sts	0x0102, r26
     61c:	b0 93 03 01 	sts	0x0103, r27
     620:	08 95       	ret

00000622 <strcmp>:
     622:	fb 01       	movw	r30, r22
     624:	dc 01       	movw	r26, r24
     626:	8d 91       	ld	r24, X+
     628:	01 90       	ld	r0, Z+
     62a:	80 19       	sub	r24, r0
     62c:	01 10       	cpse	r0, r1
     62e:	d9 f3       	breq	.-10     	; 0x626 <strcmp+0x4>
     630:	99 0b       	sbc	r25, r25
     632:	08 95       	ret

00000634 <printf>:
     634:	a0 e0       	ldi	r26, 0x00	; 0
     636:	b0 e0       	ldi	r27, 0x00	; 0
     638:	e0 e2       	ldi	r30, 0x20	; 32
     63a:	f3 e0       	ldi	r31, 0x03	; 3
     63c:	0c 94 4b 09 	jmp	0x1296	; 0x1296 <__prologue_saves__+0x20>
     640:	fe 01       	movw	r30, r28
     642:	35 96       	adiw	r30, 0x05	; 5
     644:	61 91       	ld	r22, Z+
     646:	71 91       	ld	r23, Z+
     648:	af 01       	movw	r20, r30
     64a:	80 91 e6 02 	lds	r24, 0x02E6
     64e:	90 91 e7 02 	lds	r25, 0x02E7
     652:	0e 94 6f 03 	call	0x6de	; 0x6de <vfprintf>
     656:	e2 e0       	ldi	r30, 0x02	; 2
     658:	0c 94 67 09 	jmp	0x12ce	; 0x12ce <__epilogue_restores__+0x20>

0000065c <puts>:
     65c:	0f 93       	push	r16
     65e:	1f 93       	push	r17
     660:	cf 93       	push	r28
     662:	df 93       	push	r29
     664:	e0 91 e6 02 	lds	r30, 0x02E6
     668:	f0 91 e7 02 	lds	r31, 0x02E7
     66c:	23 81       	ldd	r18, Z+3	; 0x03
     66e:	21 ff       	sbrs	r18, 1
     670:	1b c0       	rjmp	.+54     	; 0x6a8 <puts+0x4c>
     672:	ec 01       	movw	r28, r24
     674:	00 e0       	ldi	r16, 0x00	; 0
     676:	10 e0       	ldi	r17, 0x00	; 0
     678:	89 91       	ld	r24, Y+
     67a:	60 91 e6 02 	lds	r22, 0x02E6
     67e:	70 91 e7 02 	lds	r23, 0x02E7
     682:	db 01       	movw	r26, r22
     684:	18 96       	adiw	r26, 0x08	; 8
     686:	ed 91       	ld	r30, X+
     688:	fc 91       	ld	r31, X
     68a:	19 97       	sbiw	r26, 0x09	; 9
     68c:	88 23       	and	r24, r24
     68e:	31 f0       	breq	.+12     	; 0x69c <puts+0x40>
     690:	09 95       	icall
     692:	89 2b       	or	r24, r25
     694:	89 f3       	breq	.-30     	; 0x678 <puts+0x1c>
     696:	0f ef       	ldi	r16, 0xFF	; 255
     698:	1f ef       	ldi	r17, 0xFF	; 255
     69a:	ee cf       	rjmp	.-36     	; 0x678 <puts+0x1c>
     69c:	8a e0       	ldi	r24, 0x0A	; 10
     69e:	09 95       	icall
     6a0:	89 2b       	or	r24, r25
     6a2:	11 f4       	brne	.+4      	; 0x6a8 <puts+0x4c>
     6a4:	c8 01       	movw	r24, r16
     6a6:	02 c0       	rjmp	.+4      	; 0x6ac <puts+0x50>
     6a8:	8f ef       	ldi	r24, 0xFF	; 255
     6aa:	9f ef       	ldi	r25, 0xFF	; 255
     6ac:	df 91       	pop	r29
     6ae:	cf 91       	pop	r28
     6b0:	1f 91       	pop	r17
     6b2:	0f 91       	pop	r16
     6b4:	08 95       	ret

000006b6 <scanf>:
     6b6:	a0 e0       	ldi	r26, 0x00	; 0
     6b8:	b0 e0       	ldi	r27, 0x00	; 0
     6ba:	e1 e6       	ldi	r30, 0x61	; 97
     6bc:	f3 e0       	ldi	r31, 0x03	; 3
     6be:	0c 94 4b 09 	jmp	0x1296	; 0x1296 <__prologue_saves__+0x20>
     6c2:	fe 01       	movw	r30, r28
     6c4:	35 96       	adiw	r30, 0x05	; 5
     6c6:	61 91       	ld	r22, Z+
     6c8:	71 91       	ld	r23, Z+
     6ca:	af 01       	movw	r20, r30
     6cc:	80 91 e4 02 	lds	r24, 0x02E4
     6d0:	90 91 e5 02 	lds	r25, 0x02E5
     6d4:	0e 94 bf 06 	call	0xd7e	; 0xd7e <vfscanf>
     6d8:	e2 e0       	ldi	r30, 0x02	; 2
     6da:	0c 94 67 09 	jmp	0x12ce	; 0x12ce <__epilogue_restores__+0x20>

000006de <vfprintf>:
     6de:	ac e0       	ldi	r26, 0x0C	; 12
     6e0:	b0 e0       	ldi	r27, 0x00	; 0
     6e2:	e5 e7       	ldi	r30, 0x75	; 117
     6e4:	f3 e0       	ldi	r31, 0x03	; 3
     6e6:	0c 94 3b 09 	jmp	0x1276	; 0x1276 <__prologue_saves__>
     6ea:	7c 01       	movw	r14, r24
     6ec:	6b 01       	movw	r12, r22
     6ee:	8a 01       	movw	r16, r20
     6f0:	fc 01       	movw	r30, r24
     6f2:	17 82       	std	Z+7, r1	; 0x07
     6f4:	16 82       	std	Z+6, r1	; 0x06
     6f6:	83 81       	ldd	r24, Z+3	; 0x03
     6f8:	81 ff       	sbrs	r24, 1
     6fa:	bd c1       	rjmp	.+890    	; 0xa76 <vfprintf+0x398>
     6fc:	ce 01       	movw	r24, r28
     6fe:	01 96       	adiw	r24, 0x01	; 1
     700:	4c 01       	movw	r8, r24
     702:	f7 01       	movw	r30, r14
     704:	93 81       	ldd	r25, Z+3	; 0x03
     706:	f6 01       	movw	r30, r12
     708:	93 fd       	sbrc	r25, 3
     70a:	85 91       	lpm	r24, Z+
     70c:	93 ff       	sbrs	r25, 3
     70e:	81 91       	ld	r24, Z+
     710:	6f 01       	movw	r12, r30
     712:	88 23       	and	r24, r24
     714:	09 f4       	brne	.+2      	; 0x718 <vfprintf+0x3a>
     716:	ab c1       	rjmp	.+854    	; 0xa6e <vfprintf+0x390>
     718:	85 32       	cpi	r24, 0x25	; 37
     71a:	39 f4       	brne	.+14     	; 0x72a <vfprintf+0x4c>
     71c:	93 fd       	sbrc	r25, 3
     71e:	85 91       	lpm	r24, Z+
     720:	93 ff       	sbrs	r25, 3
     722:	81 91       	ld	r24, Z+
     724:	6f 01       	movw	r12, r30
     726:	85 32       	cpi	r24, 0x25	; 37
     728:	29 f4       	brne	.+10     	; 0x734 <vfprintf+0x56>
     72a:	b7 01       	movw	r22, r14
     72c:	90 e0       	ldi	r25, 0x00	; 0
     72e:	0e 94 5d 08 	call	0x10ba	; 0x10ba <fputc>
     732:	e7 cf       	rjmp	.-50     	; 0x702 <vfprintf+0x24>
     734:	51 2c       	mov	r5, r1
     736:	31 2c       	mov	r3, r1
     738:	20 e0       	ldi	r18, 0x00	; 0
     73a:	20 32       	cpi	r18, 0x20	; 32
     73c:	a0 f4       	brcc	.+40     	; 0x766 <vfprintf+0x88>
     73e:	8b 32       	cpi	r24, 0x2B	; 43
     740:	69 f0       	breq	.+26     	; 0x75c <vfprintf+0x7e>
     742:	30 f4       	brcc	.+12     	; 0x750 <vfprintf+0x72>
     744:	80 32       	cpi	r24, 0x20	; 32
     746:	59 f0       	breq	.+22     	; 0x75e <vfprintf+0x80>
     748:	83 32       	cpi	r24, 0x23	; 35
     74a:	69 f4       	brne	.+26     	; 0x766 <vfprintf+0x88>
     74c:	20 61       	ori	r18, 0x10	; 16
     74e:	2c c0       	rjmp	.+88     	; 0x7a8 <vfprintf+0xca>
     750:	8d 32       	cpi	r24, 0x2D	; 45
     752:	39 f0       	breq	.+14     	; 0x762 <vfprintf+0x84>
     754:	80 33       	cpi	r24, 0x30	; 48
     756:	39 f4       	brne	.+14     	; 0x766 <vfprintf+0x88>
     758:	21 60       	ori	r18, 0x01	; 1
     75a:	26 c0       	rjmp	.+76     	; 0x7a8 <vfprintf+0xca>
     75c:	22 60       	ori	r18, 0x02	; 2
     75e:	24 60       	ori	r18, 0x04	; 4
     760:	23 c0       	rjmp	.+70     	; 0x7a8 <vfprintf+0xca>
     762:	28 60       	ori	r18, 0x08	; 8
     764:	21 c0       	rjmp	.+66     	; 0x7a8 <vfprintf+0xca>
     766:	27 fd       	sbrc	r18, 7
     768:	27 c0       	rjmp	.+78     	; 0x7b8 <vfprintf+0xda>
     76a:	30 ed       	ldi	r19, 0xD0	; 208
     76c:	38 0f       	add	r19, r24
     76e:	3a 30       	cpi	r19, 0x0A	; 10
     770:	78 f4       	brcc	.+30     	; 0x790 <vfprintf+0xb2>
     772:	26 ff       	sbrs	r18, 6
     774:	06 c0       	rjmp	.+12     	; 0x782 <vfprintf+0xa4>
     776:	fa e0       	ldi	r31, 0x0A	; 10
     778:	5f 9e       	mul	r5, r31
     77a:	30 0d       	add	r19, r0
     77c:	11 24       	eor	r1, r1
     77e:	53 2e       	mov	r5, r19
     780:	13 c0       	rjmp	.+38     	; 0x7a8 <vfprintf+0xca>
     782:	8a e0       	ldi	r24, 0x0A	; 10
     784:	38 9e       	mul	r3, r24
     786:	30 0d       	add	r19, r0
     788:	11 24       	eor	r1, r1
     78a:	33 2e       	mov	r3, r19
     78c:	20 62       	ori	r18, 0x20	; 32
     78e:	0c c0       	rjmp	.+24     	; 0x7a8 <vfprintf+0xca>
     790:	8e 32       	cpi	r24, 0x2E	; 46
     792:	21 f4       	brne	.+8      	; 0x79c <vfprintf+0xbe>
     794:	26 fd       	sbrc	r18, 6
     796:	6b c1       	rjmp	.+726    	; 0xa6e <vfprintf+0x390>
     798:	20 64       	ori	r18, 0x40	; 64
     79a:	06 c0       	rjmp	.+12     	; 0x7a8 <vfprintf+0xca>
     79c:	8c 36       	cpi	r24, 0x6C	; 108
     79e:	11 f4       	brne	.+4      	; 0x7a4 <vfprintf+0xc6>
     7a0:	20 68       	ori	r18, 0x80	; 128
     7a2:	02 c0       	rjmp	.+4      	; 0x7a8 <vfprintf+0xca>
     7a4:	88 36       	cpi	r24, 0x68	; 104
     7a6:	41 f4       	brne	.+16     	; 0x7b8 <vfprintf+0xda>
     7a8:	f6 01       	movw	r30, r12
     7aa:	93 fd       	sbrc	r25, 3
     7ac:	85 91       	lpm	r24, Z+
     7ae:	93 ff       	sbrs	r25, 3
     7b0:	81 91       	ld	r24, Z+
     7b2:	6f 01       	movw	r12, r30
     7b4:	81 11       	cpse	r24, r1
     7b6:	c1 cf       	rjmp	.-126    	; 0x73a <vfprintf+0x5c>
     7b8:	98 2f       	mov	r25, r24
     7ba:	9f 7d       	andi	r25, 0xDF	; 223
     7bc:	95 54       	subi	r25, 0x45	; 69
     7be:	93 30       	cpi	r25, 0x03	; 3
     7c0:	28 f4       	brcc	.+10     	; 0x7cc <vfprintf+0xee>
     7c2:	0c 5f       	subi	r16, 0xFC	; 252
     7c4:	1f 4f       	sbci	r17, 0xFF	; 255
     7c6:	ff e3       	ldi	r31, 0x3F	; 63
     7c8:	f9 83       	std	Y+1, r31	; 0x01
     7ca:	0d c0       	rjmp	.+26     	; 0x7e6 <vfprintf+0x108>
     7cc:	83 36       	cpi	r24, 0x63	; 99
     7ce:	31 f0       	breq	.+12     	; 0x7dc <vfprintf+0xfe>
     7d0:	83 37       	cpi	r24, 0x73	; 115
     7d2:	71 f0       	breq	.+28     	; 0x7f0 <vfprintf+0x112>
     7d4:	83 35       	cpi	r24, 0x53	; 83
     7d6:	09 f0       	breq	.+2      	; 0x7da <vfprintf+0xfc>
     7d8:	5b c0       	rjmp	.+182    	; 0x890 <vfprintf+0x1b2>
     7da:	22 c0       	rjmp	.+68     	; 0x820 <vfprintf+0x142>
     7dc:	f8 01       	movw	r30, r16
     7de:	80 81       	ld	r24, Z
     7e0:	89 83       	std	Y+1, r24	; 0x01
     7e2:	0e 5f       	subi	r16, 0xFE	; 254
     7e4:	1f 4f       	sbci	r17, 0xFF	; 255
     7e6:	44 24       	eor	r4, r4
     7e8:	43 94       	inc	r4
     7ea:	51 2c       	mov	r5, r1
     7ec:	54 01       	movw	r10, r8
     7ee:	15 c0       	rjmp	.+42     	; 0x81a <vfprintf+0x13c>
     7f0:	38 01       	movw	r6, r16
     7f2:	f2 e0       	ldi	r31, 0x02	; 2
     7f4:	6f 0e       	add	r6, r31
     7f6:	71 1c       	adc	r7, r1
     7f8:	f8 01       	movw	r30, r16
     7fa:	a0 80       	ld	r10, Z
     7fc:	b1 80       	ldd	r11, Z+1	; 0x01
     7fe:	26 ff       	sbrs	r18, 6
     800:	03 c0       	rjmp	.+6      	; 0x808 <vfprintf+0x12a>
     802:	65 2d       	mov	r22, r5
     804:	70 e0       	ldi	r23, 0x00	; 0
     806:	02 c0       	rjmp	.+4      	; 0x80c <vfprintf+0x12e>
     808:	6f ef       	ldi	r22, 0xFF	; 255
     80a:	7f ef       	ldi	r23, 0xFF	; 255
     80c:	c5 01       	movw	r24, r10
     80e:	2c 87       	std	Y+12, r18	; 0x0c
     810:	0e 94 14 08 	call	0x1028	; 0x1028 <strnlen>
     814:	2c 01       	movw	r4, r24
     816:	83 01       	movw	r16, r6
     818:	2c 85       	ldd	r18, Y+12	; 0x0c
     81a:	2f 77       	andi	r18, 0x7F	; 127
     81c:	22 2e       	mov	r2, r18
     81e:	17 c0       	rjmp	.+46     	; 0x84e <vfprintf+0x170>
     820:	38 01       	movw	r6, r16
     822:	f2 e0       	ldi	r31, 0x02	; 2
     824:	6f 0e       	add	r6, r31
     826:	71 1c       	adc	r7, r1
     828:	f8 01       	movw	r30, r16
     82a:	a0 80       	ld	r10, Z
     82c:	b1 80       	ldd	r11, Z+1	; 0x01
     82e:	26 ff       	sbrs	r18, 6
     830:	03 c0       	rjmp	.+6      	; 0x838 <vfprintf+0x15a>
     832:	65 2d       	mov	r22, r5
     834:	70 e0       	ldi	r23, 0x00	; 0
     836:	02 c0       	rjmp	.+4      	; 0x83c <vfprintf+0x15e>
     838:	6f ef       	ldi	r22, 0xFF	; 255
     83a:	7f ef       	ldi	r23, 0xFF	; 255
     83c:	c5 01       	movw	r24, r10
     83e:	2c 87       	std	Y+12, r18	; 0x0c
     840:	0e 94 09 08 	call	0x1012	; 0x1012 <strnlen_P>
     844:	2c 01       	movw	r4, r24
     846:	2c 85       	ldd	r18, Y+12	; 0x0c
     848:	20 68       	ori	r18, 0x80	; 128
     84a:	22 2e       	mov	r2, r18
     84c:	83 01       	movw	r16, r6
     84e:	23 fc       	sbrc	r2, 3
     850:	1b c0       	rjmp	.+54     	; 0x888 <vfprintf+0x1aa>
     852:	83 2d       	mov	r24, r3
     854:	90 e0       	ldi	r25, 0x00	; 0
     856:	48 16       	cp	r4, r24
     858:	59 06       	cpc	r5, r25
     85a:	b0 f4       	brcc	.+44     	; 0x888 <vfprintf+0x1aa>
     85c:	b7 01       	movw	r22, r14
     85e:	80 e2       	ldi	r24, 0x20	; 32
     860:	90 e0       	ldi	r25, 0x00	; 0
     862:	0e 94 5d 08 	call	0x10ba	; 0x10ba <fputc>
     866:	3a 94       	dec	r3
     868:	f4 cf       	rjmp	.-24     	; 0x852 <vfprintf+0x174>
     86a:	f5 01       	movw	r30, r10
     86c:	27 fc       	sbrc	r2, 7
     86e:	85 91       	lpm	r24, Z+
     870:	27 fe       	sbrs	r2, 7
     872:	81 91       	ld	r24, Z+
     874:	5f 01       	movw	r10, r30
     876:	b7 01       	movw	r22, r14
     878:	90 e0       	ldi	r25, 0x00	; 0
     87a:	0e 94 5d 08 	call	0x10ba	; 0x10ba <fputc>
     87e:	31 10       	cpse	r3, r1
     880:	3a 94       	dec	r3
     882:	f1 e0       	ldi	r31, 0x01	; 1
     884:	4f 1a       	sub	r4, r31
     886:	51 08       	sbc	r5, r1
     888:	41 14       	cp	r4, r1
     88a:	51 04       	cpc	r5, r1
     88c:	71 f7       	brne	.-36     	; 0x86a <vfprintf+0x18c>
     88e:	e5 c0       	rjmp	.+458    	; 0xa5a <vfprintf+0x37c>
     890:	84 36       	cpi	r24, 0x64	; 100
     892:	11 f0       	breq	.+4      	; 0x898 <vfprintf+0x1ba>
     894:	89 36       	cpi	r24, 0x69	; 105
     896:	39 f5       	brne	.+78     	; 0x8e6 <vfprintf+0x208>
     898:	f8 01       	movw	r30, r16
     89a:	27 ff       	sbrs	r18, 7
     89c:	07 c0       	rjmp	.+14     	; 0x8ac <vfprintf+0x1ce>
     89e:	60 81       	ld	r22, Z
     8a0:	71 81       	ldd	r23, Z+1	; 0x01
     8a2:	82 81       	ldd	r24, Z+2	; 0x02
     8a4:	93 81       	ldd	r25, Z+3	; 0x03
     8a6:	0c 5f       	subi	r16, 0xFC	; 252
     8a8:	1f 4f       	sbci	r17, 0xFF	; 255
     8aa:	08 c0       	rjmp	.+16     	; 0x8bc <vfprintf+0x1de>
     8ac:	60 81       	ld	r22, Z
     8ae:	71 81       	ldd	r23, Z+1	; 0x01
     8b0:	88 27       	eor	r24, r24
     8b2:	77 fd       	sbrc	r23, 7
     8b4:	80 95       	com	r24
     8b6:	98 2f       	mov	r25, r24
     8b8:	0e 5f       	subi	r16, 0xFE	; 254
     8ba:	1f 4f       	sbci	r17, 0xFF	; 255
     8bc:	2f 76       	andi	r18, 0x6F	; 111
     8be:	b2 2e       	mov	r11, r18
     8c0:	97 ff       	sbrs	r25, 7
     8c2:	09 c0       	rjmp	.+18     	; 0x8d6 <vfprintf+0x1f8>
     8c4:	90 95       	com	r25
     8c6:	80 95       	com	r24
     8c8:	70 95       	com	r23
     8ca:	61 95       	neg	r22
     8cc:	7f 4f       	sbci	r23, 0xFF	; 255
     8ce:	8f 4f       	sbci	r24, 0xFF	; 255
     8d0:	9f 4f       	sbci	r25, 0xFF	; 255
     8d2:	20 68       	ori	r18, 0x80	; 128
     8d4:	b2 2e       	mov	r11, r18
     8d6:	2a e0       	ldi	r18, 0x0A	; 10
     8d8:	30 e0       	ldi	r19, 0x00	; 0
     8da:	a4 01       	movw	r20, r8
     8dc:	0e 94 a8 08 	call	0x1150	; 0x1150 <__ultoa_invert>
     8e0:	a8 2e       	mov	r10, r24
     8e2:	a8 18       	sub	r10, r8
     8e4:	44 c0       	rjmp	.+136    	; 0x96e <vfprintf+0x290>
     8e6:	85 37       	cpi	r24, 0x75	; 117
     8e8:	29 f4       	brne	.+10     	; 0x8f4 <vfprintf+0x216>
     8ea:	2f 7e       	andi	r18, 0xEF	; 239
     8ec:	b2 2e       	mov	r11, r18
     8ee:	2a e0       	ldi	r18, 0x0A	; 10
     8f0:	30 e0       	ldi	r19, 0x00	; 0
     8f2:	25 c0       	rjmp	.+74     	; 0x93e <vfprintf+0x260>
     8f4:	f2 2f       	mov	r31, r18
     8f6:	f9 7f       	andi	r31, 0xF9	; 249
     8f8:	bf 2e       	mov	r11, r31
     8fa:	8f 36       	cpi	r24, 0x6F	; 111
     8fc:	c1 f0       	breq	.+48     	; 0x92e <vfprintf+0x250>
     8fe:	18 f4       	brcc	.+6      	; 0x906 <vfprintf+0x228>
     900:	88 35       	cpi	r24, 0x58	; 88
     902:	79 f0       	breq	.+30     	; 0x922 <vfprintf+0x244>
     904:	b4 c0       	rjmp	.+360    	; 0xa6e <vfprintf+0x390>
     906:	80 37       	cpi	r24, 0x70	; 112
     908:	19 f0       	breq	.+6      	; 0x910 <vfprintf+0x232>
     90a:	88 37       	cpi	r24, 0x78	; 120
     90c:	21 f0       	breq	.+8      	; 0x916 <vfprintf+0x238>
     90e:	af c0       	rjmp	.+350    	; 0xa6e <vfprintf+0x390>
     910:	2f 2f       	mov	r18, r31
     912:	20 61       	ori	r18, 0x10	; 16
     914:	b2 2e       	mov	r11, r18
     916:	b4 fe       	sbrs	r11, 4
     918:	0d c0       	rjmp	.+26     	; 0x934 <vfprintf+0x256>
     91a:	8b 2d       	mov	r24, r11
     91c:	84 60       	ori	r24, 0x04	; 4
     91e:	b8 2e       	mov	r11, r24
     920:	09 c0       	rjmp	.+18     	; 0x934 <vfprintf+0x256>
     922:	24 ff       	sbrs	r18, 4
     924:	0a c0       	rjmp	.+20     	; 0x93a <vfprintf+0x25c>
     926:	9f 2f       	mov	r25, r31
     928:	96 60       	ori	r25, 0x06	; 6
     92a:	b9 2e       	mov	r11, r25
     92c:	06 c0       	rjmp	.+12     	; 0x93a <vfprintf+0x25c>
     92e:	28 e0       	ldi	r18, 0x08	; 8
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	05 c0       	rjmp	.+10     	; 0x93e <vfprintf+0x260>
     934:	20 e1       	ldi	r18, 0x10	; 16
     936:	30 e0       	ldi	r19, 0x00	; 0
     938:	02 c0       	rjmp	.+4      	; 0x93e <vfprintf+0x260>
     93a:	20 e1       	ldi	r18, 0x10	; 16
     93c:	32 e0       	ldi	r19, 0x02	; 2
     93e:	f8 01       	movw	r30, r16
     940:	b7 fe       	sbrs	r11, 7
     942:	07 c0       	rjmp	.+14     	; 0x952 <vfprintf+0x274>
     944:	60 81       	ld	r22, Z
     946:	71 81       	ldd	r23, Z+1	; 0x01
     948:	82 81       	ldd	r24, Z+2	; 0x02
     94a:	93 81       	ldd	r25, Z+3	; 0x03
     94c:	0c 5f       	subi	r16, 0xFC	; 252
     94e:	1f 4f       	sbci	r17, 0xFF	; 255
     950:	06 c0       	rjmp	.+12     	; 0x95e <vfprintf+0x280>
     952:	60 81       	ld	r22, Z
     954:	71 81       	ldd	r23, Z+1	; 0x01
     956:	80 e0       	ldi	r24, 0x00	; 0
     958:	90 e0       	ldi	r25, 0x00	; 0
     95a:	0e 5f       	subi	r16, 0xFE	; 254
     95c:	1f 4f       	sbci	r17, 0xFF	; 255
     95e:	a4 01       	movw	r20, r8
     960:	0e 94 a8 08 	call	0x1150	; 0x1150 <__ultoa_invert>
     964:	a8 2e       	mov	r10, r24
     966:	a8 18       	sub	r10, r8
     968:	fb 2d       	mov	r31, r11
     96a:	ff 77       	andi	r31, 0x7F	; 127
     96c:	bf 2e       	mov	r11, r31
     96e:	b6 fe       	sbrs	r11, 6
     970:	0b c0       	rjmp	.+22     	; 0x988 <vfprintf+0x2aa>
     972:	2b 2d       	mov	r18, r11
     974:	2e 7f       	andi	r18, 0xFE	; 254
     976:	a5 14       	cp	r10, r5
     978:	50 f4       	brcc	.+20     	; 0x98e <vfprintf+0x2b0>
     97a:	b4 fe       	sbrs	r11, 4
     97c:	0a c0       	rjmp	.+20     	; 0x992 <vfprintf+0x2b4>
     97e:	b2 fc       	sbrc	r11, 2
     980:	08 c0       	rjmp	.+16     	; 0x992 <vfprintf+0x2b4>
     982:	2b 2d       	mov	r18, r11
     984:	2e 7e       	andi	r18, 0xEE	; 238
     986:	05 c0       	rjmp	.+10     	; 0x992 <vfprintf+0x2b4>
     988:	7a 2c       	mov	r7, r10
     98a:	2b 2d       	mov	r18, r11
     98c:	03 c0       	rjmp	.+6      	; 0x994 <vfprintf+0x2b6>
     98e:	7a 2c       	mov	r7, r10
     990:	01 c0       	rjmp	.+2      	; 0x994 <vfprintf+0x2b6>
     992:	75 2c       	mov	r7, r5
     994:	24 ff       	sbrs	r18, 4
     996:	0d c0       	rjmp	.+26     	; 0x9b2 <vfprintf+0x2d4>
     998:	fe 01       	movw	r30, r28
     99a:	ea 0d       	add	r30, r10
     99c:	f1 1d       	adc	r31, r1
     99e:	80 81       	ld	r24, Z
     9a0:	80 33       	cpi	r24, 0x30	; 48
     9a2:	11 f4       	brne	.+4      	; 0x9a8 <vfprintf+0x2ca>
     9a4:	29 7e       	andi	r18, 0xE9	; 233
     9a6:	09 c0       	rjmp	.+18     	; 0x9ba <vfprintf+0x2dc>
     9a8:	22 ff       	sbrs	r18, 2
     9aa:	06 c0       	rjmp	.+12     	; 0x9b8 <vfprintf+0x2da>
     9ac:	73 94       	inc	r7
     9ae:	73 94       	inc	r7
     9b0:	04 c0       	rjmp	.+8      	; 0x9ba <vfprintf+0x2dc>
     9b2:	82 2f       	mov	r24, r18
     9b4:	86 78       	andi	r24, 0x86	; 134
     9b6:	09 f0       	breq	.+2      	; 0x9ba <vfprintf+0x2dc>
     9b8:	73 94       	inc	r7
     9ba:	23 fd       	sbrc	r18, 3
     9bc:	13 c0       	rjmp	.+38     	; 0x9e4 <vfprintf+0x306>
     9be:	20 ff       	sbrs	r18, 0
     9c0:	06 c0       	rjmp	.+12     	; 0x9ce <vfprintf+0x2f0>
     9c2:	5a 2c       	mov	r5, r10
     9c4:	73 14       	cp	r7, r3
     9c6:	18 f4       	brcc	.+6      	; 0x9ce <vfprintf+0x2f0>
     9c8:	53 0c       	add	r5, r3
     9ca:	57 18       	sub	r5, r7
     9cc:	73 2c       	mov	r7, r3
     9ce:	73 14       	cp	r7, r3
     9d0:	68 f4       	brcc	.+26     	; 0x9ec <vfprintf+0x30e>
     9d2:	b7 01       	movw	r22, r14
     9d4:	80 e2       	ldi	r24, 0x20	; 32
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	2c 87       	std	Y+12, r18	; 0x0c
     9da:	0e 94 5d 08 	call	0x10ba	; 0x10ba <fputc>
     9de:	73 94       	inc	r7
     9e0:	2c 85       	ldd	r18, Y+12	; 0x0c
     9e2:	f5 cf       	rjmp	.-22     	; 0x9ce <vfprintf+0x2f0>
     9e4:	73 14       	cp	r7, r3
     9e6:	10 f4       	brcc	.+4      	; 0x9ec <vfprintf+0x30e>
     9e8:	37 18       	sub	r3, r7
     9ea:	01 c0       	rjmp	.+2      	; 0x9ee <vfprintf+0x310>
     9ec:	31 2c       	mov	r3, r1
     9ee:	24 ff       	sbrs	r18, 4
     9f0:	12 c0       	rjmp	.+36     	; 0xa16 <vfprintf+0x338>
     9f2:	b7 01       	movw	r22, r14
     9f4:	80 e3       	ldi	r24, 0x30	; 48
     9f6:	90 e0       	ldi	r25, 0x00	; 0
     9f8:	2c 87       	std	Y+12, r18	; 0x0c
     9fa:	0e 94 5d 08 	call	0x10ba	; 0x10ba <fputc>
     9fe:	2c 85       	ldd	r18, Y+12	; 0x0c
     a00:	22 ff       	sbrs	r18, 2
     a02:	17 c0       	rjmp	.+46     	; 0xa32 <vfprintf+0x354>
     a04:	21 ff       	sbrs	r18, 1
     a06:	03 c0       	rjmp	.+6      	; 0xa0e <vfprintf+0x330>
     a08:	88 e5       	ldi	r24, 0x58	; 88
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	02 c0       	rjmp	.+4      	; 0xa12 <vfprintf+0x334>
     a0e:	88 e7       	ldi	r24, 0x78	; 120
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	b7 01       	movw	r22, r14
     a14:	0c c0       	rjmp	.+24     	; 0xa2e <vfprintf+0x350>
     a16:	82 2f       	mov	r24, r18
     a18:	86 78       	andi	r24, 0x86	; 134
     a1a:	59 f0       	breq	.+22     	; 0xa32 <vfprintf+0x354>
     a1c:	21 fd       	sbrc	r18, 1
     a1e:	02 c0       	rjmp	.+4      	; 0xa24 <vfprintf+0x346>
     a20:	80 e2       	ldi	r24, 0x20	; 32
     a22:	01 c0       	rjmp	.+2      	; 0xa26 <vfprintf+0x348>
     a24:	8b e2       	ldi	r24, 0x2B	; 43
     a26:	27 fd       	sbrc	r18, 7
     a28:	8d e2       	ldi	r24, 0x2D	; 45
     a2a:	b7 01       	movw	r22, r14
     a2c:	90 e0       	ldi	r25, 0x00	; 0
     a2e:	0e 94 5d 08 	call	0x10ba	; 0x10ba <fputc>
     a32:	a5 14       	cp	r10, r5
     a34:	38 f4       	brcc	.+14     	; 0xa44 <vfprintf+0x366>
     a36:	b7 01       	movw	r22, r14
     a38:	80 e3       	ldi	r24, 0x30	; 48
     a3a:	90 e0       	ldi	r25, 0x00	; 0
     a3c:	0e 94 5d 08 	call	0x10ba	; 0x10ba <fputc>
     a40:	5a 94       	dec	r5
     a42:	f7 cf       	rjmp	.-18     	; 0xa32 <vfprintf+0x354>
     a44:	aa 94       	dec	r10
     a46:	f4 01       	movw	r30, r8
     a48:	ea 0d       	add	r30, r10
     a4a:	f1 1d       	adc	r31, r1
     a4c:	80 81       	ld	r24, Z
     a4e:	b7 01       	movw	r22, r14
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	0e 94 5d 08 	call	0x10ba	; 0x10ba <fputc>
     a56:	a1 10       	cpse	r10, r1
     a58:	f5 cf       	rjmp	.-22     	; 0xa44 <vfprintf+0x366>
     a5a:	33 20       	and	r3, r3
     a5c:	09 f4       	brne	.+2      	; 0xa60 <vfprintf+0x382>
     a5e:	51 ce       	rjmp	.-862    	; 0x702 <vfprintf+0x24>
     a60:	b7 01       	movw	r22, r14
     a62:	80 e2       	ldi	r24, 0x20	; 32
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	0e 94 5d 08 	call	0x10ba	; 0x10ba <fputc>
     a6a:	3a 94       	dec	r3
     a6c:	f6 cf       	rjmp	.-20     	; 0xa5a <vfprintf+0x37c>
     a6e:	f7 01       	movw	r30, r14
     a70:	86 81       	ldd	r24, Z+6	; 0x06
     a72:	97 81       	ldd	r25, Z+7	; 0x07
     a74:	02 c0       	rjmp	.+4      	; 0xa7a <vfprintf+0x39c>
     a76:	8f ef       	ldi	r24, 0xFF	; 255
     a78:	9f ef       	ldi	r25, 0xFF	; 255
     a7a:	2c 96       	adiw	r28, 0x0c	; 12
     a7c:	e2 e1       	ldi	r30, 0x12	; 18
     a7e:	0c 94 57 09 	jmp	0x12ae	; 0x12ae <__epilogue_restores__>

00000a82 <putval>:
     a82:	20 fd       	sbrc	r18, 0
     a84:	09 c0       	rjmp	.+18     	; 0xa98 <putval+0x16>
     a86:	fc 01       	movw	r30, r24
     a88:	23 fd       	sbrc	r18, 3
     a8a:	05 c0       	rjmp	.+10     	; 0xa96 <putval+0x14>
     a8c:	22 ff       	sbrs	r18, 2
     a8e:	02 c0       	rjmp	.+4      	; 0xa94 <putval+0x12>
     a90:	73 83       	std	Z+3, r23	; 0x03
     a92:	62 83       	std	Z+2, r22	; 0x02
     a94:	51 83       	std	Z+1, r21	; 0x01
     a96:	40 83       	st	Z, r20
     a98:	08 95       	ret

00000a9a <mulacc>:
     a9a:	44 fd       	sbrc	r20, 4
     a9c:	10 c0       	rjmp	.+32     	; 0xabe <mulacc+0x24>
     a9e:	46 fd       	sbrc	r20, 6
     aa0:	10 c0       	rjmp	.+32     	; 0xac2 <mulacc+0x28>
     aa2:	db 01       	movw	r26, r22
     aa4:	fc 01       	movw	r30, r24
     aa6:	aa 0f       	add	r26, r26
     aa8:	bb 1f       	adc	r27, r27
     aaa:	ee 1f       	adc	r30, r30
     aac:	ff 1f       	adc	r31, r31
     aae:	10 94       	com	r1
     ab0:	d1 f7       	brne	.-12     	; 0xaa6 <mulacc+0xc>
     ab2:	6a 0f       	add	r22, r26
     ab4:	7b 1f       	adc	r23, r27
     ab6:	8e 1f       	adc	r24, r30
     ab8:	9f 1f       	adc	r25, r31
     aba:	31 e0       	ldi	r19, 0x01	; 1
     abc:	03 c0       	rjmp	.+6      	; 0xac4 <mulacc+0x2a>
     abe:	33 e0       	ldi	r19, 0x03	; 3
     ac0:	01 c0       	rjmp	.+2      	; 0xac4 <mulacc+0x2a>
     ac2:	34 e0       	ldi	r19, 0x04	; 4
     ac4:	66 0f       	add	r22, r22
     ac6:	77 1f       	adc	r23, r23
     ac8:	88 1f       	adc	r24, r24
     aca:	99 1f       	adc	r25, r25
     acc:	31 50       	subi	r19, 0x01	; 1
     ace:	d1 f7       	brne	.-12     	; 0xac4 <mulacc+0x2a>
     ad0:	62 0f       	add	r22, r18
     ad2:	71 1d       	adc	r23, r1
     ad4:	81 1d       	adc	r24, r1
     ad6:	91 1d       	adc	r25, r1
     ad8:	08 95       	ret

00000ada <skip_spaces>:
     ada:	0f 93       	push	r16
     adc:	1f 93       	push	r17
     ade:	cf 93       	push	r28
     ae0:	df 93       	push	r29
     ae2:	8c 01       	movw	r16, r24
     ae4:	c8 01       	movw	r24, r16
     ae6:	0e 94 1f 08 	call	0x103e	; 0x103e <fgetc>
     aea:	ec 01       	movw	r28, r24
     aec:	97 fd       	sbrc	r25, 7
     aee:	08 c0       	rjmp	.+16     	; 0xb00 <skip_spaces+0x26>
     af0:	0e 94 f6 07 	call	0xfec	; 0xfec <isspace>
     af4:	89 2b       	or	r24, r25
     af6:	b1 f7       	brne	.-20     	; 0xae4 <skip_spaces+0xa>
     af8:	b8 01       	movw	r22, r16
     afa:	ce 01       	movw	r24, r28
     afc:	0e 94 8f 08 	call	0x111e	; 0x111e <ungetc>
     b00:	ce 01       	movw	r24, r28
     b02:	df 91       	pop	r29
     b04:	cf 91       	pop	r28
     b06:	1f 91       	pop	r17
     b08:	0f 91       	pop	r16
     b0a:	08 95       	ret

00000b0c <conv_int>:
     b0c:	8f 92       	push	r8
     b0e:	9f 92       	push	r9
     b10:	af 92       	push	r10
     b12:	cf 92       	push	r12
     b14:	df 92       	push	r13
     b16:	ef 92       	push	r14
     b18:	ff 92       	push	r15
     b1a:	0f 93       	push	r16
     b1c:	1f 93       	push	r17
     b1e:	cf 93       	push	r28
     b20:	df 93       	push	r29
     b22:	ec 01       	movw	r28, r24
     b24:	a6 2e       	mov	r10, r22
     b26:	4a 01       	movw	r8, r20
     b28:	02 2f       	mov	r16, r18
     b2a:	0e 94 1f 08 	call	0x103e	; 0x103e <fgetc>
     b2e:	ac 01       	movw	r20, r24
     b30:	55 27       	eor	r21, r21
     b32:	4b 32       	cpi	r20, 0x2B	; 43
     b34:	51 05       	cpc	r21, r1
     b36:	21 f0       	breq	.+8      	; 0xb40 <conv_int+0x34>
     b38:	4d 32       	cpi	r20, 0x2D	; 45
     b3a:	51 05       	cpc	r21, r1
     b3c:	51 f4       	brne	.+20     	; 0xb52 <conv_int+0x46>
     b3e:	00 68       	ori	r16, 0x80	; 128
     b40:	aa 94       	dec	r10
     b42:	11 f4       	brne	.+4      	; 0xb48 <conv_int+0x3c>
     b44:	80 e0       	ldi	r24, 0x00	; 0
     b46:	67 c0       	rjmp	.+206    	; 0xc16 <conv_int+0x10a>
     b48:	ce 01       	movw	r24, r28
     b4a:	0e 94 1f 08 	call	0x103e	; 0x103e <fgetc>
     b4e:	97 fd       	sbrc	r25, 7
     b50:	f9 cf       	rjmp	.-14     	; 0xb44 <conv_int+0x38>
     b52:	10 2f       	mov	r17, r16
     b54:	1d 7f       	andi	r17, 0xFD	; 253
     b56:	30 2f       	mov	r19, r16
     b58:	30 73       	andi	r19, 0x30	; 48
     b5a:	01 f5       	brne	.+64     	; 0xb9c <conv_int+0x90>
     b5c:	80 33       	cpi	r24, 0x30	; 48
     b5e:	f1 f4       	brne	.+60     	; 0xb9c <conv_int+0x90>
     b60:	ff 24       	eor	r15, r15
     b62:	fa 94       	dec	r15
     b64:	fa 0c       	add	r15, r10
     b66:	09 f4       	brne	.+2      	; 0xb6a <conv_int+0x5e>
     b68:	42 c0       	rjmp	.+132    	; 0xbee <conv_int+0xe2>
     b6a:	ce 01       	movw	r24, r28
     b6c:	0e 94 1f 08 	call	0x103e	; 0x103e <fgetc>
     b70:	97 fd       	sbrc	r25, 7
     b72:	3d c0       	rjmp	.+122    	; 0xbee <conv_int+0xe2>
     b74:	38 2f       	mov	r19, r24
     b76:	3f 7d       	andi	r19, 0xDF	; 223
     b78:	38 35       	cpi	r19, 0x58	; 88
     b7a:	51 f4       	brne	.+20     	; 0xb90 <conv_int+0x84>
     b7c:	12 64       	ori	r17, 0x42	; 66
     b7e:	aa 94       	dec	r10
     b80:	aa 94       	dec	r10
     b82:	a9 f1       	breq	.+106    	; 0xbee <conv_int+0xe2>
     b84:	ce 01       	movw	r24, r28
     b86:	0e 94 1f 08 	call	0x103e	; 0x103e <fgetc>
     b8a:	97 ff       	sbrs	r25, 7
     b8c:	07 c0       	rjmp	.+14     	; 0xb9c <conv_int+0x90>
     b8e:	2f c0       	rjmp	.+94     	; 0xbee <conv_int+0xe2>
     b90:	06 ff       	sbrs	r16, 6
     b92:	02 c0       	rjmp	.+4      	; 0xb98 <conv_int+0x8c>
     b94:	12 60       	ori	r17, 0x02	; 2
     b96:	01 c0       	rjmp	.+2      	; 0xb9a <conv_int+0x8e>
     b98:	12 61       	ori	r17, 0x12	; 18
     b9a:	af 2c       	mov	r10, r15
     b9c:	c1 2c       	mov	r12, r1
     b9e:	d1 2c       	mov	r13, r1
     ba0:	76 01       	movw	r14, r12
     ba2:	20 ed       	ldi	r18, 0xD0	; 208
     ba4:	28 0f       	add	r18, r24
     ba6:	28 30       	cpi	r18, 0x08	; 8
     ba8:	80 f0       	brcs	.+32     	; 0xbca <conv_int+0xbe>
     baa:	14 ff       	sbrs	r17, 4
     bac:	04 c0       	rjmp	.+8      	; 0xbb6 <conv_int+0xaa>
     bae:	be 01       	movw	r22, r28
     bb0:	0e 94 8f 08 	call	0x111e	; 0x111e <ungetc>
     bb4:	19 c0       	rjmp	.+50     	; 0xbe8 <conv_int+0xdc>
     bb6:	2a 30       	cpi	r18, 0x0A	; 10
     bb8:	40 f0       	brcs	.+16     	; 0xbca <conv_int+0xbe>
     bba:	16 ff       	sbrs	r17, 6
     bbc:	f8 cf       	rjmp	.-16     	; 0xbae <conv_int+0xa2>
     bbe:	2f 7d       	andi	r18, 0xDF	; 223
     bc0:	3f ee       	ldi	r19, 0xEF	; 239
     bc2:	32 0f       	add	r19, r18
     bc4:	36 30       	cpi	r19, 0x06	; 6
     bc6:	98 f7       	brcc	.-26     	; 0xbae <conv_int+0xa2>
     bc8:	27 50       	subi	r18, 0x07	; 7
     bca:	41 2f       	mov	r20, r17
     bcc:	c7 01       	movw	r24, r14
     bce:	b6 01       	movw	r22, r12
     bd0:	0e 94 4d 05 	call	0xa9a	; 0xa9a <mulacc>
     bd4:	6b 01       	movw	r12, r22
     bd6:	7c 01       	movw	r14, r24
     bd8:	12 60       	ori	r17, 0x02	; 2
     bda:	aa 94       	dec	r10
     bdc:	59 f0       	breq	.+22     	; 0xbf4 <conv_int+0xe8>
     bde:	ce 01       	movw	r24, r28
     be0:	0e 94 1f 08 	call	0x103e	; 0x103e <fgetc>
     be4:	97 ff       	sbrs	r25, 7
     be6:	dd cf       	rjmp	.-70     	; 0xba2 <conv_int+0x96>
     be8:	11 fd       	sbrc	r17, 1
     bea:	04 c0       	rjmp	.+8      	; 0xbf4 <conv_int+0xe8>
     bec:	ab cf       	rjmp	.-170    	; 0xb44 <conv_int+0x38>
     bee:	c1 2c       	mov	r12, r1
     bf0:	d1 2c       	mov	r13, r1
     bf2:	76 01       	movw	r14, r12
     bf4:	17 ff       	sbrs	r17, 7
     bf6:	08 c0       	rjmp	.+16     	; 0xc08 <conv_int+0xfc>
     bf8:	f0 94       	com	r15
     bfa:	e0 94       	com	r14
     bfc:	d0 94       	com	r13
     bfe:	c0 94       	com	r12
     c00:	c1 1c       	adc	r12, r1
     c02:	d1 1c       	adc	r13, r1
     c04:	e1 1c       	adc	r14, r1
     c06:	f1 1c       	adc	r15, r1
     c08:	21 2f       	mov	r18, r17
     c0a:	b7 01       	movw	r22, r14
     c0c:	a6 01       	movw	r20, r12
     c0e:	c4 01       	movw	r24, r8
     c10:	0e 94 41 05 	call	0xa82	; 0xa82 <putval>
     c14:	81 e0       	ldi	r24, 0x01	; 1
     c16:	df 91       	pop	r29
     c18:	cf 91       	pop	r28
     c1a:	1f 91       	pop	r17
     c1c:	0f 91       	pop	r16
     c1e:	ff 90       	pop	r15
     c20:	ef 90       	pop	r14
     c22:	df 90       	pop	r13
     c24:	cf 90       	pop	r12
     c26:	af 90       	pop	r10
     c28:	9f 90       	pop	r9
     c2a:	8f 90       	pop	r8
     c2c:	08 95       	ret

00000c2e <conv_brk>:
     c2e:	a1 e2       	ldi	r26, 0x21	; 33
     c30:	b0 e0       	ldi	r27, 0x00	; 0
     c32:	ed e1       	ldi	r30, 0x1D	; 29
     c34:	f6 e0       	ldi	r31, 0x06	; 6
     c36:	0c 94 40 09 	jmp	0x1280	; 0x1280 <__prologue_saves__+0xa>
     c3a:	5c 01       	movw	r10, r24
     c3c:	7a 01       	movw	r14, r20
     c3e:	8e 01       	movw	r16, r28
     c40:	0f 5f       	subi	r16, 0xFF	; 255
     c42:	1f 4f       	sbci	r17, 0xFF	; 255
     c44:	68 01       	movw	r12, r16
     c46:	80 e2       	ldi	r24, 0x20	; 32
     c48:	d8 01       	movw	r26, r16
     c4a:	1d 92       	st	X+, r1
     c4c:	8a 95       	dec	r24
     c4e:	e9 f7       	brne	.-6      	; 0xc4a <conv_brk+0x1c>
     c50:	f5 01       	movw	r30, r10
     c52:	73 80       	ldd	r7, Z+3	; 0x03
     c54:	40 e0       	ldi	r20, 0x00	; 0
     c56:	50 e0       	ldi	r21, 0x00	; 0
     c58:	81 2c       	mov	r8, r1
     c5a:	b0 e0       	ldi	r27, 0x00	; 0
     c5c:	91 2c       	mov	r9, r1
     c5e:	81 e0       	ldi	r24, 0x01	; 1
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	f9 01       	movw	r30, r18
     c64:	73 fc       	sbrc	r7, 3
     c66:	a5 91       	lpm	r26, Z+
     c68:	73 fe       	sbrs	r7, 3
     c6a:	a1 91       	ld	r26, Z+
     c6c:	8f 01       	movw	r16, r30
     c6e:	7a 2f       	mov	r23, r26
     c70:	9f 01       	movw	r18, r30
     c72:	a1 11       	cpse	r26, r1
     c74:	03 c0       	rjmp	.+6      	; 0xc7c <conv_brk+0x4e>
     c76:	80 e0       	ldi	r24, 0x00	; 0
     c78:	90 e0       	ldi	r25, 0x00	; 0
     c7a:	7d c0       	rjmp	.+250    	; 0xd76 <conv_brk+0x148>
     c7c:	ae 35       	cpi	r26, 0x5E	; 94
     c7e:	19 f4       	brne	.+6      	; 0xc86 <conv_brk+0x58>
     c80:	41 15       	cp	r20, r1
     c82:	51 05       	cpc	r21, r1
     c84:	59 f1       	breq	.+86     	; 0xcdc <conv_brk+0xae>
     c86:	e9 2d       	mov	r30, r9
     c88:	f0 e0       	ldi	r31, 0x00	; 0
     c8a:	e4 17       	cp	r30, r20
     c8c:	f5 07       	cpc	r31, r21
     c8e:	3c f4       	brge	.+14     	; 0xc9e <conv_brk+0x70>
     c90:	ad 35       	cpi	r26, 0x5D	; 93
     c92:	69 f1       	breq	.+90     	; 0xcee <conv_brk+0xc0>
     c94:	ad 32       	cpi	r26, 0x2D	; 45
     c96:	19 f4       	brne	.+6      	; 0xc9e <conv_brk+0x70>
     c98:	bb 23       	and	r27, r27
     c9a:	19 f1       	breq	.+70     	; 0xce2 <conv_brk+0xb4>
     c9c:	03 c0       	rjmp	.+6      	; 0xca4 <conv_brk+0x76>
     c9e:	b1 11       	cpse	r27, r1
     ca0:	01 c0       	rjmp	.+2      	; 0xca4 <conv_brk+0x76>
     ca2:	8a 2e       	mov	r8, r26
     ca4:	e7 2f       	mov	r30, r23
     ca6:	e6 95       	lsr	r30
     ca8:	e6 95       	lsr	r30
     caa:	e6 95       	lsr	r30
     cac:	86 01       	movw	r16, r12
     cae:	0e 0f       	add	r16, r30
     cb0:	11 1d       	adc	r17, r1
     cb2:	f8 01       	movw	r30, r16
     cb4:	a7 2f       	mov	r26, r23
     cb6:	a7 70       	andi	r26, 0x07	; 7
     cb8:	8c 01       	movw	r16, r24
     cba:	02 c0       	rjmp	.+4      	; 0xcc0 <conv_brk+0x92>
     cbc:	00 0f       	add	r16, r16
     cbe:	11 1f       	adc	r17, r17
     cc0:	aa 95       	dec	r26
     cc2:	e2 f7       	brpl	.-8      	; 0xcbc <conv_brk+0x8e>
     cc4:	d8 01       	movw	r26, r16
     cc6:	b0 81       	ld	r27, Z
     cc8:	ba 2b       	or	r27, r26
     cca:	b0 83       	st	Z, r27
     ccc:	78 15       	cp	r23, r8
     cce:	59 f0       	breq	.+22     	; 0xce6 <conv_brk+0xb8>
     cd0:	78 15       	cp	r23, r8
     cd2:	10 f4       	brcc	.+4      	; 0xcd8 <conv_brk+0xaa>
     cd4:	7f 5f       	subi	r23, 0xFF	; 255
     cd6:	e6 cf       	rjmp	.-52     	; 0xca4 <conv_brk+0x76>
     cd8:	71 50       	subi	r23, 0x01	; 1
     cda:	e4 cf       	rjmp	.-56     	; 0xca4 <conv_brk+0x76>
     cdc:	99 24       	eor	r9, r9
     cde:	93 94       	inc	r9
     ce0:	03 c0       	rjmp	.+6      	; 0xce8 <conv_brk+0xba>
     ce2:	b1 e0       	ldi	r27, 0x01	; 1
     ce4:	01 c0       	rjmp	.+2      	; 0xce8 <conv_brk+0xba>
     ce6:	b0 e0       	ldi	r27, 0x00	; 0
     ce8:	4f 5f       	subi	r20, 0xFF	; 255
     cea:	5f 4f       	sbci	r21, 0xFF	; 255
     cec:	ba cf       	rjmp	.-140    	; 0xc62 <conv_brk+0x34>
     cee:	bb 23       	and	r27, r27
     cf0:	19 f0       	breq	.+6      	; 0xcf8 <conv_brk+0xca>
     cf2:	8e 81       	ldd	r24, Y+6	; 0x06
     cf4:	80 62       	ori	r24, 0x20	; 32
     cf6:	8e 83       	std	Y+6, r24	; 0x06
     cf8:	91 10       	cpse	r9, r1
     cfa:	03 c0       	rjmp	.+6      	; 0xd02 <conv_brk+0xd4>
     cfc:	99 24       	eor	r9, r9
     cfe:	93 94       	inc	r9
     d00:	15 c0       	rjmp	.+42     	; 0xd2c <conv_brk+0xfe>
     d02:	f6 01       	movw	r30, r12
     d04:	ce 01       	movw	r24, r28
     d06:	81 96       	adiw	r24, 0x21	; 33
     d08:	20 81       	ld	r18, Z
     d0a:	20 95       	com	r18
     d0c:	21 93       	st	Z+, r18
     d0e:	e8 17       	cp	r30, r24
     d10:	f9 07       	cpc	r31, r25
     d12:	d1 f7       	brne	.-12     	; 0xd08 <conv_brk+0xda>
     d14:	f3 cf       	rjmp	.-26     	; 0xcfc <conv_brk+0xce>
     d16:	e1 14       	cp	r14, r1
     d18:	f1 04       	cpc	r15, r1
     d1a:	29 f0       	breq	.+10     	; 0xd26 <conv_brk+0xf8>
     d1c:	d7 01       	movw	r26, r14
     d1e:	8c 93       	st	X, r24
     d20:	f7 01       	movw	r30, r14
     d22:	31 96       	adiw	r30, 0x01	; 1
     d24:	7f 01       	movw	r14, r30
     d26:	61 50       	subi	r22, 0x01	; 1
     d28:	01 f1       	breq	.+64     	; 0xd6a <conv_brk+0x13c>
     d2a:	91 2c       	mov	r9, r1
     d2c:	c5 01       	movw	r24, r10
     d2e:	69 a3       	std	Y+33, r22	; 0x21
     d30:	0e 94 1f 08 	call	0x103e	; 0x103e <fgetc>
     d34:	69 a1       	ldd	r22, Y+33	; 0x21
     d36:	97 fd       	sbrc	r25, 7
     d38:	16 c0       	rjmp	.+44     	; 0xd66 <conv_brk+0x138>
     d3a:	28 2f       	mov	r18, r24
     d3c:	26 95       	lsr	r18
     d3e:	26 95       	lsr	r18
     d40:	26 95       	lsr	r18
     d42:	f6 01       	movw	r30, r12
     d44:	e2 0f       	add	r30, r18
     d46:	f1 1d       	adc	r31, r1
     d48:	20 81       	ld	r18, Z
     d4a:	30 e0       	ldi	r19, 0x00	; 0
     d4c:	ac 01       	movw	r20, r24
     d4e:	47 70       	andi	r20, 0x07	; 7
     d50:	55 27       	eor	r21, r21
     d52:	02 c0       	rjmp	.+4      	; 0xd58 <conv_brk+0x12a>
     d54:	35 95       	asr	r19
     d56:	27 95       	ror	r18
     d58:	4a 95       	dec	r20
     d5a:	e2 f7       	brpl	.-8      	; 0xd54 <conv_brk+0x126>
     d5c:	20 fd       	sbrc	r18, 0
     d5e:	db cf       	rjmp	.-74     	; 0xd16 <conv_brk+0xe8>
     d60:	b5 01       	movw	r22, r10
     d62:	0e 94 8f 08 	call	0x111e	; 0x111e <ungetc>
     d66:	91 10       	cpse	r9, r1
     d68:	86 cf       	rjmp	.-244    	; 0xc76 <conv_brk+0x48>
     d6a:	e1 14       	cp	r14, r1
     d6c:	f1 04       	cpc	r15, r1
     d6e:	11 f0       	breq	.+4      	; 0xd74 <conv_brk+0x146>
     d70:	d7 01       	movw	r26, r14
     d72:	1c 92       	st	X, r1
     d74:	c8 01       	movw	r24, r16
     d76:	a1 96       	adiw	r28, 0x21	; 33
     d78:	ed e0       	ldi	r30, 0x0D	; 13
     d7a:	0c 94 5c 09 	jmp	0x12b8	; 0x12b8 <__epilogue_restores__+0xa>

00000d7e <vfscanf>:
     d7e:	4f 92       	push	r4
     d80:	5f 92       	push	r5
     d82:	7f 92       	push	r7
     d84:	8f 92       	push	r8
     d86:	9f 92       	push	r9
     d88:	af 92       	push	r10
     d8a:	bf 92       	push	r11
     d8c:	cf 92       	push	r12
     d8e:	df 92       	push	r13
     d90:	ef 92       	push	r14
     d92:	ff 92       	push	r15
     d94:	0f 93       	push	r16
     d96:	1f 93       	push	r17
     d98:	cf 93       	push	r28
     d9a:	df 93       	push	r29
     d9c:	1f 92       	push	r1
     d9e:	cd b7       	in	r28, 0x3d	; 61
     da0:	de b7       	in	r29, 0x3e	; 62
     da2:	8c 01       	movw	r16, r24
     da4:	2b 01       	movw	r4, r22
     da6:	7a 01       	movw	r14, r20
     da8:	fc 01       	movw	r30, r24
     daa:	17 82       	std	Z+7, r1	; 0x07
     dac:	16 82       	std	Z+6, r1	; 0x06
     dae:	a1 2c       	mov	r10, r1
     db0:	f8 01       	movw	r30, r16
     db2:	d3 80       	ldd	r13, Z+3	; 0x03
     db4:	f2 01       	movw	r30, r4
     db6:	d3 fc       	sbrc	r13, 3
     db8:	85 91       	lpm	r24, Z+
     dba:	d3 fe       	sbrs	r13, 3
     dbc:	81 91       	ld	r24, Z+
     dbe:	38 2f       	mov	r19, r24
     dc0:	2f 01       	movw	r4, r30
     dc2:	88 23       	and	r24, r24
     dc4:	09 f4       	brne	.+2      	; 0xdc8 <vfscanf+0x4a>
     dc6:	fc c0       	rjmp	.+504    	; 0xfc0 <vfscanf+0x242>
     dc8:	90 e0       	ldi	r25, 0x00	; 0
     dca:	39 83       	std	Y+1, r19	; 0x01
     dcc:	0e 94 f6 07 	call	0xfec	; 0xfec <isspace>
     dd0:	39 81       	ldd	r19, Y+1	; 0x01
     dd2:	89 2b       	or	r24, r25
     dd4:	21 f0       	breq	.+8      	; 0xdde <vfscanf+0x60>
     dd6:	c8 01       	movw	r24, r16
     dd8:	0e 94 6d 05 	call	0xada	; 0xada <skip_spaces>
     ddc:	e9 cf       	rjmp	.-46     	; 0xdb0 <vfscanf+0x32>
     dde:	35 32       	cpi	r19, 0x25	; 37
     de0:	41 f4       	brne	.+16     	; 0xdf2 <vfscanf+0x74>
     de2:	f2 01       	movw	r30, r4
     de4:	d3 fc       	sbrc	r13, 3
     de6:	35 91       	lpm	r19, Z+
     de8:	d3 fe       	sbrs	r13, 3
     dea:	31 91       	ld	r19, Z+
     dec:	2f 01       	movw	r4, r30
     dee:	35 32       	cpi	r19, 0x25	; 37
     df0:	69 f4       	brne	.+26     	; 0xe0c <vfscanf+0x8e>
     df2:	c8 01       	movw	r24, r16
     df4:	39 83       	std	Y+1, r19	; 0x01
     df6:	0e 94 1f 08 	call	0x103e	; 0x103e <fgetc>
     dfa:	39 81       	ldd	r19, Y+1	; 0x01
     dfc:	97 fd       	sbrc	r25, 7
     dfe:	de c0       	rjmp	.+444    	; 0xfbc <vfscanf+0x23e>
     e00:	38 17       	cp	r19, r24
     e02:	b1 f2       	breq	.-84     	; 0xdb0 <vfscanf+0x32>
     e04:	b8 01       	movw	r22, r16
     e06:	0e 94 8f 08 	call	0x111e	; 0x111e <ungetc>
     e0a:	da c0       	rjmp	.+436    	; 0xfc0 <vfscanf+0x242>
     e0c:	3a 32       	cpi	r19, 0x2A	; 42
     e0e:	41 f4       	brne	.+16     	; 0xe20 <vfscanf+0xa2>
     e10:	d3 fc       	sbrc	r13, 3
     e12:	35 91       	lpm	r19, Z+
     e14:	d3 fe       	sbrs	r13, 3
     e16:	31 91       	ld	r19, Z+
     e18:	2f 01       	movw	r4, r30
     e1a:	bb 24       	eor	r11, r11
     e1c:	b3 94       	inc	r11
     e1e:	01 c0       	rjmp	.+2      	; 0xe22 <vfscanf+0xa4>
     e20:	b1 2c       	mov	r11, r1
     e22:	71 2c       	mov	r7, r1
     e24:	20 ed       	ldi	r18, 0xD0	; 208
     e26:	23 0f       	add	r18, r19
     e28:	2a 30       	cpi	r18, 0x0A	; 10
     e2a:	90 f4       	brcc	.+36     	; 0xe50 <vfscanf+0xd2>
     e2c:	fb 2d       	mov	r31, r11
     e2e:	f2 60       	ori	r31, 0x02	; 2
     e30:	bf 2e       	mov	r11, r31
     e32:	67 2d       	mov	r22, r7
     e34:	70 e0       	ldi	r23, 0x00	; 0
     e36:	80 e0       	ldi	r24, 0x00	; 0
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	40 e2       	ldi	r20, 0x20	; 32
     e3c:	0e 94 4d 05 	call	0xa9a	; 0xa9a <mulacc>
     e40:	76 2e       	mov	r7, r22
     e42:	f2 01       	movw	r30, r4
     e44:	d3 fc       	sbrc	r13, 3
     e46:	35 91       	lpm	r19, Z+
     e48:	d3 fe       	sbrs	r13, 3
     e4a:	31 91       	ld	r19, Z+
     e4c:	2f 01       	movw	r4, r30
     e4e:	ea cf       	rjmp	.-44     	; 0xe24 <vfscanf+0xa6>
     e50:	b1 fe       	sbrs	r11, 1
     e52:	03 c0       	rjmp	.+6      	; 0xe5a <vfscanf+0xdc>
     e54:	71 10       	cpse	r7, r1
     e56:	03 c0       	rjmp	.+6      	; 0xe5e <vfscanf+0xe0>
     e58:	b3 c0       	rjmp	.+358    	; 0xfc0 <vfscanf+0x242>
     e5a:	77 24       	eor	r7, r7
     e5c:	7a 94       	dec	r7
     e5e:	38 36       	cpi	r19, 0x68	; 104
     e60:	19 f0       	breq	.+6      	; 0xe68 <vfscanf+0xea>
     e62:	3c 36       	cpi	r19, 0x6C	; 108
     e64:	61 f0       	breq	.+24     	; 0xe7e <vfscanf+0x100>
     e66:	14 c0       	rjmp	.+40     	; 0xe90 <vfscanf+0x112>
     e68:	f2 01       	movw	r30, r4
     e6a:	d3 fc       	sbrc	r13, 3
     e6c:	35 91       	lpm	r19, Z+
     e6e:	d3 fe       	sbrs	r13, 3
     e70:	31 91       	ld	r19, Z+
     e72:	2f 01       	movw	r4, r30
     e74:	38 36       	cpi	r19, 0x68	; 104
     e76:	61 f4       	brne	.+24     	; 0xe90 <vfscanf+0x112>
     e78:	fb 2d       	mov	r31, r11
     e7a:	f8 60       	ori	r31, 0x08	; 8
     e7c:	bf 2e       	mov	r11, r31
     e7e:	8b 2d       	mov	r24, r11
     e80:	84 60       	ori	r24, 0x04	; 4
     e82:	b8 2e       	mov	r11, r24
     e84:	f2 01       	movw	r30, r4
     e86:	d3 fc       	sbrc	r13, 3
     e88:	35 91       	lpm	r19, Z+
     e8a:	d3 fe       	sbrs	r13, 3
     e8c:	31 91       	ld	r19, Z+
     e8e:	2f 01       	movw	r4, r30
     e90:	33 23       	and	r19, r19
     e92:	09 f4       	brne	.+2      	; 0xe96 <vfscanf+0x118>
     e94:	95 c0       	rjmp	.+298    	; 0xfc0 <vfscanf+0x242>
     e96:	63 2f       	mov	r22, r19
     e98:	70 e0       	ldi	r23, 0x00	; 0
     e9a:	80 e7       	ldi	r24, 0x70	; 112
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	39 83       	std	Y+1, r19	; 0x01
     ea0:	0e 94 fe 07 	call	0xffc	; 0xffc <strchr_P>
     ea4:	39 81       	ldd	r19, Y+1	; 0x01
     ea6:	89 2b       	or	r24, r25
     ea8:	09 f4       	brne	.+2      	; 0xeac <vfscanf+0x12e>
     eaa:	8a c0       	rjmp	.+276    	; 0xfc0 <vfscanf+0x242>
     eac:	b0 fc       	sbrc	r11, 0
     eae:	07 c0       	rjmp	.+14     	; 0xebe <vfscanf+0x140>
     eb0:	f7 01       	movw	r30, r14
     eb2:	c0 80       	ld	r12, Z
     eb4:	d1 80       	ldd	r13, Z+1	; 0x01
     eb6:	c7 01       	movw	r24, r14
     eb8:	02 96       	adiw	r24, 0x02	; 2
     eba:	7c 01       	movw	r14, r24
     ebc:	02 c0       	rjmp	.+4      	; 0xec2 <vfscanf+0x144>
     ebe:	c1 2c       	mov	r12, r1
     ec0:	d1 2c       	mov	r13, r1
     ec2:	3e 36       	cpi	r19, 0x6E	; 110
     ec4:	51 f4       	brne	.+20     	; 0xeda <vfscanf+0x15c>
     ec6:	f8 01       	movw	r30, r16
     ec8:	46 81       	ldd	r20, Z+6	; 0x06
     eca:	57 81       	ldd	r21, Z+7	; 0x07
     ecc:	60 e0       	ldi	r22, 0x00	; 0
     ece:	70 e0       	ldi	r23, 0x00	; 0
     ed0:	2b 2d       	mov	r18, r11
     ed2:	c6 01       	movw	r24, r12
     ed4:	0e 94 41 05 	call	0xa82	; 0xa82 <putval>
     ed8:	6b cf       	rjmp	.-298    	; 0xdb0 <vfscanf+0x32>
     eda:	33 36       	cpi	r19, 0x63	; 99
     edc:	a1 f4       	brne	.+40     	; 0xf06 <vfscanf+0x188>
     ede:	b1 fc       	sbrc	r11, 1
     ee0:	02 c0       	rjmp	.+4      	; 0xee6 <vfscanf+0x168>
     ee2:	77 24       	eor	r7, r7
     ee4:	73 94       	inc	r7
     ee6:	c8 01       	movw	r24, r16
     ee8:	0e 94 1f 08 	call	0x103e	; 0x103e <fgetc>
     eec:	97 fd       	sbrc	r25, 7
     eee:	66 c0       	rjmp	.+204    	; 0xfbc <vfscanf+0x23e>
     ef0:	c1 14       	cp	r12, r1
     ef2:	d1 04       	cpc	r13, r1
     ef4:	29 f0       	breq	.+10     	; 0xf00 <vfscanf+0x182>
     ef6:	f6 01       	movw	r30, r12
     ef8:	80 83       	st	Z, r24
     efa:	c6 01       	movw	r24, r12
     efc:	01 96       	adiw	r24, 0x01	; 1
     efe:	6c 01       	movw	r12, r24
     f00:	7a 94       	dec	r7
     f02:	89 f7       	brne	.-30     	; 0xee6 <vfscanf+0x168>
     f04:	57 c0       	rjmp	.+174    	; 0xfb4 <vfscanf+0x236>
     f06:	3b 35       	cpi	r19, 0x5B	; 91
     f08:	59 f4       	brne	.+22     	; 0xf20 <vfscanf+0x1a2>
     f0a:	92 01       	movw	r18, r4
     f0c:	a6 01       	movw	r20, r12
     f0e:	67 2d       	mov	r22, r7
     f10:	c8 01       	movw	r24, r16
     f12:	0e 94 17 06 	call	0xc2e	; 0xc2e <conv_brk>
     f16:	2c 01       	movw	r4, r24
     f18:	00 97       	sbiw	r24, 0x00	; 0
     f1a:	09 f0       	breq	.+2      	; 0xf1e <vfscanf+0x1a0>
     f1c:	4b c0       	rjmp	.+150    	; 0xfb4 <vfscanf+0x236>
     f1e:	45 c0       	rjmp	.+138    	; 0xfaa <vfscanf+0x22c>
     f20:	c8 01       	movw	r24, r16
     f22:	39 83       	std	Y+1, r19	; 0x01
     f24:	0e 94 6d 05 	call	0xada	; 0xada <skip_spaces>
     f28:	39 81       	ldd	r19, Y+1	; 0x01
     f2a:	97 fd       	sbrc	r25, 7
     f2c:	47 c0       	rjmp	.+142    	; 0xfbc <vfscanf+0x23e>
     f2e:	3f 36       	cpi	r19, 0x6F	; 111
     f30:	69 f1       	breq	.+90     	; 0xf8c <vfscanf+0x20e>
     f32:	28 f4       	brcc	.+10     	; 0xf3e <vfscanf+0x1c0>
     f34:	34 36       	cpi	r19, 0x64	; 100
     f36:	31 f1       	breq	.+76     	; 0xf84 <vfscanf+0x206>
     f38:	39 36       	cpi	r19, 0x69	; 105
     f3a:	79 f1       	breq	.+94     	; 0xf9a <vfscanf+0x21c>
     f3c:	2b c0       	rjmp	.+86     	; 0xf94 <vfscanf+0x216>
     f3e:	33 37       	cpi	r19, 0x73	; 115
     f40:	69 f0       	breq	.+26     	; 0xf5c <vfscanf+0x1de>
     f42:	35 37       	cpi	r19, 0x75	; 117
     f44:	f9 f0       	breq	.+62     	; 0xf84 <vfscanf+0x206>
     f46:	26 c0       	rjmp	.+76     	; 0xf94 <vfscanf+0x216>
     f48:	c1 14       	cp	r12, r1
     f4a:	d1 04       	cpc	r13, r1
     f4c:	29 f0       	breq	.+10     	; 0xf58 <vfscanf+0x1da>
     f4e:	f6 01       	movw	r30, r12
     f50:	80 82       	st	Z, r8
     f52:	c6 01       	movw	r24, r12
     f54:	01 96       	adiw	r24, 0x01	; 1
     f56:	6c 01       	movw	r12, r24
     f58:	7a 94       	dec	r7
     f5a:	71 f0       	breq	.+28     	; 0xf78 <vfscanf+0x1fa>
     f5c:	c8 01       	movw	r24, r16
     f5e:	0e 94 1f 08 	call	0x103e	; 0x103e <fgetc>
     f62:	4c 01       	movw	r8, r24
     f64:	97 fd       	sbrc	r25, 7
     f66:	08 c0       	rjmp	.+16     	; 0xf78 <vfscanf+0x1fa>
     f68:	0e 94 f6 07 	call	0xfec	; 0xfec <isspace>
     f6c:	89 2b       	or	r24, r25
     f6e:	61 f3       	breq	.-40     	; 0xf48 <vfscanf+0x1ca>
     f70:	b8 01       	movw	r22, r16
     f72:	c4 01       	movw	r24, r8
     f74:	0e 94 8f 08 	call	0x111e	; 0x111e <ungetc>
     f78:	c1 14       	cp	r12, r1
     f7a:	d1 04       	cpc	r13, r1
     f7c:	d9 f0       	breq	.+54     	; 0xfb4 <vfscanf+0x236>
     f7e:	f6 01       	movw	r30, r12
     f80:	10 82       	st	Z, r1
     f82:	18 c0       	rjmp	.+48     	; 0xfb4 <vfscanf+0x236>
     f84:	fb 2d       	mov	r31, r11
     f86:	f0 62       	ori	r31, 0x20	; 32
     f88:	bf 2e       	mov	r11, r31
     f8a:	07 c0       	rjmp	.+14     	; 0xf9a <vfscanf+0x21c>
     f8c:	8b 2d       	mov	r24, r11
     f8e:	80 61       	ori	r24, 0x10	; 16
     f90:	b8 2e       	mov	r11, r24
     f92:	03 c0       	rjmp	.+6      	; 0xf9a <vfscanf+0x21c>
     f94:	9b 2d       	mov	r25, r11
     f96:	90 64       	ori	r25, 0x40	; 64
     f98:	b9 2e       	mov	r11, r25
     f9a:	2b 2d       	mov	r18, r11
     f9c:	a6 01       	movw	r20, r12
     f9e:	67 2d       	mov	r22, r7
     fa0:	c8 01       	movw	r24, r16
     fa2:	0e 94 86 05 	call	0xb0c	; 0xb0c <conv_int>
     fa6:	81 11       	cpse	r24, r1
     fa8:	05 c0       	rjmp	.+10     	; 0xfb4 <vfscanf+0x236>
     faa:	f8 01       	movw	r30, r16
     fac:	83 81       	ldd	r24, Z+3	; 0x03
     fae:	80 73       	andi	r24, 0x30	; 48
     fb0:	29 f4       	brne	.+10     	; 0xfbc <vfscanf+0x23e>
     fb2:	06 c0       	rjmp	.+12     	; 0xfc0 <vfscanf+0x242>
     fb4:	b0 fc       	sbrc	r11, 0
     fb6:	fc ce       	rjmp	.-520    	; 0xdb0 <vfscanf+0x32>
     fb8:	a3 94       	inc	r10
     fba:	fa ce       	rjmp	.-524    	; 0xdb0 <vfscanf+0x32>
     fbc:	aa 20       	and	r10, r10
     fbe:	19 f0       	breq	.+6      	; 0xfc6 <vfscanf+0x248>
     fc0:	8a 2d       	mov	r24, r10
     fc2:	90 e0       	ldi	r25, 0x00	; 0
     fc4:	02 c0       	rjmp	.+4      	; 0xfca <vfscanf+0x24c>
     fc6:	8f ef       	ldi	r24, 0xFF	; 255
     fc8:	9f ef       	ldi	r25, 0xFF	; 255
     fca:	0f 90       	pop	r0
     fcc:	df 91       	pop	r29
     fce:	cf 91       	pop	r28
     fd0:	1f 91       	pop	r17
     fd2:	0f 91       	pop	r16
     fd4:	ff 90       	pop	r15
     fd6:	ef 90       	pop	r14
     fd8:	df 90       	pop	r13
     fda:	cf 90       	pop	r12
     fdc:	bf 90       	pop	r11
     fde:	af 90       	pop	r10
     fe0:	9f 90       	pop	r9
     fe2:	8f 90       	pop	r8
     fe4:	7f 90       	pop	r7
     fe6:	5f 90       	pop	r5
     fe8:	4f 90       	pop	r4
     fea:	08 95       	ret

00000fec <isspace>:
     fec:	91 11       	cpse	r25, r1
     fee:	0e c1       	rjmp	.+540    	; 0x120c <__ctype_isfalse>
     ff0:	80 32       	cpi	r24, 0x20	; 32
     ff2:	19 f0       	breq	.+6      	; 0xffa <isspace+0xe>
     ff4:	89 50       	subi	r24, 0x09	; 9
     ff6:	85 50       	subi	r24, 0x05	; 5
     ff8:	d0 f7       	brcc	.-12     	; 0xfee <isspace+0x2>
     ffa:	08 95       	ret

00000ffc <strchr_P>:
     ffc:	fc 01       	movw	r30, r24
     ffe:	05 90       	lpm	r0, Z+
    1000:	06 16       	cp	r0, r22
    1002:	21 f0       	breq	.+8      	; 0x100c <strchr_P+0x10>
    1004:	00 20       	and	r0, r0
    1006:	d9 f7       	brne	.-10     	; 0xffe <strchr_P+0x2>
    1008:	c0 01       	movw	r24, r0
    100a:	08 95       	ret
    100c:	31 97       	sbiw	r30, 0x01	; 1
    100e:	cf 01       	movw	r24, r30
    1010:	08 95       	ret

00001012 <strnlen_P>:
    1012:	fc 01       	movw	r30, r24
    1014:	05 90       	lpm	r0, Z+
    1016:	61 50       	subi	r22, 0x01	; 1
    1018:	70 40       	sbci	r23, 0x00	; 0
    101a:	01 10       	cpse	r0, r1
    101c:	d8 f7       	brcc	.-10     	; 0x1014 <strnlen_P+0x2>
    101e:	80 95       	com	r24
    1020:	90 95       	com	r25
    1022:	8e 0f       	add	r24, r30
    1024:	9f 1f       	adc	r25, r31
    1026:	08 95       	ret

00001028 <strnlen>:
    1028:	fc 01       	movw	r30, r24
    102a:	61 50       	subi	r22, 0x01	; 1
    102c:	70 40       	sbci	r23, 0x00	; 0
    102e:	01 90       	ld	r0, Z+
    1030:	01 10       	cpse	r0, r1
    1032:	d8 f7       	brcc	.-10     	; 0x102a <strnlen+0x2>
    1034:	80 95       	com	r24
    1036:	90 95       	com	r25
    1038:	8e 0f       	add	r24, r30
    103a:	9f 1f       	adc	r25, r31
    103c:	08 95       	ret

0000103e <fgetc>:
    103e:	cf 93       	push	r28
    1040:	df 93       	push	r29
    1042:	ec 01       	movw	r28, r24
    1044:	2b 81       	ldd	r18, Y+3	; 0x03
    1046:	20 ff       	sbrs	r18, 0
    1048:	33 c0       	rjmp	.+102    	; 0x10b0 <fgetc+0x72>
    104a:	26 ff       	sbrs	r18, 6
    104c:	0a c0       	rjmp	.+20     	; 0x1062 <fgetc+0x24>
    104e:	2f 7b       	andi	r18, 0xBF	; 191
    1050:	2b 83       	std	Y+3, r18	; 0x03
    1052:	8e 81       	ldd	r24, Y+6	; 0x06
    1054:	9f 81       	ldd	r25, Y+7	; 0x07
    1056:	01 96       	adiw	r24, 0x01	; 1
    1058:	9f 83       	std	Y+7, r25	; 0x07
    105a:	8e 83       	std	Y+6, r24	; 0x06
    105c:	8a 81       	ldd	r24, Y+2	; 0x02
    105e:	90 e0       	ldi	r25, 0x00	; 0
    1060:	29 c0       	rjmp	.+82     	; 0x10b4 <fgetc+0x76>
    1062:	22 ff       	sbrs	r18, 2
    1064:	0f c0       	rjmp	.+30     	; 0x1084 <fgetc+0x46>
    1066:	e8 81       	ld	r30, Y
    1068:	f9 81       	ldd	r31, Y+1	; 0x01
    106a:	80 81       	ld	r24, Z
    106c:	99 27       	eor	r25, r25
    106e:	87 fd       	sbrc	r24, 7
    1070:	90 95       	com	r25
    1072:	00 97       	sbiw	r24, 0x00	; 0
    1074:	19 f4       	brne	.+6      	; 0x107c <fgetc+0x3e>
    1076:	20 62       	ori	r18, 0x20	; 32
    1078:	2b 83       	std	Y+3, r18	; 0x03
    107a:	1a c0       	rjmp	.+52     	; 0x10b0 <fgetc+0x72>
    107c:	31 96       	adiw	r30, 0x01	; 1
    107e:	f9 83       	std	Y+1, r31	; 0x01
    1080:	e8 83       	st	Y, r30
    1082:	0e c0       	rjmp	.+28     	; 0x10a0 <fgetc+0x62>
    1084:	ea 85       	ldd	r30, Y+10	; 0x0a
    1086:	fb 85       	ldd	r31, Y+11	; 0x0b
    1088:	09 95       	icall
    108a:	97 ff       	sbrs	r25, 7
    108c:	09 c0       	rjmp	.+18     	; 0x10a0 <fgetc+0x62>
    108e:	2b 81       	ldd	r18, Y+3	; 0x03
    1090:	01 96       	adiw	r24, 0x01	; 1
    1092:	11 f4       	brne	.+4      	; 0x1098 <fgetc+0x5a>
    1094:	80 e1       	ldi	r24, 0x10	; 16
    1096:	01 c0       	rjmp	.+2      	; 0x109a <fgetc+0x5c>
    1098:	80 e2       	ldi	r24, 0x20	; 32
    109a:	82 2b       	or	r24, r18
    109c:	8b 83       	std	Y+3, r24	; 0x03
    109e:	08 c0       	rjmp	.+16     	; 0x10b0 <fgetc+0x72>
    10a0:	2e 81       	ldd	r18, Y+6	; 0x06
    10a2:	3f 81       	ldd	r19, Y+7	; 0x07
    10a4:	2f 5f       	subi	r18, 0xFF	; 255
    10a6:	3f 4f       	sbci	r19, 0xFF	; 255
    10a8:	3f 83       	std	Y+7, r19	; 0x07
    10aa:	2e 83       	std	Y+6, r18	; 0x06
    10ac:	99 27       	eor	r25, r25
    10ae:	02 c0       	rjmp	.+4      	; 0x10b4 <fgetc+0x76>
    10b0:	8f ef       	ldi	r24, 0xFF	; 255
    10b2:	9f ef       	ldi	r25, 0xFF	; 255
    10b4:	df 91       	pop	r29
    10b6:	cf 91       	pop	r28
    10b8:	08 95       	ret

000010ba <fputc>:
    10ba:	0f 93       	push	r16
    10bc:	1f 93       	push	r17
    10be:	cf 93       	push	r28
    10c0:	df 93       	push	r29
    10c2:	18 2f       	mov	r17, r24
    10c4:	09 2f       	mov	r16, r25
    10c6:	eb 01       	movw	r28, r22
    10c8:	8b 81       	ldd	r24, Y+3	; 0x03
    10ca:	81 fd       	sbrc	r24, 1
    10cc:	03 c0       	rjmp	.+6      	; 0x10d4 <fputc+0x1a>
    10ce:	8f ef       	ldi	r24, 0xFF	; 255
    10d0:	9f ef       	ldi	r25, 0xFF	; 255
    10d2:	20 c0       	rjmp	.+64     	; 0x1114 <fputc+0x5a>
    10d4:	82 ff       	sbrs	r24, 2
    10d6:	10 c0       	rjmp	.+32     	; 0x10f8 <fputc+0x3e>
    10d8:	4e 81       	ldd	r20, Y+6	; 0x06
    10da:	5f 81       	ldd	r21, Y+7	; 0x07
    10dc:	2c 81       	ldd	r18, Y+4	; 0x04
    10de:	3d 81       	ldd	r19, Y+5	; 0x05
    10e0:	42 17       	cp	r20, r18
    10e2:	53 07       	cpc	r21, r19
    10e4:	7c f4       	brge	.+30     	; 0x1104 <fputc+0x4a>
    10e6:	e8 81       	ld	r30, Y
    10e8:	f9 81       	ldd	r31, Y+1	; 0x01
    10ea:	9f 01       	movw	r18, r30
    10ec:	2f 5f       	subi	r18, 0xFF	; 255
    10ee:	3f 4f       	sbci	r19, 0xFF	; 255
    10f0:	39 83       	std	Y+1, r19	; 0x01
    10f2:	28 83       	st	Y, r18
    10f4:	10 83       	st	Z, r17
    10f6:	06 c0       	rjmp	.+12     	; 0x1104 <fputc+0x4a>
    10f8:	e8 85       	ldd	r30, Y+8	; 0x08
    10fa:	f9 85       	ldd	r31, Y+9	; 0x09
    10fc:	81 2f       	mov	r24, r17
    10fe:	09 95       	icall
    1100:	89 2b       	or	r24, r25
    1102:	29 f7       	brne	.-54     	; 0x10ce <fputc+0x14>
    1104:	2e 81       	ldd	r18, Y+6	; 0x06
    1106:	3f 81       	ldd	r19, Y+7	; 0x07
    1108:	2f 5f       	subi	r18, 0xFF	; 255
    110a:	3f 4f       	sbci	r19, 0xFF	; 255
    110c:	3f 83       	std	Y+7, r19	; 0x07
    110e:	2e 83       	std	Y+6, r18	; 0x06
    1110:	81 2f       	mov	r24, r17
    1112:	90 2f       	mov	r25, r16
    1114:	df 91       	pop	r29
    1116:	cf 91       	pop	r28
    1118:	1f 91       	pop	r17
    111a:	0f 91       	pop	r16
    111c:	08 95       	ret

0000111e <ungetc>:
    111e:	fb 01       	movw	r30, r22
    1120:	23 81       	ldd	r18, Z+3	; 0x03
    1122:	20 ff       	sbrs	r18, 0
    1124:	12 c0       	rjmp	.+36     	; 0x114a <ungetc+0x2c>
    1126:	26 fd       	sbrc	r18, 6
    1128:	10 c0       	rjmp	.+32     	; 0x114a <ungetc+0x2c>
    112a:	8f 3f       	cpi	r24, 0xFF	; 255
    112c:	3f ef       	ldi	r19, 0xFF	; 255
    112e:	93 07       	cpc	r25, r19
    1130:	61 f0       	breq	.+24     	; 0x114a <ungetc+0x2c>
    1132:	82 83       	std	Z+2, r24	; 0x02
    1134:	2f 7d       	andi	r18, 0xDF	; 223
    1136:	20 64       	ori	r18, 0x40	; 64
    1138:	23 83       	std	Z+3, r18	; 0x03
    113a:	26 81       	ldd	r18, Z+6	; 0x06
    113c:	37 81       	ldd	r19, Z+7	; 0x07
    113e:	21 50       	subi	r18, 0x01	; 1
    1140:	31 09       	sbc	r19, r1
    1142:	37 83       	std	Z+7, r19	; 0x07
    1144:	26 83       	std	Z+6, r18	; 0x06
    1146:	99 27       	eor	r25, r25
    1148:	08 95       	ret
    114a:	8f ef       	ldi	r24, 0xFF	; 255
    114c:	9f ef       	ldi	r25, 0xFF	; 255
    114e:	08 95       	ret

00001150 <__ultoa_invert>:
    1150:	fa 01       	movw	r30, r20
    1152:	aa 27       	eor	r26, r26
    1154:	28 30       	cpi	r18, 0x08	; 8
    1156:	51 f1       	breq	.+84     	; 0x11ac <__ultoa_invert+0x5c>
    1158:	20 31       	cpi	r18, 0x10	; 16
    115a:	81 f1       	breq	.+96     	; 0x11bc <__ultoa_invert+0x6c>
    115c:	e8 94       	clt
    115e:	6f 93       	push	r22
    1160:	6e 7f       	andi	r22, 0xFE	; 254
    1162:	6e 5f       	subi	r22, 0xFE	; 254
    1164:	7f 4f       	sbci	r23, 0xFF	; 255
    1166:	8f 4f       	sbci	r24, 0xFF	; 255
    1168:	9f 4f       	sbci	r25, 0xFF	; 255
    116a:	af 4f       	sbci	r26, 0xFF	; 255
    116c:	b1 e0       	ldi	r27, 0x01	; 1
    116e:	3e d0       	rcall	.+124    	; 0x11ec <__ultoa_invert+0x9c>
    1170:	b4 e0       	ldi	r27, 0x04	; 4
    1172:	3c d0       	rcall	.+120    	; 0x11ec <__ultoa_invert+0x9c>
    1174:	67 0f       	add	r22, r23
    1176:	78 1f       	adc	r23, r24
    1178:	89 1f       	adc	r24, r25
    117a:	9a 1f       	adc	r25, r26
    117c:	a1 1d       	adc	r26, r1
    117e:	68 0f       	add	r22, r24
    1180:	79 1f       	adc	r23, r25
    1182:	8a 1f       	adc	r24, r26
    1184:	91 1d       	adc	r25, r1
    1186:	a1 1d       	adc	r26, r1
    1188:	6a 0f       	add	r22, r26
    118a:	71 1d       	adc	r23, r1
    118c:	81 1d       	adc	r24, r1
    118e:	91 1d       	adc	r25, r1
    1190:	a1 1d       	adc	r26, r1
    1192:	20 d0       	rcall	.+64     	; 0x11d4 <__ultoa_invert+0x84>
    1194:	09 f4       	brne	.+2      	; 0x1198 <__ultoa_invert+0x48>
    1196:	68 94       	set
    1198:	3f 91       	pop	r19
    119a:	2a e0       	ldi	r18, 0x0A	; 10
    119c:	26 9f       	mul	r18, r22
    119e:	11 24       	eor	r1, r1
    11a0:	30 19       	sub	r19, r0
    11a2:	30 5d       	subi	r19, 0xD0	; 208
    11a4:	31 93       	st	Z+, r19
    11a6:	de f6       	brtc	.-74     	; 0x115e <__ultoa_invert+0xe>
    11a8:	cf 01       	movw	r24, r30
    11aa:	08 95       	ret
    11ac:	46 2f       	mov	r20, r22
    11ae:	47 70       	andi	r20, 0x07	; 7
    11b0:	40 5d       	subi	r20, 0xD0	; 208
    11b2:	41 93       	st	Z+, r20
    11b4:	b3 e0       	ldi	r27, 0x03	; 3
    11b6:	0f d0       	rcall	.+30     	; 0x11d6 <__ultoa_invert+0x86>
    11b8:	c9 f7       	brne	.-14     	; 0x11ac <__ultoa_invert+0x5c>
    11ba:	f6 cf       	rjmp	.-20     	; 0x11a8 <__ultoa_invert+0x58>
    11bc:	46 2f       	mov	r20, r22
    11be:	4f 70       	andi	r20, 0x0F	; 15
    11c0:	40 5d       	subi	r20, 0xD0	; 208
    11c2:	4a 33       	cpi	r20, 0x3A	; 58
    11c4:	18 f0       	brcs	.+6      	; 0x11cc <__ultoa_invert+0x7c>
    11c6:	49 5d       	subi	r20, 0xD9	; 217
    11c8:	31 fd       	sbrc	r19, 1
    11ca:	40 52       	subi	r20, 0x20	; 32
    11cc:	41 93       	st	Z+, r20
    11ce:	02 d0       	rcall	.+4      	; 0x11d4 <__ultoa_invert+0x84>
    11d0:	a9 f7       	brne	.-22     	; 0x11bc <__ultoa_invert+0x6c>
    11d2:	ea cf       	rjmp	.-44     	; 0x11a8 <__ultoa_invert+0x58>
    11d4:	b4 e0       	ldi	r27, 0x04	; 4
    11d6:	a6 95       	lsr	r26
    11d8:	97 95       	ror	r25
    11da:	87 95       	ror	r24
    11dc:	77 95       	ror	r23
    11de:	67 95       	ror	r22
    11e0:	ba 95       	dec	r27
    11e2:	c9 f7       	brne	.-14     	; 0x11d6 <__ultoa_invert+0x86>
    11e4:	00 97       	sbiw	r24, 0x00	; 0
    11e6:	61 05       	cpc	r22, r1
    11e8:	71 05       	cpc	r23, r1
    11ea:	08 95       	ret
    11ec:	9b 01       	movw	r18, r22
    11ee:	ac 01       	movw	r20, r24
    11f0:	0a 2e       	mov	r0, r26
    11f2:	06 94       	lsr	r0
    11f4:	57 95       	ror	r21
    11f6:	47 95       	ror	r20
    11f8:	37 95       	ror	r19
    11fa:	27 95       	ror	r18
    11fc:	ba 95       	dec	r27
    11fe:	c9 f7       	brne	.-14     	; 0x11f2 <__ultoa_invert+0xa2>
    1200:	62 0f       	add	r22, r18
    1202:	73 1f       	adc	r23, r19
    1204:	84 1f       	adc	r24, r20
    1206:	95 1f       	adc	r25, r21
    1208:	a0 1d       	adc	r26, r0
    120a:	08 95       	ret

0000120c <__ctype_isfalse>:
    120c:	99 27       	eor	r25, r25
    120e:	88 27       	eor	r24, r24

00001210 <__ctype_istrue>:
    1210:	08 95       	ret

00001212 <__divmodsi4>:
    1212:	05 2e       	mov	r0, r21
    1214:	97 fb       	bst	r25, 7
    1216:	1e f4       	brtc	.+6      	; 0x121e <__divmodsi4+0xc>
    1218:	00 94       	com	r0
    121a:	0e 94 20 09 	call	0x1240	; 0x1240 <__negsi2>
    121e:	57 fd       	sbrc	r21, 7
    1220:	07 d0       	rcall	.+14     	; 0x1230 <__divmodsi4_neg2>
    1222:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__udivmodsi4>
    1226:	07 fc       	sbrc	r0, 7
    1228:	03 d0       	rcall	.+6      	; 0x1230 <__divmodsi4_neg2>
    122a:	4e f4       	brtc	.+18     	; 0x123e <__divmodsi4_exit>
    122c:	0c 94 20 09 	jmp	0x1240	; 0x1240 <__negsi2>

00001230 <__divmodsi4_neg2>:
    1230:	50 95       	com	r21
    1232:	40 95       	com	r20
    1234:	30 95       	com	r19
    1236:	21 95       	neg	r18
    1238:	3f 4f       	sbci	r19, 0xFF	; 255
    123a:	4f 4f       	sbci	r20, 0xFF	; 255
    123c:	5f 4f       	sbci	r21, 0xFF	; 255

0000123e <__divmodsi4_exit>:
    123e:	08 95       	ret

00001240 <__negsi2>:
    1240:	90 95       	com	r25
    1242:	80 95       	com	r24
    1244:	70 95       	com	r23
    1246:	61 95       	neg	r22
    1248:	7f 4f       	sbci	r23, 0xFF	; 255
    124a:	8f 4f       	sbci	r24, 0xFF	; 255
    124c:	9f 4f       	sbci	r25, 0xFF	; 255
    124e:	08 95       	ret

00001250 <__muluhisi3>:
    1250:	0e 94 94 09 	call	0x1328	; 0x1328 <__umulhisi3>
    1254:	a5 9f       	mul	r26, r21
    1256:	90 0d       	add	r25, r0
    1258:	b4 9f       	mul	r27, r20
    125a:	90 0d       	add	r25, r0
    125c:	a4 9f       	mul	r26, r20
    125e:	80 0d       	add	r24, r0
    1260:	91 1d       	adc	r25, r1
    1262:	11 24       	eor	r1, r1
    1264:	08 95       	ret

00001266 <__mulshisi3>:
    1266:	b7 ff       	sbrs	r27, 7
    1268:	0c 94 28 09 	jmp	0x1250	; 0x1250 <__muluhisi3>

0000126c <__mulohisi3>:
    126c:	0e 94 28 09 	call	0x1250	; 0x1250 <__muluhisi3>
    1270:	82 1b       	sub	r24, r18
    1272:	93 0b       	sbc	r25, r19
    1274:	08 95       	ret

00001276 <__prologue_saves__>:
    1276:	2f 92       	push	r2
    1278:	3f 92       	push	r3
    127a:	4f 92       	push	r4
    127c:	5f 92       	push	r5
    127e:	6f 92       	push	r6
    1280:	7f 92       	push	r7
    1282:	8f 92       	push	r8
    1284:	9f 92       	push	r9
    1286:	af 92       	push	r10
    1288:	bf 92       	push	r11
    128a:	cf 92       	push	r12
    128c:	df 92       	push	r13
    128e:	ef 92       	push	r14
    1290:	ff 92       	push	r15
    1292:	0f 93       	push	r16
    1294:	1f 93       	push	r17
    1296:	cf 93       	push	r28
    1298:	df 93       	push	r29
    129a:	cd b7       	in	r28, 0x3d	; 61
    129c:	de b7       	in	r29, 0x3e	; 62
    129e:	ca 1b       	sub	r28, r26
    12a0:	db 0b       	sbc	r29, r27
    12a2:	0f b6       	in	r0, 0x3f	; 63
    12a4:	f8 94       	cli
    12a6:	de bf       	out	0x3e, r29	; 62
    12a8:	0f be       	out	0x3f, r0	; 63
    12aa:	cd bf       	out	0x3d, r28	; 61
    12ac:	09 94       	ijmp

000012ae <__epilogue_restores__>:
    12ae:	2a 88       	ldd	r2, Y+18	; 0x12
    12b0:	39 88       	ldd	r3, Y+17	; 0x11
    12b2:	48 88       	ldd	r4, Y+16	; 0x10
    12b4:	5f 84       	ldd	r5, Y+15	; 0x0f
    12b6:	6e 84       	ldd	r6, Y+14	; 0x0e
    12b8:	7d 84       	ldd	r7, Y+13	; 0x0d
    12ba:	8c 84       	ldd	r8, Y+12	; 0x0c
    12bc:	9b 84       	ldd	r9, Y+11	; 0x0b
    12be:	aa 84       	ldd	r10, Y+10	; 0x0a
    12c0:	b9 84       	ldd	r11, Y+9	; 0x09
    12c2:	c8 84       	ldd	r12, Y+8	; 0x08
    12c4:	df 80       	ldd	r13, Y+7	; 0x07
    12c6:	ee 80       	ldd	r14, Y+6	; 0x06
    12c8:	fd 80       	ldd	r15, Y+5	; 0x05
    12ca:	0c 81       	ldd	r16, Y+4	; 0x04
    12cc:	1b 81       	ldd	r17, Y+3	; 0x03
    12ce:	aa 81       	ldd	r26, Y+2	; 0x02
    12d0:	b9 81       	ldd	r27, Y+1	; 0x01
    12d2:	ce 0f       	add	r28, r30
    12d4:	d1 1d       	adc	r29, r1
    12d6:	0f b6       	in	r0, 0x3f	; 63
    12d8:	f8 94       	cli
    12da:	de bf       	out	0x3e, r29	; 62
    12dc:	0f be       	out	0x3f, r0	; 63
    12de:	cd bf       	out	0x3d, r28	; 61
    12e0:	ed 01       	movw	r28, r26
    12e2:	08 95       	ret

000012e4 <__udivmodsi4>:
    12e4:	a1 e2       	ldi	r26, 0x21	; 33
    12e6:	1a 2e       	mov	r1, r26
    12e8:	aa 1b       	sub	r26, r26
    12ea:	bb 1b       	sub	r27, r27
    12ec:	fd 01       	movw	r30, r26
    12ee:	0d c0       	rjmp	.+26     	; 0x130a <__udivmodsi4_ep>

000012f0 <__udivmodsi4_loop>:
    12f0:	aa 1f       	adc	r26, r26
    12f2:	bb 1f       	adc	r27, r27
    12f4:	ee 1f       	adc	r30, r30
    12f6:	ff 1f       	adc	r31, r31
    12f8:	a2 17       	cp	r26, r18
    12fa:	b3 07       	cpc	r27, r19
    12fc:	e4 07       	cpc	r30, r20
    12fe:	f5 07       	cpc	r31, r21
    1300:	20 f0       	brcs	.+8      	; 0x130a <__udivmodsi4_ep>
    1302:	a2 1b       	sub	r26, r18
    1304:	b3 0b       	sbc	r27, r19
    1306:	e4 0b       	sbc	r30, r20
    1308:	f5 0b       	sbc	r31, r21

0000130a <__udivmodsi4_ep>:
    130a:	66 1f       	adc	r22, r22
    130c:	77 1f       	adc	r23, r23
    130e:	88 1f       	adc	r24, r24
    1310:	99 1f       	adc	r25, r25
    1312:	1a 94       	dec	r1
    1314:	69 f7       	brne	.-38     	; 0x12f0 <__udivmodsi4_loop>
    1316:	60 95       	com	r22
    1318:	70 95       	com	r23
    131a:	80 95       	com	r24
    131c:	90 95       	com	r25
    131e:	9b 01       	movw	r18, r22
    1320:	ac 01       	movw	r20, r24
    1322:	bd 01       	movw	r22, r26
    1324:	cf 01       	movw	r24, r30
    1326:	08 95       	ret

00001328 <__umulhisi3>:
    1328:	a2 9f       	mul	r26, r18
    132a:	b0 01       	movw	r22, r0
    132c:	b3 9f       	mul	r27, r19
    132e:	c0 01       	movw	r24, r0
    1330:	a3 9f       	mul	r26, r19
    1332:	70 0d       	add	r23, r0
    1334:	81 1d       	adc	r24, r1
    1336:	11 24       	eor	r1, r1
    1338:	91 1d       	adc	r25, r1
    133a:	b2 9f       	mul	r27, r18
    133c:	70 0d       	add	r23, r0
    133e:	81 1d       	adc	r24, r1
    1340:	11 24       	eor	r1, r1
    1342:	91 1d       	adc	r25, r1
    1344:	08 95       	ret

00001346 <_exit>:
    1346:	f8 94       	cli

00001348 <__stop_program>:
    1348:	ff cf       	rjmp	.-2      	; 0x1348 <__stop_program>
