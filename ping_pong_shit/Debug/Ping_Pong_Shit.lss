
Ping_Pong_Shit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000021c  00800100  00001900  00001994  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001900  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  0080031c  0080031c  00001bb0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001bb0  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001c0  00000000  00000000  00001c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001d80  00000000  00000000  00001dcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b4f  00000000  00000000  00003b4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a4c  00000000  00000000  0000469b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000042c  00000000  00000000  000050e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006b7  00000000  00000000  00005514  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000bea  00000000  00000000  00005bcb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000198  00000000  00000000  000067b5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ba 01 	jmp	0x374	; 0x374 <__ctors_end>
       4:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
       8:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
       c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      10:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      14:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      18:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      1c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      20:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      24:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      28:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      2c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      30:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      34:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      38:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      3c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      40:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      44:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      48:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      4c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      50:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      54:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      58:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      5c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      60:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      64:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      68:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      6c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <do_rand+0x26>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__c.2299>:
     368:	63 64 69 6e 6f 70 73 75 78 58 5b 00                 cdinopsuxX[.

00000374 <__ctors_end>:
     374:	11 24       	eor	r1, r1
     376:	1f be       	out	0x3f, r1	; 63
     378:	cf ef       	ldi	r28, 0xFF	; 255
     37a:	d4 e0       	ldi	r29, 0x04	; 4
     37c:	de bf       	out	0x3e, r29	; 62
     37e:	cd bf       	out	0x3d, r28	; 61

00000380 <__do_copy_data>:
     380:	13 e0       	ldi	r17, 0x03	; 3
     382:	a0 e0       	ldi	r26, 0x00	; 0
     384:	b1 e0       	ldi	r27, 0x01	; 1
     386:	e0 e0       	ldi	r30, 0x00	; 0
     388:	f9 e1       	ldi	r31, 0x19	; 25
     38a:	02 c0       	rjmp	.+4      	; 0x390 <__do_copy_data+0x10>
     38c:	05 90       	lpm	r0, Z+
     38e:	0d 92       	st	X+, r0
     390:	ac 31       	cpi	r26, 0x1C	; 28
     392:	b1 07       	cpc	r27, r17
     394:	d9 f7       	brne	.-10     	; 0x38c <__do_copy_data+0xc>

00000396 <__do_clear_bss>:
     396:	23 e0       	ldi	r18, 0x03	; 3
     398:	ac e1       	ldi	r26, 0x1C	; 28
     39a:	b3 e0       	ldi	r27, 0x03	; 3
     39c:	01 c0       	rjmp	.+2      	; 0x3a0 <.do_clear_bss_start>

0000039e <.do_clear_bss_loop>:
     39e:	1d 92       	st	X+, r1

000003a0 <.do_clear_bss_start>:
     3a0:	a9 32       	cpi	r26, 0x29	; 41
     3a2:	b2 07       	cpc	r27, r18
     3a4:	e1 f7       	brne	.-8      	; 0x39e <.do_clear_bss_loop>
     3a6:	0e 94 15 02 	call	0x42a	; 0x42a <main>
     3aa:	0c 94 7e 0c 	jmp	0x18fc	; 0x18fc <_exit>

000003ae <__bad_interrupt>:
     3ae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003b2 <joystick_read>:
     3b2:	8c 5f       	subi	r24, 0xFC	; 252
     3b4:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3b8:	81 e4       	ldi	r24, 0x41	; 65
     3ba:	8a 95       	dec	r24
     3bc:	f1 f7       	brne	.-4      	; 0x3ba <joystick_read+0x8>
     3be:	00 c0       	rjmp	.+0      	; 0x3c0 <joystick_read+0xe>
     3c0:	80 91 00 14 	lds	r24, 0x1400
     3c4:	90 e0       	ldi	r25, 0x00	; 0
     3c6:	08 95       	ret

000003c8 <joystick_init>:
     3c8:	80 e0       	ldi	r24, 0x00	; 0
     3ca:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <joystick_read>
     3ce:	90 93 1e 03 	sts	0x031E, r25
     3d2:	80 93 1d 03 	sts	0x031D, r24
     3d6:	81 e0       	ldi	r24, 0x01	; 1
     3d8:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <joystick_read>
     3dc:	90 93 20 03 	sts	0x0320, r25
     3e0:	80 93 1f 03 	sts	0x031F, r24
     3e4:	08 95       	ret

000003e6 <read_converted>:
     3e6:	cf 93       	push	r28
     3e8:	c8 2f       	mov	r28, r24
     3ea:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <joystick_read>
     3ee:	c1 11       	cpse	r28, r1
     3f0:	07 c0       	rjmp	.+14     	; 0x400 <read_converted+0x1a>
     3f2:	20 91 1d 03 	lds	r18, 0x031D
     3f6:	30 91 1e 03 	lds	r19, 0x031E
     3fa:	82 1b       	sub	r24, r18
     3fc:	93 0b       	sbc	r25, r19
     3fe:	08 c0       	rjmp	.+16     	; 0x410 <read_converted+0x2a>
     400:	c1 30       	cpi	r28, 0x01	; 1
     402:	31 f4       	brne	.+12     	; 0x410 <read_converted+0x2a>
     404:	20 91 1f 03 	lds	r18, 0x031F
     408:	30 91 20 03 	lds	r19, 0x0320
     40c:	82 1b       	sub	r24, r18
     40e:	93 0b       	sbc	r25, r19
     410:	80 38       	cpi	r24, 0x80	; 128
     412:	2f ef       	ldi	r18, 0xFF	; 255
     414:	92 07       	cpc	r25, r18
     416:	14 f4       	brge	.+4      	; 0x41c <read_converted+0x36>
     418:	80 e8       	ldi	r24, 0x80	; 128
     41a:	9f ef       	ldi	r25, 0xFF	; 255
     41c:	80 38       	cpi	r24, 0x80	; 128
     41e:	91 05       	cpc	r25, r1
     420:	14 f0       	brlt	.+4      	; 0x426 <read_converted+0x40>
     422:	8f e7       	ldi	r24, 0x7F	; 127
     424:	90 e0       	ldi	r25, 0x00	; 0
     426:	cf 91       	pop	r28
     428:	08 95       	ret

0000042a <main>:
#include "SRAM_driver.h"
#include "joystick_driver.h"
#include "oled_driver.h"

int main(void) {
    uart_init(MYUBRR);
     42a:	8f e1       	ldi	r24, 0x1F	; 31
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	0e 94 80 05 	call	0xb00	; 0xb00 <uart_init>
	SRAM_init();
     432:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <SRAM_init>
	joystick_init();
     436:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <joystick_init>
	oled_init();
     43a:	0e 94 c4 02 	call	0x588	; 0x588 <oled_init>
	
	while(1) { 
		shell();
     43e:	0e 94 7e 04 	call	0x8fc	; 0x8fc <shell>
		flash_diode();
     442:	0e 94 72 04 	call	0x8e4	; 0x8e4 <flash_diode>
     446:	fb cf       	rjmp	.-10     	; 0x43e <main+0x14>

00000448 <MENU_create_menu>:
menu new_menu[MAX_TOTAL_MENUS];


menu *MENU_create_menu(menu *new_menu){
	
	new_menu[0].parent = NULL;
     448:	dc 01       	movw	r26, r24
     44a:	1d 92       	st	X+, r1
     44c:	1d 92       	st	X+, r1
	strcpy(new_menu[0].items[0].name, "Test item");
     44e:	2a e0       	ldi	r18, 0x0A	; 10
     450:	e4 e2       	ldi	r30, 0x24	; 36
     452:	f1 e0       	ldi	r31, 0x01	; 1
     454:	01 90       	ld	r0, Z+
     456:	0d 92       	st	X+, r0
     458:	2a 95       	dec	r18
     45a:	e1 f7       	brne	.-8      	; 0x454 <MENU_create_menu+0xc>
	new_menu[0].items[0].handlerFunc = &SRAM_test;
     45c:	26 ee       	ldi	r18, 0xE6	; 230
     45e:	33 e0       	ldi	r19, 0x03	; 3
     460:	fc 01       	movw	r30, r24
     462:	33 a3       	std	Z+35, r19	; 0x23
     464:	22 a3       	std	Z+34, r18	; 0x22
	new_menu[0].items[0].child = NULL;
     466:	15 a2       	std	Z+37, r1	; 0x25
     468:	14 a2       	std	Z+36, r1	; 0x24
	
	return new_menu;	
}
     46a:	08 95       	ret

0000046c <MENU_print>:


void MENU_print(menu *currentMenu){
     46c:	cf 93       	push	r28
     46e:	df 93       	push	r29
     470:	ec 01       	movw	r28, r24
	oled_pos(0,4);
     472:	64 e0       	ldi	r22, 0x04	; 4
     474:	70 e0       	ldi	r23, 0x00	; 0
     476:	80 e0       	ldi	r24, 0x00	; 0
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	0e 94 8c 02 	call	0x518	; 0x518 <oled_pos>
	oled_printf(currentMenu[0].items[0].name);
     47e:	ce 01       	movw	r24, r28
     480:	02 96       	adiw	r24, 0x02	; 2
     482:	9f 93       	push	r25
     484:	8f 93       	push	r24
     486:	0e 94 b4 02 	call	0x568	; 0x568 <oled_printf>
     48a:	0f 90       	pop	r0
     48c:	0f 90       	pop	r0
}
     48e:	df 91       	pop	r29
     490:	cf 91       	pop	r28
     492:	08 95       	ret

00000494 <oled_print_char>:
		//Set higher column address                                                                                                                                                                                                                                                                                                                                                                     
		*oled_command_addr = 0x10 + (column * (FONTWIDTH)>>4);
	}
}

void oled_print_char(char ch){
     494:	28 e0       	ldi	r18, 0x08	; 8
     496:	82 9f       	mul	r24, r18
     498:	c0 01       	movw	r24, r0
     49a:	11 24       	eor	r1, r1
     49c:	fc 01       	movw	r30, r24
     49e:	e0 59       	subi	r30, 0x90	; 144
     4a0:	f0 40       	sbci	r31, 0x00	; 0
	for (uint8_t i = 0; i<FONTWIDTH; i++) {
     4a2:	80 e0       	ldi	r24, 0x00	; 0
		oled_write_data(pgm_read_byte(&font[ch - FONTOFFSET][i]));
     4a4:	94 91       	lpm	r25, Z
void oled_write_command(uint8_t command){
	*oled_command_addr = command;
}

void oled_write_data(uint8_t data){
	*oled_data_addr = data;
     4a6:	a0 91 04 01 	lds	r26, 0x0104
     4aa:	b0 91 05 01 	lds	r27, 0x0105
     4ae:	9c 93       	st	X, r25
		*oled_command_addr = 0x10 + (column * (FONTWIDTH)>>4);
	}
}

void oled_print_char(char ch){
	for (uint8_t i = 0; i<FONTWIDTH; i++) {
     4b0:	8f 5f       	subi	r24, 0xFF	; 255
     4b2:	31 96       	adiw	r30, 0x01	; 1
     4b4:	88 30       	cpi	r24, 0x08	; 8
     4b6:	b1 f7       	brne	.-20     	; 0x4a4 <oled_print_char+0x10>
		oled_write_data(pgm_read_byte(&font[ch - FONTOFFSET][i]));
	}
}
     4b8:	08 95       	ret

000004ba <oled_goto_page>:
void oled_back(){
	
}

void oled_goto_page(unsigned int page) {
	oled_write_command(0xB0 + page);
     4ba:	90 eb       	ldi	r25, 0xB0	; 176
     4bc:	98 0f       	add	r25, r24
	_delay_ms(3000);
	oled_clear_screen();
}

void oled_write_command(uint8_t command){
	*oled_command_addr = command;
     4be:	e0 91 06 01 	lds	r30, 0x0106
     4c2:	f0 91 07 01 	lds	r31, 0x0107
     4c6:	90 83       	st	Z, r25
	
}

void oled_goto_page(unsigned int page) {
	oled_write_command(0xB0 + page);
	global_page = page;
     4c8:	80 93 21 03 	sts	0x0321, r24
     4cc:	80 e1       	ldi	r24, 0x10	; 16
     4ce:	8a 95       	dec	r24
     4d0:	f1 f7       	brne	.-4      	; 0x4ce <oled_goto_page+0x14>
     4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <oled_goto_page+0x1a>
     4d4:	08 95       	ret

000004d6 <oled_clear_line>:
	_delay_us(50);
}

void oled_clear_line(){
     4d6:	80 e8       	ldi	r24, 0x80	; 128
     4d8:	90 e0       	ldi	r25, 0x00	; 0
void oled_write_command(uint8_t command){
	*oled_command_addr = command;
}

void oled_write_data(uint8_t data){
	*oled_data_addr = data;
     4da:	e0 91 04 01 	lds	r30, 0x0104
     4de:	f0 91 05 01 	lds	r31, 0x0105
     4e2:	10 82       	st	Z, r1
     4e4:	01 97       	sbiw	r24, 0x01	; 1
	global_page = page;
	_delay_us(50);
}

void oled_clear_line(){
	for (int i = 0; i<128; i++) {
     4e6:	00 97       	sbiw	r24, 0x00	; 0
     4e8:	c1 f7       	brne	.-16     	; 0x4da <oled_clear_line+0x4>
		oled_write_data(0b00000000);
	}
}
     4ea:	08 95       	ret

000004ec <oled_clear_screen>:

void oled_clear_screen() {
     4ec:	cf 93       	push	r28
     4ee:	df 93       	push	r29
     4f0:	c0 e0       	ldi	r28, 0x00	; 0
     4f2:	d0 e0       	ldi	r29, 0x00	; 0
	for (uint8_t i = 0; i<8; i++) {
		oled_goto_page(i);
     4f4:	ce 01       	movw	r24, r28
     4f6:	0e 94 5d 02 	call	0x4ba	; 0x4ba <oled_goto_page>
		oled_clear_line();
     4fa:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <oled_clear_line>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4fe:	83 ed       	ldi	r24, 0xD3	; 211
     500:	90 e3       	ldi	r25, 0x30	; 48
     502:	01 97       	sbiw	r24, 0x01	; 1
     504:	f1 f7       	brne	.-4      	; 0x502 <__stack+0x3>
     506:	00 c0       	rjmp	.+0      	; 0x508 <__stack+0x9>
     508:	00 00       	nop
     50a:	21 96       	adiw	r28, 0x01	; 1
		oled_write_data(0b00000000);
	}
}

void oled_clear_screen() {
	for (uint8_t i = 0; i<8; i++) {
     50c:	c8 30       	cpi	r28, 0x08	; 8
     50e:	d1 05       	cpc	r29, r1
     510:	89 f7       	brne	.-30     	; 0x4f4 <oled_clear_screen+0x8>
		oled_goto_page(i);
		oled_clear_line();
		_delay_ms(50);
	}
}
     512:	df 91       	pop	r29
     514:	cf 91       	pop	r28
     516:	08 95       	ret

00000518 <oled_pos>:

void oled_pos(unsigned int row, unsigned int column){
     518:	cf 93       	push	r28
     51a:	df 93       	push	r29
     51c:	eb 01       	movw	r28, r22
	oled_goto_page(row);
     51e:	0e 94 5d 02 	call	0x4ba	; 0x4ba <oled_goto_page>
	if(column < (128/FONTWIDTH)){
     522:	c0 31       	cpi	r28, 0x10	; 16
     524:	d1 05       	cpc	r29, r1
     526:	e8 f4       	brcc	.+58     	; 0x562 <oled_pos+0x4a>
		//Save column program goes to
		global_col = column * FONTWIDTH;
     528:	8c 2f       	mov	r24, r28
     52a:	88 0f       	add	r24, r24
     52c:	88 0f       	add	r24, r24
     52e:	88 0f       	add	r24, r24
     530:	80 93 22 03 	sts	0x0322, r24
		//Set lower column address
		*oled_command_addr = 0x00 + (column * (FONTWIDTH)>>4);
     534:	e0 91 06 01 	lds	r30, 0x0106
     538:	f0 91 07 01 	lds	r31, 0x0107
     53c:	cc 0f       	add	r28, r28
     53e:	dd 1f       	adc	r29, r29
     540:	cc 0f       	add	r28, r28
     542:	dd 1f       	adc	r29, r29
     544:	cc 0f       	add	r28, r28
     546:	dd 1f       	adc	r29, r29
     548:	d2 95       	swap	r29
     54a:	c2 95       	swap	r28
     54c:	cf 70       	andi	r28, 0x0F	; 15
     54e:	cd 27       	eor	r28, r29
     550:	df 70       	andi	r29, 0x0F	; 15
     552:	cd 27       	eor	r28, r29
     554:	c0 83       	st	Z, r28
		//Set higher column address                                                                                                                                                                                                                                                                                                                                                                     
		*oled_command_addr = 0x10 + (column * (FONTWIDTH)>>4);
     556:	e0 91 06 01 	lds	r30, 0x0106
     55a:	f0 91 07 01 	lds	r31, 0x0107
     55e:	c0 5f       	subi	r28, 0xF0	; 240
     560:	c0 83       	st	Z, r28
	}
}
     562:	df 91       	pop	r29
     564:	cf 91       	pop	r28
     566:	08 95       	ret

00000568 <oled_printf>:
	for (uint8_t i = 0; i<FONTWIDTH; i++) {
		oled_write_data(pgm_read_byte(&font[ch - FONTOFFSET][i]));
	}
}

void oled_printf(char* fmt, ...){
     568:	cf 93       	push	r28
     56a:	df 93       	push	r29
     56c:	cd b7       	in	r28, 0x3d	; 61
     56e:	de b7       	in	r29, 0x3e	; 62
     570:	fe 01       	movw	r30, r28
     572:	35 96       	adiw	r30, 0x05	; 5
     574:	61 91       	ld	r22, Z+
     576:	71 91       	ld	r23, Z+
	va_list v;
	va_start(v, fmt);
	vfprintf(&oled_stdout, fmt, v);
     578:	af 01       	movw	r20, r30
     57a:	88 e0       	ldi	r24, 0x08	; 8
     57c:	91 e0       	ldi	r25, 0x01	; 1
     57e:	0e 94 4a 06 	call	0xc94	; 0xc94 <vfprintf>
	va_end(v);
}
     582:	df 91       	pop	r29
     584:	cf 91       	pop	r28
     586:	08 95       	ret

00000588 <oled_init>:
	_delay_ms(3000);
	oled_clear_screen();
}

void oled_write_command(uint8_t command){
	*oled_command_addr = command;
     588:	e0 91 06 01 	lds	r30, 0x0106
     58c:	f0 91 07 01 	lds	r31, 0x0107
     590:	8e ea       	ldi	r24, 0xAE	; 174
     592:	80 83       	st	Z, r24
     594:	e0 91 06 01 	lds	r30, 0x0106
     598:	f0 91 07 01 	lds	r31, 0x0107
     59c:	81 ea       	ldi	r24, 0xA1	; 161
     59e:	80 83       	st	Z, r24
     5a0:	e0 91 06 01 	lds	r30, 0x0106
     5a4:	f0 91 07 01 	lds	r31, 0x0107
     5a8:	8a ed       	ldi	r24, 0xDA	; 218
     5aa:	80 83       	st	Z, r24
     5ac:	e0 91 06 01 	lds	r30, 0x0106
     5b0:	f0 91 07 01 	lds	r31, 0x0107
     5b4:	82 e1       	ldi	r24, 0x12	; 18
     5b6:	80 83       	st	Z, r24
     5b8:	e0 91 06 01 	lds	r30, 0x0106
     5bc:	f0 91 07 01 	lds	r31, 0x0107
     5c0:	88 ec       	ldi	r24, 0xC8	; 200
     5c2:	80 83       	st	Z, r24
     5c4:	e0 91 06 01 	lds	r30, 0x0106
     5c8:	f0 91 07 01 	lds	r31, 0x0107
     5cc:	88 ea       	ldi	r24, 0xA8	; 168
     5ce:	80 83       	st	Z, r24
     5d0:	e0 91 06 01 	lds	r30, 0x0106
     5d4:	f0 91 07 01 	lds	r31, 0x0107
     5d8:	8f e3       	ldi	r24, 0x3F	; 63
     5da:	80 83       	st	Z, r24
     5dc:	e0 91 06 01 	lds	r30, 0x0106
     5e0:	f0 91 07 01 	lds	r31, 0x0107
     5e4:	85 ed       	ldi	r24, 0xD5	; 213
     5e6:	80 83       	st	Z, r24
     5e8:	e0 91 06 01 	lds	r30, 0x0106
     5ec:	f0 91 07 01 	lds	r31, 0x0107
     5f0:	80 e8       	ldi	r24, 0x80	; 128
     5f2:	80 83       	st	Z, r24
     5f4:	e0 91 06 01 	lds	r30, 0x0106
     5f8:	f0 91 07 01 	lds	r31, 0x0107
     5fc:	81 e8       	ldi	r24, 0x81	; 129
     5fe:	80 83       	st	Z, r24
     600:	e0 91 06 01 	lds	r30, 0x0106
     604:	f0 91 07 01 	lds	r31, 0x0107
     608:	80 e5       	ldi	r24, 0x50	; 80
     60a:	80 83       	st	Z, r24
     60c:	e0 91 06 01 	lds	r30, 0x0106
     610:	f0 91 07 01 	lds	r31, 0x0107
     614:	89 ed       	ldi	r24, 0xD9	; 217
     616:	80 83       	st	Z, r24
     618:	e0 91 06 01 	lds	r30, 0x0106
     61c:	f0 91 07 01 	lds	r31, 0x0107
     620:	81 e2       	ldi	r24, 0x21	; 33
     622:	80 83       	st	Z, r24
     624:	e0 91 06 01 	lds	r30, 0x0106
     628:	f0 91 07 01 	lds	r31, 0x0107
     62c:	80 e2       	ldi	r24, 0x20	; 32
     62e:	80 83       	st	Z, r24
     630:	e0 91 06 01 	lds	r30, 0x0106
     634:	f0 91 07 01 	lds	r31, 0x0107
     638:	82 e0       	ldi	r24, 0x02	; 2
     63a:	80 83       	st	Z, r24
     63c:	e0 91 06 01 	lds	r30, 0x0106
     640:	f0 91 07 01 	lds	r31, 0x0107
     644:	8b ed       	ldi	r24, 0xDB	; 219
     646:	80 83       	st	Z, r24
     648:	e0 91 06 01 	lds	r30, 0x0106
     64c:	f0 91 07 01 	lds	r31, 0x0107
     650:	80 e3       	ldi	r24, 0x30	; 48
     652:	80 83       	st	Z, r24
     654:	e0 91 06 01 	lds	r30, 0x0106
     658:	f0 91 07 01 	lds	r31, 0x0107
     65c:	8d ea       	ldi	r24, 0xAD	; 173
     65e:	80 83       	st	Z, r24
     660:	e0 91 06 01 	lds	r30, 0x0106
     664:	f0 91 07 01 	lds	r31, 0x0107
     668:	10 82       	st	Z, r1
     66a:	e0 91 06 01 	lds	r30, 0x0106
     66e:	f0 91 07 01 	lds	r31, 0x0107
     672:	84 ea       	ldi	r24, 0xA4	; 164
     674:	80 83       	st	Z, r24
     676:	e0 91 06 01 	lds	r30, 0x0106
     67a:	f0 91 07 01 	lds	r31, 0x0107
     67e:	86 ea       	ldi	r24, 0xA6	; 166
     680:	80 83       	st	Z, r24
     682:	e0 91 06 01 	lds	r30, 0x0106
     686:	f0 91 07 01 	lds	r31, 0x0107
     68a:	8f ea       	ldi	r24, 0xAF	; 175
     68c:	80 83       	st	Z, r24
	oled_write_command(0x00);
	oled_write_command(0xa4);    //out follows RAM content
	oled_write_command(0xa6);    //set normal display
	oled_write_command(0xaf);    // display on
	
	oled_clear_screen();
     68e:	0e 94 76 02 	call	0x4ec	; 0x4ec <oled_clear_screen>
	oled_goto_page(2);
     692:	82 e0       	ldi	r24, 0x02	; 2
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	0e 94 5d 02 	call	0x4ba	; 0x4ba <oled_goto_page>
	oled_printf(" #SWAG");
     69a:	8e e2       	ldi	r24, 0x2E	; 46
     69c:	91 e0       	ldi	r25, 0x01	; 1
     69e:	9f 93       	push	r25
     6a0:	8f 93       	push	r24
     6a2:	0e 94 b4 02 	call	0x568	; 0x568 <oled_printf>
	oled_goto_page(3);
     6a6:	83 e0       	ldi	r24, 0x03	; 3
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	0e 94 5d 02 	call	0x4ba	; 0x4ba <oled_goto_page>
	oled_printf("  4");
     6ae:	85 e3       	ldi	r24, 0x35	; 53
     6b0:	91 e0       	ldi	r25, 0x01	; 1
     6b2:	9f 93       	push	r25
     6b4:	8f 93       	push	r24
     6b6:	0e 94 b4 02 	call	0x568	; 0x568 <oled_printf>
	oled_goto_page(4);
     6ba:	84 e0       	ldi	r24, 0x04	; 4
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	0e 94 5d 02 	call	0x4ba	; 0x4ba <oled_goto_page>
	oled_printf(" LYFE");
     6c2:	89 e3       	ldi	r24, 0x39	; 57
     6c4:	91 e0       	ldi	r25, 0x01	; 1
     6c6:	9f 93       	push	r25
     6c8:	8f 93       	push	r24
     6ca:	0e 94 b4 02 	call	0x568	; 0x568 <oled_printf>
     6ce:	2f eb       	ldi	r18, 0xBF	; 191
     6d0:	87 e2       	ldi	r24, 0x27	; 39
     6d2:	99 e0       	ldi	r25, 0x09	; 9
     6d4:	21 50       	subi	r18, 0x01	; 1
     6d6:	80 40       	sbci	r24, 0x00	; 0
     6d8:	90 40       	sbci	r25, 0x00	; 0
     6da:	e1 f7       	brne	.-8      	; 0x6d4 <oled_init+0x14c>
     6dc:	00 c0       	rjmp	.+0      	; 0x6de <oled_init+0x156>
     6de:	00 00       	nop
	_delay_ms(3000);
	oled_clear_screen();
     6e0:	0e 94 76 02 	call	0x4ec	; 0x4ec <oled_clear_screen>
     6e4:	0f 90       	pop	r0
     6e6:	0f 90       	pop	r0
     6e8:	0f 90       	pop	r0
     6ea:	0f 90       	pop	r0
     6ec:	0f 90       	pop	r0
     6ee:	0f 90       	pop	r0
     6f0:	08 95       	ret

000006f2 <oled_print_arrow>:
	vfprintf(&oled_stdout, fmt, v);
	va_end(v);
}

void oled_print_arrow(uint8_t row, uint8_t col){
	arrow_global = row;
     6f2:	80 93 1c 03 	sts	0x031C, r24
	oled_pos(row, col);
     6f6:	70 e0       	ldi	r23, 0x00	; 0
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	0e 94 8c 02 	call	0x518	; 0x518 <oled_pos>
void oled_write_command(uint8_t command){
	*oled_command_addr = command;
}

void oled_write_data(uint8_t data){
	*oled_data_addr = data;
     6fe:	e0 91 04 01 	lds	r30, 0x0104
     702:	f0 91 05 01 	lds	r31, 0x0105
     706:	88 e1       	ldi	r24, 0x18	; 24
     708:	80 83       	st	Z, r24
     70a:	e0 91 04 01 	lds	r30, 0x0104
     70e:	f0 91 05 01 	lds	r31, 0x0105
     712:	80 83       	st	Z, r24
     714:	e0 91 04 01 	lds	r30, 0x0104
     718:	f0 91 05 01 	lds	r31, 0x0105
     71c:	9e e7       	ldi	r25, 0x7E	; 126
     71e:	90 83       	st	Z, r25
     720:	e0 91 04 01 	lds	r30, 0x0104
     724:	f0 91 05 01 	lds	r31, 0x0105
     728:	9c e3       	ldi	r25, 0x3C	; 60
     72a:	90 83       	st	Z, r25
     72c:	e0 91 04 01 	lds	r30, 0x0104
     730:	f0 91 05 01 	lds	r31, 0x0105
     734:	80 83       	st	Z, r24
     736:	08 95       	ret

00000738 <oled_clear_arrow>:
	oled_write_data(0b00111100);
	oled_write_data(0b00011000);
}

void oled_clear_arrow(uint8_t row, uint8_t col){
	oled_pos(row, col);
     738:	70 e0       	ldi	r23, 0x00	; 0
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	0e 94 8c 02 	call	0x518	; 0x518 <oled_pos>
void oled_write_command(uint8_t command){
	*oled_command_addr = command;
}

void oled_write_data(uint8_t data){
	*oled_data_addr = data;
     740:	e0 91 04 01 	lds	r30, 0x0104
     744:	f0 91 05 01 	lds	r31, 0x0105
     748:	10 82       	st	Z, r1
     74a:	e0 91 04 01 	lds	r30, 0x0104
     74e:	f0 91 05 01 	lds	r31, 0x0105
     752:	10 82       	st	Z, r1
     754:	e0 91 04 01 	lds	r30, 0x0104
     758:	f0 91 05 01 	lds	r31, 0x0105
     75c:	10 82       	st	Z, r1
     75e:	e0 91 04 01 	lds	r30, 0x0104
     762:	f0 91 05 01 	lds	r31, 0x0105
     766:	10 82       	st	Z, r1
     768:	e0 91 04 01 	lds	r30, 0x0104
     76c:	f0 91 05 01 	lds	r31, 0x0105
     770:	10 82       	st	Z, r1
     772:	08 95       	ret

00000774 <oled_move_arrow>:
	oled_write_data(0b00000000);
	oled_write_data(0b00000000);
}

void oled_move_arrow(signed int joystick_Y, unsigned int menu_min, unsigned int menu_max){
	if(joystick_Y < 0 && arrow_global < menu_max) {
     774:	99 23       	and	r25, r25
     776:	a4 f4       	brge	.+40     	; 0x7a0 <oled_move_arrow+0x2c>
     778:	e0 91 1c 03 	lds	r30, 0x031C
     77c:	2e 2f       	mov	r18, r30
     77e:	30 e0       	ldi	r19, 0x00	; 0
     780:	24 17       	cp	r18, r20
     782:	35 07       	cpc	r19, r21
     784:	68 f4       	brcc	.+26     	; 0x7a0 <oled_move_arrow+0x2c>
		oled_clear_arrow(arrow_global, 0);
     786:	60 e0       	ldi	r22, 0x00	; 0
     788:	8e 2f       	mov	r24, r30
     78a:	0e 94 9c 03 	call	0x738	; 0x738 <oled_clear_arrow>
		arrow_global++;
     78e:	80 91 1c 03 	lds	r24, 0x031C
     792:	8f 5f       	subi	r24, 0xFF	; 255
     794:	80 93 1c 03 	sts	0x031C, r24
		oled_print_arrow(arrow_global, 0);
     798:	60 e0       	ldi	r22, 0x00	; 0
     79a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <oled_print_arrow>
     79e:	08 95       	ret
	} else if (joystick_Y > 0 && arrow_global > menu_min) {
     7a0:	18 16       	cp	r1, r24
     7a2:	19 06       	cpc	r1, r25
     7a4:	94 f4       	brge	.+36     	; 0x7ca <oled_move_arrow+0x56>
     7a6:	80 91 1c 03 	lds	r24, 0x031C
     7aa:	28 2f       	mov	r18, r24
     7ac:	30 e0       	ldi	r19, 0x00	; 0
     7ae:	62 17       	cp	r22, r18
     7b0:	73 07       	cpc	r23, r19
     7b2:	58 f4       	brcc	.+22     	; 0x7ca <oled_move_arrow+0x56>
		oled_clear_arrow(arrow_global, 0);
     7b4:	60 e0       	ldi	r22, 0x00	; 0
     7b6:	0e 94 9c 03 	call	0x738	; 0x738 <oled_clear_arrow>
		arrow_global--;
     7ba:	80 91 1c 03 	lds	r24, 0x031C
     7be:	81 50       	subi	r24, 0x01	; 1
     7c0:	80 93 1c 03 	sts	0x031C, r24
		oled_print_arrow(arrow_global, 0);
     7c4:	60 e0       	ldi	r22, 0x00	; 0
     7c6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <oled_print_arrow>
     7ca:	08 95       	ret

000007cc <SRAM_test>:
	if (address_offset > 0x100) { return 0; }
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	return ext_ram[address_offset];
}

void SRAM_test(void) {
     7cc:	cf 92       	push	r12
     7ce:	df 92       	push	r13
     7d0:	ef 92       	push	r14
     7d2:	ff 92       	push	r15
     7d4:	0f 93       	push	r16
     7d6:	1f 93       	push	r17
     7d8:	cf 93       	push	r28
     7da:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size       = 0x800;
	uint16_t write_errors       = 0;
	uint16_t retrieval_errors   = 0;

	printf("\nStarting SRAM test...\n");
     7dc:	8f e3       	ldi	r24, 0x3F	; 63
     7de:	91 e0       	ldi	r25, 0x01	; 1
     7e0:	0e 94 09 06 	call	0xc12	; 0xc12 <puts>

	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
     7e4:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <rand>
     7e8:	6c 01       	movw	r12, r24

	// Write phase: Immediately check that the correct value was stored
	srand(seed);
     7ea:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     7ee:	c0 e0       	ldi	r28, 0x00	; 0
     7f0:	d0 e0       	ldi	r29, 0x00	; 0
}

void SRAM_test(void) {
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size       = 0x800;
	uint16_t write_errors       = 0;
     7f2:	00 e0       	ldi	r16, 0x00	; 0
     7f4:	10 e0       	ldi	r17, 0x00	; 0
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		ext_ram[i] = some_value;
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     7f6:	0f 2e       	mov	r0, r31
     7f8:	f6 e5       	ldi	r31, 0x56	; 86
     7fa:	ef 2e       	mov	r14, r31
     7fc:	f1 e0       	ldi	r31, 0x01	; 1
     7fe:	ff 2e       	mov	r15, r31
     800:	f0 2d       	mov	r31, r0
	uint16_t seed = rand();

	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
     802:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <rand>
     806:	fe 01       	movw	r30, r28
     808:	f8 5e       	subi	r31, 0xE8	; 232
		ext_ram[i] = some_value;
     80a:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
     80c:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     80e:	28 17       	cp	r18, r24
     810:	a9 f0       	breq	.+42     	; 0x83c <SRAM_test+0x70>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     812:	99 27       	eor	r25, r25
     814:	9f 93       	push	r25
     816:	8f 93       	push	r24
     818:	1f 92       	push	r1
     81a:	2f 93       	push	r18
     81c:	df 93       	push	r29
     81e:	cf 93       	push	r28
     820:	ff 92       	push	r15
     822:	ef 92       	push	r14
     824:	0e 94 f5 05 	call	0xbea	; 0xbea <printf>
			write_errors++;
     828:	0f 5f       	subi	r16, 0xFF	; 255
     82a:	1f 4f       	sbci	r17, 0xFF	; 255
     82c:	8d b7       	in	r24, 0x3d	; 61
     82e:	9e b7       	in	r25, 0x3e	; 62
     830:	08 96       	adiw	r24, 0x08	; 8
     832:	0f b6       	in	r0, 0x3f	; 63
     834:	f8 94       	cli
     836:	9e bf       	out	0x3e, r25	; 62
     838:	0f be       	out	0x3f, r0	; 63
     83a:	8d bf       	out	0x3d, r24	; 61
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();

	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     83c:	21 96       	adiw	r28, 0x01	; 1
     83e:	c1 15       	cp	r28, r1
     840:	98 e0       	ldi	r25, 0x08	; 8
     842:	d9 07       	cpc	r29, r25
     844:	f1 f6       	brne	.-68     	; 0x802 <SRAM_test+0x36>
			write_errors++;
		}
	}

	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);    // reset the PRNG to the state it had before the write phase
     846:	c6 01       	movw	r24, r12
     848:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     84c:	c0 e0       	ldi	r28, 0x00	; 0
     84e:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void) {
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size       = 0x800;
	uint16_t write_errors       = 0;
	uint16_t retrieval_errors   = 0;
     850:	e1 2c       	mov	r14, r1
     852:	f1 2c       	mov	r15, r1
	srand(seed);    // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     854:	0f 2e       	mov	r0, r31
     856:	ff e8       	ldi	r31, 0x8F	; 143
     858:	cf 2e       	mov	r12, r31
     85a:	f1 e0       	ldi	r31, 0x01	; 1
     85c:	df 2e       	mov	r13, r31
     85e:	f0 2d       	mov	r31, r0
	}

	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);    // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
     860:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <rand>
     864:	fe 01       	movw	r30, r28
     866:	f8 5e       	subi	r31, 0xE8	; 232
		uint8_t retreived_value = ext_ram[i];
     868:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     86a:	28 17       	cp	r18, r24
     86c:	b1 f0       	breq	.+44     	; 0x89a <SRAM_test+0xce>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     86e:	99 27       	eor	r25, r25
     870:	9f 93       	push	r25
     872:	8f 93       	push	r24
     874:	1f 92       	push	r1
     876:	2f 93       	push	r18
     878:	df 93       	push	r29
     87a:	cf 93       	push	r28
     87c:	df 92       	push	r13
     87e:	cf 92       	push	r12
     880:	0e 94 f5 05 	call	0xbea	; 0xbea <printf>
			retrieval_errors++;
     884:	8f ef       	ldi	r24, 0xFF	; 255
     886:	e8 1a       	sub	r14, r24
     888:	f8 0a       	sbc	r15, r24
     88a:	8d b7       	in	r24, 0x3d	; 61
     88c:	9e b7       	in	r25, 0x3e	; 62
     88e:	08 96       	adiw	r24, 0x08	; 8
     890:	0f b6       	in	r0, 0x3f	; 63
     892:	f8 94       	cli
     894:	9e bf       	out	0x3e, r25	; 62
     896:	0f be       	out	0x3f, r0	; 63
     898:	8d bf       	out	0x3d, r24	; 61
		}
	}

	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);    // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     89a:	21 96       	adiw	r28, 0x01	; 1
     89c:	c1 15       	cp	r28, r1
     89e:	98 e0       	ldi	r25, 0x08	; 8
     8a0:	d9 07       	cpc	r29, r25
     8a2:	f1 f6       	brne	.-68     	; 0x860 <SRAM_test+0x94>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
     8a4:	ff 92       	push	r15
     8a6:	ef 92       	push	r14
     8a8:	1f 93       	push	r17
     8aa:	0f 93       	push	r16
     8ac:	8c ec       	ldi	r24, 0xCC	; 204
     8ae:	91 e0       	ldi	r25, 0x01	; 1
     8b0:	9f 93       	push	r25
     8b2:	8f 93       	push	r24
     8b4:	0e 94 f5 05 	call	0xbea	; 0xbea <printf>
     8b8:	0f 90       	pop	r0
     8ba:	0f 90       	pop	r0
     8bc:	0f 90       	pop	r0
     8be:	0f 90       	pop	r0
     8c0:	0f 90       	pop	r0
     8c2:	0f 90       	pop	r0
     8c4:	df 91       	pop	r29
     8c6:	cf 91       	pop	r28
     8c8:	1f 91       	pop	r17
     8ca:	0f 91       	pop	r16
     8cc:	ff 90       	pop	r15
     8ce:	ef 90       	pop	r14
     8d0:	df 90       	pop	r13
     8d2:	cf 90       	pop	r12
     8d4:	08 95       	ret

000008d6 <SRAM_init>:
#include <stdio.h>
#include "SRAM_driver.h"

//Simple setup for SRAM, also tests for correctness
void SRAM_init(){
	MCUCR = 0x80;
     8d6:	80 e8       	ldi	r24, 0x80	; 128
     8d8:	85 bf       	out	0x35, r24	; 53
	DDRA = 0xFF;
     8da:	8f ef       	ldi	r24, 0xFF	; 255
     8dc:	8a bb       	out	0x1a, r24	; 26
	SRAM_test();
     8de:	0e 94 e6 03 	call	0x7cc	; 0x7cc <SRAM_test>
     8e2:	08 95       	ret

000008e4 <flash_diode>:
#include "oled_driver.h"
#include "menu.h"

//Simple test, Ex 1, task 6
void flash_diode(){
	PORTB = 0xFF;
     8e4:	8f ef       	ldi	r24, 0xFF	; 255
     8e6:	88 bb       	out	0x18, r24	; 24
     8e8:	80 e0       	ldi	r24, 0x00	; 0
     8ea:	90 ef       	ldi	r25, 0xF0	; 240
     8ec:	01 97       	sbiw	r24, 0x01	; 1
     8ee:	f1 f7       	brne	.-4      	; 0x8ec <flash_diode+0x8>
	_delay_ms(50);
	PORTB = 0x00;
     8f0:	18 ba       	out	0x18, r1	; 24
     8f2:	80 e0       	ldi	r24, 0x00	; 0
     8f4:	90 ef       	ldi	r25, 0xF0	; 240
     8f6:	01 97       	sbiw	r24, 0x01	; 1
     8f8:	f1 f7       	brne	.-4      	; 0x8f6 <flash_diode+0x12>
     8fa:	08 95       	ret

000008fc <shell>:
	uart_sendChar('X');
	_delay_ms(1000);
}

//Ex 1, task 10 and 11
void shell(){
     8fc:	af 92       	push	r10
     8fe:	bf 92       	push	r11
     900:	cf 92       	push	r12
     902:	df 92       	push	r13
     904:	ef 92       	push	r14
     906:	ff 92       	push	r15
     908:	0f 93       	push	r16
     90a:	1f 93       	push	r17
     90c:	cf 93       	push	r28
     90e:	df 93       	push	r29
     910:	cd b7       	in	r28, 0x3d	; 61
     912:	de b7       	in	r29, 0x3e	; 62
     914:	da 95       	dec	r29
     916:	0f b6       	in	r0, 0x3f	; 63
     918:	f8 94       	cli
     91a:	de bf       	out	0x3e, r29	; 62
     91c:	0f be       	out	0x3f, r0	; 63
     91e:	cd bf       	out	0x3d, r28	; 61
	char cmd[256];
	printf("\n[root@skynet]#:");
     920:	85 e2       	ldi	r24, 0x25	; 37
     922:	92 e0       	ldi	r25, 0x02	; 2
     924:	9f 93       	push	r25
     926:	8f 93       	push	r24
     928:	0e 94 f5 05 	call	0xbea	; 0xbea <printf>
	scanf("%s", cmd);
     92c:	8e 01       	movw	r16, r28
     92e:	0f 5f       	subi	r16, 0xFF	; 255
     930:	1f 4f       	sbci	r17, 0xFF	; 255
     932:	1f 93       	push	r17
     934:	0f 93       	push	r16
     936:	86 e3       	ldi	r24, 0x36	; 54
     938:	92 e0       	ldi	r25, 0x02	; 2
     93a:	9f 93       	push	r25
     93c:	8f 93       	push	r24
     93e:	0e 94 36 06 	call	0xc6c	; 0xc6c <scanf>
	printf( " %s\n", cmd);
     942:	1f 93       	push	r17
     944:	0f 93       	push	r16
     946:	89 e3       	ldi	r24, 0x39	; 57
     948:	92 e0       	ldi	r25, 0x02	; 2
     94a:	9f 93       	push	r25
     94c:	8f 93       	push	r24
     94e:	0e 94 f5 05 	call	0xbea	; 0xbea <printf>
	
	if(strcmp(cmd, "DIODE_test") == 0) {
     952:	6e e3       	ldi	r22, 0x3E	; 62
     954:	72 e0       	ldi	r23, 0x02	; 2
     956:	c8 01       	movw	r24, r16
     958:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <strcmp>
     95c:	0f b6       	in	r0, 0x3f	; 63
     95e:	f8 94       	cli
     960:	de bf       	out	0x3e, r29	; 62
     962:	0f be       	out	0x3f, r0	; 63
     964:	cd bf       	out	0x3d, r28	; 61
     966:	89 2b       	or	r24, r25
     968:	91 f4       	brne	.+36     	; 0x98e <shell+0x92>
		printf("testing diode...\n");
     96a:	89 e4       	ldi	r24, 0x49	; 73
     96c:	92 e0       	ldi	r25, 0x02	; 2
     96e:	0e 94 09 06 	call	0xc12	; 0xc12 <puts>
     972:	04 e1       	ldi	r16, 0x14	; 20
     974:	10 e0       	ldi	r17, 0x00	; 0
		for (int i = 0; i < 20; i++) {	flash_diode(); }
     976:	0e 94 72 04 	call	0x8e4	; 0x8e4 <flash_diode>
     97a:	01 50       	subi	r16, 0x01	; 1
     97c:	11 09       	sbc	r17, r1
     97e:	01 15       	cp	r16, r1
     980:	11 05       	cpc	r17, r1
     982:	c9 f7       	brne	.-14     	; 0x976 <shell+0x7a>
		printf("done testing diode\n");
     984:	8a e5       	ldi	r24, 0x5A	; 90
     986:	92 e0       	ldi	r25, 0x02	; 2
     988:	0e 94 09 06 	call	0xc12	; 0xc12 <puts>
     98c:	9f c0       	rjmp	.+318    	; 0xacc <shell+0x1d0>
	} 

	else if (strcmp(cmd, "SRAM_test") == 0) {
     98e:	6d e6       	ldi	r22, 0x6D	; 109
     990:	72 e0       	ldi	r23, 0x02	; 2
     992:	ce 01       	movw	r24, r28
     994:	01 96       	adiw	r24, 0x01	; 1
     996:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <strcmp>
     99a:	89 2b       	or	r24, r25
     99c:	19 f4       	brne	.+6      	; 0x9a4 <shell+0xa8>
		SRAM_test();
     99e:	0e 94 e6 03 	call	0x7cc	; 0x7cc <SRAM_test>
     9a2:	94 c0       	rjmp	.+296    	; 0xacc <shell+0x1d0>
	} 

	else if (strcmp(cmd, "ADC_test") == 0) {
     9a4:	67 e7       	ldi	r22, 0x77	; 119
     9a6:	72 e0       	ldi	r23, 0x02	; 2
     9a8:	ce 01       	movw	r24, r28
     9aa:	01 96       	adiw	r24, 0x01	; 1
     9ac:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <strcmp>
     9b0:	89 2b       	or	r24, r25
     9b2:	31 f5       	brne	.+76     	; 0xa00 <shell+0x104>
		while(1){
			printf("Joystick x-pos: %003i \tJoystick y-pos: %003i \tLeft slider: %003d \tRight slider: %003d \n", \
     9b4:	00 e8       	ldi	r16, 0x80	; 128
     9b6:	12 e0       	ldi	r17, 0x02	; 2
     9b8:	83 e0       	ldi	r24, 0x03	; 3
     9ba:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <joystick_read>
     9be:	b8 2e       	mov	r11, r24
     9c0:	a9 2e       	mov	r10, r25
     9c2:	82 e0       	ldi	r24, 0x02	; 2
     9c4:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <joystick_read>
     9c8:	d8 2e       	mov	r13, r24
     9ca:	c9 2e       	mov	r12, r25
     9cc:	81 e0       	ldi	r24, 0x01	; 1
     9ce:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <read_converted>
     9d2:	f8 2e       	mov	r15, r24
     9d4:	e9 2e       	mov	r14, r25
     9d6:	80 e0       	ldi	r24, 0x00	; 0
     9d8:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <read_converted>
     9dc:	af 92       	push	r10
     9de:	bf 92       	push	r11
     9e0:	cf 92       	push	r12
     9e2:	df 92       	push	r13
     9e4:	ef 92       	push	r14
     9e6:	ff 92       	push	r15
     9e8:	9f 93       	push	r25
     9ea:	8f 93       	push	r24
     9ec:	1f 93       	push	r17
     9ee:	0f 93       	push	r16
     9f0:	0e 94 f5 05 	call	0xbea	; 0xbea <printf>
     9f4:	0f b6       	in	r0, 0x3f	; 63
     9f6:	f8 94       	cli
     9f8:	de bf       	out	0x3e, r29	; 62
     9fa:	0f be       	out	0x3f, r0	; 63
     9fc:	cd bf       	out	0x3d, r28	; 61
     9fe:	dc cf       	rjmp	.-72     	; 0x9b8 <shell+0xbc>
					read_converted(JOYSTICK_X), read_converted(JOYSTICK_Y), joystick_read(SLIDE_L), joystick_read(SLIDE_R));
		}
	}  
	
	else if (strcmp(cmd, "OLED_test") == 0) {
     a00:	68 ed       	ldi	r22, 0xD8	; 216
     a02:	72 e0       	ldi	r23, 0x02	; 2
     a04:	ce 01       	movw	r24, r28
     a06:	01 96       	adiw	r24, 0x01	; 1
     a08:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <strcmp>
     a0c:	89 2b       	or	r24, r25
     a0e:	81 f5       	brne	.+96     	; 0xa70 <shell+0x174>
		printf("oled_init(): done\n");
     a10:	82 ee       	ldi	r24, 0xE2	; 226
     a12:	92 e0       	ldi	r25, 0x02	; 2
     a14:	0e 94 09 06 	call	0xc12	; 0xc12 <puts>
		oled_goto_page(0);
     a18:	80 e0       	ldi	r24, 0x00	; 0
     a1a:	90 e0       	ldi	r25, 0x00	; 0
     a1c:	0e 94 5d 02 	call	0x4ba	; 0x4ba <oled_goto_page>
		oled_clear_screen();
     a20:	0e 94 76 02 	call	0x4ec	; 0x4ec <oled_clear_screen>
		oled_print_arrow(0,0);
     a24:	60 e0       	ldi	r22, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	0e 94 79 03 	call	0x6f2	; 0x6f2 <oled_print_arrow>
     a2c:	9f ef       	ldi	r25, 0xFF	; 255
     a2e:	af e7       	ldi	r26, 0x7F	; 127
     a30:	b1 e0       	ldi	r27, 0x01	; 1
     a32:	91 50       	subi	r25, 0x01	; 1
     a34:	a0 40       	sbci	r26, 0x00	; 0
     a36:	b0 40       	sbci	r27, 0x00	; 0
     a38:	e1 f7       	brne	.-8      	; 0xa32 <shell+0x136>
     a3a:	00 c0       	rjmp	.+0      	; 0xa3c <shell+0x140>
     a3c:	00 c0       	rjmp	.+0      	; 0xa3e <shell+0x142>
			//oled_print_char('x');
			//oled_printf("#SWAG4LYFE");
			//oled_write_data(0b00000000);
			//oled_clear_line();
			//oled_clear_screen();
			signed int joy_Y = read_converted(JOYSTICK_Y); 
     a3e:	81 e0       	ldi	r24, 0x01	; 1
     a40:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <read_converted>
			if(joy_Y >= 100 || joy_Y <= -100){
     a44:	9c 01       	movw	r18, r24
     a46:	2d 59       	subi	r18, 0x9D	; 157
     a48:	3f 4f       	sbci	r19, 0xFF	; 255
     a4a:	27 3c       	cpi	r18, 0xC7	; 199
     a4c:	31 05       	cpc	r19, r1
     a4e:	b8 f3       	brcs	.-18     	; 0xa3e <shell+0x142>
				oled_move_arrow(joy_Y, 0, 7);
     a50:	47 e0       	ldi	r20, 0x07	; 7
     a52:	50 e0       	ldi	r21, 0x00	; 0
     a54:	60 e0       	ldi	r22, 0x00	; 0
     a56:	70 e0       	ldi	r23, 0x00	; 0
     a58:	0e 94 ba 03 	call	0x774	; 0x774 <oled_move_arrow>
     a5c:	2f ef       	ldi	r18, 0xFF	; 255
     a5e:	3f e7       	ldi	r19, 0x7F	; 127
     a60:	81 e0       	ldi	r24, 0x01	; 1
     a62:	21 50       	subi	r18, 0x01	; 1
     a64:	30 40       	sbci	r19, 0x00	; 0
     a66:	80 40       	sbci	r24, 0x00	; 0
     a68:	e1 f7       	brne	.-8      	; 0xa62 <shell+0x166>
     a6a:	00 c0       	rjmp	.+0      	; 0xa6c <shell+0x170>
     a6c:	00 c0       	rjmp	.+0      	; 0xa6e <shell+0x172>
     a6e:	e7 cf       	rjmp	.-50     	; 0xa3e <shell+0x142>
			}
		}
		
	}
	
	else if (strcmp(cmd, "MENU_test") == 0) {
     a70:	64 ef       	ldi	r22, 0xF4	; 244
     a72:	72 e0       	ldi	r23, 0x02	; 2
     a74:	ce 01       	movw	r24, r28
     a76:	01 96       	adiw	r24, 0x01	; 1
     a78:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <strcmp>
     a7c:	89 2b       	or	r24, r25
     a7e:	c1 f4       	brne	.+48     	; 0xab0 <shell+0x1b4>
		menu *testMenu;
		printf("\nTest1\n");
     a80:	8e ef       	ldi	r24, 0xFE	; 254
     a82:	92 e0       	ldi	r25, 0x02	; 2
     a84:	0e 94 09 06 	call	0xc12	; 0xc12 <puts>
		testMenu = MENU_create_menu();
     a88:	0e 94 24 02 	call	0x448	; 0x448 <MENU_create_menu>
     a8c:	8c 01       	movw	r16, r24
		printf("%s\n", testMenu[0].items[0].name);
     a8e:	02 96       	adiw	r24, 0x02	; 2
     a90:	0e 94 09 06 	call	0xc12	; 0xc12 <puts>
		MENU_print(testMenu);
     a94:	c8 01       	movw	r24, r16
     a96:	0e 94 36 02 	call	0x46c	; 0x46c <MENU_print>
		testMenu[0].items[0].handlerFunc(0, 0);
     a9a:	d8 01       	movw	r26, r16
     a9c:	92 96       	adiw	r26, 0x22	; 34
     a9e:	ed 91       	ld	r30, X+
     aa0:	fc 91       	ld	r31, X
     aa2:	93 97       	sbiw	r26, 0x23	; 35
     aa4:	60 e0       	ldi	r22, 0x00	; 0
     aa6:	70 e0       	ldi	r23, 0x00	; 0
     aa8:	80 e0       	ldi	r24, 0x00	; 0
     aaa:	90 e0       	ldi	r25, 0x00	; 0
     aac:	09 95       	icall
     aae:	0e c0       	rjmp	.+28     	; 0xacc <shell+0x1d0>
			
		}*/
	}

	else {
		printf("unknown command \"%s\"\n", cmd);
     ab0:	ce 01       	movw	r24, r28
     ab2:	01 96       	adiw	r24, 0x01	; 1
     ab4:	9f 93       	push	r25
     ab6:	8f 93       	push	r24
     ab8:	85 e0       	ldi	r24, 0x05	; 5
     aba:	93 e0       	ldi	r25, 0x03	; 3
     abc:	9f 93       	push	r25
     abe:	8f 93       	push	r24
     ac0:	0e 94 f5 05 	call	0xbea	; 0xbea <printf>
     ac4:	0f 90       	pop	r0
     ac6:	0f 90       	pop	r0
     ac8:	0f 90       	pop	r0
     aca:	0f 90       	pop	r0
	}

	
	
}
     acc:	d3 95       	inc	r29
     ace:	0f b6       	in	r0, 0x3f	; 63
     ad0:	f8 94       	cli
     ad2:	de bf       	out	0x3e, r29	; 62
     ad4:	0f be       	out	0x3f, r0	; 63
     ad6:	cd bf       	out	0x3d, r28	; 61
     ad8:	df 91       	pop	r29
     ada:	cf 91       	pop	r28
     adc:	1f 91       	pop	r17
     ade:	0f 91       	pop	r16
     ae0:	ff 90       	pop	r15
     ae2:	ef 90       	pop	r14
     ae4:	df 90       	pop	r13
     ae6:	cf 90       	pop	r12
     ae8:	bf 90       	pop	r11
     aea:	af 90       	pop	r10
     aec:	08 95       	ret

00000aee <uart_sendChar>:
     aee:	5d 9b       	sbis	0x0b, 5	; 11
     af0:	fe cf       	rjmp	.-4      	; 0xaee <uart_sendChar>
     af2:	8c b9       	out	0x0c, r24	; 12
     af4:	08 95       	ret

00000af6 <uart_getChar>:
     af6:	5f 9b       	sbis	0x0b, 7	; 11
     af8:	fe cf       	rjmp	.-4      	; 0xaf6 <uart_getChar>
     afa:	8c b1       	in	r24, 0x0c	; 12
     afc:	90 e0       	ldi	r25, 0x00	; 0
     afe:	08 95       	ret

00000b00 <uart_init>:
     b00:	89 b9       	out	0x09, r24	; 9
     b02:	88 e1       	ldi	r24, 0x18	; 24
     b04:	8a b9       	out	0x0a, r24	; 10
     b06:	86 e1       	ldi	r24, 0x16	; 22
     b08:	91 e0       	ldi	r25, 0x01	; 1
     b0a:	90 93 26 03 	sts	0x0326, r25
     b0e:	80 93 25 03 	sts	0x0325, r24
     b12:	90 93 24 03 	sts	0x0324, r25
     b16:	80 93 23 03 	sts	0x0323, r24
     b1a:	08 95       	ret

00000b1c <do_rand>:
     b1c:	8f 92       	push	r8
     b1e:	9f 92       	push	r9
     b20:	af 92       	push	r10
     b22:	bf 92       	push	r11
     b24:	cf 92       	push	r12
     b26:	df 92       	push	r13
     b28:	ef 92       	push	r14
     b2a:	ff 92       	push	r15
     b2c:	cf 93       	push	r28
     b2e:	df 93       	push	r29
     b30:	ec 01       	movw	r28, r24
     b32:	68 81       	ld	r22, Y
     b34:	79 81       	ldd	r23, Y+1	; 0x01
     b36:	8a 81       	ldd	r24, Y+2	; 0x02
     b38:	9b 81       	ldd	r25, Y+3	; 0x03
     b3a:	61 15       	cp	r22, r1
     b3c:	71 05       	cpc	r23, r1
     b3e:	81 05       	cpc	r24, r1
     b40:	91 05       	cpc	r25, r1
     b42:	21 f4       	brne	.+8      	; 0xb4c <do_rand+0x30>
     b44:	64 e2       	ldi	r22, 0x24	; 36
     b46:	79 ed       	ldi	r23, 0xD9	; 217
     b48:	8b e5       	ldi	r24, 0x5B	; 91
     b4a:	97 e0       	ldi	r25, 0x07	; 7
     b4c:	2d e1       	ldi	r18, 0x1D	; 29
     b4e:	33 ef       	ldi	r19, 0xF3	; 243
     b50:	41 e0       	ldi	r20, 0x01	; 1
     b52:	50 e0       	ldi	r21, 0x00	; 0
     b54:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <__divmodsi4>
     b58:	49 01       	movw	r8, r18
     b5a:	5a 01       	movw	r10, r20
     b5c:	9b 01       	movw	r18, r22
     b5e:	ac 01       	movw	r20, r24
     b60:	a7 ea       	ldi	r26, 0xA7	; 167
     b62:	b1 e4       	ldi	r27, 0x41	; 65
     b64:	0e 94 03 0c 	call	0x1806	; 0x1806 <__muluhisi3>
     b68:	6b 01       	movw	r12, r22
     b6a:	7c 01       	movw	r14, r24
     b6c:	ac ee       	ldi	r26, 0xEC	; 236
     b6e:	b4 ef       	ldi	r27, 0xF4	; 244
     b70:	a5 01       	movw	r20, r10
     b72:	94 01       	movw	r18, r8
     b74:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulohisi3>
     b78:	c6 0e       	add	r12, r22
     b7a:	d7 1e       	adc	r13, r23
     b7c:	e8 1e       	adc	r14, r24
     b7e:	f9 1e       	adc	r15, r25
     b80:	f7 fe       	sbrs	r15, 7
     b82:	06 c0       	rjmp	.+12     	; 0xb90 <do_rand+0x74>
     b84:	81 e0       	ldi	r24, 0x01	; 1
     b86:	c8 1a       	sub	r12, r24
     b88:	d1 08       	sbc	r13, r1
     b8a:	e1 08       	sbc	r14, r1
     b8c:	80 e8       	ldi	r24, 0x80	; 128
     b8e:	f8 0a       	sbc	r15, r24
     b90:	c8 82       	st	Y, r12
     b92:	d9 82       	std	Y+1, r13	; 0x01
     b94:	ea 82       	std	Y+2, r14	; 0x02
     b96:	fb 82       	std	Y+3, r15	; 0x03
     b98:	c6 01       	movw	r24, r12
     b9a:	9f 77       	andi	r25, 0x7F	; 127
     b9c:	df 91       	pop	r29
     b9e:	cf 91       	pop	r28
     ba0:	ff 90       	pop	r15
     ba2:	ef 90       	pop	r14
     ba4:	df 90       	pop	r13
     ba6:	cf 90       	pop	r12
     ba8:	bf 90       	pop	r11
     baa:	af 90       	pop	r10
     bac:	9f 90       	pop	r9
     bae:	8f 90       	pop	r8
     bb0:	08 95       	ret

00000bb2 <rand_r>:
     bb2:	0e 94 8e 05 	call	0xb1c	; 0xb1c <do_rand>
     bb6:	08 95       	ret

00000bb8 <rand>:
     bb8:	80 e0       	ldi	r24, 0x00	; 0
     bba:	91 e0       	ldi	r25, 0x01	; 1
     bbc:	0e 94 8e 05 	call	0xb1c	; 0xb1c <do_rand>
     bc0:	08 95       	ret

00000bc2 <srand>:
     bc2:	a0 e0       	ldi	r26, 0x00	; 0
     bc4:	b0 e0       	ldi	r27, 0x00	; 0
     bc6:	80 93 00 01 	sts	0x0100, r24
     bca:	90 93 01 01 	sts	0x0101, r25
     bce:	a0 93 02 01 	sts	0x0102, r26
     bd2:	b0 93 03 01 	sts	0x0103, r27
     bd6:	08 95       	ret

00000bd8 <strcmp>:
     bd8:	fb 01       	movw	r30, r22
     bda:	dc 01       	movw	r26, r24
     bdc:	8d 91       	ld	r24, X+
     bde:	01 90       	ld	r0, Z+
     be0:	80 19       	sub	r24, r0
     be2:	01 10       	cpse	r0, r1
     be4:	d9 f3       	breq	.-10     	; 0xbdc <strcmp+0x4>
     be6:	99 0b       	sbc	r25, r25
     be8:	08 95       	ret

00000bea <printf>:
     bea:	a0 e0       	ldi	r26, 0x00	; 0
     bec:	b0 e0       	ldi	r27, 0x00	; 0
     bee:	eb ef       	ldi	r30, 0xFB	; 251
     bf0:	f5 e0       	ldi	r31, 0x05	; 5
     bf2:	0c 94 26 0c 	jmp	0x184c	; 0x184c <__prologue_saves__+0x20>
     bf6:	fe 01       	movw	r30, r28
     bf8:	35 96       	adiw	r30, 0x05	; 5
     bfa:	61 91       	ld	r22, Z+
     bfc:	71 91       	ld	r23, Z+
     bfe:	af 01       	movw	r20, r30
     c00:	80 91 25 03 	lds	r24, 0x0325
     c04:	90 91 26 03 	lds	r25, 0x0326
     c08:	0e 94 4a 06 	call	0xc94	; 0xc94 <vfprintf>
     c0c:	e2 e0       	ldi	r30, 0x02	; 2
     c0e:	0c 94 42 0c 	jmp	0x1884	; 0x1884 <__epilogue_restores__+0x20>

00000c12 <puts>:
     c12:	0f 93       	push	r16
     c14:	1f 93       	push	r17
     c16:	cf 93       	push	r28
     c18:	df 93       	push	r29
     c1a:	e0 91 25 03 	lds	r30, 0x0325
     c1e:	f0 91 26 03 	lds	r31, 0x0326
     c22:	23 81       	ldd	r18, Z+3	; 0x03
     c24:	21 ff       	sbrs	r18, 1
     c26:	1b c0       	rjmp	.+54     	; 0xc5e <puts+0x4c>
     c28:	ec 01       	movw	r28, r24
     c2a:	00 e0       	ldi	r16, 0x00	; 0
     c2c:	10 e0       	ldi	r17, 0x00	; 0
     c2e:	89 91       	ld	r24, Y+
     c30:	60 91 25 03 	lds	r22, 0x0325
     c34:	70 91 26 03 	lds	r23, 0x0326
     c38:	db 01       	movw	r26, r22
     c3a:	18 96       	adiw	r26, 0x08	; 8
     c3c:	ed 91       	ld	r30, X+
     c3e:	fc 91       	ld	r31, X
     c40:	19 97       	sbiw	r26, 0x09	; 9
     c42:	88 23       	and	r24, r24
     c44:	31 f0       	breq	.+12     	; 0xc52 <puts+0x40>
     c46:	09 95       	icall
     c48:	89 2b       	or	r24, r25
     c4a:	89 f3       	breq	.-30     	; 0xc2e <puts+0x1c>
     c4c:	0f ef       	ldi	r16, 0xFF	; 255
     c4e:	1f ef       	ldi	r17, 0xFF	; 255
     c50:	ee cf       	rjmp	.-36     	; 0xc2e <puts+0x1c>
     c52:	8a e0       	ldi	r24, 0x0A	; 10
     c54:	09 95       	icall
     c56:	89 2b       	or	r24, r25
     c58:	11 f4       	brne	.+4      	; 0xc5e <puts+0x4c>
     c5a:	c8 01       	movw	r24, r16
     c5c:	02 c0       	rjmp	.+4      	; 0xc62 <puts+0x50>
     c5e:	8f ef       	ldi	r24, 0xFF	; 255
     c60:	9f ef       	ldi	r25, 0xFF	; 255
     c62:	df 91       	pop	r29
     c64:	cf 91       	pop	r28
     c66:	1f 91       	pop	r17
     c68:	0f 91       	pop	r16
     c6a:	08 95       	ret

00000c6c <scanf>:
     c6c:	a0 e0       	ldi	r26, 0x00	; 0
     c6e:	b0 e0       	ldi	r27, 0x00	; 0
     c70:	ec e3       	ldi	r30, 0x3C	; 60
     c72:	f6 e0       	ldi	r31, 0x06	; 6
     c74:	0c 94 26 0c 	jmp	0x184c	; 0x184c <__prologue_saves__+0x20>
     c78:	fe 01       	movw	r30, r28
     c7a:	35 96       	adiw	r30, 0x05	; 5
     c7c:	61 91       	ld	r22, Z+
     c7e:	71 91       	ld	r23, Z+
     c80:	af 01       	movw	r20, r30
     c82:	80 91 23 03 	lds	r24, 0x0323
     c86:	90 91 24 03 	lds	r25, 0x0324
     c8a:	0e 94 9a 09 	call	0x1334	; 0x1334 <vfscanf>
     c8e:	e2 e0       	ldi	r30, 0x02	; 2
     c90:	0c 94 42 0c 	jmp	0x1884	; 0x1884 <__epilogue_restores__+0x20>

00000c94 <vfprintf>:
     c94:	ac e0       	ldi	r26, 0x0C	; 12
     c96:	b0 e0       	ldi	r27, 0x00	; 0
     c98:	e0 e5       	ldi	r30, 0x50	; 80
     c9a:	f6 e0       	ldi	r31, 0x06	; 6
     c9c:	0c 94 16 0c 	jmp	0x182c	; 0x182c <__prologue_saves__>
     ca0:	7c 01       	movw	r14, r24
     ca2:	6b 01       	movw	r12, r22
     ca4:	8a 01       	movw	r16, r20
     ca6:	fc 01       	movw	r30, r24
     ca8:	17 82       	std	Z+7, r1	; 0x07
     caa:	16 82       	std	Z+6, r1	; 0x06
     cac:	83 81       	ldd	r24, Z+3	; 0x03
     cae:	81 ff       	sbrs	r24, 1
     cb0:	bd c1       	rjmp	.+890    	; 0x102c <vfprintf+0x398>
     cb2:	ce 01       	movw	r24, r28
     cb4:	01 96       	adiw	r24, 0x01	; 1
     cb6:	4c 01       	movw	r8, r24
     cb8:	f7 01       	movw	r30, r14
     cba:	93 81       	ldd	r25, Z+3	; 0x03
     cbc:	f6 01       	movw	r30, r12
     cbe:	93 fd       	sbrc	r25, 3
     cc0:	85 91       	lpm	r24, Z+
     cc2:	93 ff       	sbrs	r25, 3
     cc4:	81 91       	ld	r24, Z+
     cc6:	6f 01       	movw	r12, r30
     cc8:	88 23       	and	r24, r24
     cca:	09 f4       	brne	.+2      	; 0xcce <vfprintf+0x3a>
     ccc:	ab c1       	rjmp	.+854    	; 0x1024 <vfprintf+0x390>
     cce:	85 32       	cpi	r24, 0x25	; 37
     cd0:	39 f4       	brne	.+14     	; 0xce0 <vfprintf+0x4c>
     cd2:	93 fd       	sbrc	r25, 3
     cd4:	85 91       	lpm	r24, Z+
     cd6:	93 ff       	sbrs	r25, 3
     cd8:	81 91       	ld	r24, Z+
     cda:	6f 01       	movw	r12, r30
     cdc:	85 32       	cpi	r24, 0x25	; 37
     cde:	29 f4       	brne	.+10     	; 0xcea <vfprintf+0x56>
     ce0:	b7 01       	movw	r22, r14
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	0e 94 38 0b 	call	0x1670	; 0x1670 <fputc>
     ce8:	e7 cf       	rjmp	.-50     	; 0xcb8 <vfprintf+0x24>
     cea:	51 2c       	mov	r5, r1
     cec:	31 2c       	mov	r3, r1
     cee:	20 e0       	ldi	r18, 0x00	; 0
     cf0:	20 32       	cpi	r18, 0x20	; 32
     cf2:	a0 f4       	brcc	.+40     	; 0xd1c <vfprintf+0x88>
     cf4:	8b 32       	cpi	r24, 0x2B	; 43
     cf6:	69 f0       	breq	.+26     	; 0xd12 <vfprintf+0x7e>
     cf8:	30 f4       	brcc	.+12     	; 0xd06 <vfprintf+0x72>
     cfa:	80 32       	cpi	r24, 0x20	; 32
     cfc:	59 f0       	breq	.+22     	; 0xd14 <vfprintf+0x80>
     cfe:	83 32       	cpi	r24, 0x23	; 35
     d00:	69 f4       	brne	.+26     	; 0xd1c <vfprintf+0x88>
     d02:	20 61       	ori	r18, 0x10	; 16
     d04:	2c c0       	rjmp	.+88     	; 0xd5e <vfprintf+0xca>
     d06:	8d 32       	cpi	r24, 0x2D	; 45
     d08:	39 f0       	breq	.+14     	; 0xd18 <vfprintf+0x84>
     d0a:	80 33       	cpi	r24, 0x30	; 48
     d0c:	39 f4       	brne	.+14     	; 0xd1c <vfprintf+0x88>
     d0e:	21 60       	ori	r18, 0x01	; 1
     d10:	26 c0       	rjmp	.+76     	; 0xd5e <vfprintf+0xca>
     d12:	22 60       	ori	r18, 0x02	; 2
     d14:	24 60       	ori	r18, 0x04	; 4
     d16:	23 c0       	rjmp	.+70     	; 0xd5e <vfprintf+0xca>
     d18:	28 60       	ori	r18, 0x08	; 8
     d1a:	21 c0       	rjmp	.+66     	; 0xd5e <vfprintf+0xca>
     d1c:	27 fd       	sbrc	r18, 7
     d1e:	27 c0       	rjmp	.+78     	; 0xd6e <vfprintf+0xda>
     d20:	30 ed       	ldi	r19, 0xD0	; 208
     d22:	38 0f       	add	r19, r24
     d24:	3a 30       	cpi	r19, 0x0A	; 10
     d26:	78 f4       	brcc	.+30     	; 0xd46 <vfprintf+0xb2>
     d28:	26 ff       	sbrs	r18, 6
     d2a:	06 c0       	rjmp	.+12     	; 0xd38 <vfprintf+0xa4>
     d2c:	fa e0       	ldi	r31, 0x0A	; 10
     d2e:	5f 9e       	mul	r5, r31
     d30:	30 0d       	add	r19, r0
     d32:	11 24       	eor	r1, r1
     d34:	53 2e       	mov	r5, r19
     d36:	13 c0       	rjmp	.+38     	; 0xd5e <vfprintf+0xca>
     d38:	8a e0       	ldi	r24, 0x0A	; 10
     d3a:	38 9e       	mul	r3, r24
     d3c:	30 0d       	add	r19, r0
     d3e:	11 24       	eor	r1, r1
     d40:	33 2e       	mov	r3, r19
     d42:	20 62       	ori	r18, 0x20	; 32
     d44:	0c c0       	rjmp	.+24     	; 0xd5e <vfprintf+0xca>
     d46:	8e 32       	cpi	r24, 0x2E	; 46
     d48:	21 f4       	brne	.+8      	; 0xd52 <vfprintf+0xbe>
     d4a:	26 fd       	sbrc	r18, 6
     d4c:	6b c1       	rjmp	.+726    	; 0x1024 <vfprintf+0x390>
     d4e:	20 64       	ori	r18, 0x40	; 64
     d50:	06 c0       	rjmp	.+12     	; 0xd5e <vfprintf+0xca>
     d52:	8c 36       	cpi	r24, 0x6C	; 108
     d54:	11 f4       	brne	.+4      	; 0xd5a <vfprintf+0xc6>
     d56:	20 68       	ori	r18, 0x80	; 128
     d58:	02 c0       	rjmp	.+4      	; 0xd5e <vfprintf+0xca>
     d5a:	88 36       	cpi	r24, 0x68	; 104
     d5c:	41 f4       	brne	.+16     	; 0xd6e <vfprintf+0xda>
     d5e:	f6 01       	movw	r30, r12
     d60:	93 fd       	sbrc	r25, 3
     d62:	85 91       	lpm	r24, Z+
     d64:	93 ff       	sbrs	r25, 3
     d66:	81 91       	ld	r24, Z+
     d68:	6f 01       	movw	r12, r30
     d6a:	81 11       	cpse	r24, r1
     d6c:	c1 cf       	rjmp	.-126    	; 0xcf0 <vfprintf+0x5c>
     d6e:	98 2f       	mov	r25, r24
     d70:	9f 7d       	andi	r25, 0xDF	; 223
     d72:	95 54       	subi	r25, 0x45	; 69
     d74:	93 30       	cpi	r25, 0x03	; 3
     d76:	28 f4       	brcc	.+10     	; 0xd82 <vfprintf+0xee>
     d78:	0c 5f       	subi	r16, 0xFC	; 252
     d7a:	1f 4f       	sbci	r17, 0xFF	; 255
     d7c:	ff e3       	ldi	r31, 0x3F	; 63
     d7e:	f9 83       	std	Y+1, r31	; 0x01
     d80:	0d c0       	rjmp	.+26     	; 0xd9c <vfprintf+0x108>
     d82:	83 36       	cpi	r24, 0x63	; 99
     d84:	31 f0       	breq	.+12     	; 0xd92 <vfprintf+0xfe>
     d86:	83 37       	cpi	r24, 0x73	; 115
     d88:	71 f0       	breq	.+28     	; 0xda6 <vfprintf+0x112>
     d8a:	83 35       	cpi	r24, 0x53	; 83
     d8c:	09 f0       	breq	.+2      	; 0xd90 <vfprintf+0xfc>
     d8e:	5b c0       	rjmp	.+182    	; 0xe46 <vfprintf+0x1b2>
     d90:	22 c0       	rjmp	.+68     	; 0xdd6 <vfprintf+0x142>
     d92:	f8 01       	movw	r30, r16
     d94:	80 81       	ld	r24, Z
     d96:	89 83       	std	Y+1, r24	; 0x01
     d98:	0e 5f       	subi	r16, 0xFE	; 254
     d9a:	1f 4f       	sbci	r17, 0xFF	; 255
     d9c:	44 24       	eor	r4, r4
     d9e:	43 94       	inc	r4
     da0:	51 2c       	mov	r5, r1
     da2:	54 01       	movw	r10, r8
     da4:	15 c0       	rjmp	.+42     	; 0xdd0 <vfprintf+0x13c>
     da6:	38 01       	movw	r6, r16
     da8:	f2 e0       	ldi	r31, 0x02	; 2
     daa:	6f 0e       	add	r6, r31
     dac:	71 1c       	adc	r7, r1
     dae:	f8 01       	movw	r30, r16
     db0:	a0 80       	ld	r10, Z
     db2:	b1 80       	ldd	r11, Z+1	; 0x01
     db4:	26 ff       	sbrs	r18, 6
     db6:	03 c0       	rjmp	.+6      	; 0xdbe <vfprintf+0x12a>
     db8:	65 2d       	mov	r22, r5
     dba:	70 e0       	ldi	r23, 0x00	; 0
     dbc:	02 c0       	rjmp	.+4      	; 0xdc2 <vfprintf+0x12e>
     dbe:	6f ef       	ldi	r22, 0xFF	; 255
     dc0:	7f ef       	ldi	r23, 0xFF	; 255
     dc2:	c5 01       	movw	r24, r10
     dc4:	2c 87       	std	Y+12, r18	; 0x0c
     dc6:	0e 94 ef 0a 	call	0x15de	; 0x15de <strnlen>
     dca:	2c 01       	movw	r4, r24
     dcc:	83 01       	movw	r16, r6
     dce:	2c 85       	ldd	r18, Y+12	; 0x0c
     dd0:	2f 77       	andi	r18, 0x7F	; 127
     dd2:	22 2e       	mov	r2, r18
     dd4:	17 c0       	rjmp	.+46     	; 0xe04 <vfprintf+0x170>
     dd6:	38 01       	movw	r6, r16
     dd8:	f2 e0       	ldi	r31, 0x02	; 2
     dda:	6f 0e       	add	r6, r31
     ddc:	71 1c       	adc	r7, r1
     dde:	f8 01       	movw	r30, r16
     de0:	a0 80       	ld	r10, Z
     de2:	b1 80       	ldd	r11, Z+1	; 0x01
     de4:	26 ff       	sbrs	r18, 6
     de6:	03 c0       	rjmp	.+6      	; 0xdee <vfprintf+0x15a>
     de8:	65 2d       	mov	r22, r5
     dea:	70 e0       	ldi	r23, 0x00	; 0
     dec:	02 c0       	rjmp	.+4      	; 0xdf2 <vfprintf+0x15e>
     dee:	6f ef       	ldi	r22, 0xFF	; 255
     df0:	7f ef       	ldi	r23, 0xFF	; 255
     df2:	c5 01       	movw	r24, r10
     df4:	2c 87       	std	Y+12, r18	; 0x0c
     df6:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <strnlen_P>
     dfa:	2c 01       	movw	r4, r24
     dfc:	2c 85       	ldd	r18, Y+12	; 0x0c
     dfe:	20 68       	ori	r18, 0x80	; 128
     e00:	22 2e       	mov	r2, r18
     e02:	83 01       	movw	r16, r6
     e04:	23 fc       	sbrc	r2, 3
     e06:	1b c0       	rjmp	.+54     	; 0xe3e <vfprintf+0x1aa>
     e08:	83 2d       	mov	r24, r3
     e0a:	90 e0       	ldi	r25, 0x00	; 0
     e0c:	48 16       	cp	r4, r24
     e0e:	59 06       	cpc	r5, r25
     e10:	b0 f4       	brcc	.+44     	; 0xe3e <vfprintf+0x1aa>
     e12:	b7 01       	movw	r22, r14
     e14:	80 e2       	ldi	r24, 0x20	; 32
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	0e 94 38 0b 	call	0x1670	; 0x1670 <fputc>
     e1c:	3a 94       	dec	r3
     e1e:	f4 cf       	rjmp	.-24     	; 0xe08 <vfprintf+0x174>
     e20:	f5 01       	movw	r30, r10
     e22:	27 fc       	sbrc	r2, 7
     e24:	85 91       	lpm	r24, Z+
     e26:	27 fe       	sbrs	r2, 7
     e28:	81 91       	ld	r24, Z+
     e2a:	5f 01       	movw	r10, r30
     e2c:	b7 01       	movw	r22, r14
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	0e 94 38 0b 	call	0x1670	; 0x1670 <fputc>
     e34:	31 10       	cpse	r3, r1
     e36:	3a 94       	dec	r3
     e38:	f1 e0       	ldi	r31, 0x01	; 1
     e3a:	4f 1a       	sub	r4, r31
     e3c:	51 08       	sbc	r5, r1
     e3e:	41 14       	cp	r4, r1
     e40:	51 04       	cpc	r5, r1
     e42:	71 f7       	brne	.-36     	; 0xe20 <vfprintf+0x18c>
     e44:	e5 c0       	rjmp	.+458    	; 0x1010 <vfprintf+0x37c>
     e46:	84 36       	cpi	r24, 0x64	; 100
     e48:	11 f0       	breq	.+4      	; 0xe4e <vfprintf+0x1ba>
     e4a:	89 36       	cpi	r24, 0x69	; 105
     e4c:	39 f5       	brne	.+78     	; 0xe9c <vfprintf+0x208>
     e4e:	f8 01       	movw	r30, r16
     e50:	27 ff       	sbrs	r18, 7
     e52:	07 c0       	rjmp	.+14     	; 0xe62 <vfprintf+0x1ce>
     e54:	60 81       	ld	r22, Z
     e56:	71 81       	ldd	r23, Z+1	; 0x01
     e58:	82 81       	ldd	r24, Z+2	; 0x02
     e5a:	93 81       	ldd	r25, Z+3	; 0x03
     e5c:	0c 5f       	subi	r16, 0xFC	; 252
     e5e:	1f 4f       	sbci	r17, 0xFF	; 255
     e60:	08 c0       	rjmp	.+16     	; 0xe72 <vfprintf+0x1de>
     e62:	60 81       	ld	r22, Z
     e64:	71 81       	ldd	r23, Z+1	; 0x01
     e66:	88 27       	eor	r24, r24
     e68:	77 fd       	sbrc	r23, 7
     e6a:	80 95       	com	r24
     e6c:	98 2f       	mov	r25, r24
     e6e:	0e 5f       	subi	r16, 0xFE	; 254
     e70:	1f 4f       	sbci	r17, 0xFF	; 255
     e72:	2f 76       	andi	r18, 0x6F	; 111
     e74:	b2 2e       	mov	r11, r18
     e76:	97 ff       	sbrs	r25, 7
     e78:	09 c0       	rjmp	.+18     	; 0xe8c <vfprintf+0x1f8>
     e7a:	90 95       	com	r25
     e7c:	80 95       	com	r24
     e7e:	70 95       	com	r23
     e80:	61 95       	neg	r22
     e82:	7f 4f       	sbci	r23, 0xFF	; 255
     e84:	8f 4f       	sbci	r24, 0xFF	; 255
     e86:	9f 4f       	sbci	r25, 0xFF	; 255
     e88:	20 68       	ori	r18, 0x80	; 128
     e8a:	b2 2e       	mov	r11, r18
     e8c:	2a e0       	ldi	r18, 0x0A	; 10
     e8e:	30 e0       	ldi	r19, 0x00	; 0
     e90:	a4 01       	movw	r20, r8
     e92:	0e 94 83 0b 	call	0x1706	; 0x1706 <__ultoa_invert>
     e96:	a8 2e       	mov	r10, r24
     e98:	a8 18       	sub	r10, r8
     e9a:	44 c0       	rjmp	.+136    	; 0xf24 <vfprintf+0x290>
     e9c:	85 37       	cpi	r24, 0x75	; 117
     e9e:	29 f4       	brne	.+10     	; 0xeaa <vfprintf+0x216>
     ea0:	2f 7e       	andi	r18, 0xEF	; 239
     ea2:	b2 2e       	mov	r11, r18
     ea4:	2a e0       	ldi	r18, 0x0A	; 10
     ea6:	30 e0       	ldi	r19, 0x00	; 0
     ea8:	25 c0       	rjmp	.+74     	; 0xef4 <vfprintf+0x260>
     eaa:	f2 2f       	mov	r31, r18
     eac:	f9 7f       	andi	r31, 0xF9	; 249
     eae:	bf 2e       	mov	r11, r31
     eb0:	8f 36       	cpi	r24, 0x6F	; 111
     eb2:	c1 f0       	breq	.+48     	; 0xee4 <vfprintf+0x250>
     eb4:	18 f4       	brcc	.+6      	; 0xebc <vfprintf+0x228>
     eb6:	88 35       	cpi	r24, 0x58	; 88
     eb8:	79 f0       	breq	.+30     	; 0xed8 <vfprintf+0x244>
     eba:	b4 c0       	rjmp	.+360    	; 0x1024 <vfprintf+0x390>
     ebc:	80 37       	cpi	r24, 0x70	; 112
     ebe:	19 f0       	breq	.+6      	; 0xec6 <vfprintf+0x232>
     ec0:	88 37       	cpi	r24, 0x78	; 120
     ec2:	21 f0       	breq	.+8      	; 0xecc <vfprintf+0x238>
     ec4:	af c0       	rjmp	.+350    	; 0x1024 <vfprintf+0x390>
     ec6:	2f 2f       	mov	r18, r31
     ec8:	20 61       	ori	r18, 0x10	; 16
     eca:	b2 2e       	mov	r11, r18
     ecc:	b4 fe       	sbrs	r11, 4
     ece:	0d c0       	rjmp	.+26     	; 0xeea <vfprintf+0x256>
     ed0:	8b 2d       	mov	r24, r11
     ed2:	84 60       	ori	r24, 0x04	; 4
     ed4:	b8 2e       	mov	r11, r24
     ed6:	09 c0       	rjmp	.+18     	; 0xeea <vfprintf+0x256>
     ed8:	24 ff       	sbrs	r18, 4
     eda:	0a c0       	rjmp	.+20     	; 0xef0 <vfprintf+0x25c>
     edc:	9f 2f       	mov	r25, r31
     ede:	96 60       	ori	r25, 0x06	; 6
     ee0:	b9 2e       	mov	r11, r25
     ee2:	06 c0       	rjmp	.+12     	; 0xef0 <vfprintf+0x25c>
     ee4:	28 e0       	ldi	r18, 0x08	; 8
     ee6:	30 e0       	ldi	r19, 0x00	; 0
     ee8:	05 c0       	rjmp	.+10     	; 0xef4 <vfprintf+0x260>
     eea:	20 e1       	ldi	r18, 0x10	; 16
     eec:	30 e0       	ldi	r19, 0x00	; 0
     eee:	02 c0       	rjmp	.+4      	; 0xef4 <vfprintf+0x260>
     ef0:	20 e1       	ldi	r18, 0x10	; 16
     ef2:	32 e0       	ldi	r19, 0x02	; 2
     ef4:	f8 01       	movw	r30, r16
     ef6:	b7 fe       	sbrs	r11, 7
     ef8:	07 c0       	rjmp	.+14     	; 0xf08 <vfprintf+0x274>
     efa:	60 81       	ld	r22, Z
     efc:	71 81       	ldd	r23, Z+1	; 0x01
     efe:	82 81       	ldd	r24, Z+2	; 0x02
     f00:	93 81       	ldd	r25, Z+3	; 0x03
     f02:	0c 5f       	subi	r16, 0xFC	; 252
     f04:	1f 4f       	sbci	r17, 0xFF	; 255
     f06:	06 c0       	rjmp	.+12     	; 0xf14 <vfprintf+0x280>
     f08:	60 81       	ld	r22, Z
     f0a:	71 81       	ldd	r23, Z+1	; 0x01
     f0c:	80 e0       	ldi	r24, 0x00	; 0
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	0e 5f       	subi	r16, 0xFE	; 254
     f12:	1f 4f       	sbci	r17, 0xFF	; 255
     f14:	a4 01       	movw	r20, r8
     f16:	0e 94 83 0b 	call	0x1706	; 0x1706 <__ultoa_invert>
     f1a:	a8 2e       	mov	r10, r24
     f1c:	a8 18       	sub	r10, r8
     f1e:	fb 2d       	mov	r31, r11
     f20:	ff 77       	andi	r31, 0x7F	; 127
     f22:	bf 2e       	mov	r11, r31
     f24:	b6 fe       	sbrs	r11, 6
     f26:	0b c0       	rjmp	.+22     	; 0xf3e <vfprintf+0x2aa>
     f28:	2b 2d       	mov	r18, r11
     f2a:	2e 7f       	andi	r18, 0xFE	; 254
     f2c:	a5 14       	cp	r10, r5
     f2e:	50 f4       	brcc	.+20     	; 0xf44 <vfprintf+0x2b0>
     f30:	b4 fe       	sbrs	r11, 4
     f32:	0a c0       	rjmp	.+20     	; 0xf48 <vfprintf+0x2b4>
     f34:	b2 fc       	sbrc	r11, 2
     f36:	08 c0       	rjmp	.+16     	; 0xf48 <vfprintf+0x2b4>
     f38:	2b 2d       	mov	r18, r11
     f3a:	2e 7e       	andi	r18, 0xEE	; 238
     f3c:	05 c0       	rjmp	.+10     	; 0xf48 <vfprintf+0x2b4>
     f3e:	7a 2c       	mov	r7, r10
     f40:	2b 2d       	mov	r18, r11
     f42:	03 c0       	rjmp	.+6      	; 0xf4a <vfprintf+0x2b6>
     f44:	7a 2c       	mov	r7, r10
     f46:	01 c0       	rjmp	.+2      	; 0xf4a <vfprintf+0x2b6>
     f48:	75 2c       	mov	r7, r5
     f4a:	24 ff       	sbrs	r18, 4
     f4c:	0d c0       	rjmp	.+26     	; 0xf68 <vfprintf+0x2d4>
     f4e:	fe 01       	movw	r30, r28
     f50:	ea 0d       	add	r30, r10
     f52:	f1 1d       	adc	r31, r1
     f54:	80 81       	ld	r24, Z
     f56:	80 33       	cpi	r24, 0x30	; 48
     f58:	11 f4       	brne	.+4      	; 0xf5e <vfprintf+0x2ca>
     f5a:	29 7e       	andi	r18, 0xE9	; 233
     f5c:	09 c0       	rjmp	.+18     	; 0xf70 <vfprintf+0x2dc>
     f5e:	22 ff       	sbrs	r18, 2
     f60:	06 c0       	rjmp	.+12     	; 0xf6e <vfprintf+0x2da>
     f62:	73 94       	inc	r7
     f64:	73 94       	inc	r7
     f66:	04 c0       	rjmp	.+8      	; 0xf70 <vfprintf+0x2dc>
     f68:	82 2f       	mov	r24, r18
     f6a:	86 78       	andi	r24, 0x86	; 134
     f6c:	09 f0       	breq	.+2      	; 0xf70 <vfprintf+0x2dc>
     f6e:	73 94       	inc	r7
     f70:	23 fd       	sbrc	r18, 3
     f72:	13 c0       	rjmp	.+38     	; 0xf9a <vfprintf+0x306>
     f74:	20 ff       	sbrs	r18, 0
     f76:	06 c0       	rjmp	.+12     	; 0xf84 <vfprintf+0x2f0>
     f78:	5a 2c       	mov	r5, r10
     f7a:	73 14       	cp	r7, r3
     f7c:	18 f4       	brcc	.+6      	; 0xf84 <vfprintf+0x2f0>
     f7e:	53 0c       	add	r5, r3
     f80:	57 18       	sub	r5, r7
     f82:	73 2c       	mov	r7, r3
     f84:	73 14       	cp	r7, r3
     f86:	68 f4       	brcc	.+26     	; 0xfa2 <vfprintf+0x30e>
     f88:	b7 01       	movw	r22, r14
     f8a:	80 e2       	ldi	r24, 0x20	; 32
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	2c 87       	std	Y+12, r18	; 0x0c
     f90:	0e 94 38 0b 	call	0x1670	; 0x1670 <fputc>
     f94:	73 94       	inc	r7
     f96:	2c 85       	ldd	r18, Y+12	; 0x0c
     f98:	f5 cf       	rjmp	.-22     	; 0xf84 <vfprintf+0x2f0>
     f9a:	73 14       	cp	r7, r3
     f9c:	10 f4       	brcc	.+4      	; 0xfa2 <vfprintf+0x30e>
     f9e:	37 18       	sub	r3, r7
     fa0:	01 c0       	rjmp	.+2      	; 0xfa4 <vfprintf+0x310>
     fa2:	31 2c       	mov	r3, r1
     fa4:	24 ff       	sbrs	r18, 4
     fa6:	12 c0       	rjmp	.+36     	; 0xfcc <vfprintf+0x338>
     fa8:	b7 01       	movw	r22, r14
     faa:	80 e3       	ldi	r24, 0x30	; 48
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	2c 87       	std	Y+12, r18	; 0x0c
     fb0:	0e 94 38 0b 	call	0x1670	; 0x1670 <fputc>
     fb4:	2c 85       	ldd	r18, Y+12	; 0x0c
     fb6:	22 ff       	sbrs	r18, 2
     fb8:	17 c0       	rjmp	.+46     	; 0xfe8 <vfprintf+0x354>
     fba:	21 ff       	sbrs	r18, 1
     fbc:	03 c0       	rjmp	.+6      	; 0xfc4 <vfprintf+0x330>
     fbe:	88 e5       	ldi	r24, 0x58	; 88
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	02 c0       	rjmp	.+4      	; 0xfc8 <vfprintf+0x334>
     fc4:	88 e7       	ldi	r24, 0x78	; 120
     fc6:	90 e0       	ldi	r25, 0x00	; 0
     fc8:	b7 01       	movw	r22, r14
     fca:	0c c0       	rjmp	.+24     	; 0xfe4 <vfprintf+0x350>
     fcc:	82 2f       	mov	r24, r18
     fce:	86 78       	andi	r24, 0x86	; 134
     fd0:	59 f0       	breq	.+22     	; 0xfe8 <vfprintf+0x354>
     fd2:	21 fd       	sbrc	r18, 1
     fd4:	02 c0       	rjmp	.+4      	; 0xfda <vfprintf+0x346>
     fd6:	80 e2       	ldi	r24, 0x20	; 32
     fd8:	01 c0       	rjmp	.+2      	; 0xfdc <vfprintf+0x348>
     fda:	8b e2       	ldi	r24, 0x2B	; 43
     fdc:	27 fd       	sbrc	r18, 7
     fde:	8d e2       	ldi	r24, 0x2D	; 45
     fe0:	b7 01       	movw	r22, r14
     fe2:	90 e0       	ldi	r25, 0x00	; 0
     fe4:	0e 94 38 0b 	call	0x1670	; 0x1670 <fputc>
     fe8:	a5 14       	cp	r10, r5
     fea:	38 f4       	brcc	.+14     	; 0xffa <vfprintf+0x366>
     fec:	b7 01       	movw	r22, r14
     fee:	80 e3       	ldi	r24, 0x30	; 48
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	0e 94 38 0b 	call	0x1670	; 0x1670 <fputc>
     ff6:	5a 94       	dec	r5
     ff8:	f7 cf       	rjmp	.-18     	; 0xfe8 <vfprintf+0x354>
     ffa:	aa 94       	dec	r10
     ffc:	f4 01       	movw	r30, r8
     ffe:	ea 0d       	add	r30, r10
    1000:	f1 1d       	adc	r31, r1
    1002:	80 81       	ld	r24, Z
    1004:	b7 01       	movw	r22, r14
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	0e 94 38 0b 	call	0x1670	; 0x1670 <fputc>
    100c:	a1 10       	cpse	r10, r1
    100e:	f5 cf       	rjmp	.-22     	; 0xffa <vfprintf+0x366>
    1010:	33 20       	and	r3, r3
    1012:	09 f4       	brne	.+2      	; 0x1016 <vfprintf+0x382>
    1014:	51 ce       	rjmp	.-862    	; 0xcb8 <vfprintf+0x24>
    1016:	b7 01       	movw	r22, r14
    1018:	80 e2       	ldi	r24, 0x20	; 32
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	0e 94 38 0b 	call	0x1670	; 0x1670 <fputc>
    1020:	3a 94       	dec	r3
    1022:	f6 cf       	rjmp	.-20     	; 0x1010 <vfprintf+0x37c>
    1024:	f7 01       	movw	r30, r14
    1026:	86 81       	ldd	r24, Z+6	; 0x06
    1028:	97 81       	ldd	r25, Z+7	; 0x07
    102a:	02 c0       	rjmp	.+4      	; 0x1030 <vfprintf+0x39c>
    102c:	8f ef       	ldi	r24, 0xFF	; 255
    102e:	9f ef       	ldi	r25, 0xFF	; 255
    1030:	2c 96       	adiw	r28, 0x0c	; 12
    1032:	e2 e1       	ldi	r30, 0x12	; 18
    1034:	0c 94 32 0c 	jmp	0x1864	; 0x1864 <__epilogue_restores__>

00001038 <putval>:
    1038:	20 fd       	sbrc	r18, 0
    103a:	09 c0       	rjmp	.+18     	; 0x104e <putval+0x16>
    103c:	fc 01       	movw	r30, r24
    103e:	23 fd       	sbrc	r18, 3
    1040:	05 c0       	rjmp	.+10     	; 0x104c <putval+0x14>
    1042:	22 ff       	sbrs	r18, 2
    1044:	02 c0       	rjmp	.+4      	; 0x104a <putval+0x12>
    1046:	73 83       	std	Z+3, r23	; 0x03
    1048:	62 83       	std	Z+2, r22	; 0x02
    104a:	51 83       	std	Z+1, r21	; 0x01
    104c:	40 83       	st	Z, r20
    104e:	08 95       	ret

00001050 <mulacc>:
    1050:	44 fd       	sbrc	r20, 4
    1052:	10 c0       	rjmp	.+32     	; 0x1074 <mulacc+0x24>
    1054:	46 fd       	sbrc	r20, 6
    1056:	10 c0       	rjmp	.+32     	; 0x1078 <mulacc+0x28>
    1058:	db 01       	movw	r26, r22
    105a:	fc 01       	movw	r30, r24
    105c:	aa 0f       	add	r26, r26
    105e:	bb 1f       	adc	r27, r27
    1060:	ee 1f       	adc	r30, r30
    1062:	ff 1f       	adc	r31, r31
    1064:	10 94       	com	r1
    1066:	d1 f7       	brne	.-12     	; 0x105c <mulacc+0xc>
    1068:	6a 0f       	add	r22, r26
    106a:	7b 1f       	adc	r23, r27
    106c:	8e 1f       	adc	r24, r30
    106e:	9f 1f       	adc	r25, r31
    1070:	31 e0       	ldi	r19, 0x01	; 1
    1072:	03 c0       	rjmp	.+6      	; 0x107a <mulacc+0x2a>
    1074:	33 e0       	ldi	r19, 0x03	; 3
    1076:	01 c0       	rjmp	.+2      	; 0x107a <mulacc+0x2a>
    1078:	34 e0       	ldi	r19, 0x04	; 4
    107a:	66 0f       	add	r22, r22
    107c:	77 1f       	adc	r23, r23
    107e:	88 1f       	adc	r24, r24
    1080:	99 1f       	adc	r25, r25
    1082:	31 50       	subi	r19, 0x01	; 1
    1084:	d1 f7       	brne	.-12     	; 0x107a <mulacc+0x2a>
    1086:	62 0f       	add	r22, r18
    1088:	71 1d       	adc	r23, r1
    108a:	81 1d       	adc	r24, r1
    108c:	91 1d       	adc	r25, r1
    108e:	08 95       	ret

00001090 <skip_spaces>:
    1090:	0f 93       	push	r16
    1092:	1f 93       	push	r17
    1094:	cf 93       	push	r28
    1096:	df 93       	push	r29
    1098:	8c 01       	movw	r16, r24
    109a:	c8 01       	movw	r24, r16
    109c:	0e 94 fa 0a 	call	0x15f4	; 0x15f4 <fgetc>
    10a0:	ec 01       	movw	r28, r24
    10a2:	97 fd       	sbrc	r25, 7
    10a4:	08 c0       	rjmp	.+16     	; 0x10b6 <skip_spaces+0x26>
    10a6:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <isspace>
    10aa:	89 2b       	or	r24, r25
    10ac:	b1 f7       	brne	.-20     	; 0x109a <skip_spaces+0xa>
    10ae:	b8 01       	movw	r22, r16
    10b0:	ce 01       	movw	r24, r28
    10b2:	0e 94 6a 0b 	call	0x16d4	; 0x16d4 <ungetc>
    10b6:	ce 01       	movw	r24, r28
    10b8:	df 91       	pop	r29
    10ba:	cf 91       	pop	r28
    10bc:	1f 91       	pop	r17
    10be:	0f 91       	pop	r16
    10c0:	08 95       	ret

000010c2 <conv_int>:
    10c2:	8f 92       	push	r8
    10c4:	9f 92       	push	r9
    10c6:	af 92       	push	r10
    10c8:	cf 92       	push	r12
    10ca:	df 92       	push	r13
    10cc:	ef 92       	push	r14
    10ce:	ff 92       	push	r15
    10d0:	0f 93       	push	r16
    10d2:	1f 93       	push	r17
    10d4:	cf 93       	push	r28
    10d6:	df 93       	push	r29
    10d8:	ec 01       	movw	r28, r24
    10da:	a6 2e       	mov	r10, r22
    10dc:	4a 01       	movw	r8, r20
    10de:	02 2f       	mov	r16, r18
    10e0:	0e 94 fa 0a 	call	0x15f4	; 0x15f4 <fgetc>
    10e4:	ac 01       	movw	r20, r24
    10e6:	55 27       	eor	r21, r21
    10e8:	4b 32       	cpi	r20, 0x2B	; 43
    10ea:	51 05       	cpc	r21, r1
    10ec:	21 f0       	breq	.+8      	; 0x10f6 <conv_int+0x34>
    10ee:	4d 32       	cpi	r20, 0x2D	; 45
    10f0:	51 05       	cpc	r21, r1
    10f2:	51 f4       	brne	.+20     	; 0x1108 <conv_int+0x46>
    10f4:	00 68       	ori	r16, 0x80	; 128
    10f6:	aa 94       	dec	r10
    10f8:	11 f4       	brne	.+4      	; 0x10fe <conv_int+0x3c>
    10fa:	80 e0       	ldi	r24, 0x00	; 0
    10fc:	67 c0       	rjmp	.+206    	; 0x11cc <conv_int+0x10a>
    10fe:	ce 01       	movw	r24, r28
    1100:	0e 94 fa 0a 	call	0x15f4	; 0x15f4 <fgetc>
    1104:	97 fd       	sbrc	r25, 7
    1106:	f9 cf       	rjmp	.-14     	; 0x10fa <conv_int+0x38>
    1108:	10 2f       	mov	r17, r16
    110a:	1d 7f       	andi	r17, 0xFD	; 253
    110c:	30 2f       	mov	r19, r16
    110e:	30 73       	andi	r19, 0x30	; 48
    1110:	01 f5       	brne	.+64     	; 0x1152 <conv_int+0x90>
    1112:	80 33       	cpi	r24, 0x30	; 48
    1114:	f1 f4       	brne	.+60     	; 0x1152 <conv_int+0x90>
    1116:	ff 24       	eor	r15, r15
    1118:	fa 94       	dec	r15
    111a:	fa 0c       	add	r15, r10
    111c:	09 f4       	brne	.+2      	; 0x1120 <conv_int+0x5e>
    111e:	42 c0       	rjmp	.+132    	; 0x11a4 <conv_int+0xe2>
    1120:	ce 01       	movw	r24, r28
    1122:	0e 94 fa 0a 	call	0x15f4	; 0x15f4 <fgetc>
    1126:	97 fd       	sbrc	r25, 7
    1128:	3d c0       	rjmp	.+122    	; 0x11a4 <conv_int+0xe2>
    112a:	38 2f       	mov	r19, r24
    112c:	3f 7d       	andi	r19, 0xDF	; 223
    112e:	38 35       	cpi	r19, 0x58	; 88
    1130:	51 f4       	brne	.+20     	; 0x1146 <conv_int+0x84>
    1132:	12 64       	ori	r17, 0x42	; 66
    1134:	aa 94       	dec	r10
    1136:	aa 94       	dec	r10
    1138:	a9 f1       	breq	.+106    	; 0x11a4 <conv_int+0xe2>
    113a:	ce 01       	movw	r24, r28
    113c:	0e 94 fa 0a 	call	0x15f4	; 0x15f4 <fgetc>
    1140:	97 ff       	sbrs	r25, 7
    1142:	07 c0       	rjmp	.+14     	; 0x1152 <conv_int+0x90>
    1144:	2f c0       	rjmp	.+94     	; 0x11a4 <conv_int+0xe2>
    1146:	06 ff       	sbrs	r16, 6
    1148:	02 c0       	rjmp	.+4      	; 0x114e <conv_int+0x8c>
    114a:	12 60       	ori	r17, 0x02	; 2
    114c:	01 c0       	rjmp	.+2      	; 0x1150 <conv_int+0x8e>
    114e:	12 61       	ori	r17, 0x12	; 18
    1150:	af 2c       	mov	r10, r15
    1152:	c1 2c       	mov	r12, r1
    1154:	d1 2c       	mov	r13, r1
    1156:	76 01       	movw	r14, r12
    1158:	20 ed       	ldi	r18, 0xD0	; 208
    115a:	28 0f       	add	r18, r24
    115c:	28 30       	cpi	r18, 0x08	; 8
    115e:	80 f0       	brcs	.+32     	; 0x1180 <conv_int+0xbe>
    1160:	14 ff       	sbrs	r17, 4
    1162:	04 c0       	rjmp	.+8      	; 0x116c <conv_int+0xaa>
    1164:	be 01       	movw	r22, r28
    1166:	0e 94 6a 0b 	call	0x16d4	; 0x16d4 <ungetc>
    116a:	19 c0       	rjmp	.+50     	; 0x119e <conv_int+0xdc>
    116c:	2a 30       	cpi	r18, 0x0A	; 10
    116e:	40 f0       	brcs	.+16     	; 0x1180 <conv_int+0xbe>
    1170:	16 ff       	sbrs	r17, 6
    1172:	f8 cf       	rjmp	.-16     	; 0x1164 <conv_int+0xa2>
    1174:	2f 7d       	andi	r18, 0xDF	; 223
    1176:	3f ee       	ldi	r19, 0xEF	; 239
    1178:	32 0f       	add	r19, r18
    117a:	36 30       	cpi	r19, 0x06	; 6
    117c:	98 f7       	brcc	.-26     	; 0x1164 <conv_int+0xa2>
    117e:	27 50       	subi	r18, 0x07	; 7
    1180:	41 2f       	mov	r20, r17
    1182:	c7 01       	movw	r24, r14
    1184:	b6 01       	movw	r22, r12
    1186:	0e 94 28 08 	call	0x1050	; 0x1050 <mulacc>
    118a:	6b 01       	movw	r12, r22
    118c:	7c 01       	movw	r14, r24
    118e:	12 60       	ori	r17, 0x02	; 2
    1190:	aa 94       	dec	r10
    1192:	59 f0       	breq	.+22     	; 0x11aa <conv_int+0xe8>
    1194:	ce 01       	movw	r24, r28
    1196:	0e 94 fa 0a 	call	0x15f4	; 0x15f4 <fgetc>
    119a:	97 ff       	sbrs	r25, 7
    119c:	dd cf       	rjmp	.-70     	; 0x1158 <conv_int+0x96>
    119e:	11 fd       	sbrc	r17, 1
    11a0:	04 c0       	rjmp	.+8      	; 0x11aa <conv_int+0xe8>
    11a2:	ab cf       	rjmp	.-170    	; 0x10fa <conv_int+0x38>
    11a4:	c1 2c       	mov	r12, r1
    11a6:	d1 2c       	mov	r13, r1
    11a8:	76 01       	movw	r14, r12
    11aa:	17 ff       	sbrs	r17, 7
    11ac:	08 c0       	rjmp	.+16     	; 0x11be <conv_int+0xfc>
    11ae:	f0 94       	com	r15
    11b0:	e0 94       	com	r14
    11b2:	d0 94       	com	r13
    11b4:	c0 94       	com	r12
    11b6:	c1 1c       	adc	r12, r1
    11b8:	d1 1c       	adc	r13, r1
    11ba:	e1 1c       	adc	r14, r1
    11bc:	f1 1c       	adc	r15, r1
    11be:	21 2f       	mov	r18, r17
    11c0:	b7 01       	movw	r22, r14
    11c2:	a6 01       	movw	r20, r12
    11c4:	c4 01       	movw	r24, r8
    11c6:	0e 94 1c 08 	call	0x1038	; 0x1038 <putval>
    11ca:	81 e0       	ldi	r24, 0x01	; 1
    11cc:	df 91       	pop	r29
    11ce:	cf 91       	pop	r28
    11d0:	1f 91       	pop	r17
    11d2:	0f 91       	pop	r16
    11d4:	ff 90       	pop	r15
    11d6:	ef 90       	pop	r14
    11d8:	df 90       	pop	r13
    11da:	cf 90       	pop	r12
    11dc:	af 90       	pop	r10
    11de:	9f 90       	pop	r9
    11e0:	8f 90       	pop	r8
    11e2:	08 95       	ret

000011e4 <conv_brk>:
    11e4:	a1 e2       	ldi	r26, 0x21	; 33
    11e6:	b0 e0       	ldi	r27, 0x00	; 0
    11e8:	e8 ef       	ldi	r30, 0xF8	; 248
    11ea:	f8 e0       	ldi	r31, 0x08	; 8
    11ec:	0c 94 1b 0c 	jmp	0x1836	; 0x1836 <__prologue_saves__+0xa>
    11f0:	5c 01       	movw	r10, r24
    11f2:	7a 01       	movw	r14, r20
    11f4:	8e 01       	movw	r16, r28
    11f6:	0f 5f       	subi	r16, 0xFF	; 255
    11f8:	1f 4f       	sbci	r17, 0xFF	; 255
    11fa:	68 01       	movw	r12, r16
    11fc:	80 e2       	ldi	r24, 0x20	; 32
    11fe:	d8 01       	movw	r26, r16
    1200:	1d 92       	st	X+, r1
    1202:	8a 95       	dec	r24
    1204:	e9 f7       	brne	.-6      	; 0x1200 <conv_brk+0x1c>
    1206:	f5 01       	movw	r30, r10
    1208:	73 80       	ldd	r7, Z+3	; 0x03
    120a:	40 e0       	ldi	r20, 0x00	; 0
    120c:	50 e0       	ldi	r21, 0x00	; 0
    120e:	81 2c       	mov	r8, r1
    1210:	b0 e0       	ldi	r27, 0x00	; 0
    1212:	91 2c       	mov	r9, r1
    1214:	81 e0       	ldi	r24, 0x01	; 1
    1216:	90 e0       	ldi	r25, 0x00	; 0
    1218:	f9 01       	movw	r30, r18
    121a:	73 fc       	sbrc	r7, 3
    121c:	a5 91       	lpm	r26, Z+
    121e:	73 fe       	sbrs	r7, 3
    1220:	a1 91       	ld	r26, Z+
    1222:	8f 01       	movw	r16, r30
    1224:	7a 2f       	mov	r23, r26
    1226:	9f 01       	movw	r18, r30
    1228:	a1 11       	cpse	r26, r1
    122a:	03 c0       	rjmp	.+6      	; 0x1232 <conv_brk+0x4e>
    122c:	80 e0       	ldi	r24, 0x00	; 0
    122e:	90 e0       	ldi	r25, 0x00	; 0
    1230:	7d c0       	rjmp	.+250    	; 0x132c <conv_brk+0x148>
    1232:	ae 35       	cpi	r26, 0x5E	; 94
    1234:	19 f4       	brne	.+6      	; 0x123c <conv_brk+0x58>
    1236:	41 15       	cp	r20, r1
    1238:	51 05       	cpc	r21, r1
    123a:	59 f1       	breq	.+86     	; 0x1292 <conv_brk+0xae>
    123c:	e9 2d       	mov	r30, r9
    123e:	f0 e0       	ldi	r31, 0x00	; 0
    1240:	e4 17       	cp	r30, r20
    1242:	f5 07       	cpc	r31, r21
    1244:	3c f4       	brge	.+14     	; 0x1254 <conv_brk+0x70>
    1246:	ad 35       	cpi	r26, 0x5D	; 93
    1248:	69 f1       	breq	.+90     	; 0x12a4 <conv_brk+0xc0>
    124a:	ad 32       	cpi	r26, 0x2D	; 45
    124c:	19 f4       	brne	.+6      	; 0x1254 <conv_brk+0x70>
    124e:	bb 23       	and	r27, r27
    1250:	19 f1       	breq	.+70     	; 0x1298 <conv_brk+0xb4>
    1252:	03 c0       	rjmp	.+6      	; 0x125a <conv_brk+0x76>
    1254:	b1 11       	cpse	r27, r1
    1256:	01 c0       	rjmp	.+2      	; 0x125a <conv_brk+0x76>
    1258:	8a 2e       	mov	r8, r26
    125a:	e7 2f       	mov	r30, r23
    125c:	e6 95       	lsr	r30
    125e:	e6 95       	lsr	r30
    1260:	e6 95       	lsr	r30
    1262:	86 01       	movw	r16, r12
    1264:	0e 0f       	add	r16, r30
    1266:	11 1d       	adc	r17, r1
    1268:	f8 01       	movw	r30, r16
    126a:	a7 2f       	mov	r26, r23
    126c:	a7 70       	andi	r26, 0x07	; 7
    126e:	8c 01       	movw	r16, r24
    1270:	02 c0       	rjmp	.+4      	; 0x1276 <conv_brk+0x92>
    1272:	00 0f       	add	r16, r16
    1274:	11 1f       	adc	r17, r17
    1276:	aa 95       	dec	r26
    1278:	e2 f7       	brpl	.-8      	; 0x1272 <conv_brk+0x8e>
    127a:	d8 01       	movw	r26, r16
    127c:	b0 81       	ld	r27, Z
    127e:	ba 2b       	or	r27, r26
    1280:	b0 83       	st	Z, r27
    1282:	78 15       	cp	r23, r8
    1284:	59 f0       	breq	.+22     	; 0x129c <conv_brk+0xb8>
    1286:	78 15       	cp	r23, r8
    1288:	10 f4       	brcc	.+4      	; 0x128e <conv_brk+0xaa>
    128a:	7f 5f       	subi	r23, 0xFF	; 255
    128c:	e6 cf       	rjmp	.-52     	; 0x125a <conv_brk+0x76>
    128e:	71 50       	subi	r23, 0x01	; 1
    1290:	e4 cf       	rjmp	.-56     	; 0x125a <conv_brk+0x76>
    1292:	99 24       	eor	r9, r9
    1294:	93 94       	inc	r9
    1296:	03 c0       	rjmp	.+6      	; 0x129e <conv_brk+0xba>
    1298:	b1 e0       	ldi	r27, 0x01	; 1
    129a:	01 c0       	rjmp	.+2      	; 0x129e <conv_brk+0xba>
    129c:	b0 e0       	ldi	r27, 0x00	; 0
    129e:	4f 5f       	subi	r20, 0xFF	; 255
    12a0:	5f 4f       	sbci	r21, 0xFF	; 255
    12a2:	ba cf       	rjmp	.-140    	; 0x1218 <conv_brk+0x34>
    12a4:	bb 23       	and	r27, r27
    12a6:	19 f0       	breq	.+6      	; 0x12ae <conv_brk+0xca>
    12a8:	8e 81       	ldd	r24, Y+6	; 0x06
    12aa:	80 62       	ori	r24, 0x20	; 32
    12ac:	8e 83       	std	Y+6, r24	; 0x06
    12ae:	91 10       	cpse	r9, r1
    12b0:	03 c0       	rjmp	.+6      	; 0x12b8 <conv_brk+0xd4>
    12b2:	99 24       	eor	r9, r9
    12b4:	93 94       	inc	r9
    12b6:	15 c0       	rjmp	.+42     	; 0x12e2 <conv_brk+0xfe>
    12b8:	f6 01       	movw	r30, r12
    12ba:	ce 01       	movw	r24, r28
    12bc:	81 96       	adiw	r24, 0x21	; 33
    12be:	20 81       	ld	r18, Z
    12c0:	20 95       	com	r18
    12c2:	21 93       	st	Z+, r18
    12c4:	e8 17       	cp	r30, r24
    12c6:	f9 07       	cpc	r31, r25
    12c8:	d1 f7       	brne	.-12     	; 0x12be <conv_brk+0xda>
    12ca:	f3 cf       	rjmp	.-26     	; 0x12b2 <conv_brk+0xce>
    12cc:	e1 14       	cp	r14, r1
    12ce:	f1 04       	cpc	r15, r1
    12d0:	29 f0       	breq	.+10     	; 0x12dc <conv_brk+0xf8>
    12d2:	d7 01       	movw	r26, r14
    12d4:	8c 93       	st	X, r24
    12d6:	f7 01       	movw	r30, r14
    12d8:	31 96       	adiw	r30, 0x01	; 1
    12da:	7f 01       	movw	r14, r30
    12dc:	61 50       	subi	r22, 0x01	; 1
    12de:	01 f1       	breq	.+64     	; 0x1320 <conv_brk+0x13c>
    12e0:	91 2c       	mov	r9, r1
    12e2:	c5 01       	movw	r24, r10
    12e4:	69 a3       	std	Y+33, r22	; 0x21
    12e6:	0e 94 fa 0a 	call	0x15f4	; 0x15f4 <fgetc>
    12ea:	69 a1       	ldd	r22, Y+33	; 0x21
    12ec:	97 fd       	sbrc	r25, 7
    12ee:	16 c0       	rjmp	.+44     	; 0x131c <conv_brk+0x138>
    12f0:	28 2f       	mov	r18, r24
    12f2:	26 95       	lsr	r18
    12f4:	26 95       	lsr	r18
    12f6:	26 95       	lsr	r18
    12f8:	f6 01       	movw	r30, r12
    12fa:	e2 0f       	add	r30, r18
    12fc:	f1 1d       	adc	r31, r1
    12fe:	20 81       	ld	r18, Z
    1300:	30 e0       	ldi	r19, 0x00	; 0
    1302:	ac 01       	movw	r20, r24
    1304:	47 70       	andi	r20, 0x07	; 7
    1306:	55 27       	eor	r21, r21
    1308:	02 c0       	rjmp	.+4      	; 0x130e <conv_brk+0x12a>
    130a:	35 95       	asr	r19
    130c:	27 95       	ror	r18
    130e:	4a 95       	dec	r20
    1310:	e2 f7       	brpl	.-8      	; 0x130a <conv_brk+0x126>
    1312:	20 fd       	sbrc	r18, 0
    1314:	db cf       	rjmp	.-74     	; 0x12cc <conv_brk+0xe8>
    1316:	b5 01       	movw	r22, r10
    1318:	0e 94 6a 0b 	call	0x16d4	; 0x16d4 <ungetc>
    131c:	91 10       	cpse	r9, r1
    131e:	86 cf       	rjmp	.-244    	; 0x122c <conv_brk+0x48>
    1320:	e1 14       	cp	r14, r1
    1322:	f1 04       	cpc	r15, r1
    1324:	11 f0       	breq	.+4      	; 0x132a <conv_brk+0x146>
    1326:	d7 01       	movw	r26, r14
    1328:	1c 92       	st	X, r1
    132a:	c8 01       	movw	r24, r16
    132c:	a1 96       	adiw	r28, 0x21	; 33
    132e:	ed e0       	ldi	r30, 0x0D	; 13
    1330:	0c 94 37 0c 	jmp	0x186e	; 0x186e <__epilogue_restores__+0xa>

00001334 <vfscanf>:
    1334:	4f 92       	push	r4
    1336:	5f 92       	push	r5
    1338:	7f 92       	push	r7
    133a:	8f 92       	push	r8
    133c:	9f 92       	push	r9
    133e:	af 92       	push	r10
    1340:	bf 92       	push	r11
    1342:	cf 92       	push	r12
    1344:	df 92       	push	r13
    1346:	ef 92       	push	r14
    1348:	ff 92       	push	r15
    134a:	0f 93       	push	r16
    134c:	1f 93       	push	r17
    134e:	cf 93       	push	r28
    1350:	df 93       	push	r29
    1352:	1f 92       	push	r1
    1354:	cd b7       	in	r28, 0x3d	; 61
    1356:	de b7       	in	r29, 0x3e	; 62
    1358:	8c 01       	movw	r16, r24
    135a:	2b 01       	movw	r4, r22
    135c:	7a 01       	movw	r14, r20
    135e:	fc 01       	movw	r30, r24
    1360:	17 82       	std	Z+7, r1	; 0x07
    1362:	16 82       	std	Z+6, r1	; 0x06
    1364:	a1 2c       	mov	r10, r1
    1366:	f8 01       	movw	r30, r16
    1368:	d3 80       	ldd	r13, Z+3	; 0x03
    136a:	f2 01       	movw	r30, r4
    136c:	d3 fc       	sbrc	r13, 3
    136e:	85 91       	lpm	r24, Z+
    1370:	d3 fe       	sbrs	r13, 3
    1372:	81 91       	ld	r24, Z+
    1374:	38 2f       	mov	r19, r24
    1376:	2f 01       	movw	r4, r30
    1378:	88 23       	and	r24, r24
    137a:	09 f4       	brne	.+2      	; 0x137e <vfscanf+0x4a>
    137c:	fc c0       	rjmp	.+504    	; 0x1576 <vfscanf+0x242>
    137e:	90 e0       	ldi	r25, 0x00	; 0
    1380:	39 83       	std	Y+1, r19	; 0x01
    1382:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <isspace>
    1386:	39 81       	ldd	r19, Y+1	; 0x01
    1388:	89 2b       	or	r24, r25
    138a:	21 f0       	breq	.+8      	; 0x1394 <vfscanf+0x60>
    138c:	c8 01       	movw	r24, r16
    138e:	0e 94 48 08 	call	0x1090	; 0x1090 <skip_spaces>
    1392:	e9 cf       	rjmp	.-46     	; 0x1366 <vfscanf+0x32>
    1394:	35 32       	cpi	r19, 0x25	; 37
    1396:	41 f4       	brne	.+16     	; 0x13a8 <vfscanf+0x74>
    1398:	f2 01       	movw	r30, r4
    139a:	d3 fc       	sbrc	r13, 3
    139c:	35 91       	lpm	r19, Z+
    139e:	d3 fe       	sbrs	r13, 3
    13a0:	31 91       	ld	r19, Z+
    13a2:	2f 01       	movw	r4, r30
    13a4:	35 32       	cpi	r19, 0x25	; 37
    13a6:	69 f4       	brne	.+26     	; 0x13c2 <vfscanf+0x8e>
    13a8:	c8 01       	movw	r24, r16
    13aa:	39 83       	std	Y+1, r19	; 0x01
    13ac:	0e 94 fa 0a 	call	0x15f4	; 0x15f4 <fgetc>
    13b0:	39 81       	ldd	r19, Y+1	; 0x01
    13b2:	97 fd       	sbrc	r25, 7
    13b4:	de c0       	rjmp	.+444    	; 0x1572 <vfscanf+0x23e>
    13b6:	38 17       	cp	r19, r24
    13b8:	b1 f2       	breq	.-84     	; 0x1366 <vfscanf+0x32>
    13ba:	b8 01       	movw	r22, r16
    13bc:	0e 94 6a 0b 	call	0x16d4	; 0x16d4 <ungetc>
    13c0:	da c0       	rjmp	.+436    	; 0x1576 <vfscanf+0x242>
    13c2:	3a 32       	cpi	r19, 0x2A	; 42
    13c4:	41 f4       	brne	.+16     	; 0x13d6 <vfscanf+0xa2>
    13c6:	d3 fc       	sbrc	r13, 3
    13c8:	35 91       	lpm	r19, Z+
    13ca:	d3 fe       	sbrs	r13, 3
    13cc:	31 91       	ld	r19, Z+
    13ce:	2f 01       	movw	r4, r30
    13d0:	bb 24       	eor	r11, r11
    13d2:	b3 94       	inc	r11
    13d4:	01 c0       	rjmp	.+2      	; 0x13d8 <vfscanf+0xa4>
    13d6:	b1 2c       	mov	r11, r1
    13d8:	71 2c       	mov	r7, r1
    13da:	20 ed       	ldi	r18, 0xD0	; 208
    13dc:	23 0f       	add	r18, r19
    13de:	2a 30       	cpi	r18, 0x0A	; 10
    13e0:	90 f4       	brcc	.+36     	; 0x1406 <vfscanf+0xd2>
    13e2:	fb 2d       	mov	r31, r11
    13e4:	f2 60       	ori	r31, 0x02	; 2
    13e6:	bf 2e       	mov	r11, r31
    13e8:	67 2d       	mov	r22, r7
    13ea:	70 e0       	ldi	r23, 0x00	; 0
    13ec:	80 e0       	ldi	r24, 0x00	; 0
    13ee:	90 e0       	ldi	r25, 0x00	; 0
    13f0:	40 e2       	ldi	r20, 0x20	; 32
    13f2:	0e 94 28 08 	call	0x1050	; 0x1050 <mulacc>
    13f6:	76 2e       	mov	r7, r22
    13f8:	f2 01       	movw	r30, r4
    13fa:	d3 fc       	sbrc	r13, 3
    13fc:	35 91       	lpm	r19, Z+
    13fe:	d3 fe       	sbrs	r13, 3
    1400:	31 91       	ld	r19, Z+
    1402:	2f 01       	movw	r4, r30
    1404:	ea cf       	rjmp	.-44     	; 0x13da <vfscanf+0xa6>
    1406:	b1 fe       	sbrs	r11, 1
    1408:	03 c0       	rjmp	.+6      	; 0x1410 <vfscanf+0xdc>
    140a:	71 10       	cpse	r7, r1
    140c:	03 c0       	rjmp	.+6      	; 0x1414 <vfscanf+0xe0>
    140e:	b3 c0       	rjmp	.+358    	; 0x1576 <vfscanf+0x242>
    1410:	77 24       	eor	r7, r7
    1412:	7a 94       	dec	r7
    1414:	38 36       	cpi	r19, 0x68	; 104
    1416:	19 f0       	breq	.+6      	; 0x141e <vfscanf+0xea>
    1418:	3c 36       	cpi	r19, 0x6C	; 108
    141a:	61 f0       	breq	.+24     	; 0x1434 <vfscanf+0x100>
    141c:	14 c0       	rjmp	.+40     	; 0x1446 <vfscanf+0x112>
    141e:	f2 01       	movw	r30, r4
    1420:	d3 fc       	sbrc	r13, 3
    1422:	35 91       	lpm	r19, Z+
    1424:	d3 fe       	sbrs	r13, 3
    1426:	31 91       	ld	r19, Z+
    1428:	2f 01       	movw	r4, r30
    142a:	38 36       	cpi	r19, 0x68	; 104
    142c:	61 f4       	brne	.+24     	; 0x1446 <vfscanf+0x112>
    142e:	fb 2d       	mov	r31, r11
    1430:	f8 60       	ori	r31, 0x08	; 8
    1432:	bf 2e       	mov	r11, r31
    1434:	8b 2d       	mov	r24, r11
    1436:	84 60       	ori	r24, 0x04	; 4
    1438:	b8 2e       	mov	r11, r24
    143a:	f2 01       	movw	r30, r4
    143c:	d3 fc       	sbrc	r13, 3
    143e:	35 91       	lpm	r19, Z+
    1440:	d3 fe       	sbrs	r13, 3
    1442:	31 91       	ld	r19, Z+
    1444:	2f 01       	movw	r4, r30
    1446:	33 23       	and	r19, r19
    1448:	09 f4       	brne	.+2      	; 0x144c <vfscanf+0x118>
    144a:	95 c0       	rjmp	.+298    	; 0x1576 <vfscanf+0x242>
    144c:	63 2f       	mov	r22, r19
    144e:	70 e0       	ldi	r23, 0x00	; 0
    1450:	88 e6       	ldi	r24, 0x68	; 104
    1452:	93 e0       	ldi	r25, 0x03	; 3
    1454:	39 83       	std	Y+1, r19	; 0x01
    1456:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <strchr_P>
    145a:	39 81       	ldd	r19, Y+1	; 0x01
    145c:	89 2b       	or	r24, r25
    145e:	09 f4       	brne	.+2      	; 0x1462 <vfscanf+0x12e>
    1460:	8a c0       	rjmp	.+276    	; 0x1576 <vfscanf+0x242>
    1462:	b0 fc       	sbrc	r11, 0
    1464:	07 c0       	rjmp	.+14     	; 0x1474 <vfscanf+0x140>
    1466:	f7 01       	movw	r30, r14
    1468:	c0 80       	ld	r12, Z
    146a:	d1 80       	ldd	r13, Z+1	; 0x01
    146c:	c7 01       	movw	r24, r14
    146e:	02 96       	adiw	r24, 0x02	; 2
    1470:	7c 01       	movw	r14, r24
    1472:	02 c0       	rjmp	.+4      	; 0x1478 <vfscanf+0x144>
    1474:	c1 2c       	mov	r12, r1
    1476:	d1 2c       	mov	r13, r1
    1478:	3e 36       	cpi	r19, 0x6E	; 110
    147a:	51 f4       	brne	.+20     	; 0x1490 <vfscanf+0x15c>
    147c:	f8 01       	movw	r30, r16
    147e:	46 81       	ldd	r20, Z+6	; 0x06
    1480:	57 81       	ldd	r21, Z+7	; 0x07
    1482:	60 e0       	ldi	r22, 0x00	; 0
    1484:	70 e0       	ldi	r23, 0x00	; 0
    1486:	2b 2d       	mov	r18, r11
    1488:	c6 01       	movw	r24, r12
    148a:	0e 94 1c 08 	call	0x1038	; 0x1038 <putval>
    148e:	6b cf       	rjmp	.-298    	; 0x1366 <vfscanf+0x32>
    1490:	33 36       	cpi	r19, 0x63	; 99
    1492:	a1 f4       	brne	.+40     	; 0x14bc <vfscanf+0x188>
    1494:	b1 fc       	sbrc	r11, 1
    1496:	02 c0       	rjmp	.+4      	; 0x149c <vfscanf+0x168>
    1498:	77 24       	eor	r7, r7
    149a:	73 94       	inc	r7
    149c:	c8 01       	movw	r24, r16
    149e:	0e 94 fa 0a 	call	0x15f4	; 0x15f4 <fgetc>
    14a2:	97 fd       	sbrc	r25, 7
    14a4:	66 c0       	rjmp	.+204    	; 0x1572 <vfscanf+0x23e>
    14a6:	c1 14       	cp	r12, r1
    14a8:	d1 04       	cpc	r13, r1
    14aa:	29 f0       	breq	.+10     	; 0x14b6 <vfscanf+0x182>
    14ac:	f6 01       	movw	r30, r12
    14ae:	80 83       	st	Z, r24
    14b0:	c6 01       	movw	r24, r12
    14b2:	01 96       	adiw	r24, 0x01	; 1
    14b4:	6c 01       	movw	r12, r24
    14b6:	7a 94       	dec	r7
    14b8:	89 f7       	brne	.-30     	; 0x149c <vfscanf+0x168>
    14ba:	57 c0       	rjmp	.+174    	; 0x156a <vfscanf+0x236>
    14bc:	3b 35       	cpi	r19, 0x5B	; 91
    14be:	59 f4       	brne	.+22     	; 0x14d6 <vfscanf+0x1a2>
    14c0:	92 01       	movw	r18, r4
    14c2:	a6 01       	movw	r20, r12
    14c4:	67 2d       	mov	r22, r7
    14c6:	c8 01       	movw	r24, r16
    14c8:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <conv_brk>
    14cc:	2c 01       	movw	r4, r24
    14ce:	00 97       	sbiw	r24, 0x00	; 0
    14d0:	09 f0       	breq	.+2      	; 0x14d4 <vfscanf+0x1a0>
    14d2:	4b c0       	rjmp	.+150    	; 0x156a <vfscanf+0x236>
    14d4:	45 c0       	rjmp	.+138    	; 0x1560 <vfscanf+0x22c>
    14d6:	c8 01       	movw	r24, r16
    14d8:	39 83       	std	Y+1, r19	; 0x01
    14da:	0e 94 48 08 	call	0x1090	; 0x1090 <skip_spaces>
    14de:	39 81       	ldd	r19, Y+1	; 0x01
    14e0:	97 fd       	sbrc	r25, 7
    14e2:	47 c0       	rjmp	.+142    	; 0x1572 <vfscanf+0x23e>
    14e4:	3f 36       	cpi	r19, 0x6F	; 111
    14e6:	69 f1       	breq	.+90     	; 0x1542 <vfscanf+0x20e>
    14e8:	28 f4       	brcc	.+10     	; 0x14f4 <vfscanf+0x1c0>
    14ea:	34 36       	cpi	r19, 0x64	; 100
    14ec:	31 f1       	breq	.+76     	; 0x153a <vfscanf+0x206>
    14ee:	39 36       	cpi	r19, 0x69	; 105
    14f0:	79 f1       	breq	.+94     	; 0x1550 <vfscanf+0x21c>
    14f2:	2b c0       	rjmp	.+86     	; 0x154a <vfscanf+0x216>
    14f4:	33 37       	cpi	r19, 0x73	; 115
    14f6:	69 f0       	breq	.+26     	; 0x1512 <vfscanf+0x1de>
    14f8:	35 37       	cpi	r19, 0x75	; 117
    14fa:	f9 f0       	breq	.+62     	; 0x153a <vfscanf+0x206>
    14fc:	26 c0       	rjmp	.+76     	; 0x154a <vfscanf+0x216>
    14fe:	c1 14       	cp	r12, r1
    1500:	d1 04       	cpc	r13, r1
    1502:	29 f0       	breq	.+10     	; 0x150e <vfscanf+0x1da>
    1504:	f6 01       	movw	r30, r12
    1506:	80 82       	st	Z, r8
    1508:	c6 01       	movw	r24, r12
    150a:	01 96       	adiw	r24, 0x01	; 1
    150c:	6c 01       	movw	r12, r24
    150e:	7a 94       	dec	r7
    1510:	71 f0       	breq	.+28     	; 0x152e <vfscanf+0x1fa>
    1512:	c8 01       	movw	r24, r16
    1514:	0e 94 fa 0a 	call	0x15f4	; 0x15f4 <fgetc>
    1518:	4c 01       	movw	r8, r24
    151a:	97 fd       	sbrc	r25, 7
    151c:	08 c0       	rjmp	.+16     	; 0x152e <vfscanf+0x1fa>
    151e:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <isspace>
    1522:	89 2b       	or	r24, r25
    1524:	61 f3       	breq	.-40     	; 0x14fe <vfscanf+0x1ca>
    1526:	b8 01       	movw	r22, r16
    1528:	c4 01       	movw	r24, r8
    152a:	0e 94 6a 0b 	call	0x16d4	; 0x16d4 <ungetc>
    152e:	c1 14       	cp	r12, r1
    1530:	d1 04       	cpc	r13, r1
    1532:	d9 f0       	breq	.+54     	; 0x156a <vfscanf+0x236>
    1534:	f6 01       	movw	r30, r12
    1536:	10 82       	st	Z, r1
    1538:	18 c0       	rjmp	.+48     	; 0x156a <vfscanf+0x236>
    153a:	fb 2d       	mov	r31, r11
    153c:	f0 62       	ori	r31, 0x20	; 32
    153e:	bf 2e       	mov	r11, r31
    1540:	07 c0       	rjmp	.+14     	; 0x1550 <vfscanf+0x21c>
    1542:	8b 2d       	mov	r24, r11
    1544:	80 61       	ori	r24, 0x10	; 16
    1546:	b8 2e       	mov	r11, r24
    1548:	03 c0       	rjmp	.+6      	; 0x1550 <vfscanf+0x21c>
    154a:	9b 2d       	mov	r25, r11
    154c:	90 64       	ori	r25, 0x40	; 64
    154e:	b9 2e       	mov	r11, r25
    1550:	2b 2d       	mov	r18, r11
    1552:	a6 01       	movw	r20, r12
    1554:	67 2d       	mov	r22, r7
    1556:	c8 01       	movw	r24, r16
    1558:	0e 94 61 08 	call	0x10c2	; 0x10c2 <conv_int>
    155c:	81 11       	cpse	r24, r1
    155e:	05 c0       	rjmp	.+10     	; 0x156a <vfscanf+0x236>
    1560:	f8 01       	movw	r30, r16
    1562:	83 81       	ldd	r24, Z+3	; 0x03
    1564:	80 73       	andi	r24, 0x30	; 48
    1566:	29 f4       	brne	.+10     	; 0x1572 <vfscanf+0x23e>
    1568:	06 c0       	rjmp	.+12     	; 0x1576 <vfscanf+0x242>
    156a:	b0 fc       	sbrc	r11, 0
    156c:	fc ce       	rjmp	.-520    	; 0x1366 <vfscanf+0x32>
    156e:	a3 94       	inc	r10
    1570:	fa ce       	rjmp	.-524    	; 0x1366 <vfscanf+0x32>
    1572:	aa 20       	and	r10, r10
    1574:	19 f0       	breq	.+6      	; 0x157c <vfscanf+0x248>
    1576:	8a 2d       	mov	r24, r10
    1578:	90 e0       	ldi	r25, 0x00	; 0
    157a:	02 c0       	rjmp	.+4      	; 0x1580 <vfscanf+0x24c>
    157c:	8f ef       	ldi	r24, 0xFF	; 255
    157e:	9f ef       	ldi	r25, 0xFF	; 255
    1580:	0f 90       	pop	r0
    1582:	df 91       	pop	r29
    1584:	cf 91       	pop	r28
    1586:	1f 91       	pop	r17
    1588:	0f 91       	pop	r16
    158a:	ff 90       	pop	r15
    158c:	ef 90       	pop	r14
    158e:	df 90       	pop	r13
    1590:	cf 90       	pop	r12
    1592:	bf 90       	pop	r11
    1594:	af 90       	pop	r10
    1596:	9f 90       	pop	r9
    1598:	8f 90       	pop	r8
    159a:	7f 90       	pop	r7
    159c:	5f 90       	pop	r5
    159e:	4f 90       	pop	r4
    15a0:	08 95       	ret

000015a2 <isspace>:
    15a2:	91 11       	cpse	r25, r1
    15a4:	0e c1       	rjmp	.+540    	; 0x17c2 <__ctype_isfalse>
    15a6:	80 32       	cpi	r24, 0x20	; 32
    15a8:	19 f0       	breq	.+6      	; 0x15b0 <isspace+0xe>
    15aa:	89 50       	subi	r24, 0x09	; 9
    15ac:	85 50       	subi	r24, 0x05	; 5
    15ae:	d0 f7       	brcc	.-12     	; 0x15a4 <isspace+0x2>
    15b0:	08 95       	ret

000015b2 <strchr_P>:
    15b2:	fc 01       	movw	r30, r24
    15b4:	05 90       	lpm	r0, Z+
    15b6:	06 16       	cp	r0, r22
    15b8:	21 f0       	breq	.+8      	; 0x15c2 <strchr_P+0x10>
    15ba:	00 20       	and	r0, r0
    15bc:	d9 f7       	brne	.-10     	; 0x15b4 <strchr_P+0x2>
    15be:	c0 01       	movw	r24, r0
    15c0:	08 95       	ret
    15c2:	31 97       	sbiw	r30, 0x01	; 1
    15c4:	cf 01       	movw	r24, r30
    15c6:	08 95       	ret

000015c8 <strnlen_P>:
    15c8:	fc 01       	movw	r30, r24
    15ca:	05 90       	lpm	r0, Z+
    15cc:	61 50       	subi	r22, 0x01	; 1
    15ce:	70 40       	sbci	r23, 0x00	; 0
    15d0:	01 10       	cpse	r0, r1
    15d2:	d8 f7       	brcc	.-10     	; 0x15ca <strnlen_P+0x2>
    15d4:	80 95       	com	r24
    15d6:	90 95       	com	r25
    15d8:	8e 0f       	add	r24, r30
    15da:	9f 1f       	adc	r25, r31
    15dc:	08 95       	ret

000015de <strnlen>:
    15de:	fc 01       	movw	r30, r24
    15e0:	61 50       	subi	r22, 0x01	; 1
    15e2:	70 40       	sbci	r23, 0x00	; 0
    15e4:	01 90       	ld	r0, Z+
    15e6:	01 10       	cpse	r0, r1
    15e8:	d8 f7       	brcc	.-10     	; 0x15e0 <strnlen+0x2>
    15ea:	80 95       	com	r24
    15ec:	90 95       	com	r25
    15ee:	8e 0f       	add	r24, r30
    15f0:	9f 1f       	adc	r25, r31
    15f2:	08 95       	ret

000015f4 <fgetc>:
    15f4:	cf 93       	push	r28
    15f6:	df 93       	push	r29
    15f8:	ec 01       	movw	r28, r24
    15fa:	2b 81       	ldd	r18, Y+3	; 0x03
    15fc:	20 ff       	sbrs	r18, 0
    15fe:	33 c0       	rjmp	.+102    	; 0x1666 <fgetc+0x72>
    1600:	26 ff       	sbrs	r18, 6
    1602:	0a c0       	rjmp	.+20     	; 0x1618 <fgetc+0x24>
    1604:	2f 7b       	andi	r18, 0xBF	; 191
    1606:	2b 83       	std	Y+3, r18	; 0x03
    1608:	8e 81       	ldd	r24, Y+6	; 0x06
    160a:	9f 81       	ldd	r25, Y+7	; 0x07
    160c:	01 96       	adiw	r24, 0x01	; 1
    160e:	9f 83       	std	Y+7, r25	; 0x07
    1610:	8e 83       	std	Y+6, r24	; 0x06
    1612:	8a 81       	ldd	r24, Y+2	; 0x02
    1614:	90 e0       	ldi	r25, 0x00	; 0
    1616:	29 c0       	rjmp	.+82     	; 0x166a <fgetc+0x76>
    1618:	22 ff       	sbrs	r18, 2
    161a:	0f c0       	rjmp	.+30     	; 0x163a <fgetc+0x46>
    161c:	e8 81       	ld	r30, Y
    161e:	f9 81       	ldd	r31, Y+1	; 0x01
    1620:	80 81       	ld	r24, Z
    1622:	99 27       	eor	r25, r25
    1624:	87 fd       	sbrc	r24, 7
    1626:	90 95       	com	r25
    1628:	00 97       	sbiw	r24, 0x00	; 0
    162a:	19 f4       	brne	.+6      	; 0x1632 <fgetc+0x3e>
    162c:	20 62       	ori	r18, 0x20	; 32
    162e:	2b 83       	std	Y+3, r18	; 0x03
    1630:	1a c0       	rjmp	.+52     	; 0x1666 <fgetc+0x72>
    1632:	31 96       	adiw	r30, 0x01	; 1
    1634:	f9 83       	std	Y+1, r31	; 0x01
    1636:	e8 83       	st	Y, r30
    1638:	0e c0       	rjmp	.+28     	; 0x1656 <fgetc+0x62>
    163a:	ea 85       	ldd	r30, Y+10	; 0x0a
    163c:	fb 85       	ldd	r31, Y+11	; 0x0b
    163e:	09 95       	icall
    1640:	97 ff       	sbrs	r25, 7
    1642:	09 c0       	rjmp	.+18     	; 0x1656 <fgetc+0x62>
    1644:	2b 81       	ldd	r18, Y+3	; 0x03
    1646:	01 96       	adiw	r24, 0x01	; 1
    1648:	11 f4       	brne	.+4      	; 0x164e <fgetc+0x5a>
    164a:	80 e1       	ldi	r24, 0x10	; 16
    164c:	01 c0       	rjmp	.+2      	; 0x1650 <fgetc+0x5c>
    164e:	80 e2       	ldi	r24, 0x20	; 32
    1650:	82 2b       	or	r24, r18
    1652:	8b 83       	std	Y+3, r24	; 0x03
    1654:	08 c0       	rjmp	.+16     	; 0x1666 <fgetc+0x72>
    1656:	2e 81       	ldd	r18, Y+6	; 0x06
    1658:	3f 81       	ldd	r19, Y+7	; 0x07
    165a:	2f 5f       	subi	r18, 0xFF	; 255
    165c:	3f 4f       	sbci	r19, 0xFF	; 255
    165e:	3f 83       	std	Y+7, r19	; 0x07
    1660:	2e 83       	std	Y+6, r18	; 0x06
    1662:	99 27       	eor	r25, r25
    1664:	02 c0       	rjmp	.+4      	; 0x166a <fgetc+0x76>
    1666:	8f ef       	ldi	r24, 0xFF	; 255
    1668:	9f ef       	ldi	r25, 0xFF	; 255
    166a:	df 91       	pop	r29
    166c:	cf 91       	pop	r28
    166e:	08 95       	ret

00001670 <fputc>:
    1670:	0f 93       	push	r16
    1672:	1f 93       	push	r17
    1674:	cf 93       	push	r28
    1676:	df 93       	push	r29
    1678:	18 2f       	mov	r17, r24
    167a:	09 2f       	mov	r16, r25
    167c:	eb 01       	movw	r28, r22
    167e:	8b 81       	ldd	r24, Y+3	; 0x03
    1680:	81 fd       	sbrc	r24, 1
    1682:	03 c0       	rjmp	.+6      	; 0x168a <fputc+0x1a>
    1684:	8f ef       	ldi	r24, 0xFF	; 255
    1686:	9f ef       	ldi	r25, 0xFF	; 255
    1688:	20 c0       	rjmp	.+64     	; 0x16ca <fputc+0x5a>
    168a:	82 ff       	sbrs	r24, 2
    168c:	10 c0       	rjmp	.+32     	; 0x16ae <fputc+0x3e>
    168e:	4e 81       	ldd	r20, Y+6	; 0x06
    1690:	5f 81       	ldd	r21, Y+7	; 0x07
    1692:	2c 81       	ldd	r18, Y+4	; 0x04
    1694:	3d 81       	ldd	r19, Y+5	; 0x05
    1696:	42 17       	cp	r20, r18
    1698:	53 07       	cpc	r21, r19
    169a:	7c f4       	brge	.+30     	; 0x16ba <fputc+0x4a>
    169c:	e8 81       	ld	r30, Y
    169e:	f9 81       	ldd	r31, Y+1	; 0x01
    16a0:	9f 01       	movw	r18, r30
    16a2:	2f 5f       	subi	r18, 0xFF	; 255
    16a4:	3f 4f       	sbci	r19, 0xFF	; 255
    16a6:	39 83       	std	Y+1, r19	; 0x01
    16a8:	28 83       	st	Y, r18
    16aa:	10 83       	st	Z, r17
    16ac:	06 c0       	rjmp	.+12     	; 0x16ba <fputc+0x4a>
    16ae:	e8 85       	ldd	r30, Y+8	; 0x08
    16b0:	f9 85       	ldd	r31, Y+9	; 0x09
    16b2:	81 2f       	mov	r24, r17
    16b4:	09 95       	icall
    16b6:	89 2b       	or	r24, r25
    16b8:	29 f7       	brne	.-54     	; 0x1684 <fputc+0x14>
    16ba:	2e 81       	ldd	r18, Y+6	; 0x06
    16bc:	3f 81       	ldd	r19, Y+7	; 0x07
    16be:	2f 5f       	subi	r18, 0xFF	; 255
    16c0:	3f 4f       	sbci	r19, 0xFF	; 255
    16c2:	3f 83       	std	Y+7, r19	; 0x07
    16c4:	2e 83       	std	Y+6, r18	; 0x06
    16c6:	81 2f       	mov	r24, r17
    16c8:	90 2f       	mov	r25, r16
    16ca:	df 91       	pop	r29
    16cc:	cf 91       	pop	r28
    16ce:	1f 91       	pop	r17
    16d0:	0f 91       	pop	r16
    16d2:	08 95       	ret

000016d4 <ungetc>:
    16d4:	fb 01       	movw	r30, r22
    16d6:	23 81       	ldd	r18, Z+3	; 0x03
    16d8:	20 ff       	sbrs	r18, 0
    16da:	12 c0       	rjmp	.+36     	; 0x1700 <ungetc+0x2c>
    16dc:	26 fd       	sbrc	r18, 6
    16de:	10 c0       	rjmp	.+32     	; 0x1700 <ungetc+0x2c>
    16e0:	8f 3f       	cpi	r24, 0xFF	; 255
    16e2:	3f ef       	ldi	r19, 0xFF	; 255
    16e4:	93 07       	cpc	r25, r19
    16e6:	61 f0       	breq	.+24     	; 0x1700 <ungetc+0x2c>
    16e8:	82 83       	std	Z+2, r24	; 0x02
    16ea:	2f 7d       	andi	r18, 0xDF	; 223
    16ec:	20 64       	ori	r18, 0x40	; 64
    16ee:	23 83       	std	Z+3, r18	; 0x03
    16f0:	26 81       	ldd	r18, Z+6	; 0x06
    16f2:	37 81       	ldd	r19, Z+7	; 0x07
    16f4:	21 50       	subi	r18, 0x01	; 1
    16f6:	31 09       	sbc	r19, r1
    16f8:	37 83       	std	Z+7, r19	; 0x07
    16fa:	26 83       	std	Z+6, r18	; 0x06
    16fc:	99 27       	eor	r25, r25
    16fe:	08 95       	ret
    1700:	8f ef       	ldi	r24, 0xFF	; 255
    1702:	9f ef       	ldi	r25, 0xFF	; 255
    1704:	08 95       	ret

00001706 <__ultoa_invert>:
    1706:	fa 01       	movw	r30, r20
    1708:	aa 27       	eor	r26, r26
    170a:	28 30       	cpi	r18, 0x08	; 8
    170c:	51 f1       	breq	.+84     	; 0x1762 <__ultoa_invert+0x5c>
    170e:	20 31       	cpi	r18, 0x10	; 16
    1710:	81 f1       	breq	.+96     	; 0x1772 <__ultoa_invert+0x6c>
    1712:	e8 94       	clt
    1714:	6f 93       	push	r22
    1716:	6e 7f       	andi	r22, 0xFE	; 254
    1718:	6e 5f       	subi	r22, 0xFE	; 254
    171a:	7f 4f       	sbci	r23, 0xFF	; 255
    171c:	8f 4f       	sbci	r24, 0xFF	; 255
    171e:	9f 4f       	sbci	r25, 0xFF	; 255
    1720:	af 4f       	sbci	r26, 0xFF	; 255
    1722:	b1 e0       	ldi	r27, 0x01	; 1
    1724:	3e d0       	rcall	.+124    	; 0x17a2 <__ultoa_invert+0x9c>
    1726:	b4 e0       	ldi	r27, 0x04	; 4
    1728:	3c d0       	rcall	.+120    	; 0x17a2 <__ultoa_invert+0x9c>
    172a:	67 0f       	add	r22, r23
    172c:	78 1f       	adc	r23, r24
    172e:	89 1f       	adc	r24, r25
    1730:	9a 1f       	adc	r25, r26
    1732:	a1 1d       	adc	r26, r1
    1734:	68 0f       	add	r22, r24
    1736:	79 1f       	adc	r23, r25
    1738:	8a 1f       	adc	r24, r26
    173a:	91 1d       	adc	r25, r1
    173c:	a1 1d       	adc	r26, r1
    173e:	6a 0f       	add	r22, r26
    1740:	71 1d       	adc	r23, r1
    1742:	81 1d       	adc	r24, r1
    1744:	91 1d       	adc	r25, r1
    1746:	a1 1d       	adc	r26, r1
    1748:	20 d0       	rcall	.+64     	; 0x178a <__ultoa_invert+0x84>
    174a:	09 f4       	brne	.+2      	; 0x174e <__ultoa_invert+0x48>
    174c:	68 94       	set
    174e:	3f 91       	pop	r19
    1750:	2a e0       	ldi	r18, 0x0A	; 10
    1752:	26 9f       	mul	r18, r22
    1754:	11 24       	eor	r1, r1
    1756:	30 19       	sub	r19, r0
    1758:	30 5d       	subi	r19, 0xD0	; 208
    175a:	31 93       	st	Z+, r19
    175c:	de f6       	brtc	.-74     	; 0x1714 <__ultoa_invert+0xe>
    175e:	cf 01       	movw	r24, r30
    1760:	08 95       	ret
    1762:	46 2f       	mov	r20, r22
    1764:	47 70       	andi	r20, 0x07	; 7
    1766:	40 5d       	subi	r20, 0xD0	; 208
    1768:	41 93       	st	Z+, r20
    176a:	b3 e0       	ldi	r27, 0x03	; 3
    176c:	0f d0       	rcall	.+30     	; 0x178c <__ultoa_invert+0x86>
    176e:	c9 f7       	brne	.-14     	; 0x1762 <__ultoa_invert+0x5c>
    1770:	f6 cf       	rjmp	.-20     	; 0x175e <__ultoa_invert+0x58>
    1772:	46 2f       	mov	r20, r22
    1774:	4f 70       	andi	r20, 0x0F	; 15
    1776:	40 5d       	subi	r20, 0xD0	; 208
    1778:	4a 33       	cpi	r20, 0x3A	; 58
    177a:	18 f0       	brcs	.+6      	; 0x1782 <__ultoa_invert+0x7c>
    177c:	49 5d       	subi	r20, 0xD9	; 217
    177e:	31 fd       	sbrc	r19, 1
    1780:	40 52       	subi	r20, 0x20	; 32
    1782:	41 93       	st	Z+, r20
    1784:	02 d0       	rcall	.+4      	; 0x178a <__ultoa_invert+0x84>
    1786:	a9 f7       	brne	.-22     	; 0x1772 <__ultoa_invert+0x6c>
    1788:	ea cf       	rjmp	.-44     	; 0x175e <__ultoa_invert+0x58>
    178a:	b4 e0       	ldi	r27, 0x04	; 4
    178c:	a6 95       	lsr	r26
    178e:	97 95       	ror	r25
    1790:	87 95       	ror	r24
    1792:	77 95       	ror	r23
    1794:	67 95       	ror	r22
    1796:	ba 95       	dec	r27
    1798:	c9 f7       	brne	.-14     	; 0x178c <__ultoa_invert+0x86>
    179a:	00 97       	sbiw	r24, 0x00	; 0
    179c:	61 05       	cpc	r22, r1
    179e:	71 05       	cpc	r23, r1
    17a0:	08 95       	ret
    17a2:	9b 01       	movw	r18, r22
    17a4:	ac 01       	movw	r20, r24
    17a6:	0a 2e       	mov	r0, r26
    17a8:	06 94       	lsr	r0
    17aa:	57 95       	ror	r21
    17ac:	47 95       	ror	r20
    17ae:	37 95       	ror	r19
    17b0:	27 95       	ror	r18
    17b2:	ba 95       	dec	r27
    17b4:	c9 f7       	brne	.-14     	; 0x17a8 <__ultoa_invert+0xa2>
    17b6:	62 0f       	add	r22, r18
    17b8:	73 1f       	adc	r23, r19
    17ba:	84 1f       	adc	r24, r20
    17bc:	95 1f       	adc	r25, r21
    17be:	a0 1d       	adc	r26, r0
    17c0:	08 95       	ret

000017c2 <__ctype_isfalse>:
    17c2:	99 27       	eor	r25, r25
    17c4:	88 27       	eor	r24, r24

000017c6 <__ctype_istrue>:
    17c6:	08 95       	ret

000017c8 <__divmodsi4>:
    17c8:	05 2e       	mov	r0, r21
    17ca:	97 fb       	bst	r25, 7
    17cc:	1e f4       	brtc	.+6      	; 0x17d4 <__divmodsi4+0xc>
    17ce:	00 94       	com	r0
    17d0:	0e 94 fb 0b 	call	0x17f6	; 0x17f6 <__negsi2>
    17d4:	57 fd       	sbrc	r21, 7
    17d6:	07 d0       	rcall	.+14     	; 0x17e6 <__divmodsi4_neg2>
    17d8:	0e 94 4d 0c 	call	0x189a	; 0x189a <__udivmodsi4>
    17dc:	07 fc       	sbrc	r0, 7
    17de:	03 d0       	rcall	.+6      	; 0x17e6 <__divmodsi4_neg2>
    17e0:	4e f4       	brtc	.+18     	; 0x17f4 <__divmodsi4_exit>
    17e2:	0c 94 fb 0b 	jmp	0x17f6	; 0x17f6 <__negsi2>

000017e6 <__divmodsi4_neg2>:
    17e6:	50 95       	com	r21
    17e8:	40 95       	com	r20
    17ea:	30 95       	com	r19
    17ec:	21 95       	neg	r18
    17ee:	3f 4f       	sbci	r19, 0xFF	; 255
    17f0:	4f 4f       	sbci	r20, 0xFF	; 255
    17f2:	5f 4f       	sbci	r21, 0xFF	; 255

000017f4 <__divmodsi4_exit>:
    17f4:	08 95       	ret

000017f6 <__negsi2>:
    17f6:	90 95       	com	r25
    17f8:	80 95       	com	r24
    17fa:	70 95       	com	r23
    17fc:	61 95       	neg	r22
    17fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1800:	8f 4f       	sbci	r24, 0xFF	; 255
    1802:	9f 4f       	sbci	r25, 0xFF	; 255
    1804:	08 95       	ret

00001806 <__muluhisi3>:
    1806:	0e 94 6f 0c 	call	0x18de	; 0x18de <__umulhisi3>
    180a:	a5 9f       	mul	r26, r21
    180c:	90 0d       	add	r25, r0
    180e:	b4 9f       	mul	r27, r20
    1810:	90 0d       	add	r25, r0
    1812:	a4 9f       	mul	r26, r20
    1814:	80 0d       	add	r24, r0
    1816:	91 1d       	adc	r25, r1
    1818:	11 24       	eor	r1, r1
    181a:	08 95       	ret

0000181c <__mulshisi3>:
    181c:	b7 ff       	sbrs	r27, 7
    181e:	0c 94 03 0c 	jmp	0x1806	; 0x1806 <__muluhisi3>

00001822 <__mulohisi3>:
    1822:	0e 94 03 0c 	call	0x1806	; 0x1806 <__muluhisi3>
    1826:	82 1b       	sub	r24, r18
    1828:	93 0b       	sbc	r25, r19
    182a:	08 95       	ret

0000182c <__prologue_saves__>:
    182c:	2f 92       	push	r2
    182e:	3f 92       	push	r3
    1830:	4f 92       	push	r4
    1832:	5f 92       	push	r5
    1834:	6f 92       	push	r6
    1836:	7f 92       	push	r7
    1838:	8f 92       	push	r8
    183a:	9f 92       	push	r9
    183c:	af 92       	push	r10
    183e:	bf 92       	push	r11
    1840:	cf 92       	push	r12
    1842:	df 92       	push	r13
    1844:	ef 92       	push	r14
    1846:	ff 92       	push	r15
    1848:	0f 93       	push	r16
    184a:	1f 93       	push	r17
    184c:	cf 93       	push	r28
    184e:	df 93       	push	r29
    1850:	cd b7       	in	r28, 0x3d	; 61
    1852:	de b7       	in	r29, 0x3e	; 62
    1854:	ca 1b       	sub	r28, r26
    1856:	db 0b       	sbc	r29, r27
    1858:	0f b6       	in	r0, 0x3f	; 63
    185a:	f8 94       	cli
    185c:	de bf       	out	0x3e, r29	; 62
    185e:	0f be       	out	0x3f, r0	; 63
    1860:	cd bf       	out	0x3d, r28	; 61
    1862:	09 94       	ijmp

00001864 <__epilogue_restores__>:
    1864:	2a 88       	ldd	r2, Y+18	; 0x12
    1866:	39 88       	ldd	r3, Y+17	; 0x11
    1868:	48 88       	ldd	r4, Y+16	; 0x10
    186a:	5f 84       	ldd	r5, Y+15	; 0x0f
    186c:	6e 84       	ldd	r6, Y+14	; 0x0e
    186e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1870:	8c 84       	ldd	r8, Y+12	; 0x0c
    1872:	9b 84       	ldd	r9, Y+11	; 0x0b
    1874:	aa 84       	ldd	r10, Y+10	; 0x0a
    1876:	b9 84       	ldd	r11, Y+9	; 0x09
    1878:	c8 84       	ldd	r12, Y+8	; 0x08
    187a:	df 80       	ldd	r13, Y+7	; 0x07
    187c:	ee 80       	ldd	r14, Y+6	; 0x06
    187e:	fd 80       	ldd	r15, Y+5	; 0x05
    1880:	0c 81       	ldd	r16, Y+4	; 0x04
    1882:	1b 81       	ldd	r17, Y+3	; 0x03
    1884:	aa 81       	ldd	r26, Y+2	; 0x02
    1886:	b9 81       	ldd	r27, Y+1	; 0x01
    1888:	ce 0f       	add	r28, r30
    188a:	d1 1d       	adc	r29, r1
    188c:	0f b6       	in	r0, 0x3f	; 63
    188e:	f8 94       	cli
    1890:	de bf       	out	0x3e, r29	; 62
    1892:	0f be       	out	0x3f, r0	; 63
    1894:	cd bf       	out	0x3d, r28	; 61
    1896:	ed 01       	movw	r28, r26
    1898:	08 95       	ret

0000189a <__udivmodsi4>:
    189a:	a1 e2       	ldi	r26, 0x21	; 33
    189c:	1a 2e       	mov	r1, r26
    189e:	aa 1b       	sub	r26, r26
    18a0:	bb 1b       	sub	r27, r27
    18a2:	fd 01       	movw	r30, r26
    18a4:	0d c0       	rjmp	.+26     	; 0x18c0 <__udivmodsi4_ep>

000018a6 <__udivmodsi4_loop>:
    18a6:	aa 1f       	adc	r26, r26
    18a8:	bb 1f       	adc	r27, r27
    18aa:	ee 1f       	adc	r30, r30
    18ac:	ff 1f       	adc	r31, r31
    18ae:	a2 17       	cp	r26, r18
    18b0:	b3 07       	cpc	r27, r19
    18b2:	e4 07       	cpc	r30, r20
    18b4:	f5 07       	cpc	r31, r21
    18b6:	20 f0       	brcs	.+8      	; 0x18c0 <__udivmodsi4_ep>
    18b8:	a2 1b       	sub	r26, r18
    18ba:	b3 0b       	sbc	r27, r19
    18bc:	e4 0b       	sbc	r30, r20
    18be:	f5 0b       	sbc	r31, r21

000018c0 <__udivmodsi4_ep>:
    18c0:	66 1f       	adc	r22, r22
    18c2:	77 1f       	adc	r23, r23
    18c4:	88 1f       	adc	r24, r24
    18c6:	99 1f       	adc	r25, r25
    18c8:	1a 94       	dec	r1
    18ca:	69 f7       	brne	.-38     	; 0x18a6 <__udivmodsi4_loop>
    18cc:	60 95       	com	r22
    18ce:	70 95       	com	r23
    18d0:	80 95       	com	r24
    18d2:	90 95       	com	r25
    18d4:	9b 01       	movw	r18, r22
    18d6:	ac 01       	movw	r20, r24
    18d8:	bd 01       	movw	r22, r26
    18da:	cf 01       	movw	r24, r30
    18dc:	08 95       	ret

000018de <__umulhisi3>:
    18de:	a2 9f       	mul	r26, r18
    18e0:	b0 01       	movw	r22, r0
    18e2:	b3 9f       	mul	r27, r19
    18e4:	c0 01       	movw	r24, r0
    18e6:	a3 9f       	mul	r26, r19
    18e8:	70 0d       	add	r23, r0
    18ea:	81 1d       	adc	r24, r1
    18ec:	11 24       	eor	r1, r1
    18ee:	91 1d       	adc	r25, r1
    18f0:	b2 9f       	mul	r27, r18
    18f2:	70 0d       	add	r23, r0
    18f4:	81 1d       	adc	r24, r1
    18f6:	11 24       	eor	r1, r1
    18f8:	91 1d       	adc	r25, r1
    18fa:	08 95       	ret

000018fc <_exit>:
    18fc:	f8 94       	cli

000018fe <__stop_program>:
    18fe:	ff cf       	rjmp	.-2      	; 0x18fe <__stop_program>
