
Ping_Pong_Shit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001c0  00800100  0000121a  000012ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000121a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008002c0  008002c0  0000146e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000146e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000f8  00000000  00000000  000014ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c08  00000000  00000000  000015c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000608  00000000  00000000  000021ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005f3  00000000  00000000  000027d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000214  00000000  00000000  00002dc8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000035c  00000000  00000000  00002fdc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000037f  00000000  00000000  00003338  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  000036b7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	63 64       	ori	r22, 0x43	; 67
      72:	69 6e       	ori	r22, 0xE9	; 233
      74:	6f 70       	andi	r22, 0x0F	; 15
      76:	73 75       	andi	r23, 0x53	; 83
      78:	78 58       	subi	r23, 0x88	; 136
      7a:	5b 00       	.word	0x005b	; ????

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d4 e0       	ldi	r29, 0x04	; 4
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	12 e0       	ldi	r17, 0x02	; 2
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	ea e1       	ldi	r30, 0x1A	; 26
      90:	f2 e1       	ldi	r31, 0x12	; 18
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	a0 3c       	cpi	r26, 0xC0	; 192
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	22 e0       	ldi	r18, 0x02	; 2
      a0:	a0 ec       	ldi	r26, 0xC0	; 192
      a2:	b2 e0       	ldi	r27, 0x02	; 2
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	aa 3c       	cpi	r26, 0xCA	; 202
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 be 00 	call	0x17c	; 0x17c <main>
      b2:	0c 94 0b 09 	jmp	0x1216	; 0x1216 <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <joystick_readX>:
			v;
}

unsigned int joystick_readX(){
	volatile char* ext_ram = (char*) 0x1400;
	ext_ram[0] = 0x4;
      ba:	84 e0       	ldi	r24, 0x04	; 4
      bc:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      c0:	81 e4       	ldi	r24, 0x41	; 65
      c2:	8a 95       	dec	r24
      c4:	f1 f7       	brne	.-4      	; 0xc2 <joystick_readX+0x8>
      c6:	00 c0       	rjmp	.+0      	; 0xc8 <joystick_readX+0xe>
	_delay_us(40);
	uint8_t x = ext_ram[0];
      c8:	80 91 00 14 	lds	r24, 0x1400
	return x;
}
      cc:	90 e0       	ldi	r25, 0x00	; 0
      ce:	08 95       	ret

000000d0 <convert_X>:
	/*if(input > center_val_X){
		return ((input - center_val_X) * 100) / (255 - center_val_X);
	} else {
		return -((input) * 100) / center_val_X;
	}*/
	int v = (joystick_readX() - center_val_X);
      d0:	0e 94 5d 00 	call	0xba	; 0xba <joystick_readX>
      d4:	20 91 c0 02 	lds	r18, 0x02C0
      d8:	30 91 c1 02 	lds	r19, 0x02C1
      dc:	82 1b       	sub	r24, r18
      de:	93 0b       	sbc	r25, r19
	return  (v > 127)	? 127 :
      e0:	80 38       	cpi	r24, 0x80	; 128
      e2:	2f ef       	ldi	r18, 0xFF	; 255
      e4:	92 07       	cpc	r25, r18
      e6:	14 f4       	brge	.+4      	; 0xec <convert_X+0x1c>
      e8:	80 e8       	ldi	r24, 0x80	; 128
      ea:	9f ef       	ldi	r25, 0xFF	; 255
      ec:	80 38       	cpi	r24, 0x80	; 128
      ee:	91 05       	cpc	r25, r1
      f0:	14 f0       	brlt	.+4      	; 0xf6 <convert_X+0x26>
      f2:	8f e7       	ldi	r24, 0x7F	; 127
      f4:	90 e0       	ldi	r25, 0x00	; 0
			(v < -128)	? -128 :
			 v;
}
      f6:	08 95       	ret

000000f8 <joystick_readY>:
	return x;
}

unsigned int joystick_readY(){
	volatile char* ext_ram = (char*) 0x1400;
	ext_ram[0] = 0x5;
      f8:	85 e0       	ldi	r24, 0x05	; 5
      fa:	80 93 00 14 	sts	0x1400, r24
      fe:	81 e4       	ldi	r24, 0x41	; 65
     100:	8a 95       	dec	r24
     102:	f1 f7       	brne	.-4      	; 0x100 <joystick_readY+0x8>
     104:	00 c0       	rjmp	.+0      	; 0x106 <joystick_readY+0xe>
	_delay_us(40);
	uint8_t y = ext_ram[0];
     106:	80 91 00 14 	lds	r24, 0x1400
	return y;
}
     10a:	90 e0       	ldi	r25, 0x00	; 0
     10c:	08 95       	ret

0000010e <joystick_init>:
	/*EMCUCR |= (0 << SM0);
	MCUCSR |= (1 << SM1);
	MCUCSR |= (0 << SM2);
	GICR |= (1 << INT0);
	sei();*/
	center_val_X = joystick_readX();
     10e:	0e 94 5d 00 	call	0xba	; 0xba <joystick_readX>
     112:	90 93 c1 02 	sts	0x02C1, r25
     116:	80 93 c0 02 	sts	0x02C0, r24
	center_val_Y = joystick_readY();
     11a:	0e 94 7c 00 	call	0xf8	; 0xf8 <joystick_readY>
     11e:	90 93 c3 02 	sts	0x02C3, r25
     122:	80 93 c2 02 	sts	0x02C2, r24
     126:	08 95       	ret

00000128 <convert_Y>:
	/*if(input > center_val_Y){
		return ((input - center_val_Y) * 100) / (255 - center_val_Y);
	} else {
		return ((input - center_val_Y) * 100) / center_val_Y;
	}*/
	int v = (joystick_readY() - center_val_Y);
     128:	0e 94 7c 00 	call	0xf8	; 0xf8 <joystick_readY>
     12c:	20 91 c2 02 	lds	r18, 0x02C2
     130:	30 91 c3 02 	lds	r19, 0x02C3
     134:	82 1b       	sub	r24, r18
     136:	93 0b       	sbc	r25, r19
	return  (v > 127)	? 127 :
     138:	80 38       	cpi	r24, 0x80	; 128
     13a:	2f ef       	ldi	r18, 0xFF	; 255
     13c:	92 07       	cpc	r25, r18
     13e:	14 f4       	brge	.+4      	; 0x144 <convert_Y+0x1c>
     140:	80 e8       	ldi	r24, 0x80	; 128
     142:	9f ef       	ldi	r25, 0xFF	; 255
     144:	80 38       	cpi	r24, 0x80	; 128
     146:	91 05       	cpc	r25, r1
     148:	14 f0       	brlt	.+4      	; 0x14e <convert_Y+0x26>
     14a:	8f e7       	ldi	r24, 0x7F	; 127
     14c:	90 e0       	ldi	r25, 0x00	; 0
			(v < -128)	? -128 :
			v;
}
     14e:	08 95       	ret

00000150 <slide_readR>:
	return y;
}

unsigned int slide_readR(){
	volatile char* ext_ram = (char*) 0x1400;
	ext_ram[0] = 0x7;
     150:	87 e0       	ldi	r24, 0x07	; 7
     152:	80 93 00 14 	sts	0x1400, r24
     156:	81 e4       	ldi	r24, 0x41	; 65
     158:	8a 95       	dec	r24
     15a:	f1 f7       	brne	.-4      	; 0x158 <slide_readR+0x8>
     15c:	00 c0       	rjmp	.+0      	; 0x15e <slide_readR+0xe>
	_delay_us(40);
	uint8_t r = ext_ram[0];
     15e:	80 91 00 14 	lds	r24, 0x1400
	return r;
}
     162:	90 e0       	ldi	r25, 0x00	; 0
     164:	08 95       	ret

00000166 <slide_readL>:

unsigned int slide_readL(){
	volatile char* ext_ram = (char*) 0x1400;
	ext_ram[0] = 0x6;
     166:	86 e0       	ldi	r24, 0x06	; 6
     168:	80 93 00 14 	sts	0x1400, r24
     16c:	81 e4       	ldi	r24, 0x41	; 65
     16e:	8a 95       	dec	r24
     170:	f1 f7       	brne	.-4      	; 0x16e <slide_readL+0x8>
     172:	00 c0       	rjmp	.+0      	; 0x174 <slide_readL+0xe>
	_delay_us(40);
	uint8_t l = ext_ram[0];
     174:	80 91 00 14 	lds	r24, 0x1400
	return l;
     178:	90 e0       	ldi	r25, 0x00	; 0
     17a:	08 95       	ret

0000017c <main>:
#include "test_code.h"
#include "SRAM_driver.h"
#include "joystick_driver.h"

int main(void) {
    uart_init(MYUBRR);
     17c:	8f e1       	ldi	r24, 0x1F	; 31
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	0e 94 0d 02 	call	0x41a	; 0x41a <uart_init>
	SRAM_init();
     184:	0e 94 50 01 	call	0x2a0	; 0x2a0 <SRAM_init>
	joystick_init();
     188:	0e 94 87 00 	call	0x10e	; 0x10e <joystick_init>
	
	while(1) { 
		shell();
     18c:	0e 94 63 01 	call	0x2c6	; 0x2c6 <shell>
		flash_diode();
     190:	0e 94 57 01 	call	0x2ae	; 0x2ae <flash_diode>
     194:	fb cf       	rjmp	.-10     	; 0x18c <main+0x10>

00000196 <SRAM_test>:
	MCUCR = 0x80;
	DDRA = 0xFF;
	SRAM_test();
}

void SRAM_test(void) {
     196:	cf 92       	push	r12
     198:	df 92       	push	r13
     19a:	ef 92       	push	r14
     19c:	ff 92       	push	r15
     19e:	0f 93       	push	r16
     1a0:	1f 93       	push	r17
     1a2:	cf 93       	push	r28
     1a4:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size       = 0x800;
	uint16_t write_errors       = 0;
	uint16_t retrieval_errors   = 0;

	printf("\nStarting SRAM test...\n");
     1a6:	82 e1       	ldi	r24, 0x12	; 18
     1a8:	91 e0       	ldi	r25, 0x01	; 1
     1aa:	0e 94 96 02 	call	0x52c	; 0x52c <puts>

	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
     1ae:	0e 94 69 02 	call	0x4d2	; 0x4d2 <rand>
     1b2:	6c 01       	movw	r12, r24

	// Write phase: Immediately check that the correct value was stored
	srand(seed);
     1b4:	0e 94 6e 02 	call	0x4dc	; 0x4dc <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     1b8:	c0 e0       	ldi	r28, 0x00	; 0
     1ba:	d0 e0       	ldi	r29, 0x00	; 0
}

void SRAM_test(void) {
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size       = 0x800;
	uint16_t write_errors       = 0;
     1bc:	00 e0       	ldi	r16, 0x00	; 0
     1be:	10 e0       	ldi	r17, 0x00	; 0
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		ext_ram[i] = some_value;
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     1c0:	0f 2e       	mov	r0, r31
     1c2:	f9 e2       	ldi	r31, 0x29	; 41
     1c4:	ef 2e       	mov	r14, r31
     1c6:	f1 e0       	ldi	r31, 0x01	; 1
     1c8:	ff 2e       	mov	r15, r31
     1ca:	f0 2d       	mov	r31, r0
	uint16_t seed = rand();

	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
     1cc:	0e 94 69 02 	call	0x4d2	; 0x4d2 <rand>
     1d0:	fe 01       	movw	r30, r28
     1d2:	f8 5e       	subi	r31, 0xE8	; 232
		ext_ram[i] = some_value;
     1d4:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
     1d6:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     1d8:	28 17       	cp	r18, r24
     1da:	a9 f0       	breq	.+42     	; 0x206 <SRAM_test+0x70>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     1dc:	99 27       	eor	r25, r25
     1de:	9f 93       	push	r25
     1e0:	8f 93       	push	r24
     1e2:	1f 92       	push	r1
     1e4:	2f 93       	push	r18
     1e6:	df 93       	push	r29
     1e8:	cf 93       	push	r28
     1ea:	ff 92       	push	r15
     1ec:	ef 92       	push	r14
     1ee:	0e 94 82 02 	call	0x504	; 0x504 <printf>
			write_errors++;
     1f2:	0f 5f       	subi	r16, 0xFF	; 255
     1f4:	1f 4f       	sbci	r17, 0xFF	; 255
     1f6:	8d b7       	in	r24, 0x3d	; 61
     1f8:	9e b7       	in	r25, 0x3e	; 62
     1fa:	08 96       	adiw	r24, 0x08	; 8
     1fc:	0f b6       	in	r0, 0x3f	; 63
     1fe:	f8 94       	cli
     200:	9e bf       	out	0x3e, r25	; 62
     202:	0f be       	out	0x3f, r0	; 63
     204:	8d bf       	out	0x3d, r24	; 61
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();

	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     206:	21 96       	adiw	r28, 0x01	; 1
     208:	c1 15       	cp	r28, r1
     20a:	98 e0       	ldi	r25, 0x08	; 8
     20c:	d9 07       	cpc	r29, r25
     20e:	f1 f6       	brne	.-68     	; 0x1cc <SRAM_test+0x36>
			write_errors++;
		}
	}

	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);    // reset the PRNG to the state it had before the write phase
     210:	c6 01       	movw	r24, r12
     212:	0e 94 6e 02 	call	0x4dc	; 0x4dc <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     216:	c0 e0       	ldi	r28, 0x00	; 0
     218:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void) {
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size       = 0x800;
	uint16_t write_errors       = 0;
	uint16_t retrieval_errors   = 0;
     21a:	e1 2c       	mov	r14, r1
     21c:	f1 2c       	mov	r15, r1
	srand(seed);    // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     21e:	0f 2e       	mov	r0, r31
     220:	f2 e6       	ldi	r31, 0x62	; 98
     222:	cf 2e       	mov	r12, r31
     224:	f1 e0       	ldi	r31, 0x01	; 1
     226:	df 2e       	mov	r13, r31
     228:	f0 2d       	mov	r31, r0
	}

	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);    // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
     22a:	0e 94 69 02 	call	0x4d2	; 0x4d2 <rand>
     22e:	fe 01       	movw	r30, r28
     230:	f8 5e       	subi	r31, 0xE8	; 232
		uint8_t retreived_value = ext_ram[i];
     232:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     234:	28 17       	cp	r18, r24
     236:	b1 f0       	breq	.+44     	; 0x264 <SRAM_test+0xce>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     238:	99 27       	eor	r25, r25
     23a:	9f 93       	push	r25
     23c:	8f 93       	push	r24
     23e:	1f 92       	push	r1
     240:	2f 93       	push	r18
     242:	df 93       	push	r29
     244:	cf 93       	push	r28
     246:	df 92       	push	r13
     248:	cf 92       	push	r12
     24a:	0e 94 82 02 	call	0x504	; 0x504 <printf>
			retrieval_errors++;
     24e:	8f ef       	ldi	r24, 0xFF	; 255
     250:	e8 1a       	sub	r14, r24
     252:	f8 0a       	sbc	r15, r24
     254:	8d b7       	in	r24, 0x3d	; 61
     256:	9e b7       	in	r25, 0x3e	; 62
     258:	08 96       	adiw	r24, 0x08	; 8
     25a:	0f b6       	in	r0, 0x3f	; 63
     25c:	f8 94       	cli
     25e:	9e bf       	out	0x3e, r25	; 62
     260:	0f be       	out	0x3f, r0	; 63
     262:	8d bf       	out	0x3d, r24	; 61
		}
	}

	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);    // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     264:	21 96       	adiw	r28, 0x01	; 1
     266:	c1 15       	cp	r28, r1
     268:	98 e0       	ldi	r25, 0x08	; 8
     26a:	d9 07       	cpc	r29, r25
     26c:	f1 f6       	brne	.-68     	; 0x22a <SRAM_test+0x94>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
     26e:	ff 92       	push	r15
     270:	ef 92       	push	r14
     272:	1f 93       	push	r17
     274:	0f 93       	push	r16
     276:	8f e9       	ldi	r24, 0x9F	; 159
     278:	91 e0       	ldi	r25, 0x01	; 1
     27a:	9f 93       	push	r25
     27c:	8f 93       	push	r24
     27e:	0e 94 82 02 	call	0x504	; 0x504 <printf>
     282:	0f 90       	pop	r0
     284:	0f 90       	pop	r0
     286:	0f 90       	pop	r0
     288:	0f 90       	pop	r0
     28a:	0f 90       	pop	r0
     28c:	0f 90       	pop	r0
     28e:	df 91       	pop	r29
     290:	cf 91       	pop	r28
     292:	1f 91       	pop	r17
     294:	0f 91       	pop	r16
     296:	ff 90       	pop	r15
     298:	ef 90       	pop	r14
     29a:	df 90       	pop	r13
     29c:	cf 90       	pop	r12
     29e:	08 95       	ret

000002a0 <SRAM_init>:
#include <stdio.h>
#include "SRAM_driver.h"

//Simple setup for SRAM, also tests for correctness
void SRAM_init(){
	MCUCR = 0x80;
     2a0:	80 e8       	ldi	r24, 0x80	; 128
     2a2:	85 bf       	out	0x35, r24	; 53
	DDRA = 0xFF;
     2a4:	8f ef       	ldi	r24, 0xFF	; 255
     2a6:	8a bb       	out	0x1a, r24	; 26
	SRAM_test();
     2a8:	0e 94 cb 00 	call	0x196	; 0x196 <SRAM_test>
     2ac:	08 95       	ret

000002ae <flash_diode>:
#include "SRAM_driver.h"
#include "joystick_driver.h"

//Simple test, Ex 1, task 6
void flash_diode(){
	PORTB = 0xFF;
     2ae:	8f ef       	ldi	r24, 0xFF	; 255
     2b0:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2b2:	80 e0       	ldi	r24, 0x00	; 0
     2b4:	90 ef       	ldi	r25, 0xF0	; 240
     2b6:	01 97       	sbiw	r24, 0x01	; 1
     2b8:	f1 f7       	brne	.-4      	; 0x2b6 <flash_diode+0x8>
	_delay_ms(50);
	PORTB = 0x00;
     2ba:	18 ba       	out	0x18, r1	; 24
     2bc:	80 e0       	ldi	r24, 0x00	; 0
     2be:	90 ef       	ldi	r25, 0xF0	; 240
     2c0:	01 97       	sbiw	r24, 0x01	; 1
     2c2:	f1 f7       	brne	.-4      	; 0x2c0 <flash_diode+0x12>
     2c4:	08 95       	ret

000002c6 <shell>:
	uart_sendChar('X');
	_delay_ms(1000);
}

//Ex 1, task 10 and 11
void shell(){
     2c6:	af 92       	push	r10
     2c8:	bf 92       	push	r11
     2ca:	cf 92       	push	r12
     2cc:	df 92       	push	r13
     2ce:	ef 92       	push	r14
     2d0:	ff 92       	push	r15
     2d2:	0f 93       	push	r16
     2d4:	1f 93       	push	r17
     2d6:	cf 93       	push	r28
     2d8:	df 93       	push	r29
     2da:	cd b7       	in	r28, 0x3d	; 61
     2dc:	de b7       	in	r29, 0x3e	; 62
     2de:	da 95       	dec	r29
     2e0:	0f b6       	in	r0, 0x3f	; 63
     2e2:	f8 94       	cli
     2e4:	de bf       	out	0x3e, r29	; 62
     2e6:	0f be       	out	0x3f, r0	; 63
     2e8:	cd bf       	out	0x3d, r28	; 61
	char cmd[256];
	printf("\n[root@skynet]#:");
     2ea:	88 ef       	ldi	r24, 0xF8	; 248
     2ec:	91 e0       	ldi	r25, 0x01	; 1
     2ee:	9f 93       	push	r25
     2f0:	8f 93       	push	r24
     2f2:	0e 94 82 02 	call	0x504	; 0x504 <printf>
	scanf("%s", cmd);
     2f6:	8e 01       	movw	r16, r28
     2f8:	0f 5f       	subi	r16, 0xFF	; 255
     2fa:	1f 4f       	sbci	r17, 0xFF	; 255
     2fc:	1f 93       	push	r17
     2fe:	0f 93       	push	r16
     300:	89 e0       	ldi	r24, 0x09	; 9
     302:	92 e0       	ldi	r25, 0x02	; 2
     304:	9f 93       	push	r25
     306:	8f 93       	push	r24
     308:	0e 94 c3 02 	call	0x586	; 0x586 <scanf>
	printf( " %s\n", cmd);
     30c:	1f 93       	push	r17
     30e:	0f 93       	push	r16
     310:	8c e0       	ldi	r24, 0x0C	; 12
     312:	92 e0       	ldi	r25, 0x02	; 2
     314:	9f 93       	push	r25
     316:	8f 93       	push	r24
     318:	0e 94 82 02 	call	0x504	; 0x504 <printf>
	
	if(strcmp(cmd, "testdiode") == 0) {
     31c:	61 e1       	ldi	r22, 0x11	; 17
     31e:	72 e0       	ldi	r23, 0x02	; 2
     320:	c8 01       	movw	r24, r16
     322:	0e 94 79 02 	call	0x4f2	; 0x4f2 <strcmp>
     326:	0f b6       	in	r0, 0x3f	; 63
     328:	f8 94       	cli
     32a:	de bf       	out	0x3e, r29	; 62
     32c:	0f be       	out	0x3f, r0	; 63
     32e:	cd bf       	out	0x3d, r28	; 61
     330:	89 2b       	or	r24, r25
     332:	91 f4       	brne	.+36     	; 0x358 <shell+0x92>
		printf("testing diode...\n");
     334:	8b e1       	ldi	r24, 0x1B	; 27
     336:	92 e0       	ldi	r25, 0x02	; 2
     338:	0e 94 96 02 	call	0x52c	; 0x52c <puts>
     33c:	04 e1       	ldi	r16, 0x14	; 20
     33e:	10 e0       	ldi	r17, 0x00	; 0
		for (int i = 0; i<20; i++) {	flash_diode(); }
     340:	0e 94 57 01 	call	0x2ae	; 0x2ae <flash_diode>
     344:	01 50       	subi	r16, 0x01	; 1
     346:	11 09       	sbc	r17, r1
     348:	01 15       	cp	r16, r1
     34a:	11 05       	cpc	r17, r1
     34c:	c9 f7       	brne	.-14     	; 0x340 <shell+0x7a>
		printf("done testing diode\n");
     34e:	8c e2       	ldi	r24, 0x2C	; 44
     350:	92 e0       	ldi	r25, 0x02	; 2
     352:	0e 94 96 02 	call	0x52c	; 0x52c <puts>
     356:	47 c0       	rjmp	.+142    	; 0x3e6 <shell+0x120>
	} else if (strcmp(cmd, "SRAM_test") == 0) {
     358:	6f e3       	ldi	r22, 0x3F	; 63
     35a:	72 e0       	ldi	r23, 0x02	; 2
     35c:	ce 01       	movw	r24, r28
     35e:	01 96       	adiw	r24, 0x01	; 1
     360:	0e 94 79 02 	call	0x4f2	; 0x4f2 <strcmp>
     364:	89 2b       	or	r24, r25
     366:	19 f4       	brne	.+6      	; 0x36e <shell+0xa8>
		SRAM_test();
     368:	0e 94 cb 00 	call	0x196	; 0x196 <SRAM_test>
     36c:	3c c0       	rjmp	.+120    	; 0x3e6 <shell+0x120>
	} else if (strcmp(cmd, "ADC_test") == 0) {
     36e:	69 e4       	ldi	r22, 0x49	; 73
     370:	72 e0       	ldi	r23, 0x02	; 2
     372:	ce 01       	movw	r24, r28
     374:	01 96       	adiw	r24, 0x01	; 1
     376:	0e 94 79 02 	call	0x4f2	; 0x4f2 <strcmp>
     37a:	89 2b       	or	r24, r25
     37c:	31 f5       	brne	.+76     	; 0x3ca <shell+0x104>
		while(1){
			printf("Joystick x-pos: %003i \tJoystick y-pos: %003i \tLeft slider: %003d \tRight slider: %003d \n", \
     37e:	02 e5       	ldi	r16, 0x52	; 82
     380:	12 e0       	ldi	r17, 0x02	; 2
     382:	0e 94 a8 00 	call	0x150	; 0x150 <slide_readR>
     386:	b8 2e       	mov	r11, r24
     388:	a9 2e       	mov	r10, r25
     38a:	0e 94 b3 00 	call	0x166	; 0x166 <slide_readL>
     38e:	d8 2e       	mov	r13, r24
     390:	c9 2e       	mov	r12, r25
     392:	0e 94 7c 00 	call	0xf8	; 0xf8 <joystick_readY>
     396:	0e 94 94 00 	call	0x128	; 0x128 <convert_Y>
     39a:	f8 2e       	mov	r15, r24
     39c:	e9 2e       	mov	r14, r25
     39e:	0e 94 5d 00 	call	0xba	; 0xba <joystick_readX>
     3a2:	0e 94 68 00 	call	0xd0	; 0xd0 <convert_X>
     3a6:	af 92       	push	r10
     3a8:	bf 92       	push	r11
     3aa:	cf 92       	push	r12
     3ac:	df 92       	push	r13
     3ae:	ef 92       	push	r14
     3b0:	ff 92       	push	r15
     3b2:	9f 93       	push	r25
     3b4:	8f 93       	push	r24
     3b6:	1f 93       	push	r17
     3b8:	0f 93       	push	r16
     3ba:	0e 94 82 02 	call	0x504	; 0x504 <printf>
     3be:	0f b6       	in	r0, 0x3f	; 63
     3c0:	f8 94       	cli
     3c2:	de bf       	out	0x3e, r29	; 62
     3c4:	0f be       	out	0x3f, r0	; 63
     3c6:	cd bf       	out	0x3d, r28	; 61
     3c8:	dc cf       	rjmp	.-72     	; 0x382 <shell+0xbc>
					convert_X(joystick_readX()), convert_Y(joystick_readY()), slide_readL(), slide_readR());
		}
	} else {
		printf("unknown command \"%s\"\n", cmd);
     3ca:	ce 01       	movw	r24, r28
     3cc:	01 96       	adiw	r24, 0x01	; 1
     3ce:	9f 93       	push	r25
     3d0:	8f 93       	push	r24
     3d2:	8a ea       	ldi	r24, 0xAA	; 170
     3d4:	92 e0       	ldi	r25, 0x02	; 2
     3d6:	9f 93       	push	r25
     3d8:	8f 93       	push	r24
     3da:	0e 94 82 02 	call	0x504	; 0x504 <printf>
     3de:	0f 90       	pop	r0
     3e0:	0f 90       	pop	r0
     3e2:	0f 90       	pop	r0
     3e4:	0f 90       	pop	r0
	}

	
	
}
     3e6:	d3 95       	inc	r29
     3e8:	0f b6       	in	r0, 0x3f	; 63
     3ea:	f8 94       	cli
     3ec:	de bf       	out	0x3e, r29	; 62
     3ee:	0f be       	out	0x3f, r0	; 63
     3f0:	cd bf       	out	0x3d, r28	; 61
     3f2:	df 91       	pop	r29
     3f4:	cf 91       	pop	r28
     3f6:	1f 91       	pop	r17
     3f8:	0f 91       	pop	r16
     3fa:	ff 90       	pop	r15
     3fc:	ef 90       	pop	r14
     3fe:	df 90       	pop	r13
     400:	cf 90       	pop	r12
     402:	bf 90       	pop	r11
     404:	af 90       	pop	r10
     406:	08 95       	ret

00000408 <uart_sendChar>:

}

void uart_sendChar(unsigned char data){
	//Wait for empty transmitter buffer
	while(!(UCSR0A & (1<<UDRE0)));
     408:	5d 9b       	sbis	0x0b, 5	; 11
     40a:	fe cf       	rjmp	.-4      	; 0x408 <uart_sendChar>
		
	//Put data into buffer, then send the data
	UDR0 = data;
     40c:	8c b9       	out	0x0c, r24	; 12
     40e:	08 95       	ret

00000410 <uart_getChar>:
}


unsigned int uart_getChar(){
	//Wait for the data to be received 
	while(!(UCSR0A & (1<<RXC0))){}
     410:	5f 9b       	sbis	0x0b, 7	; 11
     412:	fe cf       	rjmp	.-4      	; 0x410 <uart_getChar>
	
	//Get status and the 9th bit, then data from buffer
	return UDR0;
     414:	8c b1       	in	r24, 0x0c	; 12
}
     416:	90 e0       	ldi	r25, 0x00	; 0
     418:	08 95       	ret

0000041a <uart_init>:

static FILE uart_io = FDEV_SETUP_STREAM(uart_sendChar, uart_getChar, _FDEV_SETUP_RW);

void uart_init(unsigned int ubrr){
	//Set baud rate
	UBRR0L = (unsigned int) ubrr;
     41a:	89 b9       	out	0x09, r24	; 9
	
	//Enable receiver and transmitter
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
     41c:	88 e1       	ldi	r24, 0x18	; 24
     41e:	8a b9       	out	0x0a, r24	; 10
	
	stdout = &uart_io;
     420:	84 e0       	ldi	r24, 0x04	; 4
     422:	91 e0       	ldi	r25, 0x01	; 1
     424:	90 93 c7 02 	sts	0x02C7, r25
     428:	80 93 c6 02 	sts	0x02C6, r24
	stdin = &uart_io;
     42c:	90 93 c5 02 	sts	0x02C5, r25
     430:	80 93 c4 02 	sts	0x02C4, r24
     434:	08 95       	ret

00000436 <do_rand>:
     436:	8f 92       	push	r8
     438:	9f 92       	push	r9
     43a:	af 92       	push	r10
     43c:	bf 92       	push	r11
     43e:	cf 92       	push	r12
     440:	df 92       	push	r13
     442:	ef 92       	push	r14
     444:	ff 92       	push	r15
     446:	cf 93       	push	r28
     448:	df 93       	push	r29
     44a:	ec 01       	movw	r28, r24
     44c:	68 81       	ld	r22, Y
     44e:	79 81       	ldd	r23, Y+1	; 0x01
     450:	8a 81       	ldd	r24, Y+2	; 0x02
     452:	9b 81       	ldd	r25, Y+3	; 0x03
     454:	61 15       	cp	r22, r1
     456:	71 05       	cpc	r23, r1
     458:	81 05       	cpc	r24, r1
     45a:	91 05       	cpc	r25, r1
     45c:	21 f4       	brne	.+8      	; 0x466 <do_rand+0x30>
     45e:	64 e2       	ldi	r22, 0x24	; 36
     460:	79 ed       	ldi	r23, 0xD9	; 217
     462:	8b e5       	ldi	r24, 0x5B	; 91
     464:	97 e0       	ldi	r25, 0x07	; 7
     466:	2d e1       	ldi	r18, 0x1D	; 29
     468:	33 ef       	ldi	r19, 0xF3	; 243
     46a:	41 e0       	ldi	r20, 0x01	; 1
     46c:	50 e0       	ldi	r21, 0x00	; 0
     46e:	0e 94 71 08 	call	0x10e2	; 0x10e2 <__divmodsi4>
     472:	49 01       	movw	r8, r18
     474:	5a 01       	movw	r10, r20
     476:	9b 01       	movw	r18, r22
     478:	ac 01       	movw	r20, r24
     47a:	a7 ea       	ldi	r26, 0xA7	; 167
     47c:	b1 e4       	ldi	r27, 0x41	; 65
     47e:	0e 94 90 08 	call	0x1120	; 0x1120 <__muluhisi3>
     482:	6b 01       	movw	r12, r22
     484:	7c 01       	movw	r14, r24
     486:	ac ee       	ldi	r26, 0xEC	; 236
     488:	b4 ef       	ldi	r27, 0xF4	; 244
     48a:	a5 01       	movw	r20, r10
     48c:	94 01       	movw	r18, r8
     48e:	0e 94 9e 08 	call	0x113c	; 0x113c <__mulohisi3>
     492:	c6 0e       	add	r12, r22
     494:	d7 1e       	adc	r13, r23
     496:	e8 1e       	adc	r14, r24
     498:	f9 1e       	adc	r15, r25
     49a:	f7 fe       	sbrs	r15, 7
     49c:	06 c0       	rjmp	.+12     	; 0x4aa <do_rand+0x74>
     49e:	81 e0       	ldi	r24, 0x01	; 1
     4a0:	c8 1a       	sub	r12, r24
     4a2:	d1 08       	sbc	r13, r1
     4a4:	e1 08       	sbc	r14, r1
     4a6:	80 e8       	ldi	r24, 0x80	; 128
     4a8:	f8 0a       	sbc	r15, r24
     4aa:	c8 82       	st	Y, r12
     4ac:	d9 82       	std	Y+1, r13	; 0x01
     4ae:	ea 82       	std	Y+2, r14	; 0x02
     4b0:	fb 82       	std	Y+3, r15	; 0x03
     4b2:	c6 01       	movw	r24, r12
     4b4:	9f 77       	andi	r25, 0x7F	; 127
     4b6:	df 91       	pop	r29
     4b8:	cf 91       	pop	r28
     4ba:	ff 90       	pop	r15
     4bc:	ef 90       	pop	r14
     4be:	df 90       	pop	r13
     4c0:	cf 90       	pop	r12
     4c2:	bf 90       	pop	r11
     4c4:	af 90       	pop	r10
     4c6:	9f 90       	pop	r9
     4c8:	8f 90       	pop	r8
     4ca:	08 95       	ret

000004cc <rand_r>:
     4cc:	0e 94 1b 02 	call	0x436	; 0x436 <do_rand>
     4d0:	08 95       	ret

000004d2 <rand>:
     4d2:	80 e0       	ldi	r24, 0x00	; 0
     4d4:	91 e0       	ldi	r25, 0x01	; 1
     4d6:	0e 94 1b 02 	call	0x436	; 0x436 <do_rand>
     4da:	08 95       	ret

000004dc <srand>:
     4dc:	a0 e0       	ldi	r26, 0x00	; 0
     4de:	b0 e0       	ldi	r27, 0x00	; 0
     4e0:	80 93 00 01 	sts	0x0100, r24
     4e4:	90 93 01 01 	sts	0x0101, r25
     4e8:	a0 93 02 01 	sts	0x0102, r26
     4ec:	b0 93 03 01 	sts	0x0103, r27
     4f0:	08 95       	ret

000004f2 <strcmp>:
     4f2:	fb 01       	movw	r30, r22
     4f4:	dc 01       	movw	r26, r24
     4f6:	8d 91       	ld	r24, X+
     4f8:	01 90       	ld	r0, Z+
     4fa:	80 19       	sub	r24, r0
     4fc:	01 10       	cpse	r0, r1
     4fe:	d9 f3       	breq	.-10     	; 0x4f6 <strcmp+0x4>
     500:	99 0b       	sbc	r25, r25
     502:	08 95       	ret

00000504 <printf>:
     504:	a0 e0       	ldi	r26, 0x00	; 0
     506:	b0 e0       	ldi	r27, 0x00	; 0
     508:	e8 e8       	ldi	r30, 0x88	; 136
     50a:	f2 e0       	ldi	r31, 0x02	; 2
     50c:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__prologue_saves__+0x20>
     510:	fe 01       	movw	r30, r28
     512:	35 96       	adiw	r30, 0x05	; 5
     514:	61 91       	ld	r22, Z+
     516:	71 91       	ld	r23, Z+
     518:	af 01       	movw	r20, r30
     51a:	80 91 c6 02 	lds	r24, 0x02C6
     51e:	90 91 c7 02 	lds	r25, 0x02C7
     522:	0e 94 d7 02 	call	0x5ae	; 0x5ae <vfprintf>
     526:	e2 e0       	ldi	r30, 0x02	; 2
     528:	0c 94 cf 08 	jmp	0x119e	; 0x119e <__epilogue_restores__+0x20>

0000052c <puts>:
     52c:	0f 93       	push	r16
     52e:	1f 93       	push	r17
     530:	cf 93       	push	r28
     532:	df 93       	push	r29
     534:	e0 91 c6 02 	lds	r30, 0x02C6
     538:	f0 91 c7 02 	lds	r31, 0x02C7
     53c:	23 81       	ldd	r18, Z+3	; 0x03
     53e:	21 ff       	sbrs	r18, 1
     540:	1b c0       	rjmp	.+54     	; 0x578 <puts+0x4c>
     542:	ec 01       	movw	r28, r24
     544:	00 e0       	ldi	r16, 0x00	; 0
     546:	10 e0       	ldi	r17, 0x00	; 0
     548:	89 91       	ld	r24, Y+
     54a:	60 91 c6 02 	lds	r22, 0x02C6
     54e:	70 91 c7 02 	lds	r23, 0x02C7
     552:	db 01       	movw	r26, r22
     554:	18 96       	adiw	r26, 0x08	; 8
     556:	ed 91       	ld	r30, X+
     558:	fc 91       	ld	r31, X
     55a:	19 97       	sbiw	r26, 0x09	; 9
     55c:	88 23       	and	r24, r24
     55e:	31 f0       	breq	.+12     	; 0x56c <puts+0x40>
     560:	09 95       	icall
     562:	89 2b       	or	r24, r25
     564:	89 f3       	breq	.-30     	; 0x548 <puts+0x1c>
     566:	0f ef       	ldi	r16, 0xFF	; 255
     568:	1f ef       	ldi	r17, 0xFF	; 255
     56a:	ee cf       	rjmp	.-36     	; 0x548 <puts+0x1c>
     56c:	8a e0       	ldi	r24, 0x0A	; 10
     56e:	09 95       	icall
     570:	89 2b       	or	r24, r25
     572:	11 f4       	brne	.+4      	; 0x578 <puts+0x4c>
     574:	c8 01       	movw	r24, r16
     576:	02 c0       	rjmp	.+4      	; 0x57c <puts+0x50>
     578:	8f ef       	ldi	r24, 0xFF	; 255
     57a:	9f ef       	ldi	r25, 0xFF	; 255
     57c:	df 91       	pop	r29
     57e:	cf 91       	pop	r28
     580:	1f 91       	pop	r17
     582:	0f 91       	pop	r16
     584:	08 95       	ret

00000586 <scanf>:
     586:	a0 e0       	ldi	r26, 0x00	; 0
     588:	b0 e0       	ldi	r27, 0x00	; 0
     58a:	e9 ec       	ldi	r30, 0xC9	; 201
     58c:	f2 e0       	ldi	r31, 0x02	; 2
     58e:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__prologue_saves__+0x20>
     592:	fe 01       	movw	r30, r28
     594:	35 96       	adiw	r30, 0x05	; 5
     596:	61 91       	ld	r22, Z+
     598:	71 91       	ld	r23, Z+
     59a:	af 01       	movw	r20, r30
     59c:	80 91 c4 02 	lds	r24, 0x02C4
     5a0:	90 91 c5 02 	lds	r25, 0x02C5
     5a4:	0e 94 27 06 	call	0xc4e	; 0xc4e <vfscanf>
     5a8:	e2 e0       	ldi	r30, 0x02	; 2
     5aa:	0c 94 cf 08 	jmp	0x119e	; 0x119e <__epilogue_restores__+0x20>

000005ae <vfprintf>:
     5ae:	ac e0       	ldi	r26, 0x0C	; 12
     5b0:	b0 e0       	ldi	r27, 0x00	; 0
     5b2:	ed ed       	ldi	r30, 0xDD	; 221
     5b4:	f2 e0       	ldi	r31, 0x02	; 2
     5b6:	0c 94 a3 08 	jmp	0x1146	; 0x1146 <__prologue_saves__>
     5ba:	7c 01       	movw	r14, r24
     5bc:	6b 01       	movw	r12, r22
     5be:	8a 01       	movw	r16, r20
     5c0:	fc 01       	movw	r30, r24
     5c2:	17 82       	std	Z+7, r1	; 0x07
     5c4:	16 82       	std	Z+6, r1	; 0x06
     5c6:	83 81       	ldd	r24, Z+3	; 0x03
     5c8:	81 ff       	sbrs	r24, 1
     5ca:	bd c1       	rjmp	.+890    	; 0x946 <vfprintf+0x398>
     5cc:	ce 01       	movw	r24, r28
     5ce:	01 96       	adiw	r24, 0x01	; 1
     5d0:	4c 01       	movw	r8, r24
     5d2:	f7 01       	movw	r30, r14
     5d4:	93 81       	ldd	r25, Z+3	; 0x03
     5d6:	f6 01       	movw	r30, r12
     5d8:	93 fd       	sbrc	r25, 3
     5da:	85 91       	lpm	r24, Z+
     5dc:	93 ff       	sbrs	r25, 3
     5de:	81 91       	ld	r24, Z+
     5e0:	6f 01       	movw	r12, r30
     5e2:	88 23       	and	r24, r24
     5e4:	09 f4       	brne	.+2      	; 0x5e8 <vfprintf+0x3a>
     5e6:	ab c1       	rjmp	.+854    	; 0x93e <vfprintf+0x390>
     5e8:	85 32       	cpi	r24, 0x25	; 37
     5ea:	39 f4       	brne	.+14     	; 0x5fa <vfprintf+0x4c>
     5ec:	93 fd       	sbrc	r25, 3
     5ee:	85 91       	lpm	r24, Z+
     5f0:	93 ff       	sbrs	r25, 3
     5f2:	81 91       	ld	r24, Z+
     5f4:	6f 01       	movw	r12, r30
     5f6:	85 32       	cpi	r24, 0x25	; 37
     5f8:	29 f4       	brne	.+10     	; 0x604 <vfprintf+0x56>
     5fa:	b7 01       	movw	r22, r14
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	0e 94 c5 07 	call	0xf8a	; 0xf8a <fputc>
     602:	e7 cf       	rjmp	.-50     	; 0x5d2 <vfprintf+0x24>
     604:	51 2c       	mov	r5, r1
     606:	31 2c       	mov	r3, r1
     608:	20 e0       	ldi	r18, 0x00	; 0
     60a:	20 32       	cpi	r18, 0x20	; 32
     60c:	a0 f4       	brcc	.+40     	; 0x636 <vfprintf+0x88>
     60e:	8b 32       	cpi	r24, 0x2B	; 43
     610:	69 f0       	breq	.+26     	; 0x62c <vfprintf+0x7e>
     612:	30 f4       	brcc	.+12     	; 0x620 <vfprintf+0x72>
     614:	80 32       	cpi	r24, 0x20	; 32
     616:	59 f0       	breq	.+22     	; 0x62e <vfprintf+0x80>
     618:	83 32       	cpi	r24, 0x23	; 35
     61a:	69 f4       	brne	.+26     	; 0x636 <vfprintf+0x88>
     61c:	20 61       	ori	r18, 0x10	; 16
     61e:	2c c0       	rjmp	.+88     	; 0x678 <vfprintf+0xca>
     620:	8d 32       	cpi	r24, 0x2D	; 45
     622:	39 f0       	breq	.+14     	; 0x632 <vfprintf+0x84>
     624:	80 33       	cpi	r24, 0x30	; 48
     626:	39 f4       	brne	.+14     	; 0x636 <vfprintf+0x88>
     628:	21 60       	ori	r18, 0x01	; 1
     62a:	26 c0       	rjmp	.+76     	; 0x678 <vfprintf+0xca>
     62c:	22 60       	ori	r18, 0x02	; 2
     62e:	24 60       	ori	r18, 0x04	; 4
     630:	23 c0       	rjmp	.+70     	; 0x678 <vfprintf+0xca>
     632:	28 60       	ori	r18, 0x08	; 8
     634:	21 c0       	rjmp	.+66     	; 0x678 <vfprintf+0xca>
     636:	27 fd       	sbrc	r18, 7
     638:	27 c0       	rjmp	.+78     	; 0x688 <vfprintf+0xda>
     63a:	30 ed       	ldi	r19, 0xD0	; 208
     63c:	38 0f       	add	r19, r24
     63e:	3a 30       	cpi	r19, 0x0A	; 10
     640:	78 f4       	brcc	.+30     	; 0x660 <vfprintf+0xb2>
     642:	26 ff       	sbrs	r18, 6
     644:	06 c0       	rjmp	.+12     	; 0x652 <vfprintf+0xa4>
     646:	fa e0       	ldi	r31, 0x0A	; 10
     648:	5f 9e       	mul	r5, r31
     64a:	30 0d       	add	r19, r0
     64c:	11 24       	eor	r1, r1
     64e:	53 2e       	mov	r5, r19
     650:	13 c0       	rjmp	.+38     	; 0x678 <vfprintf+0xca>
     652:	8a e0       	ldi	r24, 0x0A	; 10
     654:	38 9e       	mul	r3, r24
     656:	30 0d       	add	r19, r0
     658:	11 24       	eor	r1, r1
     65a:	33 2e       	mov	r3, r19
     65c:	20 62       	ori	r18, 0x20	; 32
     65e:	0c c0       	rjmp	.+24     	; 0x678 <vfprintf+0xca>
     660:	8e 32       	cpi	r24, 0x2E	; 46
     662:	21 f4       	brne	.+8      	; 0x66c <vfprintf+0xbe>
     664:	26 fd       	sbrc	r18, 6
     666:	6b c1       	rjmp	.+726    	; 0x93e <vfprintf+0x390>
     668:	20 64       	ori	r18, 0x40	; 64
     66a:	06 c0       	rjmp	.+12     	; 0x678 <vfprintf+0xca>
     66c:	8c 36       	cpi	r24, 0x6C	; 108
     66e:	11 f4       	brne	.+4      	; 0x674 <vfprintf+0xc6>
     670:	20 68       	ori	r18, 0x80	; 128
     672:	02 c0       	rjmp	.+4      	; 0x678 <vfprintf+0xca>
     674:	88 36       	cpi	r24, 0x68	; 104
     676:	41 f4       	brne	.+16     	; 0x688 <vfprintf+0xda>
     678:	f6 01       	movw	r30, r12
     67a:	93 fd       	sbrc	r25, 3
     67c:	85 91       	lpm	r24, Z+
     67e:	93 ff       	sbrs	r25, 3
     680:	81 91       	ld	r24, Z+
     682:	6f 01       	movw	r12, r30
     684:	81 11       	cpse	r24, r1
     686:	c1 cf       	rjmp	.-126    	; 0x60a <vfprintf+0x5c>
     688:	98 2f       	mov	r25, r24
     68a:	9f 7d       	andi	r25, 0xDF	; 223
     68c:	95 54       	subi	r25, 0x45	; 69
     68e:	93 30       	cpi	r25, 0x03	; 3
     690:	28 f4       	brcc	.+10     	; 0x69c <vfprintf+0xee>
     692:	0c 5f       	subi	r16, 0xFC	; 252
     694:	1f 4f       	sbci	r17, 0xFF	; 255
     696:	ff e3       	ldi	r31, 0x3F	; 63
     698:	f9 83       	std	Y+1, r31	; 0x01
     69a:	0d c0       	rjmp	.+26     	; 0x6b6 <vfprintf+0x108>
     69c:	83 36       	cpi	r24, 0x63	; 99
     69e:	31 f0       	breq	.+12     	; 0x6ac <vfprintf+0xfe>
     6a0:	83 37       	cpi	r24, 0x73	; 115
     6a2:	71 f0       	breq	.+28     	; 0x6c0 <vfprintf+0x112>
     6a4:	83 35       	cpi	r24, 0x53	; 83
     6a6:	09 f0       	breq	.+2      	; 0x6aa <vfprintf+0xfc>
     6a8:	5b c0       	rjmp	.+182    	; 0x760 <vfprintf+0x1b2>
     6aa:	22 c0       	rjmp	.+68     	; 0x6f0 <vfprintf+0x142>
     6ac:	f8 01       	movw	r30, r16
     6ae:	80 81       	ld	r24, Z
     6b0:	89 83       	std	Y+1, r24	; 0x01
     6b2:	0e 5f       	subi	r16, 0xFE	; 254
     6b4:	1f 4f       	sbci	r17, 0xFF	; 255
     6b6:	44 24       	eor	r4, r4
     6b8:	43 94       	inc	r4
     6ba:	51 2c       	mov	r5, r1
     6bc:	54 01       	movw	r10, r8
     6be:	15 c0       	rjmp	.+42     	; 0x6ea <vfprintf+0x13c>
     6c0:	38 01       	movw	r6, r16
     6c2:	f2 e0       	ldi	r31, 0x02	; 2
     6c4:	6f 0e       	add	r6, r31
     6c6:	71 1c       	adc	r7, r1
     6c8:	f8 01       	movw	r30, r16
     6ca:	a0 80       	ld	r10, Z
     6cc:	b1 80       	ldd	r11, Z+1	; 0x01
     6ce:	26 ff       	sbrs	r18, 6
     6d0:	03 c0       	rjmp	.+6      	; 0x6d8 <vfprintf+0x12a>
     6d2:	65 2d       	mov	r22, r5
     6d4:	70 e0       	ldi	r23, 0x00	; 0
     6d6:	02 c0       	rjmp	.+4      	; 0x6dc <vfprintf+0x12e>
     6d8:	6f ef       	ldi	r22, 0xFF	; 255
     6da:	7f ef       	ldi	r23, 0xFF	; 255
     6dc:	c5 01       	movw	r24, r10
     6de:	2c 87       	std	Y+12, r18	; 0x0c
     6e0:	0e 94 7c 07 	call	0xef8	; 0xef8 <strnlen>
     6e4:	2c 01       	movw	r4, r24
     6e6:	83 01       	movw	r16, r6
     6e8:	2c 85       	ldd	r18, Y+12	; 0x0c
     6ea:	2f 77       	andi	r18, 0x7F	; 127
     6ec:	22 2e       	mov	r2, r18
     6ee:	17 c0       	rjmp	.+46     	; 0x71e <vfprintf+0x170>
     6f0:	38 01       	movw	r6, r16
     6f2:	f2 e0       	ldi	r31, 0x02	; 2
     6f4:	6f 0e       	add	r6, r31
     6f6:	71 1c       	adc	r7, r1
     6f8:	f8 01       	movw	r30, r16
     6fa:	a0 80       	ld	r10, Z
     6fc:	b1 80       	ldd	r11, Z+1	; 0x01
     6fe:	26 ff       	sbrs	r18, 6
     700:	03 c0       	rjmp	.+6      	; 0x708 <vfprintf+0x15a>
     702:	65 2d       	mov	r22, r5
     704:	70 e0       	ldi	r23, 0x00	; 0
     706:	02 c0       	rjmp	.+4      	; 0x70c <vfprintf+0x15e>
     708:	6f ef       	ldi	r22, 0xFF	; 255
     70a:	7f ef       	ldi	r23, 0xFF	; 255
     70c:	c5 01       	movw	r24, r10
     70e:	2c 87       	std	Y+12, r18	; 0x0c
     710:	0e 94 71 07 	call	0xee2	; 0xee2 <strnlen_P>
     714:	2c 01       	movw	r4, r24
     716:	2c 85       	ldd	r18, Y+12	; 0x0c
     718:	20 68       	ori	r18, 0x80	; 128
     71a:	22 2e       	mov	r2, r18
     71c:	83 01       	movw	r16, r6
     71e:	23 fc       	sbrc	r2, 3
     720:	1b c0       	rjmp	.+54     	; 0x758 <vfprintf+0x1aa>
     722:	83 2d       	mov	r24, r3
     724:	90 e0       	ldi	r25, 0x00	; 0
     726:	48 16       	cp	r4, r24
     728:	59 06       	cpc	r5, r25
     72a:	b0 f4       	brcc	.+44     	; 0x758 <vfprintf+0x1aa>
     72c:	b7 01       	movw	r22, r14
     72e:	80 e2       	ldi	r24, 0x20	; 32
     730:	90 e0       	ldi	r25, 0x00	; 0
     732:	0e 94 c5 07 	call	0xf8a	; 0xf8a <fputc>
     736:	3a 94       	dec	r3
     738:	f4 cf       	rjmp	.-24     	; 0x722 <vfprintf+0x174>
     73a:	f5 01       	movw	r30, r10
     73c:	27 fc       	sbrc	r2, 7
     73e:	85 91       	lpm	r24, Z+
     740:	27 fe       	sbrs	r2, 7
     742:	81 91       	ld	r24, Z+
     744:	5f 01       	movw	r10, r30
     746:	b7 01       	movw	r22, r14
     748:	90 e0       	ldi	r25, 0x00	; 0
     74a:	0e 94 c5 07 	call	0xf8a	; 0xf8a <fputc>
     74e:	31 10       	cpse	r3, r1
     750:	3a 94       	dec	r3
     752:	f1 e0       	ldi	r31, 0x01	; 1
     754:	4f 1a       	sub	r4, r31
     756:	51 08       	sbc	r5, r1
     758:	41 14       	cp	r4, r1
     75a:	51 04       	cpc	r5, r1
     75c:	71 f7       	brne	.-36     	; 0x73a <vfprintf+0x18c>
     75e:	e5 c0       	rjmp	.+458    	; 0x92a <vfprintf+0x37c>
     760:	84 36       	cpi	r24, 0x64	; 100
     762:	11 f0       	breq	.+4      	; 0x768 <vfprintf+0x1ba>
     764:	89 36       	cpi	r24, 0x69	; 105
     766:	39 f5       	brne	.+78     	; 0x7b6 <vfprintf+0x208>
     768:	f8 01       	movw	r30, r16
     76a:	27 ff       	sbrs	r18, 7
     76c:	07 c0       	rjmp	.+14     	; 0x77c <vfprintf+0x1ce>
     76e:	60 81       	ld	r22, Z
     770:	71 81       	ldd	r23, Z+1	; 0x01
     772:	82 81       	ldd	r24, Z+2	; 0x02
     774:	93 81       	ldd	r25, Z+3	; 0x03
     776:	0c 5f       	subi	r16, 0xFC	; 252
     778:	1f 4f       	sbci	r17, 0xFF	; 255
     77a:	08 c0       	rjmp	.+16     	; 0x78c <vfprintf+0x1de>
     77c:	60 81       	ld	r22, Z
     77e:	71 81       	ldd	r23, Z+1	; 0x01
     780:	88 27       	eor	r24, r24
     782:	77 fd       	sbrc	r23, 7
     784:	80 95       	com	r24
     786:	98 2f       	mov	r25, r24
     788:	0e 5f       	subi	r16, 0xFE	; 254
     78a:	1f 4f       	sbci	r17, 0xFF	; 255
     78c:	2f 76       	andi	r18, 0x6F	; 111
     78e:	b2 2e       	mov	r11, r18
     790:	97 ff       	sbrs	r25, 7
     792:	09 c0       	rjmp	.+18     	; 0x7a6 <vfprintf+0x1f8>
     794:	90 95       	com	r25
     796:	80 95       	com	r24
     798:	70 95       	com	r23
     79a:	61 95       	neg	r22
     79c:	7f 4f       	sbci	r23, 0xFF	; 255
     79e:	8f 4f       	sbci	r24, 0xFF	; 255
     7a0:	9f 4f       	sbci	r25, 0xFF	; 255
     7a2:	20 68       	ori	r18, 0x80	; 128
     7a4:	b2 2e       	mov	r11, r18
     7a6:	2a e0       	ldi	r18, 0x0A	; 10
     7a8:	30 e0       	ldi	r19, 0x00	; 0
     7aa:	a4 01       	movw	r20, r8
     7ac:	0e 94 10 08 	call	0x1020	; 0x1020 <__ultoa_invert>
     7b0:	a8 2e       	mov	r10, r24
     7b2:	a8 18       	sub	r10, r8
     7b4:	44 c0       	rjmp	.+136    	; 0x83e <vfprintf+0x290>
     7b6:	85 37       	cpi	r24, 0x75	; 117
     7b8:	29 f4       	brne	.+10     	; 0x7c4 <vfprintf+0x216>
     7ba:	2f 7e       	andi	r18, 0xEF	; 239
     7bc:	b2 2e       	mov	r11, r18
     7be:	2a e0       	ldi	r18, 0x0A	; 10
     7c0:	30 e0       	ldi	r19, 0x00	; 0
     7c2:	25 c0       	rjmp	.+74     	; 0x80e <vfprintf+0x260>
     7c4:	f2 2f       	mov	r31, r18
     7c6:	f9 7f       	andi	r31, 0xF9	; 249
     7c8:	bf 2e       	mov	r11, r31
     7ca:	8f 36       	cpi	r24, 0x6F	; 111
     7cc:	c1 f0       	breq	.+48     	; 0x7fe <vfprintf+0x250>
     7ce:	18 f4       	brcc	.+6      	; 0x7d6 <vfprintf+0x228>
     7d0:	88 35       	cpi	r24, 0x58	; 88
     7d2:	79 f0       	breq	.+30     	; 0x7f2 <vfprintf+0x244>
     7d4:	b4 c0       	rjmp	.+360    	; 0x93e <vfprintf+0x390>
     7d6:	80 37       	cpi	r24, 0x70	; 112
     7d8:	19 f0       	breq	.+6      	; 0x7e0 <vfprintf+0x232>
     7da:	88 37       	cpi	r24, 0x78	; 120
     7dc:	21 f0       	breq	.+8      	; 0x7e6 <vfprintf+0x238>
     7de:	af c0       	rjmp	.+350    	; 0x93e <vfprintf+0x390>
     7e0:	2f 2f       	mov	r18, r31
     7e2:	20 61       	ori	r18, 0x10	; 16
     7e4:	b2 2e       	mov	r11, r18
     7e6:	b4 fe       	sbrs	r11, 4
     7e8:	0d c0       	rjmp	.+26     	; 0x804 <vfprintf+0x256>
     7ea:	8b 2d       	mov	r24, r11
     7ec:	84 60       	ori	r24, 0x04	; 4
     7ee:	b8 2e       	mov	r11, r24
     7f0:	09 c0       	rjmp	.+18     	; 0x804 <vfprintf+0x256>
     7f2:	24 ff       	sbrs	r18, 4
     7f4:	0a c0       	rjmp	.+20     	; 0x80a <vfprintf+0x25c>
     7f6:	9f 2f       	mov	r25, r31
     7f8:	96 60       	ori	r25, 0x06	; 6
     7fa:	b9 2e       	mov	r11, r25
     7fc:	06 c0       	rjmp	.+12     	; 0x80a <vfprintf+0x25c>
     7fe:	28 e0       	ldi	r18, 0x08	; 8
     800:	30 e0       	ldi	r19, 0x00	; 0
     802:	05 c0       	rjmp	.+10     	; 0x80e <vfprintf+0x260>
     804:	20 e1       	ldi	r18, 0x10	; 16
     806:	30 e0       	ldi	r19, 0x00	; 0
     808:	02 c0       	rjmp	.+4      	; 0x80e <vfprintf+0x260>
     80a:	20 e1       	ldi	r18, 0x10	; 16
     80c:	32 e0       	ldi	r19, 0x02	; 2
     80e:	f8 01       	movw	r30, r16
     810:	b7 fe       	sbrs	r11, 7
     812:	07 c0       	rjmp	.+14     	; 0x822 <vfprintf+0x274>
     814:	60 81       	ld	r22, Z
     816:	71 81       	ldd	r23, Z+1	; 0x01
     818:	82 81       	ldd	r24, Z+2	; 0x02
     81a:	93 81       	ldd	r25, Z+3	; 0x03
     81c:	0c 5f       	subi	r16, 0xFC	; 252
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	06 c0       	rjmp	.+12     	; 0x82e <vfprintf+0x280>
     822:	60 81       	ld	r22, Z
     824:	71 81       	ldd	r23, Z+1	; 0x01
     826:	80 e0       	ldi	r24, 0x00	; 0
     828:	90 e0       	ldi	r25, 0x00	; 0
     82a:	0e 5f       	subi	r16, 0xFE	; 254
     82c:	1f 4f       	sbci	r17, 0xFF	; 255
     82e:	a4 01       	movw	r20, r8
     830:	0e 94 10 08 	call	0x1020	; 0x1020 <__ultoa_invert>
     834:	a8 2e       	mov	r10, r24
     836:	a8 18       	sub	r10, r8
     838:	fb 2d       	mov	r31, r11
     83a:	ff 77       	andi	r31, 0x7F	; 127
     83c:	bf 2e       	mov	r11, r31
     83e:	b6 fe       	sbrs	r11, 6
     840:	0b c0       	rjmp	.+22     	; 0x858 <vfprintf+0x2aa>
     842:	2b 2d       	mov	r18, r11
     844:	2e 7f       	andi	r18, 0xFE	; 254
     846:	a5 14       	cp	r10, r5
     848:	50 f4       	brcc	.+20     	; 0x85e <vfprintf+0x2b0>
     84a:	b4 fe       	sbrs	r11, 4
     84c:	0a c0       	rjmp	.+20     	; 0x862 <vfprintf+0x2b4>
     84e:	b2 fc       	sbrc	r11, 2
     850:	08 c0       	rjmp	.+16     	; 0x862 <vfprintf+0x2b4>
     852:	2b 2d       	mov	r18, r11
     854:	2e 7e       	andi	r18, 0xEE	; 238
     856:	05 c0       	rjmp	.+10     	; 0x862 <vfprintf+0x2b4>
     858:	7a 2c       	mov	r7, r10
     85a:	2b 2d       	mov	r18, r11
     85c:	03 c0       	rjmp	.+6      	; 0x864 <vfprintf+0x2b6>
     85e:	7a 2c       	mov	r7, r10
     860:	01 c0       	rjmp	.+2      	; 0x864 <vfprintf+0x2b6>
     862:	75 2c       	mov	r7, r5
     864:	24 ff       	sbrs	r18, 4
     866:	0d c0       	rjmp	.+26     	; 0x882 <vfprintf+0x2d4>
     868:	fe 01       	movw	r30, r28
     86a:	ea 0d       	add	r30, r10
     86c:	f1 1d       	adc	r31, r1
     86e:	80 81       	ld	r24, Z
     870:	80 33       	cpi	r24, 0x30	; 48
     872:	11 f4       	brne	.+4      	; 0x878 <vfprintf+0x2ca>
     874:	29 7e       	andi	r18, 0xE9	; 233
     876:	09 c0       	rjmp	.+18     	; 0x88a <vfprintf+0x2dc>
     878:	22 ff       	sbrs	r18, 2
     87a:	06 c0       	rjmp	.+12     	; 0x888 <vfprintf+0x2da>
     87c:	73 94       	inc	r7
     87e:	73 94       	inc	r7
     880:	04 c0       	rjmp	.+8      	; 0x88a <vfprintf+0x2dc>
     882:	82 2f       	mov	r24, r18
     884:	86 78       	andi	r24, 0x86	; 134
     886:	09 f0       	breq	.+2      	; 0x88a <vfprintf+0x2dc>
     888:	73 94       	inc	r7
     88a:	23 fd       	sbrc	r18, 3
     88c:	13 c0       	rjmp	.+38     	; 0x8b4 <vfprintf+0x306>
     88e:	20 ff       	sbrs	r18, 0
     890:	06 c0       	rjmp	.+12     	; 0x89e <vfprintf+0x2f0>
     892:	5a 2c       	mov	r5, r10
     894:	73 14       	cp	r7, r3
     896:	18 f4       	brcc	.+6      	; 0x89e <vfprintf+0x2f0>
     898:	53 0c       	add	r5, r3
     89a:	57 18       	sub	r5, r7
     89c:	73 2c       	mov	r7, r3
     89e:	73 14       	cp	r7, r3
     8a0:	68 f4       	brcc	.+26     	; 0x8bc <vfprintf+0x30e>
     8a2:	b7 01       	movw	r22, r14
     8a4:	80 e2       	ldi	r24, 0x20	; 32
     8a6:	90 e0       	ldi	r25, 0x00	; 0
     8a8:	2c 87       	std	Y+12, r18	; 0x0c
     8aa:	0e 94 c5 07 	call	0xf8a	; 0xf8a <fputc>
     8ae:	73 94       	inc	r7
     8b0:	2c 85       	ldd	r18, Y+12	; 0x0c
     8b2:	f5 cf       	rjmp	.-22     	; 0x89e <vfprintf+0x2f0>
     8b4:	73 14       	cp	r7, r3
     8b6:	10 f4       	brcc	.+4      	; 0x8bc <vfprintf+0x30e>
     8b8:	37 18       	sub	r3, r7
     8ba:	01 c0       	rjmp	.+2      	; 0x8be <vfprintf+0x310>
     8bc:	31 2c       	mov	r3, r1
     8be:	24 ff       	sbrs	r18, 4
     8c0:	12 c0       	rjmp	.+36     	; 0x8e6 <vfprintf+0x338>
     8c2:	b7 01       	movw	r22, r14
     8c4:	80 e3       	ldi	r24, 0x30	; 48
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	2c 87       	std	Y+12, r18	; 0x0c
     8ca:	0e 94 c5 07 	call	0xf8a	; 0xf8a <fputc>
     8ce:	2c 85       	ldd	r18, Y+12	; 0x0c
     8d0:	22 ff       	sbrs	r18, 2
     8d2:	17 c0       	rjmp	.+46     	; 0x902 <vfprintf+0x354>
     8d4:	21 ff       	sbrs	r18, 1
     8d6:	03 c0       	rjmp	.+6      	; 0x8de <vfprintf+0x330>
     8d8:	88 e5       	ldi	r24, 0x58	; 88
     8da:	90 e0       	ldi	r25, 0x00	; 0
     8dc:	02 c0       	rjmp	.+4      	; 0x8e2 <vfprintf+0x334>
     8de:	88 e7       	ldi	r24, 0x78	; 120
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	b7 01       	movw	r22, r14
     8e4:	0c c0       	rjmp	.+24     	; 0x8fe <vfprintf+0x350>
     8e6:	82 2f       	mov	r24, r18
     8e8:	86 78       	andi	r24, 0x86	; 134
     8ea:	59 f0       	breq	.+22     	; 0x902 <vfprintf+0x354>
     8ec:	21 fd       	sbrc	r18, 1
     8ee:	02 c0       	rjmp	.+4      	; 0x8f4 <vfprintf+0x346>
     8f0:	80 e2       	ldi	r24, 0x20	; 32
     8f2:	01 c0       	rjmp	.+2      	; 0x8f6 <vfprintf+0x348>
     8f4:	8b e2       	ldi	r24, 0x2B	; 43
     8f6:	27 fd       	sbrc	r18, 7
     8f8:	8d e2       	ldi	r24, 0x2D	; 45
     8fa:	b7 01       	movw	r22, r14
     8fc:	90 e0       	ldi	r25, 0x00	; 0
     8fe:	0e 94 c5 07 	call	0xf8a	; 0xf8a <fputc>
     902:	a5 14       	cp	r10, r5
     904:	38 f4       	brcc	.+14     	; 0x914 <vfprintf+0x366>
     906:	b7 01       	movw	r22, r14
     908:	80 e3       	ldi	r24, 0x30	; 48
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	0e 94 c5 07 	call	0xf8a	; 0xf8a <fputc>
     910:	5a 94       	dec	r5
     912:	f7 cf       	rjmp	.-18     	; 0x902 <vfprintf+0x354>
     914:	aa 94       	dec	r10
     916:	f4 01       	movw	r30, r8
     918:	ea 0d       	add	r30, r10
     91a:	f1 1d       	adc	r31, r1
     91c:	80 81       	ld	r24, Z
     91e:	b7 01       	movw	r22, r14
     920:	90 e0       	ldi	r25, 0x00	; 0
     922:	0e 94 c5 07 	call	0xf8a	; 0xf8a <fputc>
     926:	a1 10       	cpse	r10, r1
     928:	f5 cf       	rjmp	.-22     	; 0x914 <vfprintf+0x366>
     92a:	33 20       	and	r3, r3
     92c:	09 f4       	brne	.+2      	; 0x930 <vfprintf+0x382>
     92e:	51 ce       	rjmp	.-862    	; 0x5d2 <vfprintf+0x24>
     930:	b7 01       	movw	r22, r14
     932:	80 e2       	ldi	r24, 0x20	; 32
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	0e 94 c5 07 	call	0xf8a	; 0xf8a <fputc>
     93a:	3a 94       	dec	r3
     93c:	f6 cf       	rjmp	.-20     	; 0x92a <vfprintf+0x37c>
     93e:	f7 01       	movw	r30, r14
     940:	86 81       	ldd	r24, Z+6	; 0x06
     942:	97 81       	ldd	r25, Z+7	; 0x07
     944:	02 c0       	rjmp	.+4      	; 0x94a <vfprintf+0x39c>
     946:	8f ef       	ldi	r24, 0xFF	; 255
     948:	9f ef       	ldi	r25, 0xFF	; 255
     94a:	2c 96       	adiw	r28, 0x0c	; 12
     94c:	e2 e1       	ldi	r30, 0x12	; 18
     94e:	0c 94 bf 08 	jmp	0x117e	; 0x117e <__epilogue_restores__>

00000952 <putval>:
     952:	20 fd       	sbrc	r18, 0
     954:	09 c0       	rjmp	.+18     	; 0x968 <putval+0x16>
     956:	fc 01       	movw	r30, r24
     958:	23 fd       	sbrc	r18, 3
     95a:	05 c0       	rjmp	.+10     	; 0x966 <putval+0x14>
     95c:	22 ff       	sbrs	r18, 2
     95e:	02 c0       	rjmp	.+4      	; 0x964 <putval+0x12>
     960:	73 83       	std	Z+3, r23	; 0x03
     962:	62 83       	std	Z+2, r22	; 0x02
     964:	51 83       	std	Z+1, r21	; 0x01
     966:	40 83       	st	Z, r20
     968:	08 95       	ret

0000096a <mulacc>:
     96a:	44 fd       	sbrc	r20, 4
     96c:	10 c0       	rjmp	.+32     	; 0x98e <mulacc+0x24>
     96e:	46 fd       	sbrc	r20, 6
     970:	10 c0       	rjmp	.+32     	; 0x992 <mulacc+0x28>
     972:	db 01       	movw	r26, r22
     974:	fc 01       	movw	r30, r24
     976:	aa 0f       	add	r26, r26
     978:	bb 1f       	adc	r27, r27
     97a:	ee 1f       	adc	r30, r30
     97c:	ff 1f       	adc	r31, r31
     97e:	10 94       	com	r1
     980:	d1 f7       	brne	.-12     	; 0x976 <mulacc+0xc>
     982:	6a 0f       	add	r22, r26
     984:	7b 1f       	adc	r23, r27
     986:	8e 1f       	adc	r24, r30
     988:	9f 1f       	adc	r25, r31
     98a:	31 e0       	ldi	r19, 0x01	; 1
     98c:	03 c0       	rjmp	.+6      	; 0x994 <mulacc+0x2a>
     98e:	33 e0       	ldi	r19, 0x03	; 3
     990:	01 c0       	rjmp	.+2      	; 0x994 <mulacc+0x2a>
     992:	34 e0       	ldi	r19, 0x04	; 4
     994:	66 0f       	add	r22, r22
     996:	77 1f       	adc	r23, r23
     998:	88 1f       	adc	r24, r24
     99a:	99 1f       	adc	r25, r25
     99c:	31 50       	subi	r19, 0x01	; 1
     99e:	d1 f7       	brne	.-12     	; 0x994 <mulacc+0x2a>
     9a0:	62 0f       	add	r22, r18
     9a2:	71 1d       	adc	r23, r1
     9a4:	81 1d       	adc	r24, r1
     9a6:	91 1d       	adc	r25, r1
     9a8:	08 95       	ret

000009aa <skip_spaces>:
     9aa:	0f 93       	push	r16
     9ac:	1f 93       	push	r17
     9ae:	cf 93       	push	r28
     9b0:	df 93       	push	r29
     9b2:	8c 01       	movw	r16, r24
     9b4:	c8 01       	movw	r24, r16
     9b6:	0e 94 87 07 	call	0xf0e	; 0xf0e <fgetc>
     9ba:	ec 01       	movw	r28, r24
     9bc:	97 fd       	sbrc	r25, 7
     9be:	08 c0       	rjmp	.+16     	; 0x9d0 <skip_spaces+0x26>
     9c0:	0e 94 5e 07 	call	0xebc	; 0xebc <isspace>
     9c4:	89 2b       	or	r24, r25
     9c6:	b1 f7       	brne	.-20     	; 0x9b4 <skip_spaces+0xa>
     9c8:	b8 01       	movw	r22, r16
     9ca:	ce 01       	movw	r24, r28
     9cc:	0e 94 f7 07 	call	0xfee	; 0xfee <ungetc>
     9d0:	ce 01       	movw	r24, r28
     9d2:	df 91       	pop	r29
     9d4:	cf 91       	pop	r28
     9d6:	1f 91       	pop	r17
     9d8:	0f 91       	pop	r16
     9da:	08 95       	ret

000009dc <conv_int>:
     9dc:	8f 92       	push	r8
     9de:	9f 92       	push	r9
     9e0:	af 92       	push	r10
     9e2:	cf 92       	push	r12
     9e4:	df 92       	push	r13
     9e6:	ef 92       	push	r14
     9e8:	ff 92       	push	r15
     9ea:	0f 93       	push	r16
     9ec:	1f 93       	push	r17
     9ee:	cf 93       	push	r28
     9f0:	df 93       	push	r29
     9f2:	ec 01       	movw	r28, r24
     9f4:	a6 2e       	mov	r10, r22
     9f6:	4a 01       	movw	r8, r20
     9f8:	02 2f       	mov	r16, r18
     9fa:	0e 94 87 07 	call	0xf0e	; 0xf0e <fgetc>
     9fe:	ac 01       	movw	r20, r24
     a00:	55 27       	eor	r21, r21
     a02:	4b 32       	cpi	r20, 0x2B	; 43
     a04:	51 05       	cpc	r21, r1
     a06:	21 f0       	breq	.+8      	; 0xa10 <conv_int+0x34>
     a08:	4d 32       	cpi	r20, 0x2D	; 45
     a0a:	51 05       	cpc	r21, r1
     a0c:	51 f4       	brne	.+20     	; 0xa22 <conv_int+0x46>
     a0e:	00 68       	ori	r16, 0x80	; 128
     a10:	aa 94       	dec	r10
     a12:	11 f4       	brne	.+4      	; 0xa18 <conv_int+0x3c>
     a14:	80 e0       	ldi	r24, 0x00	; 0
     a16:	67 c0       	rjmp	.+206    	; 0xae6 <conv_int+0x10a>
     a18:	ce 01       	movw	r24, r28
     a1a:	0e 94 87 07 	call	0xf0e	; 0xf0e <fgetc>
     a1e:	97 fd       	sbrc	r25, 7
     a20:	f9 cf       	rjmp	.-14     	; 0xa14 <conv_int+0x38>
     a22:	10 2f       	mov	r17, r16
     a24:	1d 7f       	andi	r17, 0xFD	; 253
     a26:	30 2f       	mov	r19, r16
     a28:	30 73       	andi	r19, 0x30	; 48
     a2a:	01 f5       	brne	.+64     	; 0xa6c <conv_int+0x90>
     a2c:	80 33       	cpi	r24, 0x30	; 48
     a2e:	f1 f4       	brne	.+60     	; 0xa6c <conv_int+0x90>
     a30:	ff 24       	eor	r15, r15
     a32:	fa 94       	dec	r15
     a34:	fa 0c       	add	r15, r10
     a36:	09 f4       	brne	.+2      	; 0xa3a <conv_int+0x5e>
     a38:	42 c0       	rjmp	.+132    	; 0xabe <conv_int+0xe2>
     a3a:	ce 01       	movw	r24, r28
     a3c:	0e 94 87 07 	call	0xf0e	; 0xf0e <fgetc>
     a40:	97 fd       	sbrc	r25, 7
     a42:	3d c0       	rjmp	.+122    	; 0xabe <conv_int+0xe2>
     a44:	38 2f       	mov	r19, r24
     a46:	3f 7d       	andi	r19, 0xDF	; 223
     a48:	38 35       	cpi	r19, 0x58	; 88
     a4a:	51 f4       	brne	.+20     	; 0xa60 <conv_int+0x84>
     a4c:	12 64       	ori	r17, 0x42	; 66
     a4e:	aa 94       	dec	r10
     a50:	aa 94       	dec	r10
     a52:	a9 f1       	breq	.+106    	; 0xabe <conv_int+0xe2>
     a54:	ce 01       	movw	r24, r28
     a56:	0e 94 87 07 	call	0xf0e	; 0xf0e <fgetc>
     a5a:	97 ff       	sbrs	r25, 7
     a5c:	07 c0       	rjmp	.+14     	; 0xa6c <conv_int+0x90>
     a5e:	2f c0       	rjmp	.+94     	; 0xabe <conv_int+0xe2>
     a60:	06 ff       	sbrs	r16, 6
     a62:	02 c0       	rjmp	.+4      	; 0xa68 <conv_int+0x8c>
     a64:	12 60       	ori	r17, 0x02	; 2
     a66:	01 c0       	rjmp	.+2      	; 0xa6a <conv_int+0x8e>
     a68:	12 61       	ori	r17, 0x12	; 18
     a6a:	af 2c       	mov	r10, r15
     a6c:	c1 2c       	mov	r12, r1
     a6e:	d1 2c       	mov	r13, r1
     a70:	76 01       	movw	r14, r12
     a72:	20 ed       	ldi	r18, 0xD0	; 208
     a74:	28 0f       	add	r18, r24
     a76:	28 30       	cpi	r18, 0x08	; 8
     a78:	80 f0       	brcs	.+32     	; 0xa9a <conv_int+0xbe>
     a7a:	14 ff       	sbrs	r17, 4
     a7c:	04 c0       	rjmp	.+8      	; 0xa86 <conv_int+0xaa>
     a7e:	be 01       	movw	r22, r28
     a80:	0e 94 f7 07 	call	0xfee	; 0xfee <ungetc>
     a84:	19 c0       	rjmp	.+50     	; 0xab8 <conv_int+0xdc>
     a86:	2a 30       	cpi	r18, 0x0A	; 10
     a88:	40 f0       	brcs	.+16     	; 0xa9a <conv_int+0xbe>
     a8a:	16 ff       	sbrs	r17, 6
     a8c:	f8 cf       	rjmp	.-16     	; 0xa7e <conv_int+0xa2>
     a8e:	2f 7d       	andi	r18, 0xDF	; 223
     a90:	3f ee       	ldi	r19, 0xEF	; 239
     a92:	32 0f       	add	r19, r18
     a94:	36 30       	cpi	r19, 0x06	; 6
     a96:	98 f7       	brcc	.-26     	; 0xa7e <conv_int+0xa2>
     a98:	27 50       	subi	r18, 0x07	; 7
     a9a:	41 2f       	mov	r20, r17
     a9c:	c7 01       	movw	r24, r14
     a9e:	b6 01       	movw	r22, r12
     aa0:	0e 94 b5 04 	call	0x96a	; 0x96a <mulacc>
     aa4:	6b 01       	movw	r12, r22
     aa6:	7c 01       	movw	r14, r24
     aa8:	12 60       	ori	r17, 0x02	; 2
     aaa:	aa 94       	dec	r10
     aac:	59 f0       	breq	.+22     	; 0xac4 <conv_int+0xe8>
     aae:	ce 01       	movw	r24, r28
     ab0:	0e 94 87 07 	call	0xf0e	; 0xf0e <fgetc>
     ab4:	97 ff       	sbrs	r25, 7
     ab6:	dd cf       	rjmp	.-70     	; 0xa72 <conv_int+0x96>
     ab8:	11 fd       	sbrc	r17, 1
     aba:	04 c0       	rjmp	.+8      	; 0xac4 <conv_int+0xe8>
     abc:	ab cf       	rjmp	.-170    	; 0xa14 <conv_int+0x38>
     abe:	c1 2c       	mov	r12, r1
     ac0:	d1 2c       	mov	r13, r1
     ac2:	76 01       	movw	r14, r12
     ac4:	17 ff       	sbrs	r17, 7
     ac6:	08 c0       	rjmp	.+16     	; 0xad8 <conv_int+0xfc>
     ac8:	f0 94       	com	r15
     aca:	e0 94       	com	r14
     acc:	d0 94       	com	r13
     ace:	c0 94       	com	r12
     ad0:	c1 1c       	adc	r12, r1
     ad2:	d1 1c       	adc	r13, r1
     ad4:	e1 1c       	adc	r14, r1
     ad6:	f1 1c       	adc	r15, r1
     ad8:	21 2f       	mov	r18, r17
     ada:	b7 01       	movw	r22, r14
     adc:	a6 01       	movw	r20, r12
     ade:	c4 01       	movw	r24, r8
     ae0:	0e 94 a9 04 	call	0x952	; 0x952 <putval>
     ae4:	81 e0       	ldi	r24, 0x01	; 1
     ae6:	df 91       	pop	r29
     ae8:	cf 91       	pop	r28
     aea:	1f 91       	pop	r17
     aec:	0f 91       	pop	r16
     aee:	ff 90       	pop	r15
     af0:	ef 90       	pop	r14
     af2:	df 90       	pop	r13
     af4:	cf 90       	pop	r12
     af6:	af 90       	pop	r10
     af8:	9f 90       	pop	r9
     afa:	8f 90       	pop	r8
     afc:	08 95       	ret

00000afe <conv_brk>:
     afe:	a1 e2       	ldi	r26, 0x21	; 33
     b00:	b0 e0       	ldi	r27, 0x00	; 0
     b02:	e5 e8       	ldi	r30, 0x85	; 133
     b04:	f5 e0       	ldi	r31, 0x05	; 5
     b06:	0c 94 a8 08 	jmp	0x1150	; 0x1150 <__prologue_saves__+0xa>
     b0a:	5c 01       	movw	r10, r24
     b0c:	7a 01       	movw	r14, r20
     b0e:	8e 01       	movw	r16, r28
     b10:	0f 5f       	subi	r16, 0xFF	; 255
     b12:	1f 4f       	sbci	r17, 0xFF	; 255
     b14:	68 01       	movw	r12, r16
     b16:	80 e2       	ldi	r24, 0x20	; 32
     b18:	d8 01       	movw	r26, r16
     b1a:	1d 92       	st	X+, r1
     b1c:	8a 95       	dec	r24
     b1e:	e9 f7       	brne	.-6      	; 0xb1a <conv_brk+0x1c>
     b20:	f5 01       	movw	r30, r10
     b22:	73 80       	ldd	r7, Z+3	; 0x03
     b24:	40 e0       	ldi	r20, 0x00	; 0
     b26:	50 e0       	ldi	r21, 0x00	; 0
     b28:	81 2c       	mov	r8, r1
     b2a:	b0 e0       	ldi	r27, 0x00	; 0
     b2c:	91 2c       	mov	r9, r1
     b2e:	81 e0       	ldi	r24, 0x01	; 1
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	f9 01       	movw	r30, r18
     b34:	73 fc       	sbrc	r7, 3
     b36:	a5 91       	lpm	r26, Z+
     b38:	73 fe       	sbrs	r7, 3
     b3a:	a1 91       	ld	r26, Z+
     b3c:	8f 01       	movw	r16, r30
     b3e:	7a 2f       	mov	r23, r26
     b40:	9f 01       	movw	r18, r30
     b42:	a1 11       	cpse	r26, r1
     b44:	03 c0       	rjmp	.+6      	; 0xb4c <conv_brk+0x4e>
     b46:	80 e0       	ldi	r24, 0x00	; 0
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	7d c0       	rjmp	.+250    	; 0xc46 <conv_brk+0x148>
     b4c:	ae 35       	cpi	r26, 0x5E	; 94
     b4e:	19 f4       	brne	.+6      	; 0xb56 <conv_brk+0x58>
     b50:	41 15       	cp	r20, r1
     b52:	51 05       	cpc	r21, r1
     b54:	59 f1       	breq	.+86     	; 0xbac <conv_brk+0xae>
     b56:	e9 2d       	mov	r30, r9
     b58:	f0 e0       	ldi	r31, 0x00	; 0
     b5a:	e4 17       	cp	r30, r20
     b5c:	f5 07       	cpc	r31, r21
     b5e:	3c f4       	brge	.+14     	; 0xb6e <conv_brk+0x70>
     b60:	ad 35       	cpi	r26, 0x5D	; 93
     b62:	69 f1       	breq	.+90     	; 0xbbe <conv_brk+0xc0>
     b64:	ad 32       	cpi	r26, 0x2D	; 45
     b66:	19 f4       	brne	.+6      	; 0xb6e <conv_brk+0x70>
     b68:	bb 23       	and	r27, r27
     b6a:	19 f1       	breq	.+70     	; 0xbb2 <conv_brk+0xb4>
     b6c:	03 c0       	rjmp	.+6      	; 0xb74 <conv_brk+0x76>
     b6e:	b1 11       	cpse	r27, r1
     b70:	01 c0       	rjmp	.+2      	; 0xb74 <conv_brk+0x76>
     b72:	8a 2e       	mov	r8, r26
     b74:	e7 2f       	mov	r30, r23
     b76:	e6 95       	lsr	r30
     b78:	e6 95       	lsr	r30
     b7a:	e6 95       	lsr	r30
     b7c:	86 01       	movw	r16, r12
     b7e:	0e 0f       	add	r16, r30
     b80:	11 1d       	adc	r17, r1
     b82:	f8 01       	movw	r30, r16
     b84:	a7 2f       	mov	r26, r23
     b86:	a7 70       	andi	r26, 0x07	; 7
     b88:	8c 01       	movw	r16, r24
     b8a:	02 c0       	rjmp	.+4      	; 0xb90 <conv_brk+0x92>
     b8c:	00 0f       	add	r16, r16
     b8e:	11 1f       	adc	r17, r17
     b90:	aa 95       	dec	r26
     b92:	e2 f7       	brpl	.-8      	; 0xb8c <conv_brk+0x8e>
     b94:	d8 01       	movw	r26, r16
     b96:	b0 81       	ld	r27, Z
     b98:	ba 2b       	or	r27, r26
     b9a:	b0 83       	st	Z, r27
     b9c:	78 15       	cp	r23, r8
     b9e:	59 f0       	breq	.+22     	; 0xbb6 <conv_brk+0xb8>
     ba0:	78 15       	cp	r23, r8
     ba2:	10 f4       	brcc	.+4      	; 0xba8 <conv_brk+0xaa>
     ba4:	7f 5f       	subi	r23, 0xFF	; 255
     ba6:	e6 cf       	rjmp	.-52     	; 0xb74 <conv_brk+0x76>
     ba8:	71 50       	subi	r23, 0x01	; 1
     baa:	e4 cf       	rjmp	.-56     	; 0xb74 <conv_brk+0x76>
     bac:	99 24       	eor	r9, r9
     bae:	93 94       	inc	r9
     bb0:	03 c0       	rjmp	.+6      	; 0xbb8 <conv_brk+0xba>
     bb2:	b1 e0       	ldi	r27, 0x01	; 1
     bb4:	01 c0       	rjmp	.+2      	; 0xbb8 <conv_brk+0xba>
     bb6:	b0 e0       	ldi	r27, 0x00	; 0
     bb8:	4f 5f       	subi	r20, 0xFF	; 255
     bba:	5f 4f       	sbci	r21, 0xFF	; 255
     bbc:	ba cf       	rjmp	.-140    	; 0xb32 <conv_brk+0x34>
     bbe:	bb 23       	and	r27, r27
     bc0:	19 f0       	breq	.+6      	; 0xbc8 <conv_brk+0xca>
     bc2:	8e 81       	ldd	r24, Y+6	; 0x06
     bc4:	80 62       	ori	r24, 0x20	; 32
     bc6:	8e 83       	std	Y+6, r24	; 0x06
     bc8:	91 10       	cpse	r9, r1
     bca:	03 c0       	rjmp	.+6      	; 0xbd2 <conv_brk+0xd4>
     bcc:	99 24       	eor	r9, r9
     bce:	93 94       	inc	r9
     bd0:	15 c0       	rjmp	.+42     	; 0xbfc <conv_brk+0xfe>
     bd2:	f6 01       	movw	r30, r12
     bd4:	ce 01       	movw	r24, r28
     bd6:	81 96       	adiw	r24, 0x21	; 33
     bd8:	20 81       	ld	r18, Z
     bda:	20 95       	com	r18
     bdc:	21 93       	st	Z+, r18
     bde:	e8 17       	cp	r30, r24
     be0:	f9 07       	cpc	r31, r25
     be2:	d1 f7       	brne	.-12     	; 0xbd8 <conv_brk+0xda>
     be4:	f3 cf       	rjmp	.-26     	; 0xbcc <conv_brk+0xce>
     be6:	e1 14       	cp	r14, r1
     be8:	f1 04       	cpc	r15, r1
     bea:	29 f0       	breq	.+10     	; 0xbf6 <conv_brk+0xf8>
     bec:	d7 01       	movw	r26, r14
     bee:	8c 93       	st	X, r24
     bf0:	f7 01       	movw	r30, r14
     bf2:	31 96       	adiw	r30, 0x01	; 1
     bf4:	7f 01       	movw	r14, r30
     bf6:	61 50       	subi	r22, 0x01	; 1
     bf8:	01 f1       	breq	.+64     	; 0xc3a <conv_brk+0x13c>
     bfa:	91 2c       	mov	r9, r1
     bfc:	c5 01       	movw	r24, r10
     bfe:	69 a3       	std	Y+33, r22	; 0x21
     c00:	0e 94 87 07 	call	0xf0e	; 0xf0e <fgetc>
     c04:	69 a1       	ldd	r22, Y+33	; 0x21
     c06:	97 fd       	sbrc	r25, 7
     c08:	16 c0       	rjmp	.+44     	; 0xc36 <conv_brk+0x138>
     c0a:	28 2f       	mov	r18, r24
     c0c:	26 95       	lsr	r18
     c0e:	26 95       	lsr	r18
     c10:	26 95       	lsr	r18
     c12:	f6 01       	movw	r30, r12
     c14:	e2 0f       	add	r30, r18
     c16:	f1 1d       	adc	r31, r1
     c18:	20 81       	ld	r18, Z
     c1a:	30 e0       	ldi	r19, 0x00	; 0
     c1c:	ac 01       	movw	r20, r24
     c1e:	47 70       	andi	r20, 0x07	; 7
     c20:	55 27       	eor	r21, r21
     c22:	02 c0       	rjmp	.+4      	; 0xc28 <conv_brk+0x12a>
     c24:	35 95       	asr	r19
     c26:	27 95       	ror	r18
     c28:	4a 95       	dec	r20
     c2a:	e2 f7       	brpl	.-8      	; 0xc24 <conv_brk+0x126>
     c2c:	20 fd       	sbrc	r18, 0
     c2e:	db cf       	rjmp	.-74     	; 0xbe6 <conv_brk+0xe8>
     c30:	b5 01       	movw	r22, r10
     c32:	0e 94 f7 07 	call	0xfee	; 0xfee <ungetc>
     c36:	91 10       	cpse	r9, r1
     c38:	86 cf       	rjmp	.-244    	; 0xb46 <conv_brk+0x48>
     c3a:	e1 14       	cp	r14, r1
     c3c:	f1 04       	cpc	r15, r1
     c3e:	11 f0       	breq	.+4      	; 0xc44 <conv_brk+0x146>
     c40:	d7 01       	movw	r26, r14
     c42:	1c 92       	st	X, r1
     c44:	c8 01       	movw	r24, r16
     c46:	a1 96       	adiw	r28, 0x21	; 33
     c48:	ed e0       	ldi	r30, 0x0D	; 13
     c4a:	0c 94 c4 08 	jmp	0x1188	; 0x1188 <__epilogue_restores__+0xa>

00000c4e <vfscanf>:
     c4e:	4f 92       	push	r4
     c50:	5f 92       	push	r5
     c52:	7f 92       	push	r7
     c54:	8f 92       	push	r8
     c56:	9f 92       	push	r9
     c58:	af 92       	push	r10
     c5a:	bf 92       	push	r11
     c5c:	cf 92       	push	r12
     c5e:	df 92       	push	r13
     c60:	ef 92       	push	r14
     c62:	ff 92       	push	r15
     c64:	0f 93       	push	r16
     c66:	1f 93       	push	r17
     c68:	cf 93       	push	r28
     c6a:	df 93       	push	r29
     c6c:	1f 92       	push	r1
     c6e:	cd b7       	in	r28, 0x3d	; 61
     c70:	de b7       	in	r29, 0x3e	; 62
     c72:	8c 01       	movw	r16, r24
     c74:	2b 01       	movw	r4, r22
     c76:	7a 01       	movw	r14, r20
     c78:	fc 01       	movw	r30, r24
     c7a:	17 82       	std	Z+7, r1	; 0x07
     c7c:	16 82       	std	Z+6, r1	; 0x06
     c7e:	a1 2c       	mov	r10, r1
     c80:	f8 01       	movw	r30, r16
     c82:	d3 80       	ldd	r13, Z+3	; 0x03
     c84:	f2 01       	movw	r30, r4
     c86:	d3 fc       	sbrc	r13, 3
     c88:	85 91       	lpm	r24, Z+
     c8a:	d3 fe       	sbrs	r13, 3
     c8c:	81 91       	ld	r24, Z+
     c8e:	38 2f       	mov	r19, r24
     c90:	2f 01       	movw	r4, r30
     c92:	88 23       	and	r24, r24
     c94:	09 f4       	brne	.+2      	; 0xc98 <vfscanf+0x4a>
     c96:	fc c0       	rjmp	.+504    	; 0xe90 <vfscanf+0x242>
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	39 83       	std	Y+1, r19	; 0x01
     c9c:	0e 94 5e 07 	call	0xebc	; 0xebc <isspace>
     ca0:	39 81       	ldd	r19, Y+1	; 0x01
     ca2:	89 2b       	or	r24, r25
     ca4:	21 f0       	breq	.+8      	; 0xcae <vfscanf+0x60>
     ca6:	c8 01       	movw	r24, r16
     ca8:	0e 94 d5 04 	call	0x9aa	; 0x9aa <skip_spaces>
     cac:	e9 cf       	rjmp	.-46     	; 0xc80 <vfscanf+0x32>
     cae:	35 32       	cpi	r19, 0x25	; 37
     cb0:	41 f4       	brne	.+16     	; 0xcc2 <vfscanf+0x74>
     cb2:	f2 01       	movw	r30, r4
     cb4:	d3 fc       	sbrc	r13, 3
     cb6:	35 91       	lpm	r19, Z+
     cb8:	d3 fe       	sbrs	r13, 3
     cba:	31 91       	ld	r19, Z+
     cbc:	2f 01       	movw	r4, r30
     cbe:	35 32       	cpi	r19, 0x25	; 37
     cc0:	69 f4       	brne	.+26     	; 0xcdc <vfscanf+0x8e>
     cc2:	c8 01       	movw	r24, r16
     cc4:	39 83       	std	Y+1, r19	; 0x01
     cc6:	0e 94 87 07 	call	0xf0e	; 0xf0e <fgetc>
     cca:	39 81       	ldd	r19, Y+1	; 0x01
     ccc:	97 fd       	sbrc	r25, 7
     cce:	de c0       	rjmp	.+444    	; 0xe8c <vfscanf+0x23e>
     cd0:	38 17       	cp	r19, r24
     cd2:	b1 f2       	breq	.-84     	; 0xc80 <vfscanf+0x32>
     cd4:	b8 01       	movw	r22, r16
     cd6:	0e 94 f7 07 	call	0xfee	; 0xfee <ungetc>
     cda:	da c0       	rjmp	.+436    	; 0xe90 <vfscanf+0x242>
     cdc:	3a 32       	cpi	r19, 0x2A	; 42
     cde:	41 f4       	brne	.+16     	; 0xcf0 <vfscanf+0xa2>
     ce0:	d3 fc       	sbrc	r13, 3
     ce2:	35 91       	lpm	r19, Z+
     ce4:	d3 fe       	sbrs	r13, 3
     ce6:	31 91       	ld	r19, Z+
     ce8:	2f 01       	movw	r4, r30
     cea:	bb 24       	eor	r11, r11
     cec:	b3 94       	inc	r11
     cee:	01 c0       	rjmp	.+2      	; 0xcf2 <vfscanf+0xa4>
     cf0:	b1 2c       	mov	r11, r1
     cf2:	71 2c       	mov	r7, r1
     cf4:	20 ed       	ldi	r18, 0xD0	; 208
     cf6:	23 0f       	add	r18, r19
     cf8:	2a 30       	cpi	r18, 0x0A	; 10
     cfa:	90 f4       	brcc	.+36     	; 0xd20 <vfscanf+0xd2>
     cfc:	fb 2d       	mov	r31, r11
     cfe:	f2 60       	ori	r31, 0x02	; 2
     d00:	bf 2e       	mov	r11, r31
     d02:	67 2d       	mov	r22, r7
     d04:	70 e0       	ldi	r23, 0x00	; 0
     d06:	80 e0       	ldi	r24, 0x00	; 0
     d08:	90 e0       	ldi	r25, 0x00	; 0
     d0a:	40 e2       	ldi	r20, 0x20	; 32
     d0c:	0e 94 b5 04 	call	0x96a	; 0x96a <mulacc>
     d10:	76 2e       	mov	r7, r22
     d12:	f2 01       	movw	r30, r4
     d14:	d3 fc       	sbrc	r13, 3
     d16:	35 91       	lpm	r19, Z+
     d18:	d3 fe       	sbrs	r13, 3
     d1a:	31 91       	ld	r19, Z+
     d1c:	2f 01       	movw	r4, r30
     d1e:	ea cf       	rjmp	.-44     	; 0xcf4 <vfscanf+0xa6>
     d20:	b1 fe       	sbrs	r11, 1
     d22:	03 c0       	rjmp	.+6      	; 0xd2a <vfscanf+0xdc>
     d24:	71 10       	cpse	r7, r1
     d26:	03 c0       	rjmp	.+6      	; 0xd2e <vfscanf+0xe0>
     d28:	b3 c0       	rjmp	.+358    	; 0xe90 <vfscanf+0x242>
     d2a:	77 24       	eor	r7, r7
     d2c:	7a 94       	dec	r7
     d2e:	38 36       	cpi	r19, 0x68	; 104
     d30:	19 f0       	breq	.+6      	; 0xd38 <vfscanf+0xea>
     d32:	3c 36       	cpi	r19, 0x6C	; 108
     d34:	61 f0       	breq	.+24     	; 0xd4e <vfscanf+0x100>
     d36:	14 c0       	rjmp	.+40     	; 0xd60 <vfscanf+0x112>
     d38:	f2 01       	movw	r30, r4
     d3a:	d3 fc       	sbrc	r13, 3
     d3c:	35 91       	lpm	r19, Z+
     d3e:	d3 fe       	sbrs	r13, 3
     d40:	31 91       	ld	r19, Z+
     d42:	2f 01       	movw	r4, r30
     d44:	38 36       	cpi	r19, 0x68	; 104
     d46:	61 f4       	brne	.+24     	; 0xd60 <vfscanf+0x112>
     d48:	fb 2d       	mov	r31, r11
     d4a:	f8 60       	ori	r31, 0x08	; 8
     d4c:	bf 2e       	mov	r11, r31
     d4e:	8b 2d       	mov	r24, r11
     d50:	84 60       	ori	r24, 0x04	; 4
     d52:	b8 2e       	mov	r11, r24
     d54:	f2 01       	movw	r30, r4
     d56:	d3 fc       	sbrc	r13, 3
     d58:	35 91       	lpm	r19, Z+
     d5a:	d3 fe       	sbrs	r13, 3
     d5c:	31 91       	ld	r19, Z+
     d5e:	2f 01       	movw	r4, r30
     d60:	33 23       	and	r19, r19
     d62:	09 f4       	brne	.+2      	; 0xd66 <vfscanf+0x118>
     d64:	95 c0       	rjmp	.+298    	; 0xe90 <vfscanf+0x242>
     d66:	63 2f       	mov	r22, r19
     d68:	70 e0       	ldi	r23, 0x00	; 0
     d6a:	80 e7       	ldi	r24, 0x70	; 112
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	39 83       	std	Y+1, r19	; 0x01
     d70:	0e 94 66 07 	call	0xecc	; 0xecc <strchr_P>
     d74:	39 81       	ldd	r19, Y+1	; 0x01
     d76:	89 2b       	or	r24, r25
     d78:	09 f4       	brne	.+2      	; 0xd7c <vfscanf+0x12e>
     d7a:	8a c0       	rjmp	.+276    	; 0xe90 <vfscanf+0x242>
     d7c:	b0 fc       	sbrc	r11, 0
     d7e:	07 c0       	rjmp	.+14     	; 0xd8e <vfscanf+0x140>
     d80:	f7 01       	movw	r30, r14
     d82:	c0 80       	ld	r12, Z
     d84:	d1 80       	ldd	r13, Z+1	; 0x01
     d86:	c7 01       	movw	r24, r14
     d88:	02 96       	adiw	r24, 0x02	; 2
     d8a:	7c 01       	movw	r14, r24
     d8c:	02 c0       	rjmp	.+4      	; 0xd92 <vfscanf+0x144>
     d8e:	c1 2c       	mov	r12, r1
     d90:	d1 2c       	mov	r13, r1
     d92:	3e 36       	cpi	r19, 0x6E	; 110
     d94:	51 f4       	brne	.+20     	; 0xdaa <vfscanf+0x15c>
     d96:	f8 01       	movw	r30, r16
     d98:	46 81       	ldd	r20, Z+6	; 0x06
     d9a:	57 81       	ldd	r21, Z+7	; 0x07
     d9c:	60 e0       	ldi	r22, 0x00	; 0
     d9e:	70 e0       	ldi	r23, 0x00	; 0
     da0:	2b 2d       	mov	r18, r11
     da2:	c6 01       	movw	r24, r12
     da4:	0e 94 a9 04 	call	0x952	; 0x952 <putval>
     da8:	6b cf       	rjmp	.-298    	; 0xc80 <vfscanf+0x32>
     daa:	33 36       	cpi	r19, 0x63	; 99
     dac:	a1 f4       	brne	.+40     	; 0xdd6 <vfscanf+0x188>
     dae:	b1 fc       	sbrc	r11, 1
     db0:	02 c0       	rjmp	.+4      	; 0xdb6 <vfscanf+0x168>
     db2:	77 24       	eor	r7, r7
     db4:	73 94       	inc	r7
     db6:	c8 01       	movw	r24, r16
     db8:	0e 94 87 07 	call	0xf0e	; 0xf0e <fgetc>
     dbc:	97 fd       	sbrc	r25, 7
     dbe:	66 c0       	rjmp	.+204    	; 0xe8c <vfscanf+0x23e>
     dc0:	c1 14       	cp	r12, r1
     dc2:	d1 04       	cpc	r13, r1
     dc4:	29 f0       	breq	.+10     	; 0xdd0 <vfscanf+0x182>
     dc6:	f6 01       	movw	r30, r12
     dc8:	80 83       	st	Z, r24
     dca:	c6 01       	movw	r24, r12
     dcc:	01 96       	adiw	r24, 0x01	; 1
     dce:	6c 01       	movw	r12, r24
     dd0:	7a 94       	dec	r7
     dd2:	89 f7       	brne	.-30     	; 0xdb6 <vfscanf+0x168>
     dd4:	57 c0       	rjmp	.+174    	; 0xe84 <vfscanf+0x236>
     dd6:	3b 35       	cpi	r19, 0x5B	; 91
     dd8:	59 f4       	brne	.+22     	; 0xdf0 <vfscanf+0x1a2>
     dda:	92 01       	movw	r18, r4
     ddc:	a6 01       	movw	r20, r12
     dde:	67 2d       	mov	r22, r7
     de0:	c8 01       	movw	r24, r16
     de2:	0e 94 7f 05 	call	0xafe	; 0xafe <conv_brk>
     de6:	2c 01       	movw	r4, r24
     de8:	00 97       	sbiw	r24, 0x00	; 0
     dea:	09 f0       	breq	.+2      	; 0xdee <vfscanf+0x1a0>
     dec:	4b c0       	rjmp	.+150    	; 0xe84 <vfscanf+0x236>
     dee:	45 c0       	rjmp	.+138    	; 0xe7a <vfscanf+0x22c>
     df0:	c8 01       	movw	r24, r16
     df2:	39 83       	std	Y+1, r19	; 0x01
     df4:	0e 94 d5 04 	call	0x9aa	; 0x9aa <skip_spaces>
     df8:	39 81       	ldd	r19, Y+1	; 0x01
     dfa:	97 fd       	sbrc	r25, 7
     dfc:	47 c0       	rjmp	.+142    	; 0xe8c <vfscanf+0x23e>
     dfe:	3f 36       	cpi	r19, 0x6F	; 111
     e00:	69 f1       	breq	.+90     	; 0xe5c <vfscanf+0x20e>
     e02:	28 f4       	brcc	.+10     	; 0xe0e <vfscanf+0x1c0>
     e04:	34 36       	cpi	r19, 0x64	; 100
     e06:	31 f1       	breq	.+76     	; 0xe54 <vfscanf+0x206>
     e08:	39 36       	cpi	r19, 0x69	; 105
     e0a:	79 f1       	breq	.+94     	; 0xe6a <vfscanf+0x21c>
     e0c:	2b c0       	rjmp	.+86     	; 0xe64 <vfscanf+0x216>
     e0e:	33 37       	cpi	r19, 0x73	; 115
     e10:	69 f0       	breq	.+26     	; 0xe2c <vfscanf+0x1de>
     e12:	35 37       	cpi	r19, 0x75	; 117
     e14:	f9 f0       	breq	.+62     	; 0xe54 <vfscanf+0x206>
     e16:	26 c0       	rjmp	.+76     	; 0xe64 <vfscanf+0x216>
     e18:	c1 14       	cp	r12, r1
     e1a:	d1 04       	cpc	r13, r1
     e1c:	29 f0       	breq	.+10     	; 0xe28 <vfscanf+0x1da>
     e1e:	f6 01       	movw	r30, r12
     e20:	80 82       	st	Z, r8
     e22:	c6 01       	movw	r24, r12
     e24:	01 96       	adiw	r24, 0x01	; 1
     e26:	6c 01       	movw	r12, r24
     e28:	7a 94       	dec	r7
     e2a:	71 f0       	breq	.+28     	; 0xe48 <vfscanf+0x1fa>
     e2c:	c8 01       	movw	r24, r16
     e2e:	0e 94 87 07 	call	0xf0e	; 0xf0e <fgetc>
     e32:	4c 01       	movw	r8, r24
     e34:	97 fd       	sbrc	r25, 7
     e36:	08 c0       	rjmp	.+16     	; 0xe48 <vfscanf+0x1fa>
     e38:	0e 94 5e 07 	call	0xebc	; 0xebc <isspace>
     e3c:	89 2b       	or	r24, r25
     e3e:	61 f3       	breq	.-40     	; 0xe18 <vfscanf+0x1ca>
     e40:	b8 01       	movw	r22, r16
     e42:	c4 01       	movw	r24, r8
     e44:	0e 94 f7 07 	call	0xfee	; 0xfee <ungetc>
     e48:	c1 14       	cp	r12, r1
     e4a:	d1 04       	cpc	r13, r1
     e4c:	d9 f0       	breq	.+54     	; 0xe84 <vfscanf+0x236>
     e4e:	f6 01       	movw	r30, r12
     e50:	10 82       	st	Z, r1
     e52:	18 c0       	rjmp	.+48     	; 0xe84 <vfscanf+0x236>
     e54:	fb 2d       	mov	r31, r11
     e56:	f0 62       	ori	r31, 0x20	; 32
     e58:	bf 2e       	mov	r11, r31
     e5a:	07 c0       	rjmp	.+14     	; 0xe6a <vfscanf+0x21c>
     e5c:	8b 2d       	mov	r24, r11
     e5e:	80 61       	ori	r24, 0x10	; 16
     e60:	b8 2e       	mov	r11, r24
     e62:	03 c0       	rjmp	.+6      	; 0xe6a <vfscanf+0x21c>
     e64:	9b 2d       	mov	r25, r11
     e66:	90 64       	ori	r25, 0x40	; 64
     e68:	b9 2e       	mov	r11, r25
     e6a:	2b 2d       	mov	r18, r11
     e6c:	a6 01       	movw	r20, r12
     e6e:	67 2d       	mov	r22, r7
     e70:	c8 01       	movw	r24, r16
     e72:	0e 94 ee 04 	call	0x9dc	; 0x9dc <conv_int>
     e76:	81 11       	cpse	r24, r1
     e78:	05 c0       	rjmp	.+10     	; 0xe84 <vfscanf+0x236>
     e7a:	f8 01       	movw	r30, r16
     e7c:	83 81       	ldd	r24, Z+3	; 0x03
     e7e:	80 73       	andi	r24, 0x30	; 48
     e80:	29 f4       	brne	.+10     	; 0xe8c <vfscanf+0x23e>
     e82:	06 c0       	rjmp	.+12     	; 0xe90 <vfscanf+0x242>
     e84:	b0 fc       	sbrc	r11, 0
     e86:	fc ce       	rjmp	.-520    	; 0xc80 <vfscanf+0x32>
     e88:	a3 94       	inc	r10
     e8a:	fa ce       	rjmp	.-524    	; 0xc80 <vfscanf+0x32>
     e8c:	aa 20       	and	r10, r10
     e8e:	19 f0       	breq	.+6      	; 0xe96 <vfscanf+0x248>
     e90:	8a 2d       	mov	r24, r10
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	02 c0       	rjmp	.+4      	; 0xe9a <vfscanf+0x24c>
     e96:	8f ef       	ldi	r24, 0xFF	; 255
     e98:	9f ef       	ldi	r25, 0xFF	; 255
     e9a:	0f 90       	pop	r0
     e9c:	df 91       	pop	r29
     e9e:	cf 91       	pop	r28
     ea0:	1f 91       	pop	r17
     ea2:	0f 91       	pop	r16
     ea4:	ff 90       	pop	r15
     ea6:	ef 90       	pop	r14
     ea8:	df 90       	pop	r13
     eaa:	cf 90       	pop	r12
     eac:	bf 90       	pop	r11
     eae:	af 90       	pop	r10
     eb0:	9f 90       	pop	r9
     eb2:	8f 90       	pop	r8
     eb4:	7f 90       	pop	r7
     eb6:	5f 90       	pop	r5
     eb8:	4f 90       	pop	r4
     eba:	08 95       	ret

00000ebc <isspace>:
     ebc:	91 11       	cpse	r25, r1
     ebe:	0e c1       	rjmp	.+540    	; 0x10dc <__ctype_isfalse>
     ec0:	80 32       	cpi	r24, 0x20	; 32
     ec2:	19 f0       	breq	.+6      	; 0xeca <isspace+0xe>
     ec4:	89 50       	subi	r24, 0x09	; 9
     ec6:	85 50       	subi	r24, 0x05	; 5
     ec8:	d0 f7       	brcc	.-12     	; 0xebe <isspace+0x2>
     eca:	08 95       	ret

00000ecc <strchr_P>:
     ecc:	fc 01       	movw	r30, r24
     ece:	05 90       	lpm	r0, Z+
     ed0:	06 16       	cp	r0, r22
     ed2:	21 f0       	breq	.+8      	; 0xedc <strchr_P+0x10>
     ed4:	00 20       	and	r0, r0
     ed6:	d9 f7       	brne	.-10     	; 0xece <strchr_P+0x2>
     ed8:	c0 01       	movw	r24, r0
     eda:	08 95       	ret
     edc:	31 97       	sbiw	r30, 0x01	; 1
     ede:	cf 01       	movw	r24, r30
     ee0:	08 95       	ret

00000ee2 <strnlen_P>:
     ee2:	fc 01       	movw	r30, r24
     ee4:	05 90       	lpm	r0, Z+
     ee6:	61 50       	subi	r22, 0x01	; 1
     ee8:	70 40       	sbci	r23, 0x00	; 0
     eea:	01 10       	cpse	r0, r1
     eec:	d8 f7       	brcc	.-10     	; 0xee4 <strnlen_P+0x2>
     eee:	80 95       	com	r24
     ef0:	90 95       	com	r25
     ef2:	8e 0f       	add	r24, r30
     ef4:	9f 1f       	adc	r25, r31
     ef6:	08 95       	ret

00000ef8 <strnlen>:
     ef8:	fc 01       	movw	r30, r24
     efa:	61 50       	subi	r22, 0x01	; 1
     efc:	70 40       	sbci	r23, 0x00	; 0
     efe:	01 90       	ld	r0, Z+
     f00:	01 10       	cpse	r0, r1
     f02:	d8 f7       	brcc	.-10     	; 0xefa <strnlen+0x2>
     f04:	80 95       	com	r24
     f06:	90 95       	com	r25
     f08:	8e 0f       	add	r24, r30
     f0a:	9f 1f       	adc	r25, r31
     f0c:	08 95       	ret

00000f0e <fgetc>:
     f0e:	cf 93       	push	r28
     f10:	df 93       	push	r29
     f12:	ec 01       	movw	r28, r24
     f14:	2b 81       	ldd	r18, Y+3	; 0x03
     f16:	20 ff       	sbrs	r18, 0
     f18:	33 c0       	rjmp	.+102    	; 0xf80 <fgetc+0x72>
     f1a:	26 ff       	sbrs	r18, 6
     f1c:	0a c0       	rjmp	.+20     	; 0xf32 <fgetc+0x24>
     f1e:	2f 7b       	andi	r18, 0xBF	; 191
     f20:	2b 83       	std	Y+3, r18	; 0x03
     f22:	8e 81       	ldd	r24, Y+6	; 0x06
     f24:	9f 81       	ldd	r25, Y+7	; 0x07
     f26:	01 96       	adiw	r24, 0x01	; 1
     f28:	9f 83       	std	Y+7, r25	; 0x07
     f2a:	8e 83       	std	Y+6, r24	; 0x06
     f2c:	8a 81       	ldd	r24, Y+2	; 0x02
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	29 c0       	rjmp	.+82     	; 0xf84 <fgetc+0x76>
     f32:	22 ff       	sbrs	r18, 2
     f34:	0f c0       	rjmp	.+30     	; 0xf54 <fgetc+0x46>
     f36:	e8 81       	ld	r30, Y
     f38:	f9 81       	ldd	r31, Y+1	; 0x01
     f3a:	80 81       	ld	r24, Z
     f3c:	99 27       	eor	r25, r25
     f3e:	87 fd       	sbrc	r24, 7
     f40:	90 95       	com	r25
     f42:	00 97       	sbiw	r24, 0x00	; 0
     f44:	19 f4       	brne	.+6      	; 0xf4c <fgetc+0x3e>
     f46:	20 62       	ori	r18, 0x20	; 32
     f48:	2b 83       	std	Y+3, r18	; 0x03
     f4a:	1a c0       	rjmp	.+52     	; 0xf80 <fgetc+0x72>
     f4c:	31 96       	adiw	r30, 0x01	; 1
     f4e:	f9 83       	std	Y+1, r31	; 0x01
     f50:	e8 83       	st	Y, r30
     f52:	0e c0       	rjmp	.+28     	; 0xf70 <fgetc+0x62>
     f54:	ea 85       	ldd	r30, Y+10	; 0x0a
     f56:	fb 85       	ldd	r31, Y+11	; 0x0b
     f58:	09 95       	icall
     f5a:	97 ff       	sbrs	r25, 7
     f5c:	09 c0       	rjmp	.+18     	; 0xf70 <fgetc+0x62>
     f5e:	2b 81       	ldd	r18, Y+3	; 0x03
     f60:	01 96       	adiw	r24, 0x01	; 1
     f62:	11 f4       	brne	.+4      	; 0xf68 <fgetc+0x5a>
     f64:	80 e1       	ldi	r24, 0x10	; 16
     f66:	01 c0       	rjmp	.+2      	; 0xf6a <fgetc+0x5c>
     f68:	80 e2       	ldi	r24, 0x20	; 32
     f6a:	82 2b       	or	r24, r18
     f6c:	8b 83       	std	Y+3, r24	; 0x03
     f6e:	08 c0       	rjmp	.+16     	; 0xf80 <fgetc+0x72>
     f70:	2e 81       	ldd	r18, Y+6	; 0x06
     f72:	3f 81       	ldd	r19, Y+7	; 0x07
     f74:	2f 5f       	subi	r18, 0xFF	; 255
     f76:	3f 4f       	sbci	r19, 0xFF	; 255
     f78:	3f 83       	std	Y+7, r19	; 0x07
     f7a:	2e 83       	std	Y+6, r18	; 0x06
     f7c:	99 27       	eor	r25, r25
     f7e:	02 c0       	rjmp	.+4      	; 0xf84 <fgetc+0x76>
     f80:	8f ef       	ldi	r24, 0xFF	; 255
     f82:	9f ef       	ldi	r25, 0xFF	; 255
     f84:	df 91       	pop	r29
     f86:	cf 91       	pop	r28
     f88:	08 95       	ret

00000f8a <fputc>:
     f8a:	0f 93       	push	r16
     f8c:	1f 93       	push	r17
     f8e:	cf 93       	push	r28
     f90:	df 93       	push	r29
     f92:	18 2f       	mov	r17, r24
     f94:	09 2f       	mov	r16, r25
     f96:	eb 01       	movw	r28, r22
     f98:	8b 81       	ldd	r24, Y+3	; 0x03
     f9a:	81 fd       	sbrc	r24, 1
     f9c:	03 c0       	rjmp	.+6      	; 0xfa4 <fputc+0x1a>
     f9e:	8f ef       	ldi	r24, 0xFF	; 255
     fa0:	9f ef       	ldi	r25, 0xFF	; 255
     fa2:	20 c0       	rjmp	.+64     	; 0xfe4 <fputc+0x5a>
     fa4:	82 ff       	sbrs	r24, 2
     fa6:	10 c0       	rjmp	.+32     	; 0xfc8 <fputc+0x3e>
     fa8:	4e 81       	ldd	r20, Y+6	; 0x06
     faa:	5f 81       	ldd	r21, Y+7	; 0x07
     fac:	2c 81       	ldd	r18, Y+4	; 0x04
     fae:	3d 81       	ldd	r19, Y+5	; 0x05
     fb0:	42 17       	cp	r20, r18
     fb2:	53 07       	cpc	r21, r19
     fb4:	7c f4       	brge	.+30     	; 0xfd4 <fputc+0x4a>
     fb6:	e8 81       	ld	r30, Y
     fb8:	f9 81       	ldd	r31, Y+1	; 0x01
     fba:	9f 01       	movw	r18, r30
     fbc:	2f 5f       	subi	r18, 0xFF	; 255
     fbe:	3f 4f       	sbci	r19, 0xFF	; 255
     fc0:	39 83       	std	Y+1, r19	; 0x01
     fc2:	28 83       	st	Y, r18
     fc4:	10 83       	st	Z, r17
     fc6:	06 c0       	rjmp	.+12     	; 0xfd4 <fputc+0x4a>
     fc8:	e8 85       	ldd	r30, Y+8	; 0x08
     fca:	f9 85       	ldd	r31, Y+9	; 0x09
     fcc:	81 2f       	mov	r24, r17
     fce:	09 95       	icall
     fd0:	89 2b       	or	r24, r25
     fd2:	29 f7       	brne	.-54     	; 0xf9e <fputc+0x14>
     fd4:	2e 81       	ldd	r18, Y+6	; 0x06
     fd6:	3f 81       	ldd	r19, Y+7	; 0x07
     fd8:	2f 5f       	subi	r18, 0xFF	; 255
     fda:	3f 4f       	sbci	r19, 0xFF	; 255
     fdc:	3f 83       	std	Y+7, r19	; 0x07
     fde:	2e 83       	std	Y+6, r18	; 0x06
     fe0:	81 2f       	mov	r24, r17
     fe2:	90 2f       	mov	r25, r16
     fe4:	df 91       	pop	r29
     fe6:	cf 91       	pop	r28
     fe8:	1f 91       	pop	r17
     fea:	0f 91       	pop	r16
     fec:	08 95       	ret

00000fee <ungetc>:
     fee:	fb 01       	movw	r30, r22
     ff0:	23 81       	ldd	r18, Z+3	; 0x03
     ff2:	20 ff       	sbrs	r18, 0
     ff4:	12 c0       	rjmp	.+36     	; 0x101a <ungetc+0x2c>
     ff6:	26 fd       	sbrc	r18, 6
     ff8:	10 c0       	rjmp	.+32     	; 0x101a <ungetc+0x2c>
     ffa:	8f 3f       	cpi	r24, 0xFF	; 255
     ffc:	3f ef       	ldi	r19, 0xFF	; 255
     ffe:	93 07       	cpc	r25, r19
    1000:	61 f0       	breq	.+24     	; 0x101a <ungetc+0x2c>
    1002:	82 83       	std	Z+2, r24	; 0x02
    1004:	2f 7d       	andi	r18, 0xDF	; 223
    1006:	20 64       	ori	r18, 0x40	; 64
    1008:	23 83       	std	Z+3, r18	; 0x03
    100a:	26 81       	ldd	r18, Z+6	; 0x06
    100c:	37 81       	ldd	r19, Z+7	; 0x07
    100e:	21 50       	subi	r18, 0x01	; 1
    1010:	31 09       	sbc	r19, r1
    1012:	37 83       	std	Z+7, r19	; 0x07
    1014:	26 83       	std	Z+6, r18	; 0x06
    1016:	99 27       	eor	r25, r25
    1018:	08 95       	ret
    101a:	8f ef       	ldi	r24, 0xFF	; 255
    101c:	9f ef       	ldi	r25, 0xFF	; 255
    101e:	08 95       	ret

00001020 <__ultoa_invert>:
    1020:	fa 01       	movw	r30, r20
    1022:	aa 27       	eor	r26, r26
    1024:	28 30       	cpi	r18, 0x08	; 8
    1026:	51 f1       	breq	.+84     	; 0x107c <__ultoa_invert+0x5c>
    1028:	20 31       	cpi	r18, 0x10	; 16
    102a:	81 f1       	breq	.+96     	; 0x108c <__ultoa_invert+0x6c>
    102c:	e8 94       	clt
    102e:	6f 93       	push	r22
    1030:	6e 7f       	andi	r22, 0xFE	; 254
    1032:	6e 5f       	subi	r22, 0xFE	; 254
    1034:	7f 4f       	sbci	r23, 0xFF	; 255
    1036:	8f 4f       	sbci	r24, 0xFF	; 255
    1038:	9f 4f       	sbci	r25, 0xFF	; 255
    103a:	af 4f       	sbci	r26, 0xFF	; 255
    103c:	b1 e0       	ldi	r27, 0x01	; 1
    103e:	3e d0       	rcall	.+124    	; 0x10bc <__ultoa_invert+0x9c>
    1040:	b4 e0       	ldi	r27, 0x04	; 4
    1042:	3c d0       	rcall	.+120    	; 0x10bc <__ultoa_invert+0x9c>
    1044:	67 0f       	add	r22, r23
    1046:	78 1f       	adc	r23, r24
    1048:	89 1f       	adc	r24, r25
    104a:	9a 1f       	adc	r25, r26
    104c:	a1 1d       	adc	r26, r1
    104e:	68 0f       	add	r22, r24
    1050:	79 1f       	adc	r23, r25
    1052:	8a 1f       	adc	r24, r26
    1054:	91 1d       	adc	r25, r1
    1056:	a1 1d       	adc	r26, r1
    1058:	6a 0f       	add	r22, r26
    105a:	71 1d       	adc	r23, r1
    105c:	81 1d       	adc	r24, r1
    105e:	91 1d       	adc	r25, r1
    1060:	a1 1d       	adc	r26, r1
    1062:	20 d0       	rcall	.+64     	; 0x10a4 <__ultoa_invert+0x84>
    1064:	09 f4       	brne	.+2      	; 0x1068 <__ultoa_invert+0x48>
    1066:	68 94       	set
    1068:	3f 91       	pop	r19
    106a:	2a e0       	ldi	r18, 0x0A	; 10
    106c:	26 9f       	mul	r18, r22
    106e:	11 24       	eor	r1, r1
    1070:	30 19       	sub	r19, r0
    1072:	30 5d       	subi	r19, 0xD0	; 208
    1074:	31 93       	st	Z+, r19
    1076:	de f6       	brtc	.-74     	; 0x102e <__ultoa_invert+0xe>
    1078:	cf 01       	movw	r24, r30
    107a:	08 95       	ret
    107c:	46 2f       	mov	r20, r22
    107e:	47 70       	andi	r20, 0x07	; 7
    1080:	40 5d       	subi	r20, 0xD0	; 208
    1082:	41 93       	st	Z+, r20
    1084:	b3 e0       	ldi	r27, 0x03	; 3
    1086:	0f d0       	rcall	.+30     	; 0x10a6 <__ultoa_invert+0x86>
    1088:	c9 f7       	brne	.-14     	; 0x107c <__ultoa_invert+0x5c>
    108a:	f6 cf       	rjmp	.-20     	; 0x1078 <__ultoa_invert+0x58>
    108c:	46 2f       	mov	r20, r22
    108e:	4f 70       	andi	r20, 0x0F	; 15
    1090:	40 5d       	subi	r20, 0xD0	; 208
    1092:	4a 33       	cpi	r20, 0x3A	; 58
    1094:	18 f0       	brcs	.+6      	; 0x109c <__ultoa_invert+0x7c>
    1096:	49 5d       	subi	r20, 0xD9	; 217
    1098:	31 fd       	sbrc	r19, 1
    109a:	40 52       	subi	r20, 0x20	; 32
    109c:	41 93       	st	Z+, r20
    109e:	02 d0       	rcall	.+4      	; 0x10a4 <__ultoa_invert+0x84>
    10a0:	a9 f7       	brne	.-22     	; 0x108c <__ultoa_invert+0x6c>
    10a2:	ea cf       	rjmp	.-44     	; 0x1078 <__ultoa_invert+0x58>
    10a4:	b4 e0       	ldi	r27, 0x04	; 4
    10a6:	a6 95       	lsr	r26
    10a8:	97 95       	ror	r25
    10aa:	87 95       	ror	r24
    10ac:	77 95       	ror	r23
    10ae:	67 95       	ror	r22
    10b0:	ba 95       	dec	r27
    10b2:	c9 f7       	brne	.-14     	; 0x10a6 <__ultoa_invert+0x86>
    10b4:	00 97       	sbiw	r24, 0x00	; 0
    10b6:	61 05       	cpc	r22, r1
    10b8:	71 05       	cpc	r23, r1
    10ba:	08 95       	ret
    10bc:	9b 01       	movw	r18, r22
    10be:	ac 01       	movw	r20, r24
    10c0:	0a 2e       	mov	r0, r26
    10c2:	06 94       	lsr	r0
    10c4:	57 95       	ror	r21
    10c6:	47 95       	ror	r20
    10c8:	37 95       	ror	r19
    10ca:	27 95       	ror	r18
    10cc:	ba 95       	dec	r27
    10ce:	c9 f7       	brne	.-14     	; 0x10c2 <__ultoa_invert+0xa2>
    10d0:	62 0f       	add	r22, r18
    10d2:	73 1f       	adc	r23, r19
    10d4:	84 1f       	adc	r24, r20
    10d6:	95 1f       	adc	r25, r21
    10d8:	a0 1d       	adc	r26, r0
    10da:	08 95       	ret

000010dc <__ctype_isfalse>:
    10dc:	99 27       	eor	r25, r25
    10de:	88 27       	eor	r24, r24

000010e0 <__ctype_istrue>:
    10e0:	08 95       	ret

000010e2 <__divmodsi4>:
    10e2:	05 2e       	mov	r0, r21
    10e4:	97 fb       	bst	r25, 7
    10e6:	1e f4       	brtc	.+6      	; 0x10ee <__divmodsi4+0xc>
    10e8:	00 94       	com	r0
    10ea:	0e 94 88 08 	call	0x1110	; 0x1110 <__negsi2>
    10ee:	57 fd       	sbrc	r21, 7
    10f0:	07 d0       	rcall	.+14     	; 0x1100 <__divmodsi4_neg2>
    10f2:	0e 94 da 08 	call	0x11b4	; 0x11b4 <__udivmodsi4>
    10f6:	07 fc       	sbrc	r0, 7
    10f8:	03 d0       	rcall	.+6      	; 0x1100 <__divmodsi4_neg2>
    10fa:	4e f4       	brtc	.+18     	; 0x110e <__divmodsi4_exit>
    10fc:	0c 94 88 08 	jmp	0x1110	; 0x1110 <__negsi2>

00001100 <__divmodsi4_neg2>:
    1100:	50 95       	com	r21
    1102:	40 95       	com	r20
    1104:	30 95       	com	r19
    1106:	21 95       	neg	r18
    1108:	3f 4f       	sbci	r19, 0xFF	; 255
    110a:	4f 4f       	sbci	r20, 0xFF	; 255
    110c:	5f 4f       	sbci	r21, 0xFF	; 255

0000110e <__divmodsi4_exit>:
    110e:	08 95       	ret

00001110 <__negsi2>:
    1110:	90 95       	com	r25
    1112:	80 95       	com	r24
    1114:	70 95       	com	r23
    1116:	61 95       	neg	r22
    1118:	7f 4f       	sbci	r23, 0xFF	; 255
    111a:	8f 4f       	sbci	r24, 0xFF	; 255
    111c:	9f 4f       	sbci	r25, 0xFF	; 255
    111e:	08 95       	ret

00001120 <__muluhisi3>:
    1120:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <__umulhisi3>
    1124:	a5 9f       	mul	r26, r21
    1126:	90 0d       	add	r25, r0
    1128:	b4 9f       	mul	r27, r20
    112a:	90 0d       	add	r25, r0
    112c:	a4 9f       	mul	r26, r20
    112e:	80 0d       	add	r24, r0
    1130:	91 1d       	adc	r25, r1
    1132:	11 24       	eor	r1, r1
    1134:	08 95       	ret

00001136 <__mulshisi3>:
    1136:	b7 ff       	sbrs	r27, 7
    1138:	0c 94 90 08 	jmp	0x1120	; 0x1120 <__muluhisi3>

0000113c <__mulohisi3>:
    113c:	0e 94 90 08 	call	0x1120	; 0x1120 <__muluhisi3>
    1140:	82 1b       	sub	r24, r18
    1142:	93 0b       	sbc	r25, r19
    1144:	08 95       	ret

00001146 <__prologue_saves__>:
    1146:	2f 92       	push	r2
    1148:	3f 92       	push	r3
    114a:	4f 92       	push	r4
    114c:	5f 92       	push	r5
    114e:	6f 92       	push	r6
    1150:	7f 92       	push	r7
    1152:	8f 92       	push	r8
    1154:	9f 92       	push	r9
    1156:	af 92       	push	r10
    1158:	bf 92       	push	r11
    115a:	cf 92       	push	r12
    115c:	df 92       	push	r13
    115e:	ef 92       	push	r14
    1160:	ff 92       	push	r15
    1162:	0f 93       	push	r16
    1164:	1f 93       	push	r17
    1166:	cf 93       	push	r28
    1168:	df 93       	push	r29
    116a:	cd b7       	in	r28, 0x3d	; 61
    116c:	de b7       	in	r29, 0x3e	; 62
    116e:	ca 1b       	sub	r28, r26
    1170:	db 0b       	sbc	r29, r27
    1172:	0f b6       	in	r0, 0x3f	; 63
    1174:	f8 94       	cli
    1176:	de bf       	out	0x3e, r29	; 62
    1178:	0f be       	out	0x3f, r0	; 63
    117a:	cd bf       	out	0x3d, r28	; 61
    117c:	09 94       	ijmp

0000117e <__epilogue_restores__>:
    117e:	2a 88       	ldd	r2, Y+18	; 0x12
    1180:	39 88       	ldd	r3, Y+17	; 0x11
    1182:	48 88       	ldd	r4, Y+16	; 0x10
    1184:	5f 84       	ldd	r5, Y+15	; 0x0f
    1186:	6e 84       	ldd	r6, Y+14	; 0x0e
    1188:	7d 84       	ldd	r7, Y+13	; 0x0d
    118a:	8c 84       	ldd	r8, Y+12	; 0x0c
    118c:	9b 84       	ldd	r9, Y+11	; 0x0b
    118e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1190:	b9 84       	ldd	r11, Y+9	; 0x09
    1192:	c8 84       	ldd	r12, Y+8	; 0x08
    1194:	df 80       	ldd	r13, Y+7	; 0x07
    1196:	ee 80       	ldd	r14, Y+6	; 0x06
    1198:	fd 80       	ldd	r15, Y+5	; 0x05
    119a:	0c 81       	ldd	r16, Y+4	; 0x04
    119c:	1b 81       	ldd	r17, Y+3	; 0x03
    119e:	aa 81       	ldd	r26, Y+2	; 0x02
    11a0:	b9 81       	ldd	r27, Y+1	; 0x01
    11a2:	ce 0f       	add	r28, r30
    11a4:	d1 1d       	adc	r29, r1
    11a6:	0f b6       	in	r0, 0x3f	; 63
    11a8:	f8 94       	cli
    11aa:	de bf       	out	0x3e, r29	; 62
    11ac:	0f be       	out	0x3f, r0	; 63
    11ae:	cd bf       	out	0x3d, r28	; 61
    11b0:	ed 01       	movw	r28, r26
    11b2:	08 95       	ret

000011b4 <__udivmodsi4>:
    11b4:	a1 e2       	ldi	r26, 0x21	; 33
    11b6:	1a 2e       	mov	r1, r26
    11b8:	aa 1b       	sub	r26, r26
    11ba:	bb 1b       	sub	r27, r27
    11bc:	fd 01       	movw	r30, r26
    11be:	0d c0       	rjmp	.+26     	; 0x11da <__udivmodsi4_ep>

000011c0 <__udivmodsi4_loop>:
    11c0:	aa 1f       	adc	r26, r26
    11c2:	bb 1f       	adc	r27, r27
    11c4:	ee 1f       	adc	r30, r30
    11c6:	ff 1f       	adc	r31, r31
    11c8:	a2 17       	cp	r26, r18
    11ca:	b3 07       	cpc	r27, r19
    11cc:	e4 07       	cpc	r30, r20
    11ce:	f5 07       	cpc	r31, r21
    11d0:	20 f0       	brcs	.+8      	; 0x11da <__udivmodsi4_ep>
    11d2:	a2 1b       	sub	r26, r18
    11d4:	b3 0b       	sbc	r27, r19
    11d6:	e4 0b       	sbc	r30, r20
    11d8:	f5 0b       	sbc	r31, r21

000011da <__udivmodsi4_ep>:
    11da:	66 1f       	adc	r22, r22
    11dc:	77 1f       	adc	r23, r23
    11de:	88 1f       	adc	r24, r24
    11e0:	99 1f       	adc	r25, r25
    11e2:	1a 94       	dec	r1
    11e4:	69 f7       	brne	.-38     	; 0x11c0 <__udivmodsi4_loop>
    11e6:	60 95       	com	r22
    11e8:	70 95       	com	r23
    11ea:	80 95       	com	r24
    11ec:	90 95       	com	r25
    11ee:	9b 01       	movw	r18, r22
    11f0:	ac 01       	movw	r20, r24
    11f2:	bd 01       	movw	r22, r26
    11f4:	cf 01       	movw	r24, r30
    11f6:	08 95       	ret

000011f8 <__umulhisi3>:
    11f8:	a2 9f       	mul	r26, r18
    11fa:	b0 01       	movw	r22, r0
    11fc:	b3 9f       	mul	r27, r19
    11fe:	c0 01       	movw	r24, r0
    1200:	a3 9f       	mul	r26, r19
    1202:	70 0d       	add	r23, r0
    1204:	81 1d       	adc	r24, r1
    1206:	11 24       	eor	r1, r1
    1208:	91 1d       	adc	r25, r1
    120a:	b2 9f       	mul	r27, r18
    120c:	70 0d       	add	r23, r0
    120e:	81 1d       	adc	r24, r1
    1210:	11 24       	eor	r1, r1
    1212:	91 1d       	adc	r25, r1
    1214:	08 95       	ret

00001216 <_exit>:
    1216:	f8 94       	cli

00001218 <__stop_program>:
    1218:	ff cf       	rjmp	.-2      	; 0x1218 <__stop_program>
