
Ping_Pong_Shit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000162  00800100  000010d6  0000116a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010d6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800262  00800262  000012cc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000012cc  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  00001328  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006f4  00000000  00000000  000013b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003de  00000000  00000000  00001aa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000394  00000000  00000000  00001e82  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000014c  00000000  00000000  00002218  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000029b  00000000  00000000  00002364  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000028b  00000000  00000000  000025ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  0000288a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	63 64       	ori	r22, 0x43	; 67
      72:	69 6e       	ori	r22, 0xE9	; 233
      74:	6f 70       	andi	r22, 0x0F	; 15
      76:	73 75       	andi	r23, 0x53	; 83
      78:	78 58       	subi	r23, 0x88	; 136
      7a:	5b 00       	.word	0x005b	; ????

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d4 e0       	ldi	r29, 0x04	; 4
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	12 e0       	ldi	r17, 0x02	; 2
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	e6 ed       	ldi	r30, 0xD6	; 214
      90:	f0 e1       	ldi	r31, 0x10	; 16
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	a2 36       	cpi	r26, 0x62	; 98
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	22 e0       	ldi	r18, 0x02	; 2
      a0:	a2 e6       	ldi	r26, 0x62	; 98
      a2:	b2 e0       	ldi	r27, 0x02	; 2
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	a8 36       	cpi	r26, 0x68	; 104
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 5d 00 	call	0xba	; 0xba <main>
      b2:	0c 94 69 08 	jmp	0x10d2	; 0x10d2 <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <main>:
#include <stdio.h>
#include "uart_driver.h"
#include "test_code.h"

int main(void) {
    uart_init(MYUBRR);
      ba:	8f e1       	ldi	r24, 0x1F	; 31
      bc:	90 e0       	ldi	r25, 0x00	; 0
      be:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <uart_init>
	MCUCR = 0x80;
      c2:	80 e8       	ldi	r24, 0x80	; 128
      c4:	85 bf       	out	0x35, r24	; 53
	DDRA = 0xFF;
      c6:	8f ef       	ldi	r24, 0xFF	; 255
      c8:	8a bb       	out	0x1a, r24	; 26
		
	while(1) { 
		shell();
      ca:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <shell>
		flash_diode();
      ce:	0e 94 6a 00 	call	0xd4	; 0xd4 <flash_diode>
      d2:	fb cf       	rjmp	.-10     	; 0xca <main+0x10>

000000d4 <flash_diode>:
#include "test_code.h"
#include <stdlib.h>

//Simple test, Ex 1, task 6
void flash_diode(){
	PORTB = 0xFF;
      d4:	8f ef       	ldi	r24, 0xFF	; 255
      d6:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      d8:	80 e0       	ldi	r24, 0x00	; 0
      da:	90 ef       	ldi	r25, 0xF0	; 240
      dc:	01 97       	sbiw	r24, 0x01	; 1
      de:	f1 f7       	brne	.-4      	; 0xdc <flash_diode+0x8>
	_delay_ms(50);
	PORTB = 0x00;
      e0:	18 ba       	out	0x18, r1	; 24
      e2:	80 e0       	ldi	r24, 0x00	; 0
      e4:	90 ef       	ldi	r25, 0xF0	; 240
      e6:	01 97       	sbiw	r24, 0x01	; 1
      e8:	f1 f7       	brne	.-4      	; 0xe6 <flash_diode+0x12>
      ea:	08 95       	ret

000000ec <SRAM_test>:

	
	
}

void SRAM_test(void) {
      ec:	cf 92       	push	r12
      ee:	df 92       	push	r13
      f0:	ef 92       	push	r14
      f2:	ff 92       	push	r15
      f4:	0f 93       	push	r16
      f6:	1f 93       	push	r17
      f8:	cf 93       	push	r28
      fa:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size       = 0x800;
	uint16_t write_errors       = 0;
	uint16_t retrieval_errors   = 0;

	printf("Starting SRAM test...\n");
      fc:	82 e1       	ldi	r24, 0x12	; 18
      fe:	91 e0       	ldi	r25, 0x01	; 1
     100:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <puts>

	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
     104:	0e 94 c7 01 	call	0x38e	; 0x38e <rand>
     108:	6c 01       	movw	r12, r24

	// Write phase: Immediately check that the correct value was stored
	srand(seed);
     10a:	0e 94 cc 01 	call	0x398	; 0x398 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     10e:	c0 e0       	ldi	r28, 0x00	; 0
     110:	d0 e0       	ldi	r29, 0x00	; 0
}

void SRAM_test(void) {
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size       = 0x800;
	uint16_t write_errors       = 0;
     112:	00 e0       	ldi	r16, 0x00	; 0
     114:	10 e0       	ldi	r17, 0x00	; 0
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		ext_ram[i] = some_value;
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     116:	0f 2e       	mov	r0, r31
     118:	f8 e2       	ldi	r31, 0x28	; 40
     11a:	ef 2e       	mov	r14, r31
     11c:	f1 e0       	ldi	r31, 0x01	; 1
     11e:	ff 2e       	mov	r15, r31
     120:	f0 2d       	mov	r31, r0
	uint16_t seed = rand();

	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
     122:	0e 94 c7 01 	call	0x38e	; 0x38e <rand>
     126:	fe 01       	movw	r30, r28
     128:	f8 5e       	subi	r31, 0xE8	; 232
		ext_ram[i] = some_value;
     12a:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
     12c:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     12e:	28 17       	cp	r18, r24
     130:	a9 f0       	breq	.+42     	; 0x15c <SRAM_test+0x70>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     132:	99 27       	eor	r25, r25
     134:	9f 93       	push	r25
     136:	8f 93       	push	r24
     138:	1f 92       	push	r1
     13a:	2f 93       	push	r18
     13c:	df 93       	push	r29
     13e:	cf 93       	push	r28
     140:	ff 92       	push	r15
     142:	ef 92       	push	r14
     144:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <printf>
			write_errors++;
     148:	0f 5f       	subi	r16, 0xFF	; 255
     14a:	1f 4f       	sbci	r17, 0xFF	; 255
     14c:	8d b7       	in	r24, 0x3d	; 61
     14e:	9e b7       	in	r25, 0x3e	; 62
     150:	08 96       	adiw	r24, 0x08	; 8
     152:	0f b6       	in	r0, 0x3f	; 63
     154:	f8 94       	cli
     156:	9e bf       	out	0x3e, r25	; 62
     158:	0f be       	out	0x3f, r0	; 63
     15a:	8d bf       	out	0x3d, r24	; 61
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();

	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     15c:	21 96       	adiw	r28, 0x01	; 1
     15e:	c1 15       	cp	r28, r1
     160:	98 e0       	ldi	r25, 0x08	; 8
     162:	d9 07       	cpc	r29, r25
     164:	f1 f6       	brne	.-68     	; 0x122 <SRAM_test+0x36>
			write_errors++;
		}
	}

	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);    // reset the PRNG to the state it had before the write phase
     166:	c6 01       	movw	r24, r12
     168:	0e 94 cc 01 	call	0x398	; 0x398 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     16c:	c0 e0       	ldi	r28, 0x00	; 0
     16e:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void) {
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size       = 0x800;
	uint16_t write_errors       = 0;
	uint16_t retrieval_errors   = 0;
     170:	e1 2c       	mov	r14, r1
     172:	f1 2c       	mov	r15, r1
	srand(seed);    // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     174:	0f 2e       	mov	r0, r31
     176:	f1 e6       	ldi	r31, 0x61	; 97
     178:	cf 2e       	mov	r12, r31
     17a:	f1 e0       	ldi	r31, 0x01	; 1
     17c:	df 2e       	mov	r13, r31
     17e:	f0 2d       	mov	r31, r0
	}

	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);    // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
     180:	0e 94 c7 01 	call	0x38e	; 0x38e <rand>
     184:	fe 01       	movw	r30, r28
     186:	f8 5e       	subi	r31, 0xE8	; 232
		uint8_t retreived_value = ext_ram[i];
     188:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     18a:	28 17       	cp	r18, r24
     18c:	b1 f0       	breq	.+44     	; 0x1ba <SRAM_test+0xce>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     18e:	99 27       	eor	r25, r25
     190:	9f 93       	push	r25
     192:	8f 93       	push	r24
     194:	1f 92       	push	r1
     196:	2f 93       	push	r18
     198:	df 93       	push	r29
     19a:	cf 93       	push	r28
     19c:	df 92       	push	r13
     19e:	cf 92       	push	r12
     1a0:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <printf>
			retrieval_errors++;
     1a4:	8f ef       	ldi	r24, 0xFF	; 255
     1a6:	e8 1a       	sub	r14, r24
     1a8:	f8 0a       	sbc	r15, r24
     1aa:	8d b7       	in	r24, 0x3d	; 61
     1ac:	9e b7       	in	r25, 0x3e	; 62
     1ae:	08 96       	adiw	r24, 0x08	; 8
     1b0:	0f b6       	in	r0, 0x3f	; 63
     1b2:	f8 94       	cli
     1b4:	9e bf       	out	0x3e, r25	; 62
     1b6:	0f be       	out	0x3f, r0	; 63
     1b8:	8d bf       	out	0x3d, r24	; 61
		}
	}

	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);    // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     1ba:	21 96       	adiw	r28, 0x01	; 1
     1bc:	c1 15       	cp	r28, r1
     1be:	98 e0       	ldi	r25, 0x08	; 8
     1c0:	d9 07       	cpc	r29, r25
     1c2:	f1 f6       	brne	.-68     	; 0x180 <SRAM_test+0x94>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
     1c4:	ff 92       	push	r15
     1c6:	ef 92       	push	r14
     1c8:	1f 93       	push	r17
     1ca:	0f 93       	push	r16
     1cc:	8e e9       	ldi	r24, 0x9E	; 158
     1ce:	91 e0       	ldi	r25, 0x01	; 1
     1d0:	9f 93       	push	r25
     1d2:	8f 93       	push	r24
     1d4:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <printf>
     1d8:	0f 90       	pop	r0
     1da:	0f 90       	pop	r0
     1dc:	0f 90       	pop	r0
     1de:	0f 90       	pop	r0
     1e0:	0f 90       	pop	r0
     1e2:	0f 90       	pop	r0
}
     1e4:	df 91       	pop	r29
     1e6:	cf 91       	pop	r28
     1e8:	1f 91       	pop	r17
     1ea:	0f 91       	pop	r16
     1ec:	ff 90       	pop	r15
     1ee:	ef 90       	pop	r14
     1f0:	df 90       	pop	r13
     1f2:	cf 90       	pop	r12
     1f4:	08 95       	ret

000001f6 <shell>:
	uart_sendChar('X');
	_delay_ms(1000);
}

//Ex 1, task 10 and 11
void shell(){
     1f6:	0f 93       	push	r16
     1f8:	1f 93       	push	r17
     1fa:	cf 93       	push	r28
     1fc:	df 93       	push	r29
     1fe:	cd b7       	in	r28, 0x3d	; 61
     200:	de b7       	in	r29, 0x3e	; 62
     202:	da 95       	dec	r29
     204:	0f b6       	in	r0, 0x3f	; 63
     206:	f8 94       	cli
     208:	de bf       	out	0x3e, r29	; 62
     20a:	0f be       	out	0x3f, r0	; 63
     20c:	cd bf       	out	0x3d, r28	; 61
	char cmd[256];
	printf("\n[root@mainframe]#:");
     20e:	87 ef       	ldi	r24, 0xF7	; 247
     210:	91 e0       	ldi	r25, 0x01	; 1
     212:	9f 93       	push	r25
     214:	8f 93       	push	r24
     216:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <printf>
	scanf("%s", cmd);
     21a:	8e 01       	movw	r16, r28
     21c:	0f 5f       	subi	r16, 0xFF	; 255
     21e:	1f 4f       	sbci	r17, 0xFF	; 255
     220:	1f 93       	push	r17
     222:	0f 93       	push	r16
     224:	8b e0       	ldi	r24, 0x0B	; 11
     226:	92 e0       	ldi	r25, 0x02	; 2
     228:	9f 93       	push	r25
     22a:	8f 93       	push	r24
     22c:	0e 94 21 02 	call	0x442	; 0x442 <scanf>
	printf( " %s\n", cmd);
     230:	1f 93       	push	r17
     232:	0f 93       	push	r16
     234:	8e e0       	ldi	r24, 0x0E	; 14
     236:	92 e0       	ldi	r25, 0x02	; 2
     238:	9f 93       	push	r25
     23a:	8f 93       	push	r24
     23c:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <printf>
	
	if(strcmp(cmd, "testdiode") == 0) {
     240:	63 e1       	ldi	r22, 0x13	; 19
     242:	72 e0       	ldi	r23, 0x02	; 2
     244:	c8 01       	movw	r24, r16
     246:	0e 94 d7 01 	call	0x3ae	; 0x3ae <strcmp>
     24a:	0f b6       	in	r0, 0x3f	; 63
     24c:	f8 94       	cli
     24e:	de bf       	out	0x3e, r29	; 62
     250:	0f be       	out	0x3f, r0	; 63
     252:	cd bf       	out	0x3d, r28	; 61
     254:	89 2b       	or	r24, r25
     256:	91 f4       	brne	.+36     	; 0x27c <shell+0x86>
		printf("testing diode...\n");
     258:	8d e1       	ldi	r24, 0x1D	; 29
     25a:	92 e0       	ldi	r25, 0x02	; 2
     25c:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <puts>
     260:	04 e1       	ldi	r16, 0x14	; 20
     262:	10 e0       	ldi	r17, 0x00	; 0
		for (int i = 0; i<20; i++) {	flash_diode(); }
     264:	0e 94 6a 00 	call	0xd4	; 0xd4 <flash_diode>
     268:	01 50       	subi	r16, 0x01	; 1
     26a:	11 09       	sbc	r17, r1
     26c:	01 15       	cp	r16, r1
     26e:	11 05       	cpc	r17, r1
     270:	c9 f7       	brne	.-14     	; 0x264 <shell+0x6e>
		printf("done testing diode\n");
     272:	8e e2       	ldi	r24, 0x2E	; 46
     274:	92 e0       	ldi	r25, 0x02	; 2
     276:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <puts>
     27a:	19 c0       	rjmp	.+50     	; 0x2ae <shell+0xb8>
	} else if (strcmp(cmd, "SRAM_test") == 0) {
     27c:	61 e4       	ldi	r22, 0x41	; 65
     27e:	72 e0       	ldi	r23, 0x02	; 2
     280:	ce 01       	movw	r24, r28
     282:	01 96       	adiw	r24, 0x01	; 1
     284:	0e 94 d7 01 	call	0x3ae	; 0x3ae <strcmp>
     288:	89 2b       	or	r24, r25
     28a:	19 f4       	brne	.+6      	; 0x292 <shell+0x9c>
		SRAM_test();
     28c:	0e 94 76 00 	call	0xec	; 0xec <SRAM_test>
     290:	0e c0       	rjmp	.+28     	; 0x2ae <shell+0xb8>
	} else {
		printf("unknown command \"%s\"\n", cmd);
     292:	ce 01       	movw	r24, r28
     294:	01 96       	adiw	r24, 0x01	; 1
     296:	9f 93       	push	r25
     298:	8f 93       	push	r24
     29a:	8b e4       	ldi	r24, 0x4B	; 75
     29c:	92 e0       	ldi	r25, 0x02	; 2
     29e:	9f 93       	push	r25
     2a0:	8f 93       	push	r24
     2a2:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <printf>
     2a6:	0f 90       	pop	r0
     2a8:	0f 90       	pop	r0
     2aa:	0f 90       	pop	r0
     2ac:	0f 90       	pop	r0
	}

	
	
}
     2ae:	d3 95       	inc	r29
     2b0:	0f b6       	in	r0, 0x3f	; 63
     2b2:	f8 94       	cli
     2b4:	de bf       	out	0x3e, r29	; 62
     2b6:	0f be       	out	0x3f, r0	; 63
     2b8:	cd bf       	out	0x3d, r28	; 61
     2ba:	df 91       	pop	r29
     2bc:	cf 91       	pop	r28
     2be:	1f 91       	pop	r17
     2c0:	0f 91       	pop	r16
     2c2:	08 95       	ret

000002c4 <uart_sendChar>:

void uart_sendChar(unsigned char data){
	//Wait for empty transmitter buffer
	while(!(UCSR0A & (1<<UDRE0)));
		
	//Put data into buffer, then send the data
     2c4:	5d 9b       	sbis	0x0b, 5	; 11
     2c6:	fe cf       	rjmp	.-4      	; 0x2c4 <uart_sendChar>


unsigned int uart_getChar(){
	//Wait for the data to be received 
	while(!(UCSR0A & (1<<RXC0))){}
	
     2c8:	8c b9       	out	0x0c, r24	; 12
     2ca:	08 95       	ret

000002cc <uart_getChar>:
	return UDR0;
}
     2cc:	5f 9b       	sbis	0x0b, 7	; 11
     2ce:	fe cf       	rjmp	.-4      	; 0x2cc <uart_getChar>
     2d0:	8c b1       	in	r24, 0x0c	; 12
     2d2:	90 e0       	ldi	r25, 0x00	; 0
     2d4:	08 95       	ret

000002d6 <uart_init>:
static FILE uart_io = FDEV_SETUP_STREAM(uart_sendChar, uart_getChar, _FDEV_SETUP_RW);

void uart_init(unsigned int ubrr){
	//Set baud rate
	UBRR0L = (unsigned int) ubrr;
	
     2d6:	89 b9       	out	0x09, r24	; 9
	//Enable receiver and transmitter
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
     2d8:	88 e1       	ldi	r24, 0x18	; 24
     2da:	8a b9       	out	0x0a, r24	; 10
	
	stdout = &uart_io;
	stdin = &uart_io;

     2dc:	84 e0       	ldi	r24, 0x04	; 4
     2de:	91 e0       	ldi	r25, 0x01	; 1
     2e0:	90 93 65 02 	sts	0x0265, r25
     2e4:	80 93 64 02 	sts	0x0264, r24
}
     2e8:	90 93 63 02 	sts	0x0263, r25
     2ec:	80 93 62 02 	sts	0x0262, r24
     2f0:	08 95       	ret

000002f2 <do_rand>:
     2f2:	8f 92       	push	r8
     2f4:	9f 92       	push	r9
     2f6:	af 92       	push	r10
     2f8:	bf 92       	push	r11
     2fa:	cf 92       	push	r12
     2fc:	df 92       	push	r13
     2fe:	ef 92       	push	r14
     300:	ff 92       	push	r15
     302:	cf 93       	push	r28
     304:	df 93       	push	r29
     306:	ec 01       	movw	r28, r24
     308:	68 81       	ld	r22, Y
     30a:	79 81       	ldd	r23, Y+1	; 0x01
     30c:	8a 81       	ldd	r24, Y+2	; 0x02
     30e:	9b 81       	ldd	r25, Y+3	; 0x03
     310:	61 15       	cp	r22, r1
     312:	71 05       	cpc	r23, r1
     314:	81 05       	cpc	r24, r1
     316:	91 05       	cpc	r25, r1
     318:	21 f4       	brne	.+8      	; 0x322 <do_rand+0x30>
     31a:	64 e2       	ldi	r22, 0x24	; 36
     31c:	79 ed       	ldi	r23, 0xD9	; 217
     31e:	8b e5       	ldi	r24, 0x5B	; 91
     320:	97 e0       	ldi	r25, 0x07	; 7
     322:	2d e1       	ldi	r18, 0x1D	; 29
     324:	33 ef       	ldi	r19, 0xF3	; 243
     326:	41 e0       	ldi	r20, 0x01	; 1
     328:	50 e0       	ldi	r21, 0x00	; 0
     32a:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__divmodsi4>
     32e:	49 01       	movw	r8, r18
     330:	5a 01       	movw	r10, r20
     332:	9b 01       	movw	r18, r22
     334:	ac 01       	movw	r20, r24
     336:	a7 ea       	ldi	r26, 0xA7	; 167
     338:	b1 e4       	ldi	r27, 0x41	; 65
     33a:	0e 94 ee 07 	call	0xfdc	; 0xfdc <__muluhisi3>
     33e:	6b 01       	movw	r12, r22
     340:	7c 01       	movw	r14, r24
     342:	ac ee       	ldi	r26, 0xEC	; 236
     344:	b4 ef       	ldi	r27, 0xF4	; 244
     346:	a5 01       	movw	r20, r10
     348:	94 01       	movw	r18, r8
     34a:	0e 94 fc 07 	call	0xff8	; 0xff8 <__mulohisi3>
     34e:	c6 0e       	add	r12, r22
     350:	d7 1e       	adc	r13, r23
     352:	e8 1e       	adc	r14, r24
     354:	f9 1e       	adc	r15, r25
     356:	f7 fe       	sbrs	r15, 7
     358:	06 c0       	rjmp	.+12     	; 0x366 <do_rand+0x74>
     35a:	81 e0       	ldi	r24, 0x01	; 1
     35c:	c8 1a       	sub	r12, r24
     35e:	d1 08       	sbc	r13, r1
     360:	e1 08       	sbc	r14, r1
     362:	80 e8       	ldi	r24, 0x80	; 128
     364:	f8 0a       	sbc	r15, r24
     366:	c8 82       	st	Y, r12
     368:	d9 82       	std	Y+1, r13	; 0x01
     36a:	ea 82       	std	Y+2, r14	; 0x02
     36c:	fb 82       	std	Y+3, r15	; 0x03
     36e:	c6 01       	movw	r24, r12
     370:	9f 77       	andi	r25, 0x7F	; 127
     372:	df 91       	pop	r29
     374:	cf 91       	pop	r28
     376:	ff 90       	pop	r15
     378:	ef 90       	pop	r14
     37a:	df 90       	pop	r13
     37c:	cf 90       	pop	r12
     37e:	bf 90       	pop	r11
     380:	af 90       	pop	r10
     382:	9f 90       	pop	r9
     384:	8f 90       	pop	r8
     386:	08 95       	ret

00000388 <rand_r>:
     388:	0e 94 79 01 	call	0x2f2	; 0x2f2 <do_rand>
     38c:	08 95       	ret

0000038e <rand>:
     38e:	80 e0       	ldi	r24, 0x00	; 0
     390:	91 e0       	ldi	r25, 0x01	; 1
     392:	0e 94 79 01 	call	0x2f2	; 0x2f2 <do_rand>
     396:	08 95       	ret

00000398 <srand>:
     398:	a0 e0       	ldi	r26, 0x00	; 0
     39a:	b0 e0       	ldi	r27, 0x00	; 0
     39c:	80 93 00 01 	sts	0x0100, r24
     3a0:	90 93 01 01 	sts	0x0101, r25
     3a4:	a0 93 02 01 	sts	0x0102, r26
     3a8:	b0 93 03 01 	sts	0x0103, r27
     3ac:	08 95       	ret

000003ae <strcmp>:
     3ae:	fb 01       	movw	r30, r22
     3b0:	dc 01       	movw	r26, r24
     3b2:	8d 91       	ld	r24, X+
     3b4:	01 90       	ld	r0, Z+
     3b6:	80 19       	sub	r24, r0
     3b8:	01 10       	cpse	r0, r1
     3ba:	d9 f3       	breq	.-10     	; 0x3b2 <strcmp+0x4>
     3bc:	99 0b       	sbc	r25, r25
     3be:	08 95       	ret

000003c0 <printf>:
     3c0:	a0 e0       	ldi	r26, 0x00	; 0
     3c2:	b0 e0       	ldi	r27, 0x00	; 0
     3c4:	e6 ee       	ldi	r30, 0xE6	; 230
     3c6:	f1 e0       	ldi	r31, 0x01	; 1
     3c8:	0c 94 11 08 	jmp	0x1022	; 0x1022 <__prologue_saves__+0x20>
     3cc:	fe 01       	movw	r30, r28
     3ce:	35 96       	adiw	r30, 0x05	; 5
     3d0:	61 91       	ld	r22, Z+
     3d2:	71 91       	ld	r23, Z+
     3d4:	af 01       	movw	r20, r30
     3d6:	80 91 64 02 	lds	r24, 0x0264
     3da:	90 91 65 02 	lds	r25, 0x0265
     3de:	0e 94 35 02 	call	0x46a	; 0x46a <vfprintf>
     3e2:	e2 e0       	ldi	r30, 0x02	; 2
     3e4:	0c 94 2d 08 	jmp	0x105a	; 0x105a <__epilogue_restores__+0x20>

000003e8 <puts>:
     3e8:	0f 93       	push	r16
     3ea:	1f 93       	push	r17
     3ec:	cf 93       	push	r28
     3ee:	df 93       	push	r29
     3f0:	e0 91 64 02 	lds	r30, 0x0264
     3f4:	f0 91 65 02 	lds	r31, 0x0265
     3f8:	23 81       	ldd	r18, Z+3	; 0x03
     3fa:	21 ff       	sbrs	r18, 1
     3fc:	1b c0       	rjmp	.+54     	; 0x434 <puts+0x4c>
     3fe:	ec 01       	movw	r28, r24
     400:	00 e0       	ldi	r16, 0x00	; 0
     402:	10 e0       	ldi	r17, 0x00	; 0
     404:	89 91       	ld	r24, Y+
     406:	60 91 64 02 	lds	r22, 0x0264
     40a:	70 91 65 02 	lds	r23, 0x0265
     40e:	db 01       	movw	r26, r22
     410:	18 96       	adiw	r26, 0x08	; 8
     412:	ed 91       	ld	r30, X+
     414:	fc 91       	ld	r31, X
     416:	19 97       	sbiw	r26, 0x09	; 9
     418:	88 23       	and	r24, r24
     41a:	31 f0       	breq	.+12     	; 0x428 <puts+0x40>
     41c:	09 95       	icall
     41e:	89 2b       	or	r24, r25
     420:	89 f3       	breq	.-30     	; 0x404 <puts+0x1c>
     422:	0f ef       	ldi	r16, 0xFF	; 255
     424:	1f ef       	ldi	r17, 0xFF	; 255
     426:	ee cf       	rjmp	.-36     	; 0x404 <puts+0x1c>
     428:	8a e0       	ldi	r24, 0x0A	; 10
     42a:	09 95       	icall
     42c:	89 2b       	or	r24, r25
     42e:	11 f4       	brne	.+4      	; 0x434 <puts+0x4c>
     430:	c8 01       	movw	r24, r16
     432:	02 c0       	rjmp	.+4      	; 0x438 <puts+0x50>
     434:	8f ef       	ldi	r24, 0xFF	; 255
     436:	9f ef       	ldi	r25, 0xFF	; 255
     438:	df 91       	pop	r29
     43a:	cf 91       	pop	r28
     43c:	1f 91       	pop	r17
     43e:	0f 91       	pop	r16
     440:	08 95       	ret

00000442 <scanf>:
     442:	a0 e0       	ldi	r26, 0x00	; 0
     444:	b0 e0       	ldi	r27, 0x00	; 0
     446:	e7 e2       	ldi	r30, 0x27	; 39
     448:	f2 e0       	ldi	r31, 0x02	; 2
     44a:	0c 94 11 08 	jmp	0x1022	; 0x1022 <__prologue_saves__+0x20>
     44e:	fe 01       	movw	r30, r28
     450:	35 96       	adiw	r30, 0x05	; 5
     452:	61 91       	ld	r22, Z+
     454:	71 91       	ld	r23, Z+
     456:	af 01       	movw	r20, r30
     458:	80 91 62 02 	lds	r24, 0x0262
     45c:	90 91 63 02 	lds	r25, 0x0263
     460:	0e 94 85 05 	call	0xb0a	; 0xb0a <vfscanf>
     464:	e2 e0       	ldi	r30, 0x02	; 2
     466:	0c 94 2d 08 	jmp	0x105a	; 0x105a <__epilogue_restores__+0x20>

0000046a <vfprintf>:
     46a:	ac e0       	ldi	r26, 0x0C	; 12
     46c:	b0 e0       	ldi	r27, 0x00	; 0
     46e:	eb e3       	ldi	r30, 0x3B	; 59
     470:	f2 e0       	ldi	r31, 0x02	; 2
     472:	0c 94 01 08 	jmp	0x1002	; 0x1002 <__prologue_saves__>
     476:	7c 01       	movw	r14, r24
     478:	6b 01       	movw	r12, r22
     47a:	8a 01       	movw	r16, r20
     47c:	fc 01       	movw	r30, r24
     47e:	17 82       	std	Z+7, r1	; 0x07
     480:	16 82       	std	Z+6, r1	; 0x06
     482:	83 81       	ldd	r24, Z+3	; 0x03
     484:	81 ff       	sbrs	r24, 1
     486:	bd c1       	rjmp	.+890    	; 0x802 <__stack+0x303>
     488:	ce 01       	movw	r24, r28
     48a:	01 96       	adiw	r24, 0x01	; 1
     48c:	4c 01       	movw	r8, r24
     48e:	f7 01       	movw	r30, r14
     490:	93 81       	ldd	r25, Z+3	; 0x03
     492:	f6 01       	movw	r30, r12
     494:	93 fd       	sbrc	r25, 3
     496:	85 91       	lpm	r24, Z+
     498:	93 ff       	sbrs	r25, 3
     49a:	81 91       	ld	r24, Z+
     49c:	6f 01       	movw	r12, r30
     49e:	88 23       	and	r24, r24
     4a0:	09 f4       	brne	.+2      	; 0x4a4 <vfprintf+0x3a>
     4a2:	ab c1       	rjmp	.+854    	; 0x7fa <__stack+0x2fb>
     4a4:	85 32       	cpi	r24, 0x25	; 37
     4a6:	39 f4       	brne	.+14     	; 0x4b6 <vfprintf+0x4c>
     4a8:	93 fd       	sbrc	r25, 3
     4aa:	85 91       	lpm	r24, Z+
     4ac:	93 ff       	sbrs	r25, 3
     4ae:	81 91       	ld	r24, Z+
     4b0:	6f 01       	movw	r12, r30
     4b2:	85 32       	cpi	r24, 0x25	; 37
     4b4:	29 f4       	brne	.+10     	; 0x4c0 <vfprintf+0x56>
     4b6:	b7 01       	movw	r22, r14
     4b8:	90 e0       	ldi	r25, 0x00	; 0
     4ba:	0e 94 23 07 	call	0xe46	; 0xe46 <fputc>
     4be:	e7 cf       	rjmp	.-50     	; 0x48e <vfprintf+0x24>
     4c0:	51 2c       	mov	r5, r1
     4c2:	31 2c       	mov	r3, r1
     4c4:	20 e0       	ldi	r18, 0x00	; 0
     4c6:	20 32       	cpi	r18, 0x20	; 32
     4c8:	a0 f4       	brcc	.+40     	; 0x4f2 <vfprintf+0x88>
     4ca:	8b 32       	cpi	r24, 0x2B	; 43
     4cc:	69 f0       	breq	.+26     	; 0x4e8 <vfprintf+0x7e>
     4ce:	30 f4       	brcc	.+12     	; 0x4dc <vfprintf+0x72>
     4d0:	80 32       	cpi	r24, 0x20	; 32
     4d2:	59 f0       	breq	.+22     	; 0x4ea <vfprintf+0x80>
     4d4:	83 32       	cpi	r24, 0x23	; 35
     4d6:	69 f4       	brne	.+26     	; 0x4f2 <vfprintf+0x88>
     4d8:	20 61       	ori	r18, 0x10	; 16
     4da:	2c c0       	rjmp	.+88     	; 0x534 <__stack+0x35>
     4dc:	8d 32       	cpi	r24, 0x2D	; 45
     4de:	39 f0       	breq	.+14     	; 0x4ee <vfprintf+0x84>
     4e0:	80 33       	cpi	r24, 0x30	; 48
     4e2:	39 f4       	brne	.+14     	; 0x4f2 <vfprintf+0x88>
     4e4:	21 60       	ori	r18, 0x01	; 1
     4e6:	26 c0       	rjmp	.+76     	; 0x534 <__stack+0x35>
     4e8:	22 60       	ori	r18, 0x02	; 2
     4ea:	24 60       	ori	r18, 0x04	; 4
     4ec:	23 c0       	rjmp	.+70     	; 0x534 <__stack+0x35>
     4ee:	28 60       	ori	r18, 0x08	; 8
     4f0:	21 c0       	rjmp	.+66     	; 0x534 <__stack+0x35>
     4f2:	27 fd       	sbrc	r18, 7
     4f4:	27 c0       	rjmp	.+78     	; 0x544 <__stack+0x45>
     4f6:	30 ed       	ldi	r19, 0xD0	; 208
     4f8:	38 0f       	add	r19, r24
     4fa:	3a 30       	cpi	r19, 0x0A	; 10
     4fc:	78 f4       	brcc	.+30     	; 0x51c <__stack+0x1d>
     4fe:	26 ff       	sbrs	r18, 6
     500:	06 c0       	rjmp	.+12     	; 0x50e <__stack+0xf>
     502:	fa e0       	ldi	r31, 0x0A	; 10
     504:	5f 9e       	mul	r5, r31
     506:	30 0d       	add	r19, r0
     508:	11 24       	eor	r1, r1
     50a:	53 2e       	mov	r5, r19
     50c:	13 c0       	rjmp	.+38     	; 0x534 <__stack+0x35>
     50e:	8a e0       	ldi	r24, 0x0A	; 10
     510:	38 9e       	mul	r3, r24
     512:	30 0d       	add	r19, r0
     514:	11 24       	eor	r1, r1
     516:	33 2e       	mov	r3, r19
     518:	20 62       	ori	r18, 0x20	; 32
     51a:	0c c0       	rjmp	.+24     	; 0x534 <__stack+0x35>
     51c:	8e 32       	cpi	r24, 0x2E	; 46
     51e:	21 f4       	brne	.+8      	; 0x528 <__stack+0x29>
     520:	26 fd       	sbrc	r18, 6
     522:	6b c1       	rjmp	.+726    	; 0x7fa <__stack+0x2fb>
     524:	20 64       	ori	r18, 0x40	; 64
     526:	06 c0       	rjmp	.+12     	; 0x534 <__stack+0x35>
     528:	8c 36       	cpi	r24, 0x6C	; 108
     52a:	11 f4       	brne	.+4      	; 0x530 <__stack+0x31>
     52c:	20 68       	ori	r18, 0x80	; 128
     52e:	02 c0       	rjmp	.+4      	; 0x534 <__stack+0x35>
     530:	88 36       	cpi	r24, 0x68	; 104
     532:	41 f4       	brne	.+16     	; 0x544 <__stack+0x45>
     534:	f6 01       	movw	r30, r12
     536:	93 fd       	sbrc	r25, 3
     538:	85 91       	lpm	r24, Z+
     53a:	93 ff       	sbrs	r25, 3
     53c:	81 91       	ld	r24, Z+
     53e:	6f 01       	movw	r12, r30
     540:	81 11       	cpse	r24, r1
     542:	c1 cf       	rjmp	.-126    	; 0x4c6 <vfprintf+0x5c>
     544:	98 2f       	mov	r25, r24
     546:	9f 7d       	andi	r25, 0xDF	; 223
     548:	95 54       	subi	r25, 0x45	; 69
     54a:	93 30       	cpi	r25, 0x03	; 3
     54c:	28 f4       	brcc	.+10     	; 0x558 <__stack+0x59>
     54e:	0c 5f       	subi	r16, 0xFC	; 252
     550:	1f 4f       	sbci	r17, 0xFF	; 255
     552:	ff e3       	ldi	r31, 0x3F	; 63
     554:	f9 83       	std	Y+1, r31	; 0x01
     556:	0d c0       	rjmp	.+26     	; 0x572 <__stack+0x73>
     558:	83 36       	cpi	r24, 0x63	; 99
     55a:	31 f0       	breq	.+12     	; 0x568 <__stack+0x69>
     55c:	83 37       	cpi	r24, 0x73	; 115
     55e:	71 f0       	breq	.+28     	; 0x57c <__stack+0x7d>
     560:	83 35       	cpi	r24, 0x53	; 83
     562:	09 f0       	breq	.+2      	; 0x566 <__stack+0x67>
     564:	5b c0       	rjmp	.+182    	; 0x61c <__stack+0x11d>
     566:	22 c0       	rjmp	.+68     	; 0x5ac <__stack+0xad>
     568:	f8 01       	movw	r30, r16
     56a:	80 81       	ld	r24, Z
     56c:	89 83       	std	Y+1, r24	; 0x01
     56e:	0e 5f       	subi	r16, 0xFE	; 254
     570:	1f 4f       	sbci	r17, 0xFF	; 255
     572:	44 24       	eor	r4, r4
     574:	43 94       	inc	r4
     576:	51 2c       	mov	r5, r1
     578:	54 01       	movw	r10, r8
     57a:	15 c0       	rjmp	.+42     	; 0x5a6 <__stack+0xa7>
     57c:	38 01       	movw	r6, r16
     57e:	f2 e0       	ldi	r31, 0x02	; 2
     580:	6f 0e       	add	r6, r31
     582:	71 1c       	adc	r7, r1
     584:	f8 01       	movw	r30, r16
     586:	a0 80       	ld	r10, Z
     588:	b1 80       	ldd	r11, Z+1	; 0x01
     58a:	26 ff       	sbrs	r18, 6
     58c:	03 c0       	rjmp	.+6      	; 0x594 <__stack+0x95>
     58e:	65 2d       	mov	r22, r5
     590:	70 e0       	ldi	r23, 0x00	; 0
     592:	02 c0       	rjmp	.+4      	; 0x598 <__stack+0x99>
     594:	6f ef       	ldi	r22, 0xFF	; 255
     596:	7f ef       	ldi	r23, 0xFF	; 255
     598:	c5 01       	movw	r24, r10
     59a:	2c 87       	std	Y+12, r18	; 0x0c
     59c:	0e 94 da 06 	call	0xdb4	; 0xdb4 <strnlen>
     5a0:	2c 01       	movw	r4, r24
     5a2:	83 01       	movw	r16, r6
     5a4:	2c 85       	ldd	r18, Y+12	; 0x0c
     5a6:	2f 77       	andi	r18, 0x7F	; 127
     5a8:	22 2e       	mov	r2, r18
     5aa:	17 c0       	rjmp	.+46     	; 0x5da <__stack+0xdb>
     5ac:	38 01       	movw	r6, r16
     5ae:	f2 e0       	ldi	r31, 0x02	; 2
     5b0:	6f 0e       	add	r6, r31
     5b2:	71 1c       	adc	r7, r1
     5b4:	f8 01       	movw	r30, r16
     5b6:	a0 80       	ld	r10, Z
     5b8:	b1 80       	ldd	r11, Z+1	; 0x01
     5ba:	26 ff       	sbrs	r18, 6
     5bc:	03 c0       	rjmp	.+6      	; 0x5c4 <__stack+0xc5>
     5be:	65 2d       	mov	r22, r5
     5c0:	70 e0       	ldi	r23, 0x00	; 0
     5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <__stack+0xc9>
     5c4:	6f ef       	ldi	r22, 0xFF	; 255
     5c6:	7f ef       	ldi	r23, 0xFF	; 255
     5c8:	c5 01       	movw	r24, r10
     5ca:	2c 87       	std	Y+12, r18	; 0x0c
     5cc:	0e 94 cf 06 	call	0xd9e	; 0xd9e <strnlen_P>
     5d0:	2c 01       	movw	r4, r24
     5d2:	2c 85       	ldd	r18, Y+12	; 0x0c
     5d4:	20 68       	ori	r18, 0x80	; 128
     5d6:	22 2e       	mov	r2, r18
     5d8:	83 01       	movw	r16, r6
     5da:	23 fc       	sbrc	r2, 3
     5dc:	1b c0       	rjmp	.+54     	; 0x614 <__stack+0x115>
     5de:	83 2d       	mov	r24, r3
     5e0:	90 e0       	ldi	r25, 0x00	; 0
     5e2:	48 16       	cp	r4, r24
     5e4:	59 06       	cpc	r5, r25
     5e6:	b0 f4       	brcc	.+44     	; 0x614 <__stack+0x115>
     5e8:	b7 01       	movw	r22, r14
     5ea:	80 e2       	ldi	r24, 0x20	; 32
     5ec:	90 e0       	ldi	r25, 0x00	; 0
     5ee:	0e 94 23 07 	call	0xe46	; 0xe46 <fputc>
     5f2:	3a 94       	dec	r3
     5f4:	f4 cf       	rjmp	.-24     	; 0x5de <__stack+0xdf>
     5f6:	f5 01       	movw	r30, r10
     5f8:	27 fc       	sbrc	r2, 7
     5fa:	85 91       	lpm	r24, Z+
     5fc:	27 fe       	sbrs	r2, 7
     5fe:	81 91       	ld	r24, Z+
     600:	5f 01       	movw	r10, r30
     602:	b7 01       	movw	r22, r14
     604:	90 e0       	ldi	r25, 0x00	; 0
     606:	0e 94 23 07 	call	0xe46	; 0xe46 <fputc>
     60a:	31 10       	cpse	r3, r1
     60c:	3a 94       	dec	r3
     60e:	f1 e0       	ldi	r31, 0x01	; 1
     610:	4f 1a       	sub	r4, r31
     612:	51 08       	sbc	r5, r1
     614:	41 14       	cp	r4, r1
     616:	51 04       	cpc	r5, r1
     618:	71 f7       	brne	.-36     	; 0x5f6 <__stack+0xf7>
     61a:	e5 c0       	rjmp	.+458    	; 0x7e6 <__stack+0x2e7>
     61c:	84 36       	cpi	r24, 0x64	; 100
     61e:	11 f0       	breq	.+4      	; 0x624 <__stack+0x125>
     620:	89 36       	cpi	r24, 0x69	; 105
     622:	39 f5       	brne	.+78     	; 0x672 <__stack+0x173>
     624:	f8 01       	movw	r30, r16
     626:	27 ff       	sbrs	r18, 7
     628:	07 c0       	rjmp	.+14     	; 0x638 <__stack+0x139>
     62a:	60 81       	ld	r22, Z
     62c:	71 81       	ldd	r23, Z+1	; 0x01
     62e:	82 81       	ldd	r24, Z+2	; 0x02
     630:	93 81       	ldd	r25, Z+3	; 0x03
     632:	0c 5f       	subi	r16, 0xFC	; 252
     634:	1f 4f       	sbci	r17, 0xFF	; 255
     636:	08 c0       	rjmp	.+16     	; 0x648 <__stack+0x149>
     638:	60 81       	ld	r22, Z
     63a:	71 81       	ldd	r23, Z+1	; 0x01
     63c:	88 27       	eor	r24, r24
     63e:	77 fd       	sbrc	r23, 7
     640:	80 95       	com	r24
     642:	98 2f       	mov	r25, r24
     644:	0e 5f       	subi	r16, 0xFE	; 254
     646:	1f 4f       	sbci	r17, 0xFF	; 255
     648:	2f 76       	andi	r18, 0x6F	; 111
     64a:	b2 2e       	mov	r11, r18
     64c:	97 ff       	sbrs	r25, 7
     64e:	09 c0       	rjmp	.+18     	; 0x662 <__stack+0x163>
     650:	90 95       	com	r25
     652:	80 95       	com	r24
     654:	70 95       	com	r23
     656:	61 95       	neg	r22
     658:	7f 4f       	sbci	r23, 0xFF	; 255
     65a:	8f 4f       	sbci	r24, 0xFF	; 255
     65c:	9f 4f       	sbci	r25, 0xFF	; 255
     65e:	20 68       	ori	r18, 0x80	; 128
     660:	b2 2e       	mov	r11, r18
     662:	2a e0       	ldi	r18, 0x0A	; 10
     664:	30 e0       	ldi	r19, 0x00	; 0
     666:	a4 01       	movw	r20, r8
     668:	0e 94 6e 07 	call	0xedc	; 0xedc <__ultoa_invert>
     66c:	a8 2e       	mov	r10, r24
     66e:	a8 18       	sub	r10, r8
     670:	44 c0       	rjmp	.+136    	; 0x6fa <__stack+0x1fb>
     672:	85 37       	cpi	r24, 0x75	; 117
     674:	29 f4       	brne	.+10     	; 0x680 <__stack+0x181>
     676:	2f 7e       	andi	r18, 0xEF	; 239
     678:	b2 2e       	mov	r11, r18
     67a:	2a e0       	ldi	r18, 0x0A	; 10
     67c:	30 e0       	ldi	r19, 0x00	; 0
     67e:	25 c0       	rjmp	.+74     	; 0x6ca <__stack+0x1cb>
     680:	f2 2f       	mov	r31, r18
     682:	f9 7f       	andi	r31, 0xF9	; 249
     684:	bf 2e       	mov	r11, r31
     686:	8f 36       	cpi	r24, 0x6F	; 111
     688:	c1 f0       	breq	.+48     	; 0x6ba <__stack+0x1bb>
     68a:	18 f4       	brcc	.+6      	; 0x692 <__stack+0x193>
     68c:	88 35       	cpi	r24, 0x58	; 88
     68e:	79 f0       	breq	.+30     	; 0x6ae <__stack+0x1af>
     690:	b4 c0       	rjmp	.+360    	; 0x7fa <__stack+0x2fb>
     692:	80 37       	cpi	r24, 0x70	; 112
     694:	19 f0       	breq	.+6      	; 0x69c <__stack+0x19d>
     696:	88 37       	cpi	r24, 0x78	; 120
     698:	21 f0       	breq	.+8      	; 0x6a2 <__stack+0x1a3>
     69a:	af c0       	rjmp	.+350    	; 0x7fa <__stack+0x2fb>
     69c:	2f 2f       	mov	r18, r31
     69e:	20 61       	ori	r18, 0x10	; 16
     6a0:	b2 2e       	mov	r11, r18
     6a2:	b4 fe       	sbrs	r11, 4
     6a4:	0d c0       	rjmp	.+26     	; 0x6c0 <__stack+0x1c1>
     6a6:	8b 2d       	mov	r24, r11
     6a8:	84 60       	ori	r24, 0x04	; 4
     6aa:	b8 2e       	mov	r11, r24
     6ac:	09 c0       	rjmp	.+18     	; 0x6c0 <__stack+0x1c1>
     6ae:	24 ff       	sbrs	r18, 4
     6b0:	0a c0       	rjmp	.+20     	; 0x6c6 <__stack+0x1c7>
     6b2:	9f 2f       	mov	r25, r31
     6b4:	96 60       	ori	r25, 0x06	; 6
     6b6:	b9 2e       	mov	r11, r25
     6b8:	06 c0       	rjmp	.+12     	; 0x6c6 <__stack+0x1c7>
     6ba:	28 e0       	ldi	r18, 0x08	; 8
     6bc:	30 e0       	ldi	r19, 0x00	; 0
     6be:	05 c0       	rjmp	.+10     	; 0x6ca <__stack+0x1cb>
     6c0:	20 e1       	ldi	r18, 0x10	; 16
     6c2:	30 e0       	ldi	r19, 0x00	; 0
     6c4:	02 c0       	rjmp	.+4      	; 0x6ca <__stack+0x1cb>
     6c6:	20 e1       	ldi	r18, 0x10	; 16
     6c8:	32 e0       	ldi	r19, 0x02	; 2
     6ca:	f8 01       	movw	r30, r16
     6cc:	b7 fe       	sbrs	r11, 7
     6ce:	07 c0       	rjmp	.+14     	; 0x6de <__stack+0x1df>
     6d0:	60 81       	ld	r22, Z
     6d2:	71 81       	ldd	r23, Z+1	; 0x01
     6d4:	82 81       	ldd	r24, Z+2	; 0x02
     6d6:	93 81       	ldd	r25, Z+3	; 0x03
     6d8:	0c 5f       	subi	r16, 0xFC	; 252
     6da:	1f 4f       	sbci	r17, 0xFF	; 255
     6dc:	06 c0       	rjmp	.+12     	; 0x6ea <__stack+0x1eb>
     6de:	60 81       	ld	r22, Z
     6e0:	71 81       	ldd	r23, Z+1	; 0x01
     6e2:	80 e0       	ldi	r24, 0x00	; 0
     6e4:	90 e0       	ldi	r25, 0x00	; 0
     6e6:	0e 5f       	subi	r16, 0xFE	; 254
     6e8:	1f 4f       	sbci	r17, 0xFF	; 255
     6ea:	a4 01       	movw	r20, r8
     6ec:	0e 94 6e 07 	call	0xedc	; 0xedc <__ultoa_invert>
     6f0:	a8 2e       	mov	r10, r24
     6f2:	a8 18       	sub	r10, r8
     6f4:	fb 2d       	mov	r31, r11
     6f6:	ff 77       	andi	r31, 0x7F	; 127
     6f8:	bf 2e       	mov	r11, r31
     6fa:	b6 fe       	sbrs	r11, 6
     6fc:	0b c0       	rjmp	.+22     	; 0x714 <__stack+0x215>
     6fe:	2b 2d       	mov	r18, r11
     700:	2e 7f       	andi	r18, 0xFE	; 254
     702:	a5 14       	cp	r10, r5
     704:	50 f4       	brcc	.+20     	; 0x71a <__stack+0x21b>
     706:	b4 fe       	sbrs	r11, 4
     708:	0a c0       	rjmp	.+20     	; 0x71e <__stack+0x21f>
     70a:	b2 fc       	sbrc	r11, 2
     70c:	08 c0       	rjmp	.+16     	; 0x71e <__stack+0x21f>
     70e:	2b 2d       	mov	r18, r11
     710:	2e 7e       	andi	r18, 0xEE	; 238
     712:	05 c0       	rjmp	.+10     	; 0x71e <__stack+0x21f>
     714:	7a 2c       	mov	r7, r10
     716:	2b 2d       	mov	r18, r11
     718:	03 c0       	rjmp	.+6      	; 0x720 <__stack+0x221>
     71a:	7a 2c       	mov	r7, r10
     71c:	01 c0       	rjmp	.+2      	; 0x720 <__stack+0x221>
     71e:	75 2c       	mov	r7, r5
     720:	24 ff       	sbrs	r18, 4
     722:	0d c0       	rjmp	.+26     	; 0x73e <__stack+0x23f>
     724:	fe 01       	movw	r30, r28
     726:	ea 0d       	add	r30, r10
     728:	f1 1d       	adc	r31, r1
     72a:	80 81       	ld	r24, Z
     72c:	80 33       	cpi	r24, 0x30	; 48
     72e:	11 f4       	brne	.+4      	; 0x734 <__stack+0x235>
     730:	29 7e       	andi	r18, 0xE9	; 233
     732:	09 c0       	rjmp	.+18     	; 0x746 <__stack+0x247>
     734:	22 ff       	sbrs	r18, 2
     736:	06 c0       	rjmp	.+12     	; 0x744 <__stack+0x245>
     738:	73 94       	inc	r7
     73a:	73 94       	inc	r7
     73c:	04 c0       	rjmp	.+8      	; 0x746 <__stack+0x247>
     73e:	82 2f       	mov	r24, r18
     740:	86 78       	andi	r24, 0x86	; 134
     742:	09 f0       	breq	.+2      	; 0x746 <__stack+0x247>
     744:	73 94       	inc	r7
     746:	23 fd       	sbrc	r18, 3
     748:	13 c0       	rjmp	.+38     	; 0x770 <__stack+0x271>
     74a:	20 ff       	sbrs	r18, 0
     74c:	06 c0       	rjmp	.+12     	; 0x75a <__stack+0x25b>
     74e:	5a 2c       	mov	r5, r10
     750:	73 14       	cp	r7, r3
     752:	18 f4       	brcc	.+6      	; 0x75a <__stack+0x25b>
     754:	53 0c       	add	r5, r3
     756:	57 18       	sub	r5, r7
     758:	73 2c       	mov	r7, r3
     75a:	73 14       	cp	r7, r3
     75c:	68 f4       	brcc	.+26     	; 0x778 <__stack+0x279>
     75e:	b7 01       	movw	r22, r14
     760:	80 e2       	ldi	r24, 0x20	; 32
     762:	90 e0       	ldi	r25, 0x00	; 0
     764:	2c 87       	std	Y+12, r18	; 0x0c
     766:	0e 94 23 07 	call	0xe46	; 0xe46 <fputc>
     76a:	73 94       	inc	r7
     76c:	2c 85       	ldd	r18, Y+12	; 0x0c
     76e:	f5 cf       	rjmp	.-22     	; 0x75a <__stack+0x25b>
     770:	73 14       	cp	r7, r3
     772:	10 f4       	brcc	.+4      	; 0x778 <__stack+0x279>
     774:	37 18       	sub	r3, r7
     776:	01 c0       	rjmp	.+2      	; 0x77a <__stack+0x27b>
     778:	31 2c       	mov	r3, r1
     77a:	24 ff       	sbrs	r18, 4
     77c:	12 c0       	rjmp	.+36     	; 0x7a2 <__stack+0x2a3>
     77e:	b7 01       	movw	r22, r14
     780:	80 e3       	ldi	r24, 0x30	; 48
     782:	90 e0       	ldi	r25, 0x00	; 0
     784:	2c 87       	std	Y+12, r18	; 0x0c
     786:	0e 94 23 07 	call	0xe46	; 0xe46 <fputc>
     78a:	2c 85       	ldd	r18, Y+12	; 0x0c
     78c:	22 ff       	sbrs	r18, 2
     78e:	17 c0       	rjmp	.+46     	; 0x7be <__stack+0x2bf>
     790:	21 ff       	sbrs	r18, 1
     792:	03 c0       	rjmp	.+6      	; 0x79a <__stack+0x29b>
     794:	88 e5       	ldi	r24, 0x58	; 88
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	02 c0       	rjmp	.+4      	; 0x79e <__stack+0x29f>
     79a:	88 e7       	ldi	r24, 0x78	; 120
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	b7 01       	movw	r22, r14
     7a0:	0c c0       	rjmp	.+24     	; 0x7ba <__stack+0x2bb>
     7a2:	82 2f       	mov	r24, r18
     7a4:	86 78       	andi	r24, 0x86	; 134
     7a6:	59 f0       	breq	.+22     	; 0x7be <__stack+0x2bf>
     7a8:	21 fd       	sbrc	r18, 1
     7aa:	02 c0       	rjmp	.+4      	; 0x7b0 <__stack+0x2b1>
     7ac:	80 e2       	ldi	r24, 0x20	; 32
     7ae:	01 c0       	rjmp	.+2      	; 0x7b2 <__stack+0x2b3>
     7b0:	8b e2       	ldi	r24, 0x2B	; 43
     7b2:	27 fd       	sbrc	r18, 7
     7b4:	8d e2       	ldi	r24, 0x2D	; 45
     7b6:	b7 01       	movw	r22, r14
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	0e 94 23 07 	call	0xe46	; 0xe46 <fputc>
     7be:	a5 14       	cp	r10, r5
     7c0:	38 f4       	brcc	.+14     	; 0x7d0 <__stack+0x2d1>
     7c2:	b7 01       	movw	r22, r14
     7c4:	80 e3       	ldi	r24, 0x30	; 48
     7c6:	90 e0       	ldi	r25, 0x00	; 0
     7c8:	0e 94 23 07 	call	0xe46	; 0xe46 <fputc>
     7cc:	5a 94       	dec	r5
     7ce:	f7 cf       	rjmp	.-18     	; 0x7be <__stack+0x2bf>
     7d0:	aa 94       	dec	r10
     7d2:	f4 01       	movw	r30, r8
     7d4:	ea 0d       	add	r30, r10
     7d6:	f1 1d       	adc	r31, r1
     7d8:	80 81       	ld	r24, Z
     7da:	b7 01       	movw	r22, r14
     7dc:	90 e0       	ldi	r25, 0x00	; 0
     7de:	0e 94 23 07 	call	0xe46	; 0xe46 <fputc>
     7e2:	a1 10       	cpse	r10, r1
     7e4:	f5 cf       	rjmp	.-22     	; 0x7d0 <__stack+0x2d1>
     7e6:	33 20       	and	r3, r3
     7e8:	09 f4       	brne	.+2      	; 0x7ec <__stack+0x2ed>
     7ea:	51 ce       	rjmp	.-862    	; 0x48e <vfprintf+0x24>
     7ec:	b7 01       	movw	r22, r14
     7ee:	80 e2       	ldi	r24, 0x20	; 32
     7f0:	90 e0       	ldi	r25, 0x00	; 0
     7f2:	0e 94 23 07 	call	0xe46	; 0xe46 <fputc>
     7f6:	3a 94       	dec	r3
     7f8:	f6 cf       	rjmp	.-20     	; 0x7e6 <__stack+0x2e7>
     7fa:	f7 01       	movw	r30, r14
     7fc:	86 81       	ldd	r24, Z+6	; 0x06
     7fe:	97 81       	ldd	r25, Z+7	; 0x07
     800:	02 c0       	rjmp	.+4      	; 0x806 <__stack+0x307>
     802:	8f ef       	ldi	r24, 0xFF	; 255
     804:	9f ef       	ldi	r25, 0xFF	; 255
     806:	2c 96       	adiw	r28, 0x0c	; 12
     808:	e2 e1       	ldi	r30, 0x12	; 18
     80a:	0c 94 1d 08 	jmp	0x103a	; 0x103a <__epilogue_restores__>

0000080e <putval>:
     80e:	20 fd       	sbrc	r18, 0
     810:	09 c0       	rjmp	.+18     	; 0x824 <putval+0x16>
     812:	fc 01       	movw	r30, r24
     814:	23 fd       	sbrc	r18, 3
     816:	05 c0       	rjmp	.+10     	; 0x822 <putval+0x14>
     818:	22 ff       	sbrs	r18, 2
     81a:	02 c0       	rjmp	.+4      	; 0x820 <putval+0x12>
     81c:	73 83       	std	Z+3, r23	; 0x03
     81e:	62 83       	std	Z+2, r22	; 0x02
     820:	51 83       	std	Z+1, r21	; 0x01
     822:	40 83       	st	Z, r20
     824:	08 95       	ret

00000826 <mulacc>:
     826:	44 fd       	sbrc	r20, 4
     828:	10 c0       	rjmp	.+32     	; 0x84a <mulacc+0x24>
     82a:	46 fd       	sbrc	r20, 6
     82c:	10 c0       	rjmp	.+32     	; 0x84e <mulacc+0x28>
     82e:	db 01       	movw	r26, r22
     830:	fc 01       	movw	r30, r24
     832:	aa 0f       	add	r26, r26
     834:	bb 1f       	adc	r27, r27
     836:	ee 1f       	adc	r30, r30
     838:	ff 1f       	adc	r31, r31
     83a:	10 94       	com	r1
     83c:	d1 f7       	brne	.-12     	; 0x832 <mulacc+0xc>
     83e:	6a 0f       	add	r22, r26
     840:	7b 1f       	adc	r23, r27
     842:	8e 1f       	adc	r24, r30
     844:	9f 1f       	adc	r25, r31
     846:	31 e0       	ldi	r19, 0x01	; 1
     848:	03 c0       	rjmp	.+6      	; 0x850 <mulacc+0x2a>
     84a:	33 e0       	ldi	r19, 0x03	; 3
     84c:	01 c0       	rjmp	.+2      	; 0x850 <mulacc+0x2a>
     84e:	34 e0       	ldi	r19, 0x04	; 4
     850:	66 0f       	add	r22, r22
     852:	77 1f       	adc	r23, r23
     854:	88 1f       	adc	r24, r24
     856:	99 1f       	adc	r25, r25
     858:	31 50       	subi	r19, 0x01	; 1
     85a:	d1 f7       	brne	.-12     	; 0x850 <mulacc+0x2a>
     85c:	62 0f       	add	r22, r18
     85e:	71 1d       	adc	r23, r1
     860:	81 1d       	adc	r24, r1
     862:	91 1d       	adc	r25, r1
     864:	08 95       	ret

00000866 <skip_spaces>:
     866:	0f 93       	push	r16
     868:	1f 93       	push	r17
     86a:	cf 93       	push	r28
     86c:	df 93       	push	r29
     86e:	8c 01       	movw	r16, r24
     870:	c8 01       	movw	r24, r16
     872:	0e 94 e5 06 	call	0xdca	; 0xdca <fgetc>
     876:	ec 01       	movw	r28, r24
     878:	97 fd       	sbrc	r25, 7
     87a:	08 c0       	rjmp	.+16     	; 0x88c <skip_spaces+0x26>
     87c:	0e 94 bc 06 	call	0xd78	; 0xd78 <isspace>
     880:	89 2b       	or	r24, r25
     882:	b1 f7       	brne	.-20     	; 0x870 <skip_spaces+0xa>
     884:	b8 01       	movw	r22, r16
     886:	ce 01       	movw	r24, r28
     888:	0e 94 55 07 	call	0xeaa	; 0xeaa <ungetc>
     88c:	ce 01       	movw	r24, r28
     88e:	df 91       	pop	r29
     890:	cf 91       	pop	r28
     892:	1f 91       	pop	r17
     894:	0f 91       	pop	r16
     896:	08 95       	ret

00000898 <conv_int>:
     898:	8f 92       	push	r8
     89a:	9f 92       	push	r9
     89c:	af 92       	push	r10
     89e:	cf 92       	push	r12
     8a0:	df 92       	push	r13
     8a2:	ef 92       	push	r14
     8a4:	ff 92       	push	r15
     8a6:	0f 93       	push	r16
     8a8:	1f 93       	push	r17
     8aa:	cf 93       	push	r28
     8ac:	df 93       	push	r29
     8ae:	ec 01       	movw	r28, r24
     8b0:	a6 2e       	mov	r10, r22
     8b2:	4a 01       	movw	r8, r20
     8b4:	02 2f       	mov	r16, r18
     8b6:	0e 94 e5 06 	call	0xdca	; 0xdca <fgetc>
     8ba:	ac 01       	movw	r20, r24
     8bc:	55 27       	eor	r21, r21
     8be:	4b 32       	cpi	r20, 0x2B	; 43
     8c0:	51 05       	cpc	r21, r1
     8c2:	21 f0       	breq	.+8      	; 0x8cc <conv_int+0x34>
     8c4:	4d 32       	cpi	r20, 0x2D	; 45
     8c6:	51 05       	cpc	r21, r1
     8c8:	51 f4       	brne	.+20     	; 0x8de <conv_int+0x46>
     8ca:	00 68       	ori	r16, 0x80	; 128
     8cc:	aa 94       	dec	r10
     8ce:	11 f4       	brne	.+4      	; 0x8d4 <conv_int+0x3c>
     8d0:	80 e0       	ldi	r24, 0x00	; 0
     8d2:	67 c0       	rjmp	.+206    	; 0x9a2 <conv_int+0x10a>
     8d4:	ce 01       	movw	r24, r28
     8d6:	0e 94 e5 06 	call	0xdca	; 0xdca <fgetc>
     8da:	97 fd       	sbrc	r25, 7
     8dc:	f9 cf       	rjmp	.-14     	; 0x8d0 <conv_int+0x38>
     8de:	10 2f       	mov	r17, r16
     8e0:	1d 7f       	andi	r17, 0xFD	; 253
     8e2:	30 2f       	mov	r19, r16
     8e4:	30 73       	andi	r19, 0x30	; 48
     8e6:	01 f5       	brne	.+64     	; 0x928 <conv_int+0x90>
     8e8:	80 33       	cpi	r24, 0x30	; 48
     8ea:	f1 f4       	brne	.+60     	; 0x928 <conv_int+0x90>
     8ec:	ff 24       	eor	r15, r15
     8ee:	fa 94       	dec	r15
     8f0:	fa 0c       	add	r15, r10
     8f2:	09 f4       	brne	.+2      	; 0x8f6 <conv_int+0x5e>
     8f4:	42 c0       	rjmp	.+132    	; 0x97a <conv_int+0xe2>
     8f6:	ce 01       	movw	r24, r28
     8f8:	0e 94 e5 06 	call	0xdca	; 0xdca <fgetc>
     8fc:	97 fd       	sbrc	r25, 7
     8fe:	3d c0       	rjmp	.+122    	; 0x97a <conv_int+0xe2>
     900:	38 2f       	mov	r19, r24
     902:	3f 7d       	andi	r19, 0xDF	; 223
     904:	38 35       	cpi	r19, 0x58	; 88
     906:	51 f4       	brne	.+20     	; 0x91c <conv_int+0x84>
     908:	12 64       	ori	r17, 0x42	; 66
     90a:	aa 94       	dec	r10
     90c:	aa 94       	dec	r10
     90e:	a9 f1       	breq	.+106    	; 0x97a <conv_int+0xe2>
     910:	ce 01       	movw	r24, r28
     912:	0e 94 e5 06 	call	0xdca	; 0xdca <fgetc>
     916:	97 ff       	sbrs	r25, 7
     918:	07 c0       	rjmp	.+14     	; 0x928 <conv_int+0x90>
     91a:	2f c0       	rjmp	.+94     	; 0x97a <conv_int+0xe2>
     91c:	06 ff       	sbrs	r16, 6
     91e:	02 c0       	rjmp	.+4      	; 0x924 <conv_int+0x8c>
     920:	12 60       	ori	r17, 0x02	; 2
     922:	01 c0       	rjmp	.+2      	; 0x926 <conv_int+0x8e>
     924:	12 61       	ori	r17, 0x12	; 18
     926:	af 2c       	mov	r10, r15
     928:	c1 2c       	mov	r12, r1
     92a:	d1 2c       	mov	r13, r1
     92c:	76 01       	movw	r14, r12
     92e:	20 ed       	ldi	r18, 0xD0	; 208
     930:	28 0f       	add	r18, r24
     932:	28 30       	cpi	r18, 0x08	; 8
     934:	80 f0       	brcs	.+32     	; 0x956 <conv_int+0xbe>
     936:	14 ff       	sbrs	r17, 4
     938:	04 c0       	rjmp	.+8      	; 0x942 <conv_int+0xaa>
     93a:	be 01       	movw	r22, r28
     93c:	0e 94 55 07 	call	0xeaa	; 0xeaa <ungetc>
     940:	19 c0       	rjmp	.+50     	; 0x974 <conv_int+0xdc>
     942:	2a 30       	cpi	r18, 0x0A	; 10
     944:	40 f0       	brcs	.+16     	; 0x956 <conv_int+0xbe>
     946:	16 ff       	sbrs	r17, 6
     948:	f8 cf       	rjmp	.-16     	; 0x93a <conv_int+0xa2>
     94a:	2f 7d       	andi	r18, 0xDF	; 223
     94c:	3f ee       	ldi	r19, 0xEF	; 239
     94e:	32 0f       	add	r19, r18
     950:	36 30       	cpi	r19, 0x06	; 6
     952:	98 f7       	brcc	.-26     	; 0x93a <conv_int+0xa2>
     954:	27 50       	subi	r18, 0x07	; 7
     956:	41 2f       	mov	r20, r17
     958:	c7 01       	movw	r24, r14
     95a:	b6 01       	movw	r22, r12
     95c:	0e 94 13 04 	call	0x826	; 0x826 <mulacc>
     960:	6b 01       	movw	r12, r22
     962:	7c 01       	movw	r14, r24
     964:	12 60       	ori	r17, 0x02	; 2
     966:	aa 94       	dec	r10
     968:	59 f0       	breq	.+22     	; 0x980 <conv_int+0xe8>
     96a:	ce 01       	movw	r24, r28
     96c:	0e 94 e5 06 	call	0xdca	; 0xdca <fgetc>
     970:	97 ff       	sbrs	r25, 7
     972:	dd cf       	rjmp	.-70     	; 0x92e <conv_int+0x96>
     974:	11 fd       	sbrc	r17, 1
     976:	04 c0       	rjmp	.+8      	; 0x980 <conv_int+0xe8>
     978:	ab cf       	rjmp	.-170    	; 0x8d0 <conv_int+0x38>
     97a:	c1 2c       	mov	r12, r1
     97c:	d1 2c       	mov	r13, r1
     97e:	76 01       	movw	r14, r12
     980:	17 ff       	sbrs	r17, 7
     982:	08 c0       	rjmp	.+16     	; 0x994 <conv_int+0xfc>
     984:	f0 94       	com	r15
     986:	e0 94       	com	r14
     988:	d0 94       	com	r13
     98a:	c0 94       	com	r12
     98c:	c1 1c       	adc	r12, r1
     98e:	d1 1c       	adc	r13, r1
     990:	e1 1c       	adc	r14, r1
     992:	f1 1c       	adc	r15, r1
     994:	21 2f       	mov	r18, r17
     996:	b7 01       	movw	r22, r14
     998:	a6 01       	movw	r20, r12
     99a:	c4 01       	movw	r24, r8
     99c:	0e 94 07 04 	call	0x80e	; 0x80e <putval>
     9a0:	81 e0       	ldi	r24, 0x01	; 1
     9a2:	df 91       	pop	r29
     9a4:	cf 91       	pop	r28
     9a6:	1f 91       	pop	r17
     9a8:	0f 91       	pop	r16
     9aa:	ff 90       	pop	r15
     9ac:	ef 90       	pop	r14
     9ae:	df 90       	pop	r13
     9b0:	cf 90       	pop	r12
     9b2:	af 90       	pop	r10
     9b4:	9f 90       	pop	r9
     9b6:	8f 90       	pop	r8
     9b8:	08 95       	ret

000009ba <conv_brk>:
     9ba:	a1 e2       	ldi	r26, 0x21	; 33
     9bc:	b0 e0       	ldi	r27, 0x00	; 0
     9be:	e3 ee       	ldi	r30, 0xE3	; 227
     9c0:	f4 e0       	ldi	r31, 0x04	; 4
     9c2:	0c 94 06 08 	jmp	0x100c	; 0x100c <__prologue_saves__+0xa>
     9c6:	5c 01       	movw	r10, r24
     9c8:	7a 01       	movw	r14, r20
     9ca:	8e 01       	movw	r16, r28
     9cc:	0f 5f       	subi	r16, 0xFF	; 255
     9ce:	1f 4f       	sbci	r17, 0xFF	; 255
     9d0:	68 01       	movw	r12, r16
     9d2:	80 e2       	ldi	r24, 0x20	; 32
     9d4:	d8 01       	movw	r26, r16
     9d6:	1d 92       	st	X+, r1
     9d8:	8a 95       	dec	r24
     9da:	e9 f7       	brne	.-6      	; 0x9d6 <conv_brk+0x1c>
     9dc:	f5 01       	movw	r30, r10
     9de:	73 80       	ldd	r7, Z+3	; 0x03
     9e0:	40 e0       	ldi	r20, 0x00	; 0
     9e2:	50 e0       	ldi	r21, 0x00	; 0
     9e4:	81 2c       	mov	r8, r1
     9e6:	b0 e0       	ldi	r27, 0x00	; 0
     9e8:	91 2c       	mov	r9, r1
     9ea:	81 e0       	ldi	r24, 0x01	; 1
     9ec:	90 e0       	ldi	r25, 0x00	; 0
     9ee:	f9 01       	movw	r30, r18
     9f0:	73 fc       	sbrc	r7, 3
     9f2:	a5 91       	lpm	r26, Z+
     9f4:	73 fe       	sbrs	r7, 3
     9f6:	a1 91       	ld	r26, Z+
     9f8:	8f 01       	movw	r16, r30
     9fa:	7a 2f       	mov	r23, r26
     9fc:	9f 01       	movw	r18, r30
     9fe:	a1 11       	cpse	r26, r1
     a00:	03 c0       	rjmp	.+6      	; 0xa08 <conv_brk+0x4e>
     a02:	80 e0       	ldi	r24, 0x00	; 0
     a04:	90 e0       	ldi	r25, 0x00	; 0
     a06:	7d c0       	rjmp	.+250    	; 0xb02 <conv_brk+0x148>
     a08:	ae 35       	cpi	r26, 0x5E	; 94
     a0a:	19 f4       	brne	.+6      	; 0xa12 <conv_brk+0x58>
     a0c:	41 15       	cp	r20, r1
     a0e:	51 05       	cpc	r21, r1
     a10:	59 f1       	breq	.+86     	; 0xa68 <conv_brk+0xae>
     a12:	e9 2d       	mov	r30, r9
     a14:	f0 e0       	ldi	r31, 0x00	; 0
     a16:	e4 17       	cp	r30, r20
     a18:	f5 07       	cpc	r31, r21
     a1a:	3c f4       	brge	.+14     	; 0xa2a <conv_brk+0x70>
     a1c:	ad 35       	cpi	r26, 0x5D	; 93
     a1e:	69 f1       	breq	.+90     	; 0xa7a <conv_brk+0xc0>
     a20:	ad 32       	cpi	r26, 0x2D	; 45
     a22:	19 f4       	brne	.+6      	; 0xa2a <conv_brk+0x70>
     a24:	bb 23       	and	r27, r27
     a26:	19 f1       	breq	.+70     	; 0xa6e <conv_brk+0xb4>
     a28:	03 c0       	rjmp	.+6      	; 0xa30 <conv_brk+0x76>
     a2a:	b1 11       	cpse	r27, r1
     a2c:	01 c0       	rjmp	.+2      	; 0xa30 <conv_brk+0x76>
     a2e:	8a 2e       	mov	r8, r26
     a30:	e7 2f       	mov	r30, r23
     a32:	e6 95       	lsr	r30
     a34:	e6 95       	lsr	r30
     a36:	e6 95       	lsr	r30
     a38:	86 01       	movw	r16, r12
     a3a:	0e 0f       	add	r16, r30
     a3c:	11 1d       	adc	r17, r1
     a3e:	f8 01       	movw	r30, r16
     a40:	a7 2f       	mov	r26, r23
     a42:	a7 70       	andi	r26, 0x07	; 7
     a44:	8c 01       	movw	r16, r24
     a46:	02 c0       	rjmp	.+4      	; 0xa4c <conv_brk+0x92>
     a48:	00 0f       	add	r16, r16
     a4a:	11 1f       	adc	r17, r17
     a4c:	aa 95       	dec	r26
     a4e:	e2 f7       	brpl	.-8      	; 0xa48 <conv_brk+0x8e>
     a50:	d8 01       	movw	r26, r16
     a52:	b0 81       	ld	r27, Z
     a54:	ba 2b       	or	r27, r26
     a56:	b0 83       	st	Z, r27
     a58:	78 15       	cp	r23, r8
     a5a:	59 f0       	breq	.+22     	; 0xa72 <conv_brk+0xb8>
     a5c:	78 15       	cp	r23, r8
     a5e:	10 f4       	brcc	.+4      	; 0xa64 <conv_brk+0xaa>
     a60:	7f 5f       	subi	r23, 0xFF	; 255
     a62:	e6 cf       	rjmp	.-52     	; 0xa30 <conv_brk+0x76>
     a64:	71 50       	subi	r23, 0x01	; 1
     a66:	e4 cf       	rjmp	.-56     	; 0xa30 <conv_brk+0x76>
     a68:	99 24       	eor	r9, r9
     a6a:	93 94       	inc	r9
     a6c:	03 c0       	rjmp	.+6      	; 0xa74 <conv_brk+0xba>
     a6e:	b1 e0       	ldi	r27, 0x01	; 1
     a70:	01 c0       	rjmp	.+2      	; 0xa74 <conv_brk+0xba>
     a72:	b0 e0       	ldi	r27, 0x00	; 0
     a74:	4f 5f       	subi	r20, 0xFF	; 255
     a76:	5f 4f       	sbci	r21, 0xFF	; 255
     a78:	ba cf       	rjmp	.-140    	; 0x9ee <conv_brk+0x34>
     a7a:	bb 23       	and	r27, r27
     a7c:	19 f0       	breq	.+6      	; 0xa84 <conv_brk+0xca>
     a7e:	8e 81       	ldd	r24, Y+6	; 0x06
     a80:	80 62       	ori	r24, 0x20	; 32
     a82:	8e 83       	std	Y+6, r24	; 0x06
     a84:	91 10       	cpse	r9, r1
     a86:	03 c0       	rjmp	.+6      	; 0xa8e <conv_brk+0xd4>
     a88:	99 24       	eor	r9, r9
     a8a:	93 94       	inc	r9
     a8c:	15 c0       	rjmp	.+42     	; 0xab8 <conv_brk+0xfe>
     a8e:	f6 01       	movw	r30, r12
     a90:	ce 01       	movw	r24, r28
     a92:	81 96       	adiw	r24, 0x21	; 33
     a94:	20 81       	ld	r18, Z
     a96:	20 95       	com	r18
     a98:	21 93       	st	Z+, r18
     a9a:	e8 17       	cp	r30, r24
     a9c:	f9 07       	cpc	r31, r25
     a9e:	d1 f7       	brne	.-12     	; 0xa94 <conv_brk+0xda>
     aa0:	f3 cf       	rjmp	.-26     	; 0xa88 <conv_brk+0xce>
     aa2:	e1 14       	cp	r14, r1
     aa4:	f1 04       	cpc	r15, r1
     aa6:	29 f0       	breq	.+10     	; 0xab2 <conv_brk+0xf8>
     aa8:	d7 01       	movw	r26, r14
     aaa:	8c 93       	st	X, r24
     aac:	f7 01       	movw	r30, r14
     aae:	31 96       	adiw	r30, 0x01	; 1
     ab0:	7f 01       	movw	r14, r30
     ab2:	61 50       	subi	r22, 0x01	; 1
     ab4:	01 f1       	breq	.+64     	; 0xaf6 <conv_brk+0x13c>
     ab6:	91 2c       	mov	r9, r1
     ab8:	c5 01       	movw	r24, r10
     aba:	69 a3       	std	Y+33, r22	; 0x21
     abc:	0e 94 e5 06 	call	0xdca	; 0xdca <fgetc>
     ac0:	69 a1       	ldd	r22, Y+33	; 0x21
     ac2:	97 fd       	sbrc	r25, 7
     ac4:	16 c0       	rjmp	.+44     	; 0xaf2 <conv_brk+0x138>
     ac6:	28 2f       	mov	r18, r24
     ac8:	26 95       	lsr	r18
     aca:	26 95       	lsr	r18
     acc:	26 95       	lsr	r18
     ace:	f6 01       	movw	r30, r12
     ad0:	e2 0f       	add	r30, r18
     ad2:	f1 1d       	adc	r31, r1
     ad4:	20 81       	ld	r18, Z
     ad6:	30 e0       	ldi	r19, 0x00	; 0
     ad8:	ac 01       	movw	r20, r24
     ada:	47 70       	andi	r20, 0x07	; 7
     adc:	55 27       	eor	r21, r21
     ade:	02 c0       	rjmp	.+4      	; 0xae4 <conv_brk+0x12a>
     ae0:	35 95       	asr	r19
     ae2:	27 95       	ror	r18
     ae4:	4a 95       	dec	r20
     ae6:	e2 f7       	brpl	.-8      	; 0xae0 <conv_brk+0x126>
     ae8:	20 fd       	sbrc	r18, 0
     aea:	db cf       	rjmp	.-74     	; 0xaa2 <conv_brk+0xe8>
     aec:	b5 01       	movw	r22, r10
     aee:	0e 94 55 07 	call	0xeaa	; 0xeaa <ungetc>
     af2:	91 10       	cpse	r9, r1
     af4:	86 cf       	rjmp	.-244    	; 0xa02 <conv_brk+0x48>
     af6:	e1 14       	cp	r14, r1
     af8:	f1 04       	cpc	r15, r1
     afa:	11 f0       	breq	.+4      	; 0xb00 <conv_brk+0x146>
     afc:	d7 01       	movw	r26, r14
     afe:	1c 92       	st	X, r1
     b00:	c8 01       	movw	r24, r16
     b02:	a1 96       	adiw	r28, 0x21	; 33
     b04:	ed e0       	ldi	r30, 0x0D	; 13
     b06:	0c 94 22 08 	jmp	0x1044	; 0x1044 <__epilogue_restores__+0xa>

00000b0a <vfscanf>:
     b0a:	4f 92       	push	r4
     b0c:	5f 92       	push	r5
     b0e:	7f 92       	push	r7
     b10:	8f 92       	push	r8
     b12:	9f 92       	push	r9
     b14:	af 92       	push	r10
     b16:	bf 92       	push	r11
     b18:	cf 92       	push	r12
     b1a:	df 92       	push	r13
     b1c:	ef 92       	push	r14
     b1e:	ff 92       	push	r15
     b20:	0f 93       	push	r16
     b22:	1f 93       	push	r17
     b24:	cf 93       	push	r28
     b26:	df 93       	push	r29
     b28:	1f 92       	push	r1
     b2a:	cd b7       	in	r28, 0x3d	; 61
     b2c:	de b7       	in	r29, 0x3e	; 62
     b2e:	8c 01       	movw	r16, r24
     b30:	2b 01       	movw	r4, r22
     b32:	7a 01       	movw	r14, r20
     b34:	fc 01       	movw	r30, r24
     b36:	17 82       	std	Z+7, r1	; 0x07
     b38:	16 82       	std	Z+6, r1	; 0x06
     b3a:	a1 2c       	mov	r10, r1
     b3c:	f8 01       	movw	r30, r16
     b3e:	d3 80       	ldd	r13, Z+3	; 0x03
     b40:	f2 01       	movw	r30, r4
     b42:	d3 fc       	sbrc	r13, 3
     b44:	85 91       	lpm	r24, Z+
     b46:	d3 fe       	sbrs	r13, 3
     b48:	81 91       	ld	r24, Z+
     b4a:	38 2f       	mov	r19, r24
     b4c:	2f 01       	movw	r4, r30
     b4e:	88 23       	and	r24, r24
     b50:	09 f4       	brne	.+2      	; 0xb54 <vfscanf+0x4a>
     b52:	fc c0       	rjmp	.+504    	; 0xd4c <vfscanf+0x242>
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	39 83       	std	Y+1, r19	; 0x01
     b58:	0e 94 bc 06 	call	0xd78	; 0xd78 <isspace>
     b5c:	39 81       	ldd	r19, Y+1	; 0x01
     b5e:	89 2b       	or	r24, r25
     b60:	21 f0       	breq	.+8      	; 0xb6a <vfscanf+0x60>
     b62:	c8 01       	movw	r24, r16
     b64:	0e 94 33 04 	call	0x866	; 0x866 <skip_spaces>
     b68:	e9 cf       	rjmp	.-46     	; 0xb3c <vfscanf+0x32>
     b6a:	35 32       	cpi	r19, 0x25	; 37
     b6c:	41 f4       	brne	.+16     	; 0xb7e <vfscanf+0x74>
     b6e:	f2 01       	movw	r30, r4
     b70:	d3 fc       	sbrc	r13, 3
     b72:	35 91       	lpm	r19, Z+
     b74:	d3 fe       	sbrs	r13, 3
     b76:	31 91       	ld	r19, Z+
     b78:	2f 01       	movw	r4, r30
     b7a:	35 32       	cpi	r19, 0x25	; 37
     b7c:	69 f4       	brne	.+26     	; 0xb98 <vfscanf+0x8e>
     b7e:	c8 01       	movw	r24, r16
     b80:	39 83       	std	Y+1, r19	; 0x01
     b82:	0e 94 e5 06 	call	0xdca	; 0xdca <fgetc>
     b86:	39 81       	ldd	r19, Y+1	; 0x01
     b88:	97 fd       	sbrc	r25, 7
     b8a:	de c0       	rjmp	.+444    	; 0xd48 <vfscanf+0x23e>
     b8c:	38 17       	cp	r19, r24
     b8e:	b1 f2       	breq	.-84     	; 0xb3c <vfscanf+0x32>
     b90:	b8 01       	movw	r22, r16
     b92:	0e 94 55 07 	call	0xeaa	; 0xeaa <ungetc>
     b96:	da c0       	rjmp	.+436    	; 0xd4c <vfscanf+0x242>
     b98:	3a 32       	cpi	r19, 0x2A	; 42
     b9a:	41 f4       	brne	.+16     	; 0xbac <vfscanf+0xa2>
     b9c:	d3 fc       	sbrc	r13, 3
     b9e:	35 91       	lpm	r19, Z+
     ba0:	d3 fe       	sbrs	r13, 3
     ba2:	31 91       	ld	r19, Z+
     ba4:	2f 01       	movw	r4, r30
     ba6:	bb 24       	eor	r11, r11
     ba8:	b3 94       	inc	r11
     baa:	01 c0       	rjmp	.+2      	; 0xbae <vfscanf+0xa4>
     bac:	b1 2c       	mov	r11, r1
     bae:	71 2c       	mov	r7, r1
     bb0:	20 ed       	ldi	r18, 0xD0	; 208
     bb2:	23 0f       	add	r18, r19
     bb4:	2a 30       	cpi	r18, 0x0A	; 10
     bb6:	90 f4       	brcc	.+36     	; 0xbdc <vfscanf+0xd2>
     bb8:	fb 2d       	mov	r31, r11
     bba:	f2 60       	ori	r31, 0x02	; 2
     bbc:	bf 2e       	mov	r11, r31
     bbe:	67 2d       	mov	r22, r7
     bc0:	70 e0       	ldi	r23, 0x00	; 0
     bc2:	80 e0       	ldi	r24, 0x00	; 0
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	40 e2       	ldi	r20, 0x20	; 32
     bc8:	0e 94 13 04 	call	0x826	; 0x826 <mulacc>
     bcc:	76 2e       	mov	r7, r22
     bce:	f2 01       	movw	r30, r4
     bd0:	d3 fc       	sbrc	r13, 3
     bd2:	35 91       	lpm	r19, Z+
     bd4:	d3 fe       	sbrs	r13, 3
     bd6:	31 91       	ld	r19, Z+
     bd8:	2f 01       	movw	r4, r30
     bda:	ea cf       	rjmp	.-44     	; 0xbb0 <vfscanf+0xa6>
     bdc:	b1 fe       	sbrs	r11, 1
     bde:	03 c0       	rjmp	.+6      	; 0xbe6 <vfscanf+0xdc>
     be0:	71 10       	cpse	r7, r1
     be2:	03 c0       	rjmp	.+6      	; 0xbea <vfscanf+0xe0>
     be4:	b3 c0       	rjmp	.+358    	; 0xd4c <vfscanf+0x242>
     be6:	77 24       	eor	r7, r7
     be8:	7a 94       	dec	r7
     bea:	38 36       	cpi	r19, 0x68	; 104
     bec:	19 f0       	breq	.+6      	; 0xbf4 <vfscanf+0xea>
     bee:	3c 36       	cpi	r19, 0x6C	; 108
     bf0:	61 f0       	breq	.+24     	; 0xc0a <vfscanf+0x100>
     bf2:	14 c0       	rjmp	.+40     	; 0xc1c <vfscanf+0x112>
     bf4:	f2 01       	movw	r30, r4
     bf6:	d3 fc       	sbrc	r13, 3
     bf8:	35 91       	lpm	r19, Z+
     bfa:	d3 fe       	sbrs	r13, 3
     bfc:	31 91       	ld	r19, Z+
     bfe:	2f 01       	movw	r4, r30
     c00:	38 36       	cpi	r19, 0x68	; 104
     c02:	61 f4       	brne	.+24     	; 0xc1c <vfscanf+0x112>
     c04:	fb 2d       	mov	r31, r11
     c06:	f8 60       	ori	r31, 0x08	; 8
     c08:	bf 2e       	mov	r11, r31
     c0a:	8b 2d       	mov	r24, r11
     c0c:	84 60       	ori	r24, 0x04	; 4
     c0e:	b8 2e       	mov	r11, r24
     c10:	f2 01       	movw	r30, r4
     c12:	d3 fc       	sbrc	r13, 3
     c14:	35 91       	lpm	r19, Z+
     c16:	d3 fe       	sbrs	r13, 3
     c18:	31 91       	ld	r19, Z+
     c1a:	2f 01       	movw	r4, r30
     c1c:	33 23       	and	r19, r19
     c1e:	09 f4       	brne	.+2      	; 0xc22 <vfscanf+0x118>
     c20:	95 c0       	rjmp	.+298    	; 0xd4c <vfscanf+0x242>
     c22:	63 2f       	mov	r22, r19
     c24:	70 e0       	ldi	r23, 0x00	; 0
     c26:	80 e7       	ldi	r24, 0x70	; 112
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	39 83       	std	Y+1, r19	; 0x01
     c2c:	0e 94 c4 06 	call	0xd88	; 0xd88 <strchr_P>
     c30:	39 81       	ldd	r19, Y+1	; 0x01
     c32:	89 2b       	or	r24, r25
     c34:	09 f4       	brne	.+2      	; 0xc38 <vfscanf+0x12e>
     c36:	8a c0       	rjmp	.+276    	; 0xd4c <vfscanf+0x242>
     c38:	b0 fc       	sbrc	r11, 0
     c3a:	07 c0       	rjmp	.+14     	; 0xc4a <vfscanf+0x140>
     c3c:	f7 01       	movw	r30, r14
     c3e:	c0 80       	ld	r12, Z
     c40:	d1 80       	ldd	r13, Z+1	; 0x01
     c42:	c7 01       	movw	r24, r14
     c44:	02 96       	adiw	r24, 0x02	; 2
     c46:	7c 01       	movw	r14, r24
     c48:	02 c0       	rjmp	.+4      	; 0xc4e <vfscanf+0x144>
     c4a:	c1 2c       	mov	r12, r1
     c4c:	d1 2c       	mov	r13, r1
     c4e:	3e 36       	cpi	r19, 0x6E	; 110
     c50:	51 f4       	brne	.+20     	; 0xc66 <vfscanf+0x15c>
     c52:	f8 01       	movw	r30, r16
     c54:	46 81       	ldd	r20, Z+6	; 0x06
     c56:	57 81       	ldd	r21, Z+7	; 0x07
     c58:	60 e0       	ldi	r22, 0x00	; 0
     c5a:	70 e0       	ldi	r23, 0x00	; 0
     c5c:	2b 2d       	mov	r18, r11
     c5e:	c6 01       	movw	r24, r12
     c60:	0e 94 07 04 	call	0x80e	; 0x80e <putval>
     c64:	6b cf       	rjmp	.-298    	; 0xb3c <vfscanf+0x32>
     c66:	33 36       	cpi	r19, 0x63	; 99
     c68:	a1 f4       	brne	.+40     	; 0xc92 <vfscanf+0x188>
     c6a:	b1 fc       	sbrc	r11, 1
     c6c:	02 c0       	rjmp	.+4      	; 0xc72 <vfscanf+0x168>
     c6e:	77 24       	eor	r7, r7
     c70:	73 94       	inc	r7
     c72:	c8 01       	movw	r24, r16
     c74:	0e 94 e5 06 	call	0xdca	; 0xdca <fgetc>
     c78:	97 fd       	sbrc	r25, 7
     c7a:	66 c0       	rjmp	.+204    	; 0xd48 <vfscanf+0x23e>
     c7c:	c1 14       	cp	r12, r1
     c7e:	d1 04       	cpc	r13, r1
     c80:	29 f0       	breq	.+10     	; 0xc8c <vfscanf+0x182>
     c82:	f6 01       	movw	r30, r12
     c84:	80 83       	st	Z, r24
     c86:	c6 01       	movw	r24, r12
     c88:	01 96       	adiw	r24, 0x01	; 1
     c8a:	6c 01       	movw	r12, r24
     c8c:	7a 94       	dec	r7
     c8e:	89 f7       	brne	.-30     	; 0xc72 <vfscanf+0x168>
     c90:	57 c0       	rjmp	.+174    	; 0xd40 <vfscanf+0x236>
     c92:	3b 35       	cpi	r19, 0x5B	; 91
     c94:	59 f4       	brne	.+22     	; 0xcac <vfscanf+0x1a2>
     c96:	92 01       	movw	r18, r4
     c98:	a6 01       	movw	r20, r12
     c9a:	67 2d       	mov	r22, r7
     c9c:	c8 01       	movw	r24, r16
     c9e:	0e 94 dd 04 	call	0x9ba	; 0x9ba <conv_brk>
     ca2:	2c 01       	movw	r4, r24
     ca4:	00 97       	sbiw	r24, 0x00	; 0
     ca6:	09 f0       	breq	.+2      	; 0xcaa <vfscanf+0x1a0>
     ca8:	4b c0       	rjmp	.+150    	; 0xd40 <vfscanf+0x236>
     caa:	45 c0       	rjmp	.+138    	; 0xd36 <vfscanf+0x22c>
     cac:	c8 01       	movw	r24, r16
     cae:	39 83       	std	Y+1, r19	; 0x01
     cb0:	0e 94 33 04 	call	0x866	; 0x866 <skip_spaces>
     cb4:	39 81       	ldd	r19, Y+1	; 0x01
     cb6:	97 fd       	sbrc	r25, 7
     cb8:	47 c0       	rjmp	.+142    	; 0xd48 <vfscanf+0x23e>
     cba:	3f 36       	cpi	r19, 0x6F	; 111
     cbc:	69 f1       	breq	.+90     	; 0xd18 <vfscanf+0x20e>
     cbe:	28 f4       	brcc	.+10     	; 0xcca <vfscanf+0x1c0>
     cc0:	34 36       	cpi	r19, 0x64	; 100
     cc2:	31 f1       	breq	.+76     	; 0xd10 <vfscanf+0x206>
     cc4:	39 36       	cpi	r19, 0x69	; 105
     cc6:	79 f1       	breq	.+94     	; 0xd26 <vfscanf+0x21c>
     cc8:	2b c0       	rjmp	.+86     	; 0xd20 <vfscanf+0x216>
     cca:	33 37       	cpi	r19, 0x73	; 115
     ccc:	69 f0       	breq	.+26     	; 0xce8 <vfscanf+0x1de>
     cce:	35 37       	cpi	r19, 0x75	; 117
     cd0:	f9 f0       	breq	.+62     	; 0xd10 <vfscanf+0x206>
     cd2:	26 c0       	rjmp	.+76     	; 0xd20 <vfscanf+0x216>
     cd4:	c1 14       	cp	r12, r1
     cd6:	d1 04       	cpc	r13, r1
     cd8:	29 f0       	breq	.+10     	; 0xce4 <vfscanf+0x1da>
     cda:	f6 01       	movw	r30, r12
     cdc:	80 82       	st	Z, r8
     cde:	c6 01       	movw	r24, r12
     ce0:	01 96       	adiw	r24, 0x01	; 1
     ce2:	6c 01       	movw	r12, r24
     ce4:	7a 94       	dec	r7
     ce6:	71 f0       	breq	.+28     	; 0xd04 <vfscanf+0x1fa>
     ce8:	c8 01       	movw	r24, r16
     cea:	0e 94 e5 06 	call	0xdca	; 0xdca <fgetc>
     cee:	4c 01       	movw	r8, r24
     cf0:	97 fd       	sbrc	r25, 7
     cf2:	08 c0       	rjmp	.+16     	; 0xd04 <vfscanf+0x1fa>
     cf4:	0e 94 bc 06 	call	0xd78	; 0xd78 <isspace>
     cf8:	89 2b       	or	r24, r25
     cfa:	61 f3       	breq	.-40     	; 0xcd4 <vfscanf+0x1ca>
     cfc:	b8 01       	movw	r22, r16
     cfe:	c4 01       	movw	r24, r8
     d00:	0e 94 55 07 	call	0xeaa	; 0xeaa <ungetc>
     d04:	c1 14       	cp	r12, r1
     d06:	d1 04       	cpc	r13, r1
     d08:	d9 f0       	breq	.+54     	; 0xd40 <vfscanf+0x236>
     d0a:	f6 01       	movw	r30, r12
     d0c:	10 82       	st	Z, r1
     d0e:	18 c0       	rjmp	.+48     	; 0xd40 <vfscanf+0x236>
     d10:	fb 2d       	mov	r31, r11
     d12:	f0 62       	ori	r31, 0x20	; 32
     d14:	bf 2e       	mov	r11, r31
     d16:	07 c0       	rjmp	.+14     	; 0xd26 <vfscanf+0x21c>
     d18:	8b 2d       	mov	r24, r11
     d1a:	80 61       	ori	r24, 0x10	; 16
     d1c:	b8 2e       	mov	r11, r24
     d1e:	03 c0       	rjmp	.+6      	; 0xd26 <vfscanf+0x21c>
     d20:	9b 2d       	mov	r25, r11
     d22:	90 64       	ori	r25, 0x40	; 64
     d24:	b9 2e       	mov	r11, r25
     d26:	2b 2d       	mov	r18, r11
     d28:	a6 01       	movw	r20, r12
     d2a:	67 2d       	mov	r22, r7
     d2c:	c8 01       	movw	r24, r16
     d2e:	0e 94 4c 04 	call	0x898	; 0x898 <conv_int>
     d32:	81 11       	cpse	r24, r1
     d34:	05 c0       	rjmp	.+10     	; 0xd40 <vfscanf+0x236>
     d36:	f8 01       	movw	r30, r16
     d38:	83 81       	ldd	r24, Z+3	; 0x03
     d3a:	80 73       	andi	r24, 0x30	; 48
     d3c:	29 f4       	brne	.+10     	; 0xd48 <vfscanf+0x23e>
     d3e:	06 c0       	rjmp	.+12     	; 0xd4c <vfscanf+0x242>
     d40:	b0 fc       	sbrc	r11, 0
     d42:	fc ce       	rjmp	.-520    	; 0xb3c <vfscanf+0x32>
     d44:	a3 94       	inc	r10
     d46:	fa ce       	rjmp	.-524    	; 0xb3c <vfscanf+0x32>
     d48:	aa 20       	and	r10, r10
     d4a:	19 f0       	breq	.+6      	; 0xd52 <vfscanf+0x248>
     d4c:	8a 2d       	mov	r24, r10
     d4e:	90 e0       	ldi	r25, 0x00	; 0
     d50:	02 c0       	rjmp	.+4      	; 0xd56 <vfscanf+0x24c>
     d52:	8f ef       	ldi	r24, 0xFF	; 255
     d54:	9f ef       	ldi	r25, 0xFF	; 255
     d56:	0f 90       	pop	r0
     d58:	df 91       	pop	r29
     d5a:	cf 91       	pop	r28
     d5c:	1f 91       	pop	r17
     d5e:	0f 91       	pop	r16
     d60:	ff 90       	pop	r15
     d62:	ef 90       	pop	r14
     d64:	df 90       	pop	r13
     d66:	cf 90       	pop	r12
     d68:	bf 90       	pop	r11
     d6a:	af 90       	pop	r10
     d6c:	9f 90       	pop	r9
     d6e:	8f 90       	pop	r8
     d70:	7f 90       	pop	r7
     d72:	5f 90       	pop	r5
     d74:	4f 90       	pop	r4
     d76:	08 95       	ret

00000d78 <isspace>:
     d78:	91 11       	cpse	r25, r1
     d7a:	0e c1       	rjmp	.+540    	; 0xf98 <__ctype_isfalse>
     d7c:	80 32       	cpi	r24, 0x20	; 32
     d7e:	19 f0       	breq	.+6      	; 0xd86 <isspace+0xe>
     d80:	89 50       	subi	r24, 0x09	; 9
     d82:	85 50       	subi	r24, 0x05	; 5
     d84:	d0 f7       	brcc	.-12     	; 0xd7a <isspace+0x2>
     d86:	08 95       	ret

00000d88 <strchr_P>:
     d88:	fc 01       	movw	r30, r24
     d8a:	05 90       	lpm	r0, Z+
     d8c:	06 16       	cp	r0, r22
     d8e:	21 f0       	breq	.+8      	; 0xd98 <strchr_P+0x10>
     d90:	00 20       	and	r0, r0
     d92:	d9 f7       	brne	.-10     	; 0xd8a <strchr_P+0x2>
     d94:	c0 01       	movw	r24, r0
     d96:	08 95       	ret
     d98:	31 97       	sbiw	r30, 0x01	; 1
     d9a:	cf 01       	movw	r24, r30
     d9c:	08 95       	ret

00000d9e <strnlen_P>:
     d9e:	fc 01       	movw	r30, r24
     da0:	05 90       	lpm	r0, Z+
     da2:	61 50       	subi	r22, 0x01	; 1
     da4:	70 40       	sbci	r23, 0x00	; 0
     da6:	01 10       	cpse	r0, r1
     da8:	d8 f7       	brcc	.-10     	; 0xda0 <strnlen_P+0x2>
     daa:	80 95       	com	r24
     dac:	90 95       	com	r25
     dae:	8e 0f       	add	r24, r30
     db0:	9f 1f       	adc	r25, r31
     db2:	08 95       	ret

00000db4 <strnlen>:
     db4:	fc 01       	movw	r30, r24
     db6:	61 50       	subi	r22, 0x01	; 1
     db8:	70 40       	sbci	r23, 0x00	; 0
     dba:	01 90       	ld	r0, Z+
     dbc:	01 10       	cpse	r0, r1
     dbe:	d8 f7       	brcc	.-10     	; 0xdb6 <strnlen+0x2>
     dc0:	80 95       	com	r24
     dc2:	90 95       	com	r25
     dc4:	8e 0f       	add	r24, r30
     dc6:	9f 1f       	adc	r25, r31
     dc8:	08 95       	ret

00000dca <fgetc>:
     dca:	cf 93       	push	r28
     dcc:	df 93       	push	r29
     dce:	ec 01       	movw	r28, r24
     dd0:	2b 81       	ldd	r18, Y+3	; 0x03
     dd2:	20 ff       	sbrs	r18, 0
     dd4:	33 c0       	rjmp	.+102    	; 0xe3c <fgetc+0x72>
     dd6:	26 ff       	sbrs	r18, 6
     dd8:	0a c0       	rjmp	.+20     	; 0xdee <fgetc+0x24>
     dda:	2f 7b       	andi	r18, 0xBF	; 191
     ddc:	2b 83       	std	Y+3, r18	; 0x03
     dde:	8e 81       	ldd	r24, Y+6	; 0x06
     de0:	9f 81       	ldd	r25, Y+7	; 0x07
     de2:	01 96       	adiw	r24, 0x01	; 1
     de4:	9f 83       	std	Y+7, r25	; 0x07
     de6:	8e 83       	std	Y+6, r24	; 0x06
     de8:	8a 81       	ldd	r24, Y+2	; 0x02
     dea:	90 e0       	ldi	r25, 0x00	; 0
     dec:	29 c0       	rjmp	.+82     	; 0xe40 <fgetc+0x76>
     dee:	22 ff       	sbrs	r18, 2
     df0:	0f c0       	rjmp	.+30     	; 0xe10 <fgetc+0x46>
     df2:	e8 81       	ld	r30, Y
     df4:	f9 81       	ldd	r31, Y+1	; 0x01
     df6:	80 81       	ld	r24, Z
     df8:	99 27       	eor	r25, r25
     dfa:	87 fd       	sbrc	r24, 7
     dfc:	90 95       	com	r25
     dfe:	00 97       	sbiw	r24, 0x00	; 0
     e00:	19 f4       	brne	.+6      	; 0xe08 <fgetc+0x3e>
     e02:	20 62       	ori	r18, 0x20	; 32
     e04:	2b 83       	std	Y+3, r18	; 0x03
     e06:	1a c0       	rjmp	.+52     	; 0xe3c <fgetc+0x72>
     e08:	31 96       	adiw	r30, 0x01	; 1
     e0a:	f9 83       	std	Y+1, r31	; 0x01
     e0c:	e8 83       	st	Y, r30
     e0e:	0e c0       	rjmp	.+28     	; 0xe2c <fgetc+0x62>
     e10:	ea 85       	ldd	r30, Y+10	; 0x0a
     e12:	fb 85       	ldd	r31, Y+11	; 0x0b
     e14:	09 95       	icall
     e16:	97 ff       	sbrs	r25, 7
     e18:	09 c0       	rjmp	.+18     	; 0xe2c <fgetc+0x62>
     e1a:	2b 81       	ldd	r18, Y+3	; 0x03
     e1c:	01 96       	adiw	r24, 0x01	; 1
     e1e:	11 f4       	brne	.+4      	; 0xe24 <fgetc+0x5a>
     e20:	80 e1       	ldi	r24, 0x10	; 16
     e22:	01 c0       	rjmp	.+2      	; 0xe26 <fgetc+0x5c>
     e24:	80 e2       	ldi	r24, 0x20	; 32
     e26:	82 2b       	or	r24, r18
     e28:	8b 83       	std	Y+3, r24	; 0x03
     e2a:	08 c0       	rjmp	.+16     	; 0xe3c <fgetc+0x72>
     e2c:	2e 81       	ldd	r18, Y+6	; 0x06
     e2e:	3f 81       	ldd	r19, Y+7	; 0x07
     e30:	2f 5f       	subi	r18, 0xFF	; 255
     e32:	3f 4f       	sbci	r19, 0xFF	; 255
     e34:	3f 83       	std	Y+7, r19	; 0x07
     e36:	2e 83       	std	Y+6, r18	; 0x06
     e38:	99 27       	eor	r25, r25
     e3a:	02 c0       	rjmp	.+4      	; 0xe40 <fgetc+0x76>
     e3c:	8f ef       	ldi	r24, 0xFF	; 255
     e3e:	9f ef       	ldi	r25, 0xFF	; 255
     e40:	df 91       	pop	r29
     e42:	cf 91       	pop	r28
     e44:	08 95       	ret

00000e46 <fputc>:
     e46:	0f 93       	push	r16
     e48:	1f 93       	push	r17
     e4a:	cf 93       	push	r28
     e4c:	df 93       	push	r29
     e4e:	18 2f       	mov	r17, r24
     e50:	09 2f       	mov	r16, r25
     e52:	eb 01       	movw	r28, r22
     e54:	8b 81       	ldd	r24, Y+3	; 0x03
     e56:	81 fd       	sbrc	r24, 1
     e58:	03 c0       	rjmp	.+6      	; 0xe60 <fputc+0x1a>
     e5a:	8f ef       	ldi	r24, 0xFF	; 255
     e5c:	9f ef       	ldi	r25, 0xFF	; 255
     e5e:	20 c0       	rjmp	.+64     	; 0xea0 <fputc+0x5a>
     e60:	82 ff       	sbrs	r24, 2
     e62:	10 c0       	rjmp	.+32     	; 0xe84 <fputc+0x3e>
     e64:	4e 81       	ldd	r20, Y+6	; 0x06
     e66:	5f 81       	ldd	r21, Y+7	; 0x07
     e68:	2c 81       	ldd	r18, Y+4	; 0x04
     e6a:	3d 81       	ldd	r19, Y+5	; 0x05
     e6c:	42 17       	cp	r20, r18
     e6e:	53 07       	cpc	r21, r19
     e70:	7c f4       	brge	.+30     	; 0xe90 <fputc+0x4a>
     e72:	e8 81       	ld	r30, Y
     e74:	f9 81       	ldd	r31, Y+1	; 0x01
     e76:	9f 01       	movw	r18, r30
     e78:	2f 5f       	subi	r18, 0xFF	; 255
     e7a:	3f 4f       	sbci	r19, 0xFF	; 255
     e7c:	39 83       	std	Y+1, r19	; 0x01
     e7e:	28 83       	st	Y, r18
     e80:	10 83       	st	Z, r17
     e82:	06 c0       	rjmp	.+12     	; 0xe90 <fputc+0x4a>
     e84:	e8 85       	ldd	r30, Y+8	; 0x08
     e86:	f9 85       	ldd	r31, Y+9	; 0x09
     e88:	81 2f       	mov	r24, r17
     e8a:	09 95       	icall
     e8c:	89 2b       	or	r24, r25
     e8e:	29 f7       	brne	.-54     	; 0xe5a <fputc+0x14>
     e90:	2e 81       	ldd	r18, Y+6	; 0x06
     e92:	3f 81       	ldd	r19, Y+7	; 0x07
     e94:	2f 5f       	subi	r18, 0xFF	; 255
     e96:	3f 4f       	sbci	r19, 0xFF	; 255
     e98:	3f 83       	std	Y+7, r19	; 0x07
     e9a:	2e 83       	std	Y+6, r18	; 0x06
     e9c:	81 2f       	mov	r24, r17
     e9e:	90 2f       	mov	r25, r16
     ea0:	df 91       	pop	r29
     ea2:	cf 91       	pop	r28
     ea4:	1f 91       	pop	r17
     ea6:	0f 91       	pop	r16
     ea8:	08 95       	ret

00000eaa <ungetc>:
     eaa:	fb 01       	movw	r30, r22
     eac:	23 81       	ldd	r18, Z+3	; 0x03
     eae:	20 ff       	sbrs	r18, 0
     eb0:	12 c0       	rjmp	.+36     	; 0xed6 <ungetc+0x2c>
     eb2:	26 fd       	sbrc	r18, 6
     eb4:	10 c0       	rjmp	.+32     	; 0xed6 <ungetc+0x2c>
     eb6:	8f 3f       	cpi	r24, 0xFF	; 255
     eb8:	3f ef       	ldi	r19, 0xFF	; 255
     eba:	93 07       	cpc	r25, r19
     ebc:	61 f0       	breq	.+24     	; 0xed6 <ungetc+0x2c>
     ebe:	82 83       	std	Z+2, r24	; 0x02
     ec0:	2f 7d       	andi	r18, 0xDF	; 223
     ec2:	20 64       	ori	r18, 0x40	; 64
     ec4:	23 83       	std	Z+3, r18	; 0x03
     ec6:	26 81       	ldd	r18, Z+6	; 0x06
     ec8:	37 81       	ldd	r19, Z+7	; 0x07
     eca:	21 50       	subi	r18, 0x01	; 1
     ecc:	31 09       	sbc	r19, r1
     ece:	37 83       	std	Z+7, r19	; 0x07
     ed0:	26 83       	std	Z+6, r18	; 0x06
     ed2:	99 27       	eor	r25, r25
     ed4:	08 95       	ret
     ed6:	8f ef       	ldi	r24, 0xFF	; 255
     ed8:	9f ef       	ldi	r25, 0xFF	; 255
     eda:	08 95       	ret

00000edc <__ultoa_invert>:
     edc:	fa 01       	movw	r30, r20
     ede:	aa 27       	eor	r26, r26
     ee0:	28 30       	cpi	r18, 0x08	; 8
     ee2:	51 f1       	breq	.+84     	; 0xf38 <__ultoa_invert+0x5c>
     ee4:	20 31       	cpi	r18, 0x10	; 16
     ee6:	81 f1       	breq	.+96     	; 0xf48 <__ultoa_invert+0x6c>
     ee8:	e8 94       	clt
     eea:	6f 93       	push	r22
     eec:	6e 7f       	andi	r22, 0xFE	; 254
     eee:	6e 5f       	subi	r22, 0xFE	; 254
     ef0:	7f 4f       	sbci	r23, 0xFF	; 255
     ef2:	8f 4f       	sbci	r24, 0xFF	; 255
     ef4:	9f 4f       	sbci	r25, 0xFF	; 255
     ef6:	af 4f       	sbci	r26, 0xFF	; 255
     ef8:	b1 e0       	ldi	r27, 0x01	; 1
     efa:	3e d0       	rcall	.+124    	; 0xf78 <__ultoa_invert+0x9c>
     efc:	b4 e0       	ldi	r27, 0x04	; 4
     efe:	3c d0       	rcall	.+120    	; 0xf78 <__ultoa_invert+0x9c>
     f00:	67 0f       	add	r22, r23
     f02:	78 1f       	adc	r23, r24
     f04:	89 1f       	adc	r24, r25
     f06:	9a 1f       	adc	r25, r26
     f08:	a1 1d       	adc	r26, r1
     f0a:	68 0f       	add	r22, r24
     f0c:	79 1f       	adc	r23, r25
     f0e:	8a 1f       	adc	r24, r26
     f10:	91 1d       	adc	r25, r1
     f12:	a1 1d       	adc	r26, r1
     f14:	6a 0f       	add	r22, r26
     f16:	71 1d       	adc	r23, r1
     f18:	81 1d       	adc	r24, r1
     f1a:	91 1d       	adc	r25, r1
     f1c:	a1 1d       	adc	r26, r1
     f1e:	20 d0       	rcall	.+64     	; 0xf60 <__ultoa_invert+0x84>
     f20:	09 f4       	brne	.+2      	; 0xf24 <__ultoa_invert+0x48>
     f22:	68 94       	set
     f24:	3f 91       	pop	r19
     f26:	2a e0       	ldi	r18, 0x0A	; 10
     f28:	26 9f       	mul	r18, r22
     f2a:	11 24       	eor	r1, r1
     f2c:	30 19       	sub	r19, r0
     f2e:	30 5d       	subi	r19, 0xD0	; 208
     f30:	31 93       	st	Z+, r19
     f32:	de f6       	brtc	.-74     	; 0xeea <__ultoa_invert+0xe>
     f34:	cf 01       	movw	r24, r30
     f36:	08 95       	ret
     f38:	46 2f       	mov	r20, r22
     f3a:	47 70       	andi	r20, 0x07	; 7
     f3c:	40 5d       	subi	r20, 0xD0	; 208
     f3e:	41 93       	st	Z+, r20
     f40:	b3 e0       	ldi	r27, 0x03	; 3
     f42:	0f d0       	rcall	.+30     	; 0xf62 <__ultoa_invert+0x86>
     f44:	c9 f7       	brne	.-14     	; 0xf38 <__ultoa_invert+0x5c>
     f46:	f6 cf       	rjmp	.-20     	; 0xf34 <__ultoa_invert+0x58>
     f48:	46 2f       	mov	r20, r22
     f4a:	4f 70       	andi	r20, 0x0F	; 15
     f4c:	40 5d       	subi	r20, 0xD0	; 208
     f4e:	4a 33       	cpi	r20, 0x3A	; 58
     f50:	18 f0       	brcs	.+6      	; 0xf58 <__ultoa_invert+0x7c>
     f52:	49 5d       	subi	r20, 0xD9	; 217
     f54:	31 fd       	sbrc	r19, 1
     f56:	40 52       	subi	r20, 0x20	; 32
     f58:	41 93       	st	Z+, r20
     f5a:	02 d0       	rcall	.+4      	; 0xf60 <__ultoa_invert+0x84>
     f5c:	a9 f7       	brne	.-22     	; 0xf48 <__ultoa_invert+0x6c>
     f5e:	ea cf       	rjmp	.-44     	; 0xf34 <__ultoa_invert+0x58>
     f60:	b4 e0       	ldi	r27, 0x04	; 4
     f62:	a6 95       	lsr	r26
     f64:	97 95       	ror	r25
     f66:	87 95       	ror	r24
     f68:	77 95       	ror	r23
     f6a:	67 95       	ror	r22
     f6c:	ba 95       	dec	r27
     f6e:	c9 f7       	brne	.-14     	; 0xf62 <__ultoa_invert+0x86>
     f70:	00 97       	sbiw	r24, 0x00	; 0
     f72:	61 05       	cpc	r22, r1
     f74:	71 05       	cpc	r23, r1
     f76:	08 95       	ret
     f78:	9b 01       	movw	r18, r22
     f7a:	ac 01       	movw	r20, r24
     f7c:	0a 2e       	mov	r0, r26
     f7e:	06 94       	lsr	r0
     f80:	57 95       	ror	r21
     f82:	47 95       	ror	r20
     f84:	37 95       	ror	r19
     f86:	27 95       	ror	r18
     f88:	ba 95       	dec	r27
     f8a:	c9 f7       	brne	.-14     	; 0xf7e <__ultoa_invert+0xa2>
     f8c:	62 0f       	add	r22, r18
     f8e:	73 1f       	adc	r23, r19
     f90:	84 1f       	adc	r24, r20
     f92:	95 1f       	adc	r25, r21
     f94:	a0 1d       	adc	r26, r0
     f96:	08 95       	ret

00000f98 <__ctype_isfalse>:
     f98:	99 27       	eor	r25, r25
     f9a:	88 27       	eor	r24, r24

00000f9c <__ctype_istrue>:
     f9c:	08 95       	ret

00000f9e <__divmodsi4>:
     f9e:	05 2e       	mov	r0, r21
     fa0:	97 fb       	bst	r25, 7
     fa2:	1e f4       	brtc	.+6      	; 0xfaa <__divmodsi4+0xc>
     fa4:	00 94       	com	r0
     fa6:	0e 94 e6 07 	call	0xfcc	; 0xfcc <__negsi2>
     faa:	57 fd       	sbrc	r21, 7
     fac:	07 d0       	rcall	.+14     	; 0xfbc <__divmodsi4_neg2>
     fae:	0e 94 38 08 	call	0x1070	; 0x1070 <__udivmodsi4>
     fb2:	07 fc       	sbrc	r0, 7
     fb4:	03 d0       	rcall	.+6      	; 0xfbc <__divmodsi4_neg2>
     fb6:	4e f4       	brtc	.+18     	; 0xfca <__divmodsi4_exit>
     fb8:	0c 94 e6 07 	jmp	0xfcc	; 0xfcc <__negsi2>

00000fbc <__divmodsi4_neg2>:
     fbc:	50 95       	com	r21
     fbe:	40 95       	com	r20
     fc0:	30 95       	com	r19
     fc2:	21 95       	neg	r18
     fc4:	3f 4f       	sbci	r19, 0xFF	; 255
     fc6:	4f 4f       	sbci	r20, 0xFF	; 255
     fc8:	5f 4f       	sbci	r21, 0xFF	; 255

00000fca <__divmodsi4_exit>:
     fca:	08 95       	ret

00000fcc <__negsi2>:
     fcc:	90 95       	com	r25
     fce:	80 95       	com	r24
     fd0:	70 95       	com	r23
     fd2:	61 95       	neg	r22
     fd4:	7f 4f       	sbci	r23, 0xFF	; 255
     fd6:	8f 4f       	sbci	r24, 0xFF	; 255
     fd8:	9f 4f       	sbci	r25, 0xFF	; 255
     fda:	08 95       	ret

00000fdc <__muluhisi3>:
     fdc:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <__umulhisi3>
     fe0:	a5 9f       	mul	r26, r21
     fe2:	90 0d       	add	r25, r0
     fe4:	b4 9f       	mul	r27, r20
     fe6:	90 0d       	add	r25, r0
     fe8:	a4 9f       	mul	r26, r20
     fea:	80 0d       	add	r24, r0
     fec:	91 1d       	adc	r25, r1
     fee:	11 24       	eor	r1, r1
     ff0:	08 95       	ret

00000ff2 <__mulshisi3>:
     ff2:	b7 ff       	sbrs	r27, 7
     ff4:	0c 94 ee 07 	jmp	0xfdc	; 0xfdc <__muluhisi3>

00000ff8 <__mulohisi3>:
     ff8:	0e 94 ee 07 	call	0xfdc	; 0xfdc <__muluhisi3>
     ffc:	82 1b       	sub	r24, r18
     ffe:	93 0b       	sbc	r25, r19
    1000:	08 95       	ret

00001002 <__prologue_saves__>:
    1002:	2f 92       	push	r2
    1004:	3f 92       	push	r3
    1006:	4f 92       	push	r4
    1008:	5f 92       	push	r5
    100a:	6f 92       	push	r6
    100c:	7f 92       	push	r7
    100e:	8f 92       	push	r8
    1010:	9f 92       	push	r9
    1012:	af 92       	push	r10
    1014:	bf 92       	push	r11
    1016:	cf 92       	push	r12
    1018:	df 92       	push	r13
    101a:	ef 92       	push	r14
    101c:	ff 92       	push	r15
    101e:	0f 93       	push	r16
    1020:	1f 93       	push	r17
    1022:	cf 93       	push	r28
    1024:	df 93       	push	r29
    1026:	cd b7       	in	r28, 0x3d	; 61
    1028:	de b7       	in	r29, 0x3e	; 62
    102a:	ca 1b       	sub	r28, r26
    102c:	db 0b       	sbc	r29, r27
    102e:	0f b6       	in	r0, 0x3f	; 63
    1030:	f8 94       	cli
    1032:	de bf       	out	0x3e, r29	; 62
    1034:	0f be       	out	0x3f, r0	; 63
    1036:	cd bf       	out	0x3d, r28	; 61
    1038:	09 94       	ijmp

0000103a <__epilogue_restores__>:
    103a:	2a 88       	ldd	r2, Y+18	; 0x12
    103c:	39 88       	ldd	r3, Y+17	; 0x11
    103e:	48 88       	ldd	r4, Y+16	; 0x10
    1040:	5f 84       	ldd	r5, Y+15	; 0x0f
    1042:	6e 84       	ldd	r6, Y+14	; 0x0e
    1044:	7d 84       	ldd	r7, Y+13	; 0x0d
    1046:	8c 84       	ldd	r8, Y+12	; 0x0c
    1048:	9b 84       	ldd	r9, Y+11	; 0x0b
    104a:	aa 84       	ldd	r10, Y+10	; 0x0a
    104c:	b9 84       	ldd	r11, Y+9	; 0x09
    104e:	c8 84       	ldd	r12, Y+8	; 0x08
    1050:	df 80       	ldd	r13, Y+7	; 0x07
    1052:	ee 80       	ldd	r14, Y+6	; 0x06
    1054:	fd 80       	ldd	r15, Y+5	; 0x05
    1056:	0c 81       	ldd	r16, Y+4	; 0x04
    1058:	1b 81       	ldd	r17, Y+3	; 0x03
    105a:	aa 81       	ldd	r26, Y+2	; 0x02
    105c:	b9 81       	ldd	r27, Y+1	; 0x01
    105e:	ce 0f       	add	r28, r30
    1060:	d1 1d       	adc	r29, r1
    1062:	0f b6       	in	r0, 0x3f	; 63
    1064:	f8 94       	cli
    1066:	de bf       	out	0x3e, r29	; 62
    1068:	0f be       	out	0x3f, r0	; 63
    106a:	cd bf       	out	0x3d, r28	; 61
    106c:	ed 01       	movw	r28, r26
    106e:	08 95       	ret

00001070 <__udivmodsi4>:
    1070:	a1 e2       	ldi	r26, 0x21	; 33
    1072:	1a 2e       	mov	r1, r26
    1074:	aa 1b       	sub	r26, r26
    1076:	bb 1b       	sub	r27, r27
    1078:	fd 01       	movw	r30, r26
    107a:	0d c0       	rjmp	.+26     	; 0x1096 <__udivmodsi4_ep>

0000107c <__udivmodsi4_loop>:
    107c:	aa 1f       	adc	r26, r26
    107e:	bb 1f       	adc	r27, r27
    1080:	ee 1f       	adc	r30, r30
    1082:	ff 1f       	adc	r31, r31
    1084:	a2 17       	cp	r26, r18
    1086:	b3 07       	cpc	r27, r19
    1088:	e4 07       	cpc	r30, r20
    108a:	f5 07       	cpc	r31, r21
    108c:	20 f0       	brcs	.+8      	; 0x1096 <__udivmodsi4_ep>
    108e:	a2 1b       	sub	r26, r18
    1090:	b3 0b       	sbc	r27, r19
    1092:	e4 0b       	sbc	r30, r20
    1094:	f5 0b       	sbc	r31, r21

00001096 <__udivmodsi4_ep>:
    1096:	66 1f       	adc	r22, r22
    1098:	77 1f       	adc	r23, r23
    109a:	88 1f       	adc	r24, r24
    109c:	99 1f       	adc	r25, r25
    109e:	1a 94       	dec	r1
    10a0:	69 f7       	brne	.-38     	; 0x107c <__udivmodsi4_loop>
    10a2:	60 95       	com	r22
    10a4:	70 95       	com	r23
    10a6:	80 95       	com	r24
    10a8:	90 95       	com	r25
    10aa:	9b 01       	movw	r18, r22
    10ac:	ac 01       	movw	r20, r24
    10ae:	bd 01       	movw	r22, r26
    10b0:	cf 01       	movw	r24, r30
    10b2:	08 95       	ret

000010b4 <__umulhisi3>:
    10b4:	a2 9f       	mul	r26, r18
    10b6:	b0 01       	movw	r22, r0
    10b8:	b3 9f       	mul	r27, r19
    10ba:	c0 01       	movw	r24, r0
    10bc:	a3 9f       	mul	r26, r19
    10be:	70 0d       	add	r23, r0
    10c0:	81 1d       	adc	r24, r1
    10c2:	11 24       	eor	r1, r1
    10c4:	91 1d       	adc	r25, r1
    10c6:	b2 9f       	mul	r27, r18
    10c8:	70 0d       	add	r23, r0
    10ca:	81 1d       	adc	r24, r1
    10cc:	11 24       	eor	r1, r1
    10ce:	91 1d       	adc	r25, r1
    10d0:	08 95       	ret

000010d2 <_exit>:
    10d2:	f8 94       	cli

000010d4 <__stop_program>:
    10d4:	ff cf       	rjmp	.-2      	; 0x10d4 <__stop_program>
