
Ping_Pong_Shit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000160  00800100  000010e0  00001174  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800260  00800260  000012d4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000012d4  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000a8  00000000  00000000  00001330  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007ec  00000000  00000000  000013d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004a7  00000000  00000000  00001bc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000405  00000000  00000000  0000206b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000170  00000000  00000000  00002470  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000030b  00000000  00000000  000025e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000028b  00000000  00000000  000028eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  00002b76  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	63 64       	ori	r22, 0x43	; 67
      72:	69 6e       	ori	r22, 0xE9	; 233
      74:	6f 70       	andi	r22, 0x0F	; 15
      76:	73 75       	andi	r23, 0x53	; 83
      78:	78 58       	subi	r23, 0x88	; 136
      7a:	5b 00       	.word	0x005b	; ????

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d4 e0       	ldi	r29, 0x04	; 4
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	12 e0       	ldi	r17, 0x02	; 2
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	e0 ee       	ldi	r30, 0xE0	; 224
      90:	f0 e1       	ldi	r31, 0x10	; 16
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	a0 36       	cpi	r26, 0x60	; 96
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	22 e0       	ldi	r18, 0x02	; 2
      a0:	a0 e6       	ldi	r26, 0x60	; 96
      a2:	b2 e0       	ldi	r27, 0x02	; 2
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	a6 36       	cpi	r26, 0x66	; 102
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 5d 00 	call	0xba	; 0xba <main>
      b2:	0c 94 6e 08 	jmp	0x10dc	; 0x10dc <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <main>:
#include "uart_driver.h"
#include "test_code.h"
#include "SRAM_driver.h"

int main(void) {
    uart_init(MYUBRR);
      ba:	8f e1       	ldi	r24, 0x1F	; 31
      bc:	90 e0       	ldi	r25, 0x00	; 0
      be:	0e 94 70 01 	call	0x2e0	; 0x2e0 <uart_init>
	SRAM_init();
      c2:	0e 94 ed 00 	call	0x1da	; 0x1da <SRAM_init>
	
	while(1) { 
		shell();
      c6:	0e 94 00 01 	call	0x200	; 0x200 <shell>
		flash_diode();
      ca:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <flash_diode>
      ce:	fb cf       	rjmp	.-10     	; 0xc6 <main+0xc>

000000d0 <SRAM_test>:
	MCUCR = 0x80;
	DDRA = 0xFF;
	SRAM_test();
}

void SRAM_test(void) {
      d0:	cf 92       	push	r12
      d2:	df 92       	push	r13
      d4:	ef 92       	push	r14
      d6:	ff 92       	push	r15
      d8:	0f 93       	push	r16
      da:	1f 93       	push	r17
      dc:	cf 93       	push	r28
      de:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size       = 0x800;
	uint16_t write_errors       = 0;
	uint16_t retrieval_errors   = 0;

	printf("\nStarting SRAM test...\n");
      e0:	82 e1       	ldi	r24, 0x12	; 18
      e2:	91 e0       	ldi	r25, 0x01	; 1
      e4:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <puts>

	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
      e8:	0e 94 cc 01 	call	0x398	; 0x398 <rand>
      ec:	6c 01       	movw	r12, r24

	// Write phase: Immediately check that the correct value was stored
	srand(seed);
      ee:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
      f2:	c0 e0       	ldi	r28, 0x00	; 0
      f4:	d0 e0       	ldi	r29, 0x00	; 0
}

void SRAM_test(void) {
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size       = 0x800;
	uint16_t write_errors       = 0;
      f6:	00 e0       	ldi	r16, 0x00	; 0
      f8:	10 e0       	ldi	r17, 0x00	; 0
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		ext_ram[i] = some_value;
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
      fa:	0f 2e       	mov	r0, r31
      fc:	f9 e2       	ldi	r31, 0x29	; 41
      fe:	ef 2e       	mov	r14, r31
     100:	f1 e0       	ldi	r31, 0x01	; 1
     102:	ff 2e       	mov	r15, r31
     104:	f0 2d       	mov	r31, r0
	uint16_t seed = rand();

	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
     106:	0e 94 cc 01 	call	0x398	; 0x398 <rand>
     10a:	fe 01       	movw	r30, r28
     10c:	f8 5e       	subi	r31, 0xE8	; 232
		ext_ram[i] = some_value;
     10e:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
     110:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     112:	28 17       	cp	r18, r24
     114:	a9 f0       	breq	.+42     	; 0x140 <SRAM_test+0x70>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     116:	99 27       	eor	r25, r25
     118:	9f 93       	push	r25
     11a:	8f 93       	push	r24
     11c:	1f 92       	push	r1
     11e:	2f 93       	push	r18
     120:	df 93       	push	r29
     122:	cf 93       	push	r28
     124:	ff 92       	push	r15
     126:	ef 92       	push	r14
     128:	0e 94 e5 01 	call	0x3ca	; 0x3ca <printf>
			write_errors++;
     12c:	0f 5f       	subi	r16, 0xFF	; 255
     12e:	1f 4f       	sbci	r17, 0xFF	; 255
     130:	8d b7       	in	r24, 0x3d	; 61
     132:	9e b7       	in	r25, 0x3e	; 62
     134:	08 96       	adiw	r24, 0x08	; 8
     136:	0f b6       	in	r0, 0x3f	; 63
     138:	f8 94       	cli
     13a:	9e bf       	out	0x3e, r25	; 62
     13c:	0f be       	out	0x3f, r0	; 63
     13e:	8d bf       	out	0x3d, r24	; 61
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();

	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     140:	21 96       	adiw	r28, 0x01	; 1
     142:	c1 15       	cp	r28, r1
     144:	98 e0       	ldi	r25, 0x08	; 8
     146:	d9 07       	cpc	r29, r25
     148:	f1 f6       	brne	.-68     	; 0x106 <SRAM_test+0x36>
			write_errors++;
		}
	}

	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);    // reset the PRNG to the state it had before the write phase
     14a:	c6 01       	movw	r24, r12
     14c:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     150:	c0 e0       	ldi	r28, 0x00	; 0
     152:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void) {
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size       = 0x800;
	uint16_t write_errors       = 0;
	uint16_t retrieval_errors   = 0;
     154:	e1 2c       	mov	r14, r1
     156:	f1 2c       	mov	r15, r1
	srand(seed);    // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     158:	0f 2e       	mov	r0, r31
     15a:	f2 e6       	ldi	r31, 0x62	; 98
     15c:	cf 2e       	mov	r12, r31
     15e:	f1 e0       	ldi	r31, 0x01	; 1
     160:	df 2e       	mov	r13, r31
     162:	f0 2d       	mov	r31, r0
	}

	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);    // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
     164:	0e 94 cc 01 	call	0x398	; 0x398 <rand>
     168:	fe 01       	movw	r30, r28
     16a:	f8 5e       	subi	r31, 0xE8	; 232
		uint8_t retreived_value = ext_ram[i];
     16c:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     16e:	28 17       	cp	r18, r24
     170:	b1 f0       	breq	.+44     	; 0x19e <SRAM_test+0xce>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     172:	99 27       	eor	r25, r25
     174:	9f 93       	push	r25
     176:	8f 93       	push	r24
     178:	1f 92       	push	r1
     17a:	2f 93       	push	r18
     17c:	df 93       	push	r29
     17e:	cf 93       	push	r28
     180:	df 92       	push	r13
     182:	cf 92       	push	r12
     184:	0e 94 e5 01 	call	0x3ca	; 0x3ca <printf>
			retrieval_errors++;
     188:	8f ef       	ldi	r24, 0xFF	; 255
     18a:	e8 1a       	sub	r14, r24
     18c:	f8 0a       	sbc	r15, r24
     18e:	8d b7       	in	r24, 0x3d	; 61
     190:	9e b7       	in	r25, 0x3e	; 62
     192:	08 96       	adiw	r24, 0x08	; 8
     194:	0f b6       	in	r0, 0x3f	; 63
     196:	f8 94       	cli
     198:	9e bf       	out	0x3e, r25	; 62
     19a:	0f be       	out	0x3f, r0	; 63
     19c:	8d bf       	out	0x3d, r24	; 61
		}
	}

	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);    // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     19e:	21 96       	adiw	r28, 0x01	; 1
     1a0:	c1 15       	cp	r28, r1
     1a2:	98 e0       	ldi	r25, 0x08	; 8
     1a4:	d9 07       	cpc	r29, r25
     1a6:	f1 f6       	brne	.-68     	; 0x164 <SRAM_test+0x94>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
     1a8:	ff 92       	push	r15
     1aa:	ef 92       	push	r14
     1ac:	1f 93       	push	r17
     1ae:	0f 93       	push	r16
     1b0:	8f e9       	ldi	r24, 0x9F	; 159
     1b2:	91 e0       	ldi	r25, 0x01	; 1
     1b4:	9f 93       	push	r25
     1b6:	8f 93       	push	r24
     1b8:	0e 94 e5 01 	call	0x3ca	; 0x3ca <printf>
     1bc:	0f 90       	pop	r0
     1be:	0f 90       	pop	r0
     1c0:	0f 90       	pop	r0
     1c2:	0f 90       	pop	r0
     1c4:	0f 90       	pop	r0
     1c6:	0f 90       	pop	r0
     1c8:	df 91       	pop	r29
     1ca:	cf 91       	pop	r28
     1cc:	1f 91       	pop	r17
     1ce:	0f 91       	pop	r16
     1d0:	ff 90       	pop	r15
     1d2:	ef 90       	pop	r14
     1d4:	df 90       	pop	r13
     1d6:	cf 90       	pop	r12
     1d8:	08 95       	ret

000001da <SRAM_init>:

#include <avr/io.h>
#include "SRAM_driver.h"

void SRAM_init(){
	MCUCR = 0x80;
     1da:	80 e8       	ldi	r24, 0x80	; 128
     1dc:	85 bf       	out	0x35, r24	; 53
	DDRA = 0xFF;
     1de:	8f ef       	ldi	r24, 0xFF	; 255
     1e0:	8a bb       	out	0x1a, r24	; 26
	SRAM_test();
     1e2:	0e 94 68 00 	call	0xd0	; 0xd0 <SRAM_test>
     1e6:	08 95       	ret

000001e8 <flash_diode>:
#include "SRAM_driver.h"
#include <stdlib.h>

//Simple test, Ex 1, task 6
void flash_diode(){
	PORTB = 0xFF;
     1e8:	8f ef       	ldi	r24, 0xFF	; 255
     1ea:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1ec:	80 e0       	ldi	r24, 0x00	; 0
     1ee:	90 ef       	ldi	r25, 0xF0	; 240
     1f0:	01 97       	sbiw	r24, 0x01	; 1
     1f2:	f1 f7       	brne	.-4      	; 0x1f0 <flash_diode+0x8>
	_delay_ms(50);
	PORTB = 0x00;
     1f4:	18 ba       	out	0x18, r1	; 24
     1f6:	80 e0       	ldi	r24, 0x00	; 0
     1f8:	90 ef       	ldi	r25, 0xF0	; 240
     1fa:	01 97       	sbiw	r24, 0x01	; 1
     1fc:	f1 f7       	brne	.-4      	; 0x1fa <flash_diode+0x12>
     1fe:	08 95       	ret

00000200 <shell>:
	uart_sendChar('X');
	_delay_ms(1000);
}

//Ex 1, task 10 and 11
void shell(){
     200:	0f 93       	push	r16
     202:	1f 93       	push	r17
     204:	cf 93       	push	r28
     206:	df 93       	push	r29
     208:	cd b7       	in	r28, 0x3d	; 61
     20a:	de b7       	in	r29, 0x3e	; 62
     20c:	da 95       	dec	r29
     20e:	0f b6       	in	r0, 0x3f	; 63
     210:	f8 94       	cli
     212:	de bf       	out	0x3e, r29	; 62
     214:	0f be       	out	0x3f, r0	; 63
     216:	cd bf       	out	0x3d, r28	; 61
	char cmd[256];
	printf("\n[root@skynet]#:");
     218:	88 ef       	ldi	r24, 0xF8	; 248
     21a:	91 e0       	ldi	r25, 0x01	; 1
     21c:	9f 93       	push	r25
     21e:	8f 93       	push	r24
     220:	0e 94 e5 01 	call	0x3ca	; 0x3ca <printf>
	scanf("%s", cmd);
     224:	8e 01       	movw	r16, r28
     226:	0f 5f       	subi	r16, 0xFF	; 255
     228:	1f 4f       	sbci	r17, 0xFF	; 255
     22a:	1f 93       	push	r17
     22c:	0f 93       	push	r16
     22e:	89 e0       	ldi	r24, 0x09	; 9
     230:	92 e0       	ldi	r25, 0x02	; 2
     232:	9f 93       	push	r25
     234:	8f 93       	push	r24
     236:	0e 94 26 02 	call	0x44c	; 0x44c <scanf>
	printf( " %s\n", cmd);
     23a:	1f 93       	push	r17
     23c:	0f 93       	push	r16
     23e:	8c e0       	ldi	r24, 0x0C	; 12
     240:	92 e0       	ldi	r25, 0x02	; 2
     242:	9f 93       	push	r25
     244:	8f 93       	push	r24
     246:	0e 94 e5 01 	call	0x3ca	; 0x3ca <printf>
	
	if(strcmp(cmd, "testdiode") == 0) {
     24a:	61 e1       	ldi	r22, 0x11	; 17
     24c:	72 e0       	ldi	r23, 0x02	; 2
     24e:	c8 01       	movw	r24, r16
     250:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <strcmp>
     254:	0f b6       	in	r0, 0x3f	; 63
     256:	f8 94       	cli
     258:	de bf       	out	0x3e, r29	; 62
     25a:	0f be       	out	0x3f, r0	; 63
     25c:	cd bf       	out	0x3d, r28	; 61
     25e:	89 2b       	or	r24, r25
     260:	91 f4       	brne	.+36     	; 0x286 <shell+0x86>
		printf("testing diode...\n");
     262:	8b e1       	ldi	r24, 0x1B	; 27
     264:	92 e0       	ldi	r25, 0x02	; 2
     266:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <puts>
     26a:	04 e1       	ldi	r16, 0x14	; 20
     26c:	10 e0       	ldi	r17, 0x00	; 0
		for (int i = 0; i<20; i++) {	flash_diode(); }
     26e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <flash_diode>
     272:	01 50       	subi	r16, 0x01	; 1
     274:	11 09       	sbc	r17, r1
     276:	01 15       	cp	r16, r1
     278:	11 05       	cpc	r17, r1
     27a:	c9 f7       	brne	.-14     	; 0x26e <shell+0x6e>
		printf("done testing diode\n");
     27c:	8c e2       	ldi	r24, 0x2C	; 44
     27e:	92 e0       	ldi	r25, 0x02	; 2
     280:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <puts>
     284:	19 c0       	rjmp	.+50     	; 0x2b8 <shell+0xb8>
	} else if (strcmp(cmd, "SRAM_test") == 0) {
     286:	6f e3       	ldi	r22, 0x3F	; 63
     288:	72 e0       	ldi	r23, 0x02	; 2
     28a:	ce 01       	movw	r24, r28
     28c:	01 96       	adiw	r24, 0x01	; 1
     28e:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <strcmp>
     292:	89 2b       	or	r24, r25
     294:	19 f4       	brne	.+6      	; 0x29c <shell+0x9c>
		SRAM_test();
     296:	0e 94 68 00 	call	0xd0	; 0xd0 <SRAM_test>
     29a:	0e c0       	rjmp	.+28     	; 0x2b8 <shell+0xb8>
	} else {
		printf("unknown command \"%s\"\n", cmd);
     29c:	ce 01       	movw	r24, r28
     29e:	01 96       	adiw	r24, 0x01	; 1
     2a0:	9f 93       	push	r25
     2a2:	8f 93       	push	r24
     2a4:	89 e4       	ldi	r24, 0x49	; 73
     2a6:	92 e0       	ldi	r25, 0x02	; 2
     2a8:	9f 93       	push	r25
     2aa:	8f 93       	push	r24
     2ac:	0e 94 e5 01 	call	0x3ca	; 0x3ca <printf>
     2b0:	0f 90       	pop	r0
     2b2:	0f 90       	pop	r0
     2b4:	0f 90       	pop	r0
     2b6:	0f 90       	pop	r0
	}

	
	
}
     2b8:	d3 95       	inc	r29
     2ba:	0f b6       	in	r0, 0x3f	; 63
     2bc:	f8 94       	cli
     2be:	de bf       	out	0x3e, r29	; 62
     2c0:	0f be       	out	0x3f, r0	; 63
     2c2:	cd bf       	out	0x3d, r28	; 61
     2c4:	df 91       	pop	r29
     2c6:	cf 91       	pop	r28
     2c8:	1f 91       	pop	r17
     2ca:	0f 91       	pop	r16
     2cc:	08 95       	ret

000002ce <uart_sendChar>:
     2ce:	5d 9b       	sbis	0x0b, 5	; 11
     2d0:	fe cf       	rjmp	.-4      	; 0x2ce <uart_sendChar>
     2d2:	8c b9       	out	0x0c, r24	; 12
     2d4:	08 95       	ret

000002d6 <uart_getChar>:
     2d6:	5f 9b       	sbis	0x0b, 7	; 11
     2d8:	fe cf       	rjmp	.-4      	; 0x2d6 <uart_getChar>
     2da:	8c b1       	in	r24, 0x0c	; 12
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	08 95       	ret

000002e0 <uart_init>:
     2e0:	89 b9       	out	0x09, r24	; 9
     2e2:	88 e1       	ldi	r24, 0x18	; 24
     2e4:	8a b9       	out	0x0a, r24	; 10
     2e6:	84 e0       	ldi	r24, 0x04	; 4
     2e8:	91 e0       	ldi	r25, 0x01	; 1
     2ea:	90 93 63 02 	sts	0x0263, r25
     2ee:	80 93 62 02 	sts	0x0262, r24
     2f2:	90 93 61 02 	sts	0x0261, r25
     2f6:	80 93 60 02 	sts	0x0260, r24
     2fa:	08 95       	ret

000002fc <do_rand>:
     2fc:	8f 92       	push	r8
     2fe:	9f 92       	push	r9
     300:	af 92       	push	r10
     302:	bf 92       	push	r11
     304:	cf 92       	push	r12
     306:	df 92       	push	r13
     308:	ef 92       	push	r14
     30a:	ff 92       	push	r15
     30c:	cf 93       	push	r28
     30e:	df 93       	push	r29
     310:	ec 01       	movw	r28, r24
     312:	68 81       	ld	r22, Y
     314:	79 81       	ldd	r23, Y+1	; 0x01
     316:	8a 81       	ldd	r24, Y+2	; 0x02
     318:	9b 81       	ldd	r25, Y+3	; 0x03
     31a:	61 15       	cp	r22, r1
     31c:	71 05       	cpc	r23, r1
     31e:	81 05       	cpc	r24, r1
     320:	91 05       	cpc	r25, r1
     322:	21 f4       	brne	.+8      	; 0x32c <do_rand+0x30>
     324:	64 e2       	ldi	r22, 0x24	; 36
     326:	79 ed       	ldi	r23, 0xD9	; 217
     328:	8b e5       	ldi	r24, 0x5B	; 91
     32a:	97 e0       	ldi	r25, 0x07	; 7
     32c:	2d e1       	ldi	r18, 0x1D	; 29
     32e:	33 ef       	ldi	r19, 0xF3	; 243
     330:	41 e0       	ldi	r20, 0x01	; 1
     332:	50 e0       	ldi	r21, 0x00	; 0
     334:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <__divmodsi4>
     338:	49 01       	movw	r8, r18
     33a:	5a 01       	movw	r10, r20
     33c:	9b 01       	movw	r18, r22
     33e:	ac 01       	movw	r20, r24
     340:	a7 ea       	ldi	r26, 0xA7	; 167
     342:	b1 e4       	ldi	r27, 0x41	; 65
     344:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <__muluhisi3>
     348:	6b 01       	movw	r12, r22
     34a:	7c 01       	movw	r14, r24
     34c:	ac ee       	ldi	r26, 0xEC	; 236
     34e:	b4 ef       	ldi	r27, 0xF4	; 244
     350:	a5 01       	movw	r20, r10
     352:	94 01       	movw	r18, r8
     354:	0e 94 01 08 	call	0x1002	; 0x1002 <__mulohisi3>
     358:	c6 0e       	add	r12, r22
     35a:	d7 1e       	adc	r13, r23
     35c:	e8 1e       	adc	r14, r24
     35e:	f9 1e       	adc	r15, r25
     360:	f7 fe       	sbrs	r15, 7
     362:	06 c0       	rjmp	.+12     	; 0x370 <do_rand+0x74>
     364:	81 e0       	ldi	r24, 0x01	; 1
     366:	c8 1a       	sub	r12, r24
     368:	d1 08       	sbc	r13, r1
     36a:	e1 08       	sbc	r14, r1
     36c:	80 e8       	ldi	r24, 0x80	; 128
     36e:	f8 0a       	sbc	r15, r24
     370:	c8 82       	st	Y, r12
     372:	d9 82       	std	Y+1, r13	; 0x01
     374:	ea 82       	std	Y+2, r14	; 0x02
     376:	fb 82       	std	Y+3, r15	; 0x03
     378:	c6 01       	movw	r24, r12
     37a:	9f 77       	andi	r25, 0x7F	; 127
     37c:	df 91       	pop	r29
     37e:	cf 91       	pop	r28
     380:	ff 90       	pop	r15
     382:	ef 90       	pop	r14
     384:	df 90       	pop	r13
     386:	cf 90       	pop	r12
     388:	bf 90       	pop	r11
     38a:	af 90       	pop	r10
     38c:	9f 90       	pop	r9
     38e:	8f 90       	pop	r8
     390:	08 95       	ret

00000392 <rand_r>:
     392:	0e 94 7e 01 	call	0x2fc	; 0x2fc <do_rand>
     396:	08 95       	ret

00000398 <rand>:
     398:	80 e0       	ldi	r24, 0x00	; 0
     39a:	91 e0       	ldi	r25, 0x01	; 1
     39c:	0e 94 7e 01 	call	0x2fc	; 0x2fc <do_rand>
     3a0:	08 95       	ret

000003a2 <srand>:
     3a2:	a0 e0       	ldi	r26, 0x00	; 0
     3a4:	b0 e0       	ldi	r27, 0x00	; 0
     3a6:	80 93 00 01 	sts	0x0100, r24
     3aa:	90 93 01 01 	sts	0x0101, r25
     3ae:	a0 93 02 01 	sts	0x0102, r26
     3b2:	b0 93 03 01 	sts	0x0103, r27
     3b6:	08 95       	ret

000003b8 <strcmp>:
     3b8:	fb 01       	movw	r30, r22
     3ba:	dc 01       	movw	r26, r24
     3bc:	8d 91       	ld	r24, X+
     3be:	01 90       	ld	r0, Z+
     3c0:	80 19       	sub	r24, r0
     3c2:	01 10       	cpse	r0, r1
     3c4:	d9 f3       	breq	.-10     	; 0x3bc <strcmp+0x4>
     3c6:	99 0b       	sbc	r25, r25
     3c8:	08 95       	ret

000003ca <printf>:
     3ca:	a0 e0       	ldi	r26, 0x00	; 0
     3cc:	b0 e0       	ldi	r27, 0x00	; 0
     3ce:	eb ee       	ldi	r30, 0xEB	; 235
     3d0:	f1 e0       	ldi	r31, 0x01	; 1
     3d2:	0c 94 16 08 	jmp	0x102c	; 0x102c <__prologue_saves__+0x20>
     3d6:	fe 01       	movw	r30, r28
     3d8:	35 96       	adiw	r30, 0x05	; 5
     3da:	61 91       	ld	r22, Z+
     3dc:	71 91       	ld	r23, Z+
     3de:	af 01       	movw	r20, r30
     3e0:	80 91 62 02 	lds	r24, 0x0262
     3e4:	90 91 63 02 	lds	r25, 0x0263
     3e8:	0e 94 3a 02 	call	0x474	; 0x474 <vfprintf>
     3ec:	e2 e0       	ldi	r30, 0x02	; 2
     3ee:	0c 94 32 08 	jmp	0x1064	; 0x1064 <__epilogue_restores__+0x20>

000003f2 <puts>:
     3f2:	0f 93       	push	r16
     3f4:	1f 93       	push	r17
     3f6:	cf 93       	push	r28
     3f8:	df 93       	push	r29
     3fa:	e0 91 62 02 	lds	r30, 0x0262
     3fe:	f0 91 63 02 	lds	r31, 0x0263
     402:	23 81       	ldd	r18, Z+3	; 0x03
     404:	21 ff       	sbrs	r18, 1
     406:	1b c0       	rjmp	.+54     	; 0x43e <puts+0x4c>
     408:	ec 01       	movw	r28, r24
     40a:	00 e0       	ldi	r16, 0x00	; 0
     40c:	10 e0       	ldi	r17, 0x00	; 0
     40e:	89 91       	ld	r24, Y+
     410:	60 91 62 02 	lds	r22, 0x0262
     414:	70 91 63 02 	lds	r23, 0x0263
     418:	db 01       	movw	r26, r22
     41a:	18 96       	adiw	r26, 0x08	; 8
     41c:	ed 91       	ld	r30, X+
     41e:	fc 91       	ld	r31, X
     420:	19 97       	sbiw	r26, 0x09	; 9
     422:	88 23       	and	r24, r24
     424:	31 f0       	breq	.+12     	; 0x432 <puts+0x40>
     426:	09 95       	icall
     428:	89 2b       	or	r24, r25
     42a:	89 f3       	breq	.-30     	; 0x40e <puts+0x1c>
     42c:	0f ef       	ldi	r16, 0xFF	; 255
     42e:	1f ef       	ldi	r17, 0xFF	; 255
     430:	ee cf       	rjmp	.-36     	; 0x40e <puts+0x1c>
     432:	8a e0       	ldi	r24, 0x0A	; 10
     434:	09 95       	icall
     436:	89 2b       	or	r24, r25
     438:	11 f4       	brne	.+4      	; 0x43e <puts+0x4c>
     43a:	c8 01       	movw	r24, r16
     43c:	02 c0       	rjmp	.+4      	; 0x442 <puts+0x50>
     43e:	8f ef       	ldi	r24, 0xFF	; 255
     440:	9f ef       	ldi	r25, 0xFF	; 255
     442:	df 91       	pop	r29
     444:	cf 91       	pop	r28
     446:	1f 91       	pop	r17
     448:	0f 91       	pop	r16
     44a:	08 95       	ret

0000044c <scanf>:
     44c:	a0 e0       	ldi	r26, 0x00	; 0
     44e:	b0 e0       	ldi	r27, 0x00	; 0
     450:	ec e2       	ldi	r30, 0x2C	; 44
     452:	f2 e0       	ldi	r31, 0x02	; 2
     454:	0c 94 16 08 	jmp	0x102c	; 0x102c <__prologue_saves__+0x20>
     458:	fe 01       	movw	r30, r28
     45a:	35 96       	adiw	r30, 0x05	; 5
     45c:	61 91       	ld	r22, Z+
     45e:	71 91       	ld	r23, Z+
     460:	af 01       	movw	r20, r30
     462:	80 91 60 02 	lds	r24, 0x0260
     466:	90 91 61 02 	lds	r25, 0x0261
     46a:	0e 94 8a 05 	call	0xb14	; 0xb14 <vfscanf>
     46e:	e2 e0       	ldi	r30, 0x02	; 2
     470:	0c 94 32 08 	jmp	0x1064	; 0x1064 <__epilogue_restores__+0x20>

00000474 <vfprintf>:
     474:	ac e0       	ldi	r26, 0x0C	; 12
     476:	b0 e0       	ldi	r27, 0x00	; 0
     478:	e0 e4       	ldi	r30, 0x40	; 64
     47a:	f2 e0       	ldi	r31, 0x02	; 2
     47c:	0c 94 06 08 	jmp	0x100c	; 0x100c <__prologue_saves__>
     480:	7c 01       	movw	r14, r24
     482:	6b 01       	movw	r12, r22
     484:	8a 01       	movw	r16, r20
     486:	fc 01       	movw	r30, r24
     488:	17 82       	std	Z+7, r1	; 0x07
     48a:	16 82       	std	Z+6, r1	; 0x06
     48c:	83 81       	ldd	r24, Z+3	; 0x03
     48e:	81 ff       	sbrs	r24, 1
     490:	bd c1       	rjmp	.+890    	; 0x80c <__stack+0x30d>
     492:	ce 01       	movw	r24, r28
     494:	01 96       	adiw	r24, 0x01	; 1
     496:	4c 01       	movw	r8, r24
     498:	f7 01       	movw	r30, r14
     49a:	93 81       	ldd	r25, Z+3	; 0x03
     49c:	f6 01       	movw	r30, r12
     49e:	93 fd       	sbrc	r25, 3
     4a0:	85 91       	lpm	r24, Z+
     4a2:	93 ff       	sbrs	r25, 3
     4a4:	81 91       	ld	r24, Z+
     4a6:	6f 01       	movw	r12, r30
     4a8:	88 23       	and	r24, r24
     4aa:	09 f4       	brne	.+2      	; 0x4ae <vfprintf+0x3a>
     4ac:	ab c1       	rjmp	.+854    	; 0x804 <__stack+0x305>
     4ae:	85 32       	cpi	r24, 0x25	; 37
     4b0:	39 f4       	brne	.+14     	; 0x4c0 <vfprintf+0x4c>
     4b2:	93 fd       	sbrc	r25, 3
     4b4:	85 91       	lpm	r24, Z+
     4b6:	93 ff       	sbrs	r25, 3
     4b8:	81 91       	ld	r24, Z+
     4ba:	6f 01       	movw	r12, r30
     4bc:	85 32       	cpi	r24, 0x25	; 37
     4be:	29 f4       	brne	.+10     	; 0x4ca <vfprintf+0x56>
     4c0:	b7 01       	movw	r22, r14
     4c2:	90 e0       	ldi	r25, 0x00	; 0
     4c4:	0e 94 28 07 	call	0xe50	; 0xe50 <fputc>
     4c8:	e7 cf       	rjmp	.-50     	; 0x498 <vfprintf+0x24>
     4ca:	51 2c       	mov	r5, r1
     4cc:	31 2c       	mov	r3, r1
     4ce:	20 e0       	ldi	r18, 0x00	; 0
     4d0:	20 32       	cpi	r18, 0x20	; 32
     4d2:	a0 f4       	brcc	.+40     	; 0x4fc <vfprintf+0x88>
     4d4:	8b 32       	cpi	r24, 0x2B	; 43
     4d6:	69 f0       	breq	.+26     	; 0x4f2 <vfprintf+0x7e>
     4d8:	30 f4       	brcc	.+12     	; 0x4e6 <vfprintf+0x72>
     4da:	80 32       	cpi	r24, 0x20	; 32
     4dc:	59 f0       	breq	.+22     	; 0x4f4 <vfprintf+0x80>
     4de:	83 32       	cpi	r24, 0x23	; 35
     4e0:	69 f4       	brne	.+26     	; 0x4fc <vfprintf+0x88>
     4e2:	20 61       	ori	r18, 0x10	; 16
     4e4:	2c c0       	rjmp	.+88     	; 0x53e <__stack+0x3f>
     4e6:	8d 32       	cpi	r24, 0x2D	; 45
     4e8:	39 f0       	breq	.+14     	; 0x4f8 <vfprintf+0x84>
     4ea:	80 33       	cpi	r24, 0x30	; 48
     4ec:	39 f4       	brne	.+14     	; 0x4fc <vfprintf+0x88>
     4ee:	21 60       	ori	r18, 0x01	; 1
     4f0:	26 c0       	rjmp	.+76     	; 0x53e <__stack+0x3f>
     4f2:	22 60       	ori	r18, 0x02	; 2
     4f4:	24 60       	ori	r18, 0x04	; 4
     4f6:	23 c0       	rjmp	.+70     	; 0x53e <__stack+0x3f>
     4f8:	28 60       	ori	r18, 0x08	; 8
     4fa:	21 c0       	rjmp	.+66     	; 0x53e <__stack+0x3f>
     4fc:	27 fd       	sbrc	r18, 7
     4fe:	27 c0       	rjmp	.+78     	; 0x54e <__stack+0x4f>
     500:	30 ed       	ldi	r19, 0xD0	; 208
     502:	38 0f       	add	r19, r24
     504:	3a 30       	cpi	r19, 0x0A	; 10
     506:	78 f4       	brcc	.+30     	; 0x526 <__stack+0x27>
     508:	26 ff       	sbrs	r18, 6
     50a:	06 c0       	rjmp	.+12     	; 0x518 <__stack+0x19>
     50c:	fa e0       	ldi	r31, 0x0A	; 10
     50e:	5f 9e       	mul	r5, r31
     510:	30 0d       	add	r19, r0
     512:	11 24       	eor	r1, r1
     514:	53 2e       	mov	r5, r19
     516:	13 c0       	rjmp	.+38     	; 0x53e <__stack+0x3f>
     518:	8a e0       	ldi	r24, 0x0A	; 10
     51a:	38 9e       	mul	r3, r24
     51c:	30 0d       	add	r19, r0
     51e:	11 24       	eor	r1, r1
     520:	33 2e       	mov	r3, r19
     522:	20 62       	ori	r18, 0x20	; 32
     524:	0c c0       	rjmp	.+24     	; 0x53e <__stack+0x3f>
     526:	8e 32       	cpi	r24, 0x2E	; 46
     528:	21 f4       	brne	.+8      	; 0x532 <__stack+0x33>
     52a:	26 fd       	sbrc	r18, 6
     52c:	6b c1       	rjmp	.+726    	; 0x804 <__stack+0x305>
     52e:	20 64       	ori	r18, 0x40	; 64
     530:	06 c0       	rjmp	.+12     	; 0x53e <__stack+0x3f>
     532:	8c 36       	cpi	r24, 0x6C	; 108
     534:	11 f4       	brne	.+4      	; 0x53a <__stack+0x3b>
     536:	20 68       	ori	r18, 0x80	; 128
     538:	02 c0       	rjmp	.+4      	; 0x53e <__stack+0x3f>
     53a:	88 36       	cpi	r24, 0x68	; 104
     53c:	41 f4       	brne	.+16     	; 0x54e <__stack+0x4f>
     53e:	f6 01       	movw	r30, r12
     540:	93 fd       	sbrc	r25, 3
     542:	85 91       	lpm	r24, Z+
     544:	93 ff       	sbrs	r25, 3
     546:	81 91       	ld	r24, Z+
     548:	6f 01       	movw	r12, r30
     54a:	81 11       	cpse	r24, r1
     54c:	c1 cf       	rjmp	.-126    	; 0x4d0 <vfprintf+0x5c>
     54e:	98 2f       	mov	r25, r24
     550:	9f 7d       	andi	r25, 0xDF	; 223
     552:	95 54       	subi	r25, 0x45	; 69
     554:	93 30       	cpi	r25, 0x03	; 3
     556:	28 f4       	brcc	.+10     	; 0x562 <__stack+0x63>
     558:	0c 5f       	subi	r16, 0xFC	; 252
     55a:	1f 4f       	sbci	r17, 0xFF	; 255
     55c:	ff e3       	ldi	r31, 0x3F	; 63
     55e:	f9 83       	std	Y+1, r31	; 0x01
     560:	0d c0       	rjmp	.+26     	; 0x57c <__stack+0x7d>
     562:	83 36       	cpi	r24, 0x63	; 99
     564:	31 f0       	breq	.+12     	; 0x572 <__stack+0x73>
     566:	83 37       	cpi	r24, 0x73	; 115
     568:	71 f0       	breq	.+28     	; 0x586 <__stack+0x87>
     56a:	83 35       	cpi	r24, 0x53	; 83
     56c:	09 f0       	breq	.+2      	; 0x570 <__stack+0x71>
     56e:	5b c0       	rjmp	.+182    	; 0x626 <__stack+0x127>
     570:	22 c0       	rjmp	.+68     	; 0x5b6 <__stack+0xb7>
     572:	f8 01       	movw	r30, r16
     574:	80 81       	ld	r24, Z
     576:	89 83       	std	Y+1, r24	; 0x01
     578:	0e 5f       	subi	r16, 0xFE	; 254
     57a:	1f 4f       	sbci	r17, 0xFF	; 255
     57c:	44 24       	eor	r4, r4
     57e:	43 94       	inc	r4
     580:	51 2c       	mov	r5, r1
     582:	54 01       	movw	r10, r8
     584:	15 c0       	rjmp	.+42     	; 0x5b0 <__stack+0xb1>
     586:	38 01       	movw	r6, r16
     588:	f2 e0       	ldi	r31, 0x02	; 2
     58a:	6f 0e       	add	r6, r31
     58c:	71 1c       	adc	r7, r1
     58e:	f8 01       	movw	r30, r16
     590:	a0 80       	ld	r10, Z
     592:	b1 80       	ldd	r11, Z+1	; 0x01
     594:	26 ff       	sbrs	r18, 6
     596:	03 c0       	rjmp	.+6      	; 0x59e <__stack+0x9f>
     598:	65 2d       	mov	r22, r5
     59a:	70 e0       	ldi	r23, 0x00	; 0
     59c:	02 c0       	rjmp	.+4      	; 0x5a2 <__stack+0xa3>
     59e:	6f ef       	ldi	r22, 0xFF	; 255
     5a0:	7f ef       	ldi	r23, 0xFF	; 255
     5a2:	c5 01       	movw	r24, r10
     5a4:	2c 87       	std	Y+12, r18	; 0x0c
     5a6:	0e 94 df 06 	call	0xdbe	; 0xdbe <strnlen>
     5aa:	2c 01       	movw	r4, r24
     5ac:	83 01       	movw	r16, r6
     5ae:	2c 85       	ldd	r18, Y+12	; 0x0c
     5b0:	2f 77       	andi	r18, 0x7F	; 127
     5b2:	22 2e       	mov	r2, r18
     5b4:	17 c0       	rjmp	.+46     	; 0x5e4 <__stack+0xe5>
     5b6:	38 01       	movw	r6, r16
     5b8:	f2 e0       	ldi	r31, 0x02	; 2
     5ba:	6f 0e       	add	r6, r31
     5bc:	71 1c       	adc	r7, r1
     5be:	f8 01       	movw	r30, r16
     5c0:	a0 80       	ld	r10, Z
     5c2:	b1 80       	ldd	r11, Z+1	; 0x01
     5c4:	26 ff       	sbrs	r18, 6
     5c6:	03 c0       	rjmp	.+6      	; 0x5ce <__stack+0xcf>
     5c8:	65 2d       	mov	r22, r5
     5ca:	70 e0       	ldi	r23, 0x00	; 0
     5cc:	02 c0       	rjmp	.+4      	; 0x5d2 <__stack+0xd3>
     5ce:	6f ef       	ldi	r22, 0xFF	; 255
     5d0:	7f ef       	ldi	r23, 0xFF	; 255
     5d2:	c5 01       	movw	r24, r10
     5d4:	2c 87       	std	Y+12, r18	; 0x0c
     5d6:	0e 94 d4 06 	call	0xda8	; 0xda8 <strnlen_P>
     5da:	2c 01       	movw	r4, r24
     5dc:	2c 85       	ldd	r18, Y+12	; 0x0c
     5de:	20 68       	ori	r18, 0x80	; 128
     5e0:	22 2e       	mov	r2, r18
     5e2:	83 01       	movw	r16, r6
     5e4:	23 fc       	sbrc	r2, 3
     5e6:	1b c0       	rjmp	.+54     	; 0x61e <__stack+0x11f>
     5e8:	83 2d       	mov	r24, r3
     5ea:	90 e0       	ldi	r25, 0x00	; 0
     5ec:	48 16       	cp	r4, r24
     5ee:	59 06       	cpc	r5, r25
     5f0:	b0 f4       	brcc	.+44     	; 0x61e <__stack+0x11f>
     5f2:	b7 01       	movw	r22, r14
     5f4:	80 e2       	ldi	r24, 0x20	; 32
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	0e 94 28 07 	call	0xe50	; 0xe50 <fputc>
     5fc:	3a 94       	dec	r3
     5fe:	f4 cf       	rjmp	.-24     	; 0x5e8 <__stack+0xe9>
     600:	f5 01       	movw	r30, r10
     602:	27 fc       	sbrc	r2, 7
     604:	85 91       	lpm	r24, Z+
     606:	27 fe       	sbrs	r2, 7
     608:	81 91       	ld	r24, Z+
     60a:	5f 01       	movw	r10, r30
     60c:	b7 01       	movw	r22, r14
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	0e 94 28 07 	call	0xe50	; 0xe50 <fputc>
     614:	31 10       	cpse	r3, r1
     616:	3a 94       	dec	r3
     618:	f1 e0       	ldi	r31, 0x01	; 1
     61a:	4f 1a       	sub	r4, r31
     61c:	51 08       	sbc	r5, r1
     61e:	41 14       	cp	r4, r1
     620:	51 04       	cpc	r5, r1
     622:	71 f7       	brne	.-36     	; 0x600 <__stack+0x101>
     624:	e5 c0       	rjmp	.+458    	; 0x7f0 <__stack+0x2f1>
     626:	84 36       	cpi	r24, 0x64	; 100
     628:	11 f0       	breq	.+4      	; 0x62e <__stack+0x12f>
     62a:	89 36       	cpi	r24, 0x69	; 105
     62c:	39 f5       	brne	.+78     	; 0x67c <__stack+0x17d>
     62e:	f8 01       	movw	r30, r16
     630:	27 ff       	sbrs	r18, 7
     632:	07 c0       	rjmp	.+14     	; 0x642 <__stack+0x143>
     634:	60 81       	ld	r22, Z
     636:	71 81       	ldd	r23, Z+1	; 0x01
     638:	82 81       	ldd	r24, Z+2	; 0x02
     63a:	93 81       	ldd	r25, Z+3	; 0x03
     63c:	0c 5f       	subi	r16, 0xFC	; 252
     63e:	1f 4f       	sbci	r17, 0xFF	; 255
     640:	08 c0       	rjmp	.+16     	; 0x652 <__stack+0x153>
     642:	60 81       	ld	r22, Z
     644:	71 81       	ldd	r23, Z+1	; 0x01
     646:	88 27       	eor	r24, r24
     648:	77 fd       	sbrc	r23, 7
     64a:	80 95       	com	r24
     64c:	98 2f       	mov	r25, r24
     64e:	0e 5f       	subi	r16, 0xFE	; 254
     650:	1f 4f       	sbci	r17, 0xFF	; 255
     652:	2f 76       	andi	r18, 0x6F	; 111
     654:	b2 2e       	mov	r11, r18
     656:	97 ff       	sbrs	r25, 7
     658:	09 c0       	rjmp	.+18     	; 0x66c <__stack+0x16d>
     65a:	90 95       	com	r25
     65c:	80 95       	com	r24
     65e:	70 95       	com	r23
     660:	61 95       	neg	r22
     662:	7f 4f       	sbci	r23, 0xFF	; 255
     664:	8f 4f       	sbci	r24, 0xFF	; 255
     666:	9f 4f       	sbci	r25, 0xFF	; 255
     668:	20 68       	ori	r18, 0x80	; 128
     66a:	b2 2e       	mov	r11, r18
     66c:	2a e0       	ldi	r18, 0x0A	; 10
     66e:	30 e0       	ldi	r19, 0x00	; 0
     670:	a4 01       	movw	r20, r8
     672:	0e 94 73 07 	call	0xee6	; 0xee6 <__ultoa_invert>
     676:	a8 2e       	mov	r10, r24
     678:	a8 18       	sub	r10, r8
     67a:	44 c0       	rjmp	.+136    	; 0x704 <__stack+0x205>
     67c:	85 37       	cpi	r24, 0x75	; 117
     67e:	29 f4       	brne	.+10     	; 0x68a <__stack+0x18b>
     680:	2f 7e       	andi	r18, 0xEF	; 239
     682:	b2 2e       	mov	r11, r18
     684:	2a e0       	ldi	r18, 0x0A	; 10
     686:	30 e0       	ldi	r19, 0x00	; 0
     688:	25 c0       	rjmp	.+74     	; 0x6d4 <__stack+0x1d5>
     68a:	f2 2f       	mov	r31, r18
     68c:	f9 7f       	andi	r31, 0xF9	; 249
     68e:	bf 2e       	mov	r11, r31
     690:	8f 36       	cpi	r24, 0x6F	; 111
     692:	c1 f0       	breq	.+48     	; 0x6c4 <__stack+0x1c5>
     694:	18 f4       	brcc	.+6      	; 0x69c <__stack+0x19d>
     696:	88 35       	cpi	r24, 0x58	; 88
     698:	79 f0       	breq	.+30     	; 0x6b8 <__stack+0x1b9>
     69a:	b4 c0       	rjmp	.+360    	; 0x804 <__stack+0x305>
     69c:	80 37       	cpi	r24, 0x70	; 112
     69e:	19 f0       	breq	.+6      	; 0x6a6 <__stack+0x1a7>
     6a0:	88 37       	cpi	r24, 0x78	; 120
     6a2:	21 f0       	breq	.+8      	; 0x6ac <__stack+0x1ad>
     6a4:	af c0       	rjmp	.+350    	; 0x804 <__stack+0x305>
     6a6:	2f 2f       	mov	r18, r31
     6a8:	20 61       	ori	r18, 0x10	; 16
     6aa:	b2 2e       	mov	r11, r18
     6ac:	b4 fe       	sbrs	r11, 4
     6ae:	0d c0       	rjmp	.+26     	; 0x6ca <__stack+0x1cb>
     6b0:	8b 2d       	mov	r24, r11
     6b2:	84 60       	ori	r24, 0x04	; 4
     6b4:	b8 2e       	mov	r11, r24
     6b6:	09 c0       	rjmp	.+18     	; 0x6ca <__stack+0x1cb>
     6b8:	24 ff       	sbrs	r18, 4
     6ba:	0a c0       	rjmp	.+20     	; 0x6d0 <__stack+0x1d1>
     6bc:	9f 2f       	mov	r25, r31
     6be:	96 60       	ori	r25, 0x06	; 6
     6c0:	b9 2e       	mov	r11, r25
     6c2:	06 c0       	rjmp	.+12     	; 0x6d0 <__stack+0x1d1>
     6c4:	28 e0       	ldi	r18, 0x08	; 8
     6c6:	30 e0       	ldi	r19, 0x00	; 0
     6c8:	05 c0       	rjmp	.+10     	; 0x6d4 <__stack+0x1d5>
     6ca:	20 e1       	ldi	r18, 0x10	; 16
     6cc:	30 e0       	ldi	r19, 0x00	; 0
     6ce:	02 c0       	rjmp	.+4      	; 0x6d4 <__stack+0x1d5>
     6d0:	20 e1       	ldi	r18, 0x10	; 16
     6d2:	32 e0       	ldi	r19, 0x02	; 2
     6d4:	f8 01       	movw	r30, r16
     6d6:	b7 fe       	sbrs	r11, 7
     6d8:	07 c0       	rjmp	.+14     	; 0x6e8 <__stack+0x1e9>
     6da:	60 81       	ld	r22, Z
     6dc:	71 81       	ldd	r23, Z+1	; 0x01
     6de:	82 81       	ldd	r24, Z+2	; 0x02
     6e0:	93 81       	ldd	r25, Z+3	; 0x03
     6e2:	0c 5f       	subi	r16, 0xFC	; 252
     6e4:	1f 4f       	sbci	r17, 0xFF	; 255
     6e6:	06 c0       	rjmp	.+12     	; 0x6f4 <__stack+0x1f5>
     6e8:	60 81       	ld	r22, Z
     6ea:	71 81       	ldd	r23, Z+1	; 0x01
     6ec:	80 e0       	ldi	r24, 0x00	; 0
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	0e 5f       	subi	r16, 0xFE	; 254
     6f2:	1f 4f       	sbci	r17, 0xFF	; 255
     6f4:	a4 01       	movw	r20, r8
     6f6:	0e 94 73 07 	call	0xee6	; 0xee6 <__ultoa_invert>
     6fa:	a8 2e       	mov	r10, r24
     6fc:	a8 18       	sub	r10, r8
     6fe:	fb 2d       	mov	r31, r11
     700:	ff 77       	andi	r31, 0x7F	; 127
     702:	bf 2e       	mov	r11, r31
     704:	b6 fe       	sbrs	r11, 6
     706:	0b c0       	rjmp	.+22     	; 0x71e <__stack+0x21f>
     708:	2b 2d       	mov	r18, r11
     70a:	2e 7f       	andi	r18, 0xFE	; 254
     70c:	a5 14       	cp	r10, r5
     70e:	50 f4       	brcc	.+20     	; 0x724 <__stack+0x225>
     710:	b4 fe       	sbrs	r11, 4
     712:	0a c0       	rjmp	.+20     	; 0x728 <__stack+0x229>
     714:	b2 fc       	sbrc	r11, 2
     716:	08 c0       	rjmp	.+16     	; 0x728 <__stack+0x229>
     718:	2b 2d       	mov	r18, r11
     71a:	2e 7e       	andi	r18, 0xEE	; 238
     71c:	05 c0       	rjmp	.+10     	; 0x728 <__stack+0x229>
     71e:	7a 2c       	mov	r7, r10
     720:	2b 2d       	mov	r18, r11
     722:	03 c0       	rjmp	.+6      	; 0x72a <__stack+0x22b>
     724:	7a 2c       	mov	r7, r10
     726:	01 c0       	rjmp	.+2      	; 0x72a <__stack+0x22b>
     728:	75 2c       	mov	r7, r5
     72a:	24 ff       	sbrs	r18, 4
     72c:	0d c0       	rjmp	.+26     	; 0x748 <__stack+0x249>
     72e:	fe 01       	movw	r30, r28
     730:	ea 0d       	add	r30, r10
     732:	f1 1d       	adc	r31, r1
     734:	80 81       	ld	r24, Z
     736:	80 33       	cpi	r24, 0x30	; 48
     738:	11 f4       	brne	.+4      	; 0x73e <__stack+0x23f>
     73a:	29 7e       	andi	r18, 0xE9	; 233
     73c:	09 c0       	rjmp	.+18     	; 0x750 <__stack+0x251>
     73e:	22 ff       	sbrs	r18, 2
     740:	06 c0       	rjmp	.+12     	; 0x74e <__stack+0x24f>
     742:	73 94       	inc	r7
     744:	73 94       	inc	r7
     746:	04 c0       	rjmp	.+8      	; 0x750 <__stack+0x251>
     748:	82 2f       	mov	r24, r18
     74a:	86 78       	andi	r24, 0x86	; 134
     74c:	09 f0       	breq	.+2      	; 0x750 <__stack+0x251>
     74e:	73 94       	inc	r7
     750:	23 fd       	sbrc	r18, 3
     752:	13 c0       	rjmp	.+38     	; 0x77a <__stack+0x27b>
     754:	20 ff       	sbrs	r18, 0
     756:	06 c0       	rjmp	.+12     	; 0x764 <__stack+0x265>
     758:	5a 2c       	mov	r5, r10
     75a:	73 14       	cp	r7, r3
     75c:	18 f4       	brcc	.+6      	; 0x764 <__stack+0x265>
     75e:	53 0c       	add	r5, r3
     760:	57 18       	sub	r5, r7
     762:	73 2c       	mov	r7, r3
     764:	73 14       	cp	r7, r3
     766:	68 f4       	brcc	.+26     	; 0x782 <__stack+0x283>
     768:	b7 01       	movw	r22, r14
     76a:	80 e2       	ldi	r24, 0x20	; 32
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	2c 87       	std	Y+12, r18	; 0x0c
     770:	0e 94 28 07 	call	0xe50	; 0xe50 <fputc>
     774:	73 94       	inc	r7
     776:	2c 85       	ldd	r18, Y+12	; 0x0c
     778:	f5 cf       	rjmp	.-22     	; 0x764 <__stack+0x265>
     77a:	73 14       	cp	r7, r3
     77c:	10 f4       	brcc	.+4      	; 0x782 <__stack+0x283>
     77e:	37 18       	sub	r3, r7
     780:	01 c0       	rjmp	.+2      	; 0x784 <__stack+0x285>
     782:	31 2c       	mov	r3, r1
     784:	24 ff       	sbrs	r18, 4
     786:	12 c0       	rjmp	.+36     	; 0x7ac <__stack+0x2ad>
     788:	b7 01       	movw	r22, r14
     78a:	80 e3       	ldi	r24, 0x30	; 48
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	2c 87       	std	Y+12, r18	; 0x0c
     790:	0e 94 28 07 	call	0xe50	; 0xe50 <fputc>
     794:	2c 85       	ldd	r18, Y+12	; 0x0c
     796:	22 ff       	sbrs	r18, 2
     798:	17 c0       	rjmp	.+46     	; 0x7c8 <__stack+0x2c9>
     79a:	21 ff       	sbrs	r18, 1
     79c:	03 c0       	rjmp	.+6      	; 0x7a4 <__stack+0x2a5>
     79e:	88 e5       	ldi	r24, 0x58	; 88
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	02 c0       	rjmp	.+4      	; 0x7a8 <__stack+0x2a9>
     7a4:	88 e7       	ldi	r24, 0x78	; 120
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	b7 01       	movw	r22, r14
     7aa:	0c c0       	rjmp	.+24     	; 0x7c4 <__stack+0x2c5>
     7ac:	82 2f       	mov	r24, r18
     7ae:	86 78       	andi	r24, 0x86	; 134
     7b0:	59 f0       	breq	.+22     	; 0x7c8 <__stack+0x2c9>
     7b2:	21 fd       	sbrc	r18, 1
     7b4:	02 c0       	rjmp	.+4      	; 0x7ba <__stack+0x2bb>
     7b6:	80 e2       	ldi	r24, 0x20	; 32
     7b8:	01 c0       	rjmp	.+2      	; 0x7bc <__stack+0x2bd>
     7ba:	8b e2       	ldi	r24, 0x2B	; 43
     7bc:	27 fd       	sbrc	r18, 7
     7be:	8d e2       	ldi	r24, 0x2D	; 45
     7c0:	b7 01       	movw	r22, r14
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	0e 94 28 07 	call	0xe50	; 0xe50 <fputc>
     7c8:	a5 14       	cp	r10, r5
     7ca:	38 f4       	brcc	.+14     	; 0x7da <__stack+0x2db>
     7cc:	b7 01       	movw	r22, r14
     7ce:	80 e3       	ldi	r24, 0x30	; 48
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	0e 94 28 07 	call	0xe50	; 0xe50 <fputc>
     7d6:	5a 94       	dec	r5
     7d8:	f7 cf       	rjmp	.-18     	; 0x7c8 <__stack+0x2c9>
     7da:	aa 94       	dec	r10
     7dc:	f4 01       	movw	r30, r8
     7de:	ea 0d       	add	r30, r10
     7e0:	f1 1d       	adc	r31, r1
     7e2:	80 81       	ld	r24, Z
     7e4:	b7 01       	movw	r22, r14
     7e6:	90 e0       	ldi	r25, 0x00	; 0
     7e8:	0e 94 28 07 	call	0xe50	; 0xe50 <fputc>
     7ec:	a1 10       	cpse	r10, r1
     7ee:	f5 cf       	rjmp	.-22     	; 0x7da <__stack+0x2db>
     7f0:	33 20       	and	r3, r3
     7f2:	09 f4       	brne	.+2      	; 0x7f6 <__stack+0x2f7>
     7f4:	51 ce       	rjmp	.-862    	; 0x498 <vfprintf+0x24>
     7f6:	b7 01       	movw	r22, r14
     7f8:	80 e2       	ldi	r24, 0x20	; 32
     7fa:	90 e0       	ldi	r25, 0x00	; 0
     7fc:	0e 94 28 07 	call	0xe50	; 0xe50 <fputc>
     800:	3a 94       	dec	r3
     802:	f6 cf       	rjmp	.-20     	; 0x7f0 <__stack+0x2f1>
     804:	f7 01       	movw	r30, r14
     806:	86 81       	ldd	r24, Z+6	; 0x06
     808:	97 81       	ldd	r25, Z+7	; 0x07
     80a:	02 c0       	rjmp	.+4      	; 0x810 <__stack+0x311>
     80c:	8f ef       	ldi	r24, 0xFF	; 255
     80e:	9f ef       	ldi	r25, 0xFF	; 255
     810:	2c 96       	adiw	r28, 0x0c	; 12
     812:	e2 e1       	ldi	r30, 0x12	; 18
     814:	0c 94 22 08 	jmp	0x1044	; 0x1044 <__epilogue_restores__>

00000818 <putval>:
     818:	20 fd       	sbrc	r18, 0
     81a:	09 c0       	rjmp	.+18     	; 0x82e <putval+0x16>
     81c:	fc 01       	movw	r30, r24
     81e:	23 fd       	sbrc	r18, 3
     820:	05 c0       	rjmp	.+10     	; 0x82c <putval+0x14>
     822:	22 ff       	sbrs	r18, 2
     824:	02 c0       	rjmp	.+4      	; 0x82a <putval+0x12>
     826:	73 83       	std	Z+3, r23	; 0x03
     828:	62 83       	std	Z+2, r22	; 0x02
     82a:	51 83       	std	Z+1, r21	; 0x01
     82c:	40 83       	st	Z, r20
     82e:	08 95       	ret

00000830 <mulacc>:
     830:	44 fd       	sbrc	r20, 4
     832:	10 c0       	rjmp	.+32     	; 0x854 <mulacc+0x24>
     834:	46 fd       	sbrc	r20, 6
     836:	10 c0       	rjmp	.+32     	; 0x858 <mulacc+0x28>
     838:	db 01       	movw	r26, r22
     83a:	fc 01       	movw	r30, r24
     83c:	aa 0f       	add	r26, r26
     83e:	bb 1f       	adc	r27, r27
     840:	ee 1f       	adc	r30, r30
     842:	ff 1f       	adc	r31, r31
     844:	10 94       	com	r1
     846:	d1 f7       	brne	.-12     	; 0x83c <mulacc+0xc>
     848:	6a 0f       	add	r22, r26
     84a:	7b 1f       	adc	r23, r27
     84c:	8e 1f       	adc	r24, r30
     84e:	9f 1f       	adc	r25, r31
     850:	31 e0       	ldi	r19, 0x01	; 1
     852:	03 c0       	rjmp	.+6      	; 0x85a <mulacc+0x2a>
     854:	33 e0       	ldi	r19, 0x03	; 3
     856:	01 c0       	rjmp	.+2      	; 0x85a <mulacc+0x2a>
     858:	34 e0       	ldi	r19, 0x04	; 4
     85a:	66 0f       	add	r22, r22
     85c:	77 1f       	adc	r23, r23
     85e:	88 1f       	adc	r24, r24
     860:	99 1f       	adc	r25, r25
     862:	31 50       	subi	r19, 0x01	; 1
     864:	d1 f7       	brne	.-12     	; 0x85a <mulacc+0x2a>
     866:	62 0f       	add	r22, r18
     868:	71 1d       	adc	r23, r1
     86a:	81 1d       	adc	r24, r1
     86c:	91 1d       	adc	r25, r1
     86e:	08 95       	ret

00000870 <skip_spaces>:
     870:	0f 93       	push	r16
     872:	1f 93       	push	r17
     874:	cf 93       	push	r28
     876:	df 93       	push	r29
     878:	8c 01       	movw	r16, r24
     87a:	c8 01       	movw	r24, r16
     87c:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <fgetc>
     880:	ec 01       	movw	r28, r24
     882:	97 fd       	sbrc	r25, 7
     884:	08 c0       	rjmp	.+16     	; 0x896 <skip_spaces+0x26>
     886:	0e 94 c1 06 	call	0xd82	; 0xd82 <isspace>
     88a:	89 2b       	or	r24, r25
     88c:	b1 f7       	brne	.-20     	; 0x87a <skip_spaces+0xa>
     88e:	b8 01       	movw	r22, r16
     890:	ce 01       	movw	r24, r28
     892:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <ungetc>
     896:	ce 01       	movw	r24, r28
     898:	df 91       	pop	r29
     89a:	cf 91       	pop	r28
     89c:	1f 91       	pop	r17
     89e:	0f 91       	pop	r16
     8a0:	08 95       	ret

000008a2 <conv_int>:
     8a2:	8f 92       	push	r8
     8a4:	9f 92       	push	r9
     8a6:	af 92       	push	r10
     8a8:	cf 92       	push	r12
     8aa:	df 92       	push	r13
     8ac:	ef 92       	push	r14
     8ae:	ff 92       	push	r15
     8b0:	0f 93       	push	r16
     8b2:	1f 93       	push	r17
     8b4:	cf 93       	push	r28
     8b6:	df 93       	push	r29
     8b8:	ec 01       	movw	r28, r24
     8ba:	a6 2e       	mov	r10, r22
     8bc:	4a 01       	movw	r8, r20
     8be:	02 2f       	mov	r16, r18
     8c0:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <fgetc>
     8c4:	ac 01       	movw	r20, r24
     8c6:	55 27       	eor	r21, r21
     8c8:	4b 32       	cpi	r20, 0x2B	; 43
     8ca:	51 05       	cpc	r21, r1
     8cc:	21 f0       	breq	.+8      	; 0x8d6 <conv_int+0x34>
     8ce:	4d 32       	cpi	r20, 0x2D	; 45
     8d0:	51 05       	cpc	r21, r1
     8d2:	51 f4       	brne	.+20     	; 0x8e8 <conv_int+0x46>
     8d4:	00 68       	ori	r16, 0x80	; 128
     8d6:	aa 94       	dec	r10
     8d8:	11 f4       	brne	.+4      	; 0x8de <conv_int+0x3c>
     8da:	80 e0       	ldi	r24, 0x00	; 0
     8dc:	67 c0       	rjmp	.+206    	; 0x9ac <conv_int+0x10a>
     8de:	ce 01       	movw	r24, r28
     8e0:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <fgetc>
     8e4:	97 fd       	sbrc	r25, 7
     8e6:	f9 cf       	rjmp	.-14     	; 0x8da <conv_int+0x38>
     8e8:	10 2f       	mov	r17, r16
     8ea:	1d 7f       	andi	r17, 0xFD	; 253
     8ec:	30 2f       	mov	r19, r16
     8ee:	30 73       	andi	r19, 0x30	; 48
     8f0:	01 f5       	brne	.+64     	; 0x932 <conv_int+0x90>
     8f2:	80 33       	cpi	r24, 0x30	; 48
     8f4:	f1 f4       	brne	.+60     	; 0x932 <conv_int+0x90>
     8f6:	ff 24       	eor	r15, r15
     8f8:	fa 94       	dec	r15
     8fa:	fa 0c       	add	r15, r10
     8fc:	09 f4       	brne	.+2      	; 0x900 <conv_int+0x5e>
     8fe:	42 c0       	rjmp	.+132    	; 0x984 <conv_int+0xe2>
     900:	ce 01       	movw	r24, r28
     902:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <fgetc>
     906:	97 fd       	sbrc	r25, 7
     908:	3d c0       	rjmp	.+122    	; 0x984 <conv_int+0xe2>
     90a:	38 2f       	mov	r19, r24
     90c:	3f 7d       	andi	r19, 0xDF	; 223
     90e:	38 35       	cpi	r19, 0x58	; 88
     910:	51 f4       	brne	.+20     	; 0x926 <conv_int+0x84>
     912:	12 64       	ori	r17, 0x42	; 66
     914:	aa 94       	dec	r10
     916:	aa 94       	dec	r10
     918:	a9 f1       	breq	.+106    	; 0x984 <conv_int+0xe2>
     91a:	ce 01       	movw	r24, r28
     91c:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <fgetc>
     920:	97 ff       	sbrs	r25, 7
     922:	07 c0       	rjmp	.+14     	; 0x932 <conv_int+0x90>
     924:	2f c0       	rjmp	.+94     	; 0x984 <conv_int+0xe2>
     926:	06 ff       	sbrs	r16, 6
     928:	02 c0       	rjmp	.+4      	; 0x92e <conv_int+0x8c>
     92a:	12 60       	ori	r17, 0x02	; 2
     92c:	01 c0       	rjmp	.+2      	; 0x930 <conv_int+0x8e>
     92e:	12 61       	ori	r17, 0x12	; 18
     930:	af 2c       	mov	r10, r15
     932:	c1 2c       	mov	r12, r1
     934:	d1 2c       	mov	r13, r1
     936:	76 01       	movw	r14, r12
     938:	20 ed       	ldi	r18, 0xD0	; 208
     93a:	28 0f       	add	r18, r24
     93c:	28 30       	cpi	r18, 0x08	; 8
     93e:	80 f0       	brcs	.+32     	; 0x960 <conv_int+0xbe>
     940:	14 ff       	sbrs	r17, 4
     942:	04 c0       	rjmp	.+8      	; 0x94c <conv_int+0xaa>
     944:	be 01       	movw	r22, r28
     946:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <ungetc>
     94a:	19 c0       	rjmp	.+50     	; 0x97e <conv_int+0xdc>
     94c:	2a 30       	cpi	r18, 0x0A	; 10
     94e:	40 f0       	brcs	.+16     	; 0x960 <conv_int+0xbe>
     950:	16 ff       	sbrs	r17, 6
     952:	f8 cf       	rjmp	.-16     	; 0x944 <conv_int+0xa2>
     954:	2f 7d       	andi	r18, 0xDF	; 223
     956:	3f ee       	ldi	r19, 0xEF	; 239
     958:	32 0f       	add	r19, r18
     95a:	36 30       	cpi	r19, 0x06	; 6
     95c:	98 f7       	brcc	.-26     	; 0x944 <conv_int+0xa2>
     95e:	27 50       	subi	r18, 0x07	; 7
     960:	41 2f       	mov	r20, r17
     962:	c7 01       	movw	r24, r14
     964:	b6 01       	movw	r22, r12
     966:	0e 94 18 04 	call	0x830	; 0x830 <mulacc>
     96a:	6b 01       	movw	r12, r22
     96c:	7c 01       	movw	r14, r24
     96e:	12 60       	ori	r17, 0x02	; 2
     970:	aa 94       	dec	r10
     972:	59 f0       	breq	.+22     	; 0x98a <conv_int+0xe8>
     974:	ce 01       	movw	r24, r28
     976:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <fgetc>
     97a:	97 ff       	sbrs	r25, 7
     97c:	dd cf       	rjmp	.-70     	; 0x938 <conv_int+0x96>
     97e:	11 fd       	sbrc	r17, 1
     980:	04 c0       	rjmp	.+8      	; 0x98a <conv_int+0xe8>
     982:	ab cf       	rjmp	.-170    	; 0x8da <conv_int+0x38>
     984:	c1 2c       	mov	r12, r1
     986:	d1 2c       	mov	r13, r1
     988:	76 01       	movw	r14, r12
     98a:	17 ff       	sbrs	r17, 7
     98c:	08 c0       	rjmp	.+16     	; 0x99e <conv_int+0xfc>
     98e:	f0 94       	com	r15
     990:	e0 94       	com	r14
     992:	d0 94       	com	r13
     994:	c0 94       	com	r12
     996:	c1 1c       	adc	r12, r1
     998:	d1 1c       	adc	r13, r1
     99a:	e1 1c       	adc	r14, r1
     99c:	f1 1c       	adc	r15, r1
     99e:	21 2f       	mov	r18, r17
     9a0:	b7 01       	movw	r22, r14
     9a2:	a6 01       	movw	r20, r12
     9a4:	c4 01       	movw	r24, r8
     9a6:	0e 94 0c 04 	call	0x818	; 0x818 <putval>
     9aa:	81 e0       	ldi	r24, 0x01	; 1
     9ac:	df 91       	pop	r29
     9ae:	cf 91       	pop	r28
     9b0:	1f 91       	pop	r17
     9b2:	0f 91       	pop	r16
     9b4:	ff 90       	pop	r15
     9b6:	ef 90       	pop	r14
     9b8:	df 90       	pop	r13
     9ba:	cf 90       	pop	r12
     9bc:	af 90       	pop	r10
     9be:	9f 90       	pop	r9
     9c0:	8f 90       	pop	r8
     9c2:	08 95       	ret

000009c4 <conv_brk>:
     9c4:	a1 e2       	ldi	r26, 0x21	; 33
     9c6:	b0 e0       	ldi	r27, 0x00	; 0
     9c8:	e8 ee       	ldi	r30, 0xE8	; 232
     9ca:	f4 e0       	ldi	r31, 0x04	; 4
     9cc:	0c 94 0b 08 	jmp	0x1016	; 0x1016 <__prologue_saves__+0xa>
     9d0:	5c 01       	movw	r10, r24
     9d2:	7a 01       	movw	r14, r20
     9d4:	8e 01       	movw	r16, r28
     9d6:	0f 5f       	subi	r16, 0xFF	; 255
     9d8:	1f 4f       	sbci	r17, 0xFF	; 255
     9da:	68 01       	movw	r12, r16
     9dc:	80 e2       	ldi	r24, 0x20	; 32
     9de:	d8 01       	movw	r26, r16
     9e0:	1d 92       	st	X+, r1
     9e2:	8a 95       	dec	r24
     9e4:	e9 f7       	brne	.-6      	; 0x9e0 <conv_brk+0x1c>
     9e6:	f5 01       	movw	r30, r10
     9e8:	73 80       	ldd	r7, Z+3	; 0x03
     9ea:	40 e0       	ldi	r20, 0x00	; 0
     9ec:	50 e0       	ldi	r21, 0x00	; 0
     9ee:	81 2c       	mov	r8, r1
     9f0:	b0 e0       	ldi	r27, 0x00	; 0
     9f2:	91 2c       	mov	r9, r1
     9f4:	81 e0       	ldi	r24, 0x01	; 1
     9f6:	90 e0       	ldi	r25, 0x00	; 0
     9f8:	f9 01       	movw	r30, r18
     9fa:	73 fc       	sbrc	r7, 3
     9fc:	a5 91       	lpm	r26, Z+
     9fe:	73 fe       	sbrs	r7, 3
     a00:	a1 91       	ld	r26, Z+
     a02:	8f 01       	movw	r16, r30
     a04:	7a 2f       	mov	r23, r26
     a06:	9f 01       	movw	r18, r30
     a08:	a1 11       	cpse	r26, r1
     a0a:	03 c0       	rjmp	.+6      	; 0xa12 <conv_brk+0x4e>
     a0c:	80 e0       	ldi	r24, 0x00	; 0
     a0e:	90 e0       	ldi	r25, 0x00	; 0
     a10:	7d c0       	rjmp	.+250    	; 0xb0c <conv_brk+0x148>
     a12:	ae 35       	cpi	r26, 0x5E	; 94
     a14:	19 f4       	brne	.+6      	; 0xa1c <conv_brk+0x58>
     a16:	41 15       	cp	r20, r1
     a18:	51 05       	cpc	r21, r1
     a1a:	59 f1       	breq	.+86     	; 0xa72 <conv_brk+0xae>
     a1c:	e9 2d       	mov	r30, r9
     a1e:	f0 e0       	ldi	r31, 0x00	; 0
     a20:	e4 17       	cp	r30, r20
     a22:	f5 07       	cpc	r31, r21
     a24:	3c f4       	brge	.+14     	; 0xa34 <conv_brk+0x70>
     a26:	ad 35       	cpi	r26, 0x5D	; 93
     a28:	69 f1       	breq	.+90     	; 0xa84 <conv_brk+0xc0>
     a2a:	ad 32       	cpi	r26, 0x2D	; 45
     a2c:	19 f4       	brne	.+6      	; 0xa34 <conv_brk+0x70>
     a2e:	bb 23       	and	r27, r27
     a30:	19 f1       	breq	.+70     	; 0xa78 <conv_brk+0xb4>
     a32:	03 c0       	rjmp	.+6      	; 0xa3a <conv_brk+0x76>
     a34:	b1 11       	cpse	r27, r1
     a36:	01 c0       	rjmp	.+2      	; 0xa3a <conv_brk+0x76>
     a38:	8a 2e       	mov	r8, r26
     a3a:	e7 2f       	mov	r30, r23
     a3c:	e6 95       	lsr	r30
     a3e:	e6 95       	lsr	r30
     a40:	e6 95       	lsr	r30
     a42:	86 01       	movw	r16, r12
     a44:	0e 0f       	add	r16, r30
     a46:	11 1d       	adc	r17, r1
     a48:	f8 01       	movw	r30, r16
     a4a:	a7 2f       	mov	r26, r23
     a4c:	a7 70       	andi	r26, 0x07	; 7
     a4e:	8c 01       	movw	r16, r24
     a50:	02 c0       	rjmp	.+4      	; 0xa56 <conv_brk+0x92>
     a52:	00 0f       	add	r16, r16
     a54:	11 1f       	adc	r17, r17
     a56:	aa 95       	dec	r26
     a58:	e2 f7       	brpl	.-8      	; 0xa52 <conv_brk+0x8e>
     a5a:	d8 01       	movw	r26, r16
     a5c:	b0 81       	ld	r27, Z
     a5e:	ba 2b       	or	r27, r26
     a60:	b0 83       	st	Z, r27
     a62:	78 15       	cp	r23, r8
     a64:	59 f0       	breq	.+22     	; 0xa7c <conv_brk+0xb8>
     a66:	78 15       	cp	r23, r8
     a68:	10 f4       	brcc	.+4      	; 0xa6e <conv_brk+0xaa>
     a6a:	7f 5f       	subi	r23, 0xFF	; 255
     a6c:	e6 cf       	rjmp	.-52     	; 0xa3a <conv_brk+0x76>
     a6e:	71 50       	subi	r23, 0x01	; 1
     a70:	e4 cf       	rjmp	.-56     	; 0xa3a <conv_brk+0x76>
     a72:	99 24       	eor	r9, r9
     a74:	93 94       	inc	r9
     a76:	03 c0       	rjmp	.+6      	; 0xa7e <conv_brk+0xba>
     a78:	b1 e0       	ldi	r27, 0x01	; 1
     a7a:	01 c0       	rjmp	.+2      	; 0xa7e <conv_brk+0xba>
     a7c:	b0 e0       	ldi	r27, 0x00	; 0
     a7e:	4f 5f       	subi	r20, 0xFF	; 255
     a80:	5f 4f       	sbci	r21, 0xFF	; 255
     a82:	ba cf       	rjmp	.-140    	; 0x9f8 <conv_brk+0x34>
     a84:	bb 23       	and	r27, r27
     a86:	19 f0       	breq	.+6      	; 0xa8e <conv_brk+0xca>
     a88:	8e 81       	ldd	r24, Y+6	; 0x06
     a8a:	80 62       	ori	r24, 0x20	; 32
     a8c:	8e 83       	std	Y+6, r24	; 0x06
     a8e:	91 10       	cpse	r9, r1
     a90:	03 c0       	rjmp	.+6      	; 0xa98 <conv_brk+0xd4>
     a92:	99 24       	eor	r9, r9
     a94:	93 94       	inc	r9
     a96:	15 c0       	rjmp	.+42     	; 0xac2 <conv_brk+0xfe>
     a98:	f6 01       	movw	r30, r12
     a9a:	ce 01       	movw	r24, r28
     a9c:	81 96       	adiw	r24, 0x21	; 33
     a9e:	20 81       	ld	r18, Z
     aa0:	20 95       	com	r18
     aa2:	21 93       	st	Z+, r18
     aa4:	e8 17       	cp	r30, r24
     aa6:	f9 07       	cpc	r31, r25
     aa8:	d1 f7       	brne	.-12     	; 0xa9e <conv_brk+0xda>
     aaa:	f3 cf       	rjmp	.-26     	; 0xa92 <conv_brk+0xce>
     aac:	e1 14       	cp	r14, r1
     aae:	f1 04       	cpc	r15, r1
     ab0:	29 f0       	breq	.+10     	; 0xabc <conv_brk+0xf8>
     ab2:	d7 01       	movw	r26, r14
     ab4:	8c 93       	st	X, r24
     ab6:	f7 01       	movw	r30, r14
     ab8:	31 96       	adiw	r30, 0x01	; 1
     aba:	7f 01       	movw	r14, r30
     abc:	61 50       	subi	r22, 0x01	; 1
     abe:	01 f1       	breq	.+64     	; 0xb00 <conv_brk+0x13c>
     ac0:	91 2c       	mov	r9, r1
     ac2:	c5 01       	movw	r24, r10
     ac4:	69 a3       	std	Y+33, r22	; 0x21
     ac6:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <fgetc>
     aca:	69 a1       	ldd	r22, Y+33	; 0x21
     acc:	97 fd       	sbrc	r25, 7
     ace:	16 c0       	rjmp	.+44     	; 0xafc <conv_brk+0x138>
     ad0:	28 2f       	mov	r18, r24
     ad2:	26 95       	lsr	r18
     ad4:	26 95       	lsr	r18
     ad6:	26 95       	lsr	r18
     ad8:	f6 01       	movw	r30, r12
     ada:	e2 0f       	add	r30, r18
     adc:	f1 1d       	adc	r31, r1
     ade:	20 81       	ld	r18, Z
     ae0:	30 e0       	ldi	r19, 0x00	; 0
     ae2:	ac 01       	movw	r20, r24
     ae4:	47 70       	andi	r20, 0x07	; 7
     ae6:	55 27       	eor	r21, r21
     ae8:	02 c0       	rjmp	.+4      	; 0xaee <conv_brk+0x12a>
     aea:	35 95       	asr	r19
     aec:	27 95       	ror	r18
     aee:	4a 95       	dec	r20
     af0:	e2 f7       	brpl	.-8      	; 0xaea <conv_brk+0x126>
     af2:	20 fd       	sbrc	r18, 0
     af4:	db cf       	rjmp	.-74     	; 0xaac <conv_brk+0xe8>
     af6:	b5 01       	movw	r22, r10
     af8:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <ungetc>
     afc:	91 10       	cpse	r9, r1
     afe:	86 cf       	rjmp	.-244    	; 0xa0c <conv_brk+0x48>
     b00:	e1 14       	cp	r14, r1
     b02:	f1 04       	cpc	r15, r1
     b04:	11 f0       	breq	.+4      	; 0xb0a <conv_brk+0x146>
     b06:	d7 01       	movw	r26, r14
     b08:	1c 92       	st	X, r1
     b0a:	c8 01       	movw	r24, r16
     b0c:	a1 96       	adiw	r28, 0x21	; 33
     b0e:	ed e0       	ldi	r30, 0x0D	; 13
     b10:	0c 94 27 08 	jmp	0x104e	; 0x104e <__epilogue_restores__+0xa>

00000b14 <vfscanf>:
     b14:	4f 92       	push	r4
     b16:	5f 92       	push	r5
     b18:	7f 92       	push	r7
     b1a:	8f 92       	push	r8
     b1c:	9f 92       	push	r9
     b1e:	af 92       	push	r10
     b20:	bf 92       	push	r11
     b22:	cf 92       	push	r12
     b24:	df 92       	push	r13
     b26:	ef 92       	push	r14
     b28:	ff 92       	push	r15
     b2a:	0f 93       	push	r16
     b2c:	1f 93       	push	r17
     b2e:	cf 93       	push	r28
     b30:	df 93       	push	r29
     b32:	1f 92       	push	r1
     b34:	cd b7       	in	r28, 0x3d	; 61
     b36:	de b7       	in	r29, 0x3e	; 62
     b38:	8c 01       	movw	r16, r24
     b3a:	2b 01       	movw	r4, r22
     b3c:	7a 01       	movw	r14, r20
     b3e:	fc 01       	movw	r30, r24
     b40:	17 82       	std	Z+7, r1	; 0x07
     b42:	16 82       	std	Z+6, r1	; 0x06
     b44:	a1 2c       	mov	r10, r1
     b46:	f8 01       	movw	r30, r16
     b48:	d3 80       	ldd	r13, Z+3	; 0x03
     b4a:	f2 01       	movw	r30, r4
     b4c:	d3 fc       	sbrc	r13, 3
     b4e:	85 91       	lpm	r24, Z+
     b50:	d3 fe       	sbrs	r13, 3
     b52:	81 91       	ld	r24, Z+
     b54:	38 2f       	mov	r19, r24
     b56:	2f 01       	movw	r4, r30
     b58:	88 23       	and	r24, r24
     b5a:	09 f4       	brne	.+2      	; 0xb5e <vfscanf+0x4a>
     b5c:	fc c0       	rjmp	.+504    	; 0xd56 <vfscanf+0x242>
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	39 83       	std	Y+1, r19	; 0x01
     b62:	0e 94 c1 06 	call	0xd82	; 0xd82 <isspace>
     b66:	39 81       	ldd	r19, Y+1	; 0x01
     b68:	89 2b       	or	r24, r25
     b6a:	21 f0       	breq	.+8      	; 0xb74 <vfscanf+0x60>
     b6c:	c8 01       	movw	r24, r16
     b6e:	0e 94 38 04 	call	0x870	; 0x870 <skip_spaces>
     b72:	e9 cf       	rjmp	.-46     	; 0xb46 <vfscanf+0x32>
     b74:	35 32       	cpi	r19, 0x25	; 37
     b76:	41 f4       	brne	.+16     	; 0xb88 <vfscanf+0x74>
     b78:	f2 01       	movw	r30, r4
     b7a:	d3 fc       	sbrc	r13, 3
     b7c:	35 91       	lpm	r19, Z+
     b7e:	d3 fe       	sbrs	r13, 3
     b80:	31 91       	ld	r19, Z+
     b82:	2f 01       	movw	r4, r30
     b84:	35 32       	cpi	r19, 0x25	; 37
     b86:	69 f4       	brne	.+26     	; 0xba2 <vfscanf+0x8e>
     b88:	c8 01       	movw	r24, r16
     b8a:	39 83       	std	Y+1, r19	; 0x01
     b8c:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <fgetc>
     b90:	39 81       	ldd	r19, Y+1	; 0x01
     b92:	97 fd       	sbrc	r25, 7
     b94:	de c0       	rjmp	.+444    	; 0xd52 <vfscanf+0x23e>
     b96:	38 17       	cp	r19, r24
     b98:	b1 f2       	breq	.-84     	; 0xb46 <vfscanf+0x32>
     b9a:	b8 01       	movw	r22, r16
     b9c:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <ungetc>
     ba0:	da c0       	rjmp	.+436    	; 0xd56 <vfscanf+0x242>
     ba2:	3a 32       	cpi	r19, 0x2A	; 42
     ba4:	41 f4       	brne	.+16     	; 0xbb6 <vfscanf+0xa2>
     ba6:	d3 fc       	sbrc	r13, 3
     ba8:	35 91       	lpm	r19, Z+
     baa:	d3 fe       	sbrs	r13, 3
     bac:	31 91       	ld	r19, Z+
     bae:	2f 01       	movw	r4, r30
     bb0:	bb 24       	eor	r11, r11
     bb2:	b3 94       	inc	r11
     bb4:	01 c0       	rjmp	.+2      	; 0xbb8 <vfscanf+0xa4>
     bb6:	b1 2c       	mov	r11, r1
     bb8:	71 2c       	mov	r7, r1
     bba:	20 ed       	ldi	r18, 0xD0	; 208
     bbc:	23 0f       	add	r18, r19
     bbe:	2a 30       	cpi	r18, 0x0A	; 10
     bc0:	90 f4       	brcc	.+36     	; 0xbe6 <vfscanf+0xd2>
     bc2:	fb 2d       	mov	r31, r11
     bc4:	f2 60       	ori	r31, 0x02	; 2
     bc6:	bf 2e       	mov	r11, r31
     bc8:	67 2d       	mov	r22, r7
     bca:	70 e0       	ldi	r23, 0x00	; 0
     bcc:	80 e0       	ldi	r24, 0x00	; 0
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	40 e2       	ldi	r20, 0x20	; 32
     bd2:	0e 94 18 04 	call	0x830	; 0x830 <mulacc>
     bd6:	76 2e       	mov	r7, r22
     bd8:	f2 01       	movw	r30, r4
     bda:	d3 fc       	sbrc	r13, 3
     bdc:	35 91       	lpm	r19, Z+
     bde:	d3 fe       	sbrs	r13, 3
     be0:	31 91       	ld	r19, Z+
     be2:	2f 01       	movw	r4, r30
     be4:	ea cf       	rjmp	.-44     	; 0xbba <vfscanf+0xa6>
     be6:	b1 fe       	sbrs	r11, 1
     be8:	03 c0       	rjmp	.+6      	; 0xbf0 <vfscanf+0xdc>
     bea:	71 10       	cpse	r7, r1
     bec:	03 c0       	rjmp	.+6      	; 0xbf4 <vfscanf+0xe0>
     bee:	b3 c0       	rjmp	.+358    	; 0xd56 <vfscanf+0x242>
     bf0:	77 24       	eor	r7, r7
     bf2:	7a 94       	dec	r7
     bf4:	38 36       	cpi	r19, 0x68	; 104
     bf6:	19 f0       	breq	.+6      	; 0xbfe <vfscanf+0xea>
     bf8:	3c 36       	cpi	r19, 0x6C	; 108
     bfa:	61 f0       	breq	.+24     	; 0xc14 <vfscanf+0x100>
     bfc:	14 c0       	rjmp	.+40     	; 0xc26 <vfscanf+0x112>
     bfe:	f2 01       	movw	r30, r4
     c00:	d3 fc       	sbrc	r13, 3
     c02:	35 91       	lpm	r19, Z+
     c04:	d3 fe       	sbrs	r13, 3
     c06:	31 91       	ld	r19, Z+
     c08:	2f 01       	movw	r4, r30
     c0a:	38 36       	cpi	r19, 0x68	; 104
     c0c:	61 f4       	brne	.+24     	; 0xc26 <vfscanf+0x112>
     c0e:	fb 2d       	mov	r31, r11
     c10:	f8 60       	ori	r31, 0x08	; 8
     c12:	bf 2e       	mov	r11, r31
     c14:	8b 2d       	mov	r24, r11
     c16:	84 60       	ori	r24, 0x04	; 4
     c18:	b8 2e       	mov	r11, r24
     c1a:	f2 01       	movw	r30, r4
     c1c:	d3 fc       	sbrc	r13, 3
     c1e:	35 91       	lpm	r19, Z+
     c20:	d3 fe       	sbrs	r13, 3
     c22:	31 91       	ld	r19, Z+
     c24:	2f 01       	movw	r4, r30
     c26:	33 23       	and	r19, r19
     c28:	09 f4       	brne	.+2      	; 0xc2c <vfscanf+0x118>
     c2a:	95 c0       	rjmp	.+298    	; 0xd56 <vfscanf+0x242>
     c2c:	63 2f       	mov	r22, r19
     c2e:	70 e0       	ldi	r23, 0x00	; 0
     c30:	80 e7       	ldi	r24, 0x70	; 112
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	39 83       	std	Y+1, r19	; 0x01
     c36:	0e 94 c9 06 	call	0xd92	; 0xd92 <strchr_P>
     c3a:	39 81       	ldd	r19, Y+1	; 0x01
     c3c:	89 2b       	or	r24, r25
     c3e:	09 f4       	brne	.+2      	; 0xc42 <vfscanf+0x12e>
     c40:	8a c0       	rjmp	.+276    	; 0xd56 <vfscanf+0x242>
     c42:	b0 fc       	sbrc	r11, 0
     c44:	07 c0       	rjmp	.+14     	; 0xc54 <vfscanf+0x140>
     c46:	f7 01       	movw	r30, r14
     c48:	c0 80       	ld	r12, Z
     c4a:	d1 80       	ldd	r13, Z+1	; 0x01
     c4c:	c7 01       	movw	r24, r14
     c4e:	02 96       	adiw	r24, 0x02	; 2
     c50:	7c 01       	movw	r14, r24
     c52:	02 c0       	rjmp	.+4      	; 0xc58 <vfscanf+0x144>
     c54:	c1 2c       	mov	r12, r1
     c56:	d1 2c       	mov	r13, r1
     c58:	3e 36       	cpi	r19, 0x6E	; 110
     c5a:	51 f4       	brne	.+20     	; 0xc70 <vfscanf+0x15c>
     c5c:	f8 01       	movw	r30, r16
     c5e:	46 81       	ldd	r20, Z+6	; 0x06
     c60:	57 81       	ldd	r21, Z+7	; 0x07
     c62:	60 e0       	ldi	r22, 0x00	; 0
     c64:	70 e0       	ldi	r23, 0x00	; 0
     c66:	2b 2d       	mov	r18, r11
     c68:	c6 01       	movw	r24, r12
     c6a:	0e 94 0c 04 	call	0x818	; 0x818 <putval>
     c6e:	6b cf       	rjmp	.-298    	; 0xb46 <vfscanf+0x32>
     c70:	33 36       	cpi	r19, 0x63	; 99
     c72:	a1 f4       	brne	.+40     	; 0xc9c <vfscanf+0x188>
     c74:	b1 fc       	sbrc	r11, 1
     c76:	02 c0       	rjmp	.+4      	; 0xc7c <vfscanf+0x168>
     c78:	77 24       	eor	r7, r7
     c7a:	73 94       	inc	r7
     c7c:	c8 01       	movw	r24, r16
     c7e:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <fgetc>
     c82:	97 fd       	sbrc	r25, 7
     c84:	66 c0       	rjmp	.+204    	; 0xd52 <vfscanf+0x23e>
     c86:	c1 14       	cp	r12, r1
     c88:	d1 04       	cpc	r13, r1
     c8a:	29 f0       	breq	.+10     	; 0xc96 <vfscanf+0x182>
     c8c:	f6 01       	movw	r30, r12
     c8e:	80 83       	st	Z, r24
     c90:	c6 01       	movw	r24, r12
     c92:	01 96       	adiw	r24, 0x01	; 1
     c94:	6c 01       	movw	r12, r24
     c96:	7a 94       	dec	r7
     c98:	89 f7       	brne	.-30     	; 0xc7c <vfscanf+0x168>
     c9a:	57 c0       	rjmp	.+174    	; 0xd4a <vfscanf+0x236>
     c9c:	3b 35       	cpi	r19, 0x5B	; 91
     c9e:	59 f4       	brne	.+22     	; 0xcb6 <vfscanf+0x1a2>
     ca0:	92 01       	movw	r18, r4
     ca2:	a6 01       	movw	r20, r12
     ca4:	67 2d       	mov	r22, r7
     ca6:	c8 01       	movw	r24, r16
     ca8:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <conv_brk>
     cac:	2c 01       	movw	r4, r24
     cae:	00 97       	sbiw	r24, 0x00	; 0
     cb0:	09 f0       	breq	.+2      	; 0xcb4 <vfscanf+0x1a0>
     cb2:	4b c0       	rjmp	.+150    	; 0xd4a <vfscanf+0x236>
     cb4:	45 c0       	rjmp	.+138    	; 0xd40 <vfscanf+0x22c>
     cb6:	c8 01       	movw	r24, r16
     cb8:	39 83       	std	Y+1, r19	; 0x01
     cba:	0e 94 38 04 	call	0x870	; 0x870 <skip_spaces>
     cbe:	39 81       	ldd	r19, Y+1	; 0x01
     cc0:	97 fd       	sbrc	r25, 7
     cc2:	47 c0       	rjmp	.+142    	; 0xd52 <vfscanf+0x23e>
     cc4:	3f 36       	cpi	r19, 0x6F	; 111
     cc6:	69 f1       	breq	.+90     	; 0xd22 <vfscanf+0x20e>
     cc8:	28 f4       	brcc	.+10     	; 0xcd4 <vfscanf+0x1c0>
     cca:	34 36       	cpi	r19, 0x64	; 100
     ccc:	31 f1       	breq	.+76     	; 0xd1a <vfscanf+0x206>
     cce:	39 36       	cpi	r19, 0x69	; 105
     cd0:	79 f1       	breq	.+94     	; 0xd30 <vfscanf+0x21c>
     cd2:	2b c0       	rjmp	.+86     	; 0xd2a <vfscanf+0x216>
     cd4:	33 37       	cpi	r19, 0x73	; 115
     cd6:	69 f0       	breq	.+26     	; 0xcf2 <vfscanf+0x1de>
     cd8:	35 37       	cpi	r19, 0x75	; 117
     cda:	f9 f0       	breq	.+62     	; 0xd1a <vfscanf+0x206>
     cdc:	26 c0       	rjmp	.+76     	; 0xd2a <vfscanf+0x216>
     cde:	c1 14       	cp	r12, r1
     ce0:	d1 04       	cpc	r13, r1
     ce2:	29 f0       	breq	.+10     	; 0xcee <vfscanf+0x1da>
     ce4:	f6 01       	movw	r30, r12
     ce6:	80 82       	st	Z, r8
     ce8:	c6 01       	movw	r24, r12
     cea:	01 96       	adiw	r24, 0x01	; 1
     cec:	6c 01       	movw	r12, r24
     cee:	7a 94       	dec	r7
     cf0:	71 f0       	breq	.+28     	; 0xd0e <vfscanf+0x1fa>
     cf2:	c8 01       	movw	r24, r16
     cf4:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <fgetc>
     cf8:	4c 01       	movw	r8, r24
     cfa:	97 fd       	sbrc	r25, 7
     cfc:	08 c0       	rjmp	.+16     	; 0xd0e <vfscanf+0x1fa>
     cfe:	0e 94 c1 06 	call	0xd82	; 0xd82 <isspace>
     d02:	89 2b       	or	r24, r25
     d04:	61 f3       	breq	.-40     	; 0xcde <vfscanf+0x1ca>
     d06:	b8 01       	movw	r22, r16
     d08:	c4 01       	movw	r24, r8
     d0a:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <ungetc>
     d0e:	c1 14       	cp	r12, r1
     d10:	d1 04       	cpc	r13, r1
     d12:	d9 f0       	breq	.+54     	; 0xd4a <vfscanf+0x236>
     d14:	f6 01       	movw	r30, r12
     d16:	10 82       	st	Z, r1
     d18:	18 c0       	rjmp	.+48     	; 0xd4a <vfscanf+0x236>
     d1a:	fb 2d       	mov	r31, r11
     d1c:	f0 62       	ori	r31, 0x20	; 32
     d1e:	bf 2e       	mov	r11, r31
     d20:	07 c0       	rjmp	.+14     	; 0xd30 <vfscanf+0x21c>
     d22:	8b 2d       	mov	r24, r11
     d24:	80 61       	ori	r24, 0x10	; 16
     d26:	b8 2e       	mov	r11, r24
     d28:	03 c0       	rjmp	.+6      	; 0xd30 <vfscanf+0x21c>
     d2a:	9b 2d       	mov	r25, r11
     d2c:	90 64       	ori	r25, 0x40	; 64
     d2e:	b9 2e       	mov	r11, r25
     d30:	2b 2d       	mov	r18, r11
     d32:	a6 01       	movw	r20, r12
     d34:	67 2d       	mov	r22, r7
     d36:	c8 01       	movw	r24, r16
     d38:	0e 94 51 04 	call	0x8a2	; 0x8a2 <conv_int>
     d3c:	81 11       	cpse	r24, r1
     d3e:	05 c0       	rjmp	.+10     	; 0xd4a <vfscanf+0x236>
     d40:	f8 01       	movw	r30, r16
     d42:	83 81       	ldd	r24, Z+3	; 0x03
     d44:	80 73       	andi	r24, 0x30	; 48
     d46:	29 f4       	brne	.+10     	; 0xd52 <vfscanf+0x23e>
     d48:	06 c0       	rjmp	.+12     	; 0xd56 <vfscanf+0x242>
     d4a:	b0 fc       	sbrc	r11, 0
     d4c:	fc ce       	rjmp	.-520    	; 0xb46 <vfscanf+0x32>
     d4e:	a3 94       	inc	r10
     d50:	fa ce       	rjmp	.-524    	; 0xb46 <vfscanf+0x32>
     d52:	aa 20       	and	r10, r10
     d54:	19 f0       	breq	.+6      	; 0xd5c <vfscanf+0x248>
     d56:	8a 2d       	mov	r24, r10
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	02 c0       	rjmp	.+4      	; 0xd60 <vfscanf+0x24c>
     d5c:	8f ef       	ldi	r24, 0xFF	; 255
     d5e:	9f ef       	ldi	r25, 0xFF	; 255
     d60:	0f 90       	pop	r0
     d62:	df 91       	pop	r29
     d64:	cf 91       	pop	r28
     d66:	1f 91       	pop	r17
     d68:	0f 91       	pop	r16
     d6a:	ff 90       	pop	r15
     d6c:	ef 90       	pop	r14
     d6e:	df 90       	pop	r13
     d70:	cf 90       	pop	r12
     d72:	bf 90       	pop	r11
     d74:	af 90       	pop	r10
     d76:	9f 90       	pop	r9
     d78:	8f 90       	pop	r8
     d7a:	7f 90       	pop	r7
     d7c:	5f 90       	pop	r5
     d7e:	4f 90       	pop	r4
     d80:	08 95       	ret

00000d82 <isspace>:
     d82:	91 11       	cpse	r25, r1
     d84:	0e c1       	rjmp	.+540    	; 0xfa2 <__ctype_isfalse>
     d86:	80 32       	cpi	r24, 0x20	; 32
     d88:	19 f0       	breq	.+6      	; 0xd90 <isspace+0xe>
     d8a:	89 50       	subi	r24, 0x09	; 9
     d8c:	85 50       	subi	r24, 0x05	; 5
     d8e:	d0 f7       	brcc	.-12     	; 0xd84 <isspace+0x2>
     d90:	08 95       	ret

00000d92 <strchr_P>:
     d92:	fc 01       	movw	r30, r24
     d94:	05 90       	lpm	r0, Z+
     d96:	06 16       	cp	r0, r22
     d98:	21 f0       	breq	.+8      	; 0xda2 <strchr_P+0x10>
     d9a:	00 20       	and	r0, r0
     d9c:	d9 f7       	brne	.-10     	; 0xd94 <strchr_P+0x2>
     d9e:	c0 01       	movw	r24, r0
     da0:	08 95       	ret
     da2:	31 97       	sbiw	r30, 0x01	; 1
     da4:	cf 01       	movw	r24, r30
     da6:	08 95       	ret

00000da8 <strnlen_P>:
     da8:	fc 01       	movw	r30, r24
     daa:	05 90       	lpm	r0, Z+
     dac:	61 50       	subi	r22, 0x01	; 1
     dae:	70 40       	sbci	r23, 0x00	; 0
     db0:	01 10       	cpse	r0, r1
     db2:	d8 f7       	brcc	.-10     	; 0xdaa <strnlen_P+0x2>
     db4:	80 95       	com	r24
     db6:	90 95       	com	r25
     db8:	8e 0f       	add	r24, r30
     dba:	9f 1f       	adc	r25, r31
     dbc:	08 95       	ret

00000dbe <strnlen>:
     dbe:	fc 01       	movw	r30, r24
     dc0:	61 50       	subi	r22, 0x01	; 1
     dc2:	70 40       	sbci	r23, 0x00	; 0
     dc4:	01 90       	ld	r0, Z+
     dc6:	01 10       	cpse	r0, r1
     dc8:	d8 f7       	brcc	.-10     	; 0xdc0 <strnlen+0x2>
     dca:	80 95       	com	r24
     dcc:	90 95       	com	r25
     dce:	8e 0f       	add	r24, r30
     dd0:	9f 1f       	adc	r25, r31
     dd2:	08 95       	ret

00000dd4 <fgetc>:
     dd4:	cf 93       	push	r28
     dd6:	df 93       	push	r29
     dd8:	ec 01       	movw	r28, r24
     dda:	2b 81       	ldd	r18, Y+3	; 0x03
     ddc:	20 ff       	sbrs	r18, 0
     dde:	33 c0       	rjmp	.+102    	; 0xe46 <fgetc+0x72>
     de0:	26 ff       	sbrs	r18, 6
     de2:	0a c0       	rjmp	.+20     	; 0xdf8 <fgetc+0x24>
     de4:	2f 7b       	andi	r18, 0xBF	; 191
     de6:	2b 83       	std	Y+3, r18	; 0x03
     de8:	8e 81       	ldd	r24, Y+6	; 0x06
     dea:	9f 81       	ldd	r25, Y+7	; 0x07
     dec:	01 96       	adiw	r24, 0x01	; 1
     dee:	9f 83       	std	Y+7, r25	; 0x07
     df0:	8e 83       	std	Y+6, r24	; 0x06
     df2:	8a 81       	ldd	r24, Y+2	; 0x02
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	29 c0       	rjmp	.+82     	; 0xe4a <fgetc+0x76>
     df8:	22 ff       	sbrs	r18, 2
     dfa:	0f c0       	rjmp	.+30     	; 0xe1a <fgetc+0x46>
     dfc:	e8 81       	ld	r30, Y
     dfe:	f9 81       	ldd	r31, Y+1	; 0x01
     e00:	80 81       	ld	r24, Z
     e02:	99 27       	eor	r25, r25
     e04:	87 fd       	sbrc	r24, 7
     e06:	90 95       	com	r25
     e08:	00 97       	sbiw	r24, 0x00	; 0
     e0a:	19 f4       	brne	.+6      	; 0xe12 <fgetc+0x3e>
     e0c:	20 62       	ori	r18, 0x20	; 32
     e0e:	2b 83       	std	Y+3, r18	; 0x03
     e10:	1a c0       	rjmp	.+52     	; 0xe46 <fgetc+0x72>
     e12:	31 96       	adiw	r30, 0x01	; 1
     e14:	f9 83       	std	Y+1, r31	; 0x01
     e16:	e8 83       	st	Y, r30
     e18:	0e c0       	rjmp	.+28     	; 0xe36 <fgetc+0x62>
     e1a:	ea 85       	ldd	r30, Y+10	; 0x0a
     e1c:	fb 85       	ldd	r31, Y+11	; 0x0b
     e1e:	09 95       	icall
     e20:	97 ff       	sbrs	r25, 7
     e22:	09 c0       	rjmp	.+18     	; 0xe36 <fgetc+0x62>
     e24:	2b 81       	ldd	r18, Y+3	; 0x03
     e26:	01 96       	adiw	r24, 0x01	; 1
     e28:	11 f4       	brne	.+4      	; 0xe2e <fgetc+0x5a>
     e2a:	80 e1       	ldi	r24, 0x10	; 16
     e2c:	01 c0       	rjmp	.+2      	; 0xe30 <fgetc+0x5c>
     e2e:	80 e2       	ldi	r24, 0x20	; 32
     e30:	82 2b       	or	r24, r18
     e32:	8b 83       	std	Y+3, r24	; 0x03
     e34:	08 c0       	rjmp	.+16     	; 0xe46 <fgetc+0x72>
     e36:	2e 81       	ldd	r18, Y+6	; 0x06
     e38:	3f 81       	ldd	r19, Y+7	; 0x07
     e3a:	2f 5f       	subi	r18, 0xFF	; 255
     e3c:	3f 4f       	sbci	r19, 0xFF	; 255
     e3e:	3f 83       	std	Y+7, r19	; 0x07
     e40:	2e 83       	std	Y+6, r18	; 0x06
     e42:	99 27       	eor	r25, r25
     e44:	02 c0       	rjmp	.+4      	; 0xe4a <fgetc+0x76>
     e46:	8f ef       	ldi	r24, 0xFF	; 255
     e48:	9f ef       	ldi	r25, 0xFF	; 255
     e4a:	df 91       	pop	r29
     e4c:	cf 91       	pop	r28
     e4e:	08 95       	ret

00000e50 <fputc>:
     e50:	0f 93       	push	r16
     e52:	1f 93       	push	r17
     e54:	cf 93       	push	r28
     e56:	df 93       	push	r29
     e58:	18 2f       	mov	r17, r24
     e5a:	09 2f       	mov	r16, r25
     e5c:	eb 01       	movw	r28, r22
     e5e:	8b 81       	ldd	r24, Y+3	; 0x03
     e60:	81 fd       	sbrc	r24, 1
     e62:	03 c0       	rjmp	.+6      	; 0xe6a <fputc+0x1a>
     e64:	8f ef       	ldi	r24, 0xFF	; 255
     e66:	9f ef       	ldi	r25, 0xFF	; 255
     e68:	20 c0       	rjmp	.+64     	; 0xeaa <fputc+0x5a>
     e6a:	82 ff       	sbrs	r24, 2
     e6c:	10 c0       	rjmp	.+32     	; 0xe8e <fputc+0x3e>
     e6e:	4e 81       	ldd	r20, Y+6	; 0x06
     e70:	5f 81       	ldd	r21, Y+7	; 0x07
     e72:	2c 81       	ldd	r18, Y+4	; 0x04
     e74:	3d 81       	ldd	r19, Y+5	; 0x05
     e76:	42 17       	cp	r20, r18
     e78:	53 07       	cpc	r21, r19
     e7a:	7c f4       	brge	.+30     	; 0xe9a <fputc+0x4a>
     e7c:	e8 81       	ld	r30, Y
     e7e:	f9 81       	ldd	r31, Y+1	; 0x01
     e80:	9f 01       	movw	r18, r30
     e82:	2f 5f       	subi	r18, 0xFF	; 255
     e84:	3f 4f       	sbci	r19, 0xFF	; 255
     e86:	39 83       	std	Y+1, r19	; 0x01
     e88:	28 83       	st	Y, r18
     e8a:	10 83       	st	Z, r17
     e8c:	06 c0       	rjmp	.+12     	; 0xe9a <fputc+0x4a>
     e8e:	e8 85       	ldd	r30, Y+8	; 0x08
     e90:	f9 85       	ldd	r31, Y+9	; 0x09
     e92:	81 2f       	mov	r24, r17
     e94:	09 95       	icall
     e96:	89 2b       	or	r24, r25
     e98:	29 f7       	brne	.-54     	; 0xe64 <fputc+0x14>
     e9a:	2e 81       	ldd	r18, Y+6	; 0x06
     e9c:	3f 81       	ldd	r19, Y+7	; 0x07
     e9e:	2f 5f       	subi	r18, 0xFF	; 255
     ea0:	3f 4f       	sbci	r19, 0xFF	; 255
     ea2:	3f 83       	std	Y+7, r19	; 0x07
     ea4:	2e 83       	std	Y+6, r18	; 0x06
     ea6:	81 2f       	mov	r24, r17
     ea8:	90 2f       	mov	r25, r16
     eaa:	df 91       	pop	r29
     eac:	cf 91       	pop	r28
     eae:	1f 91       	pop	r17
     eb0:	0f 91       	pop	r16
     eb2:	08 95       	ret

00000eb4 <ungetc>:
     eb4:	fb 01       	movw	r30, r22
     eb6:	23 81       	ldd	r18, Z+3	; 0x03
     eb8:	20 ff       	sbrs	r18, 0
     eba:	12 c0       	rjmp	.+36     	; 0xee0 <ungetc+0x2c>
     ebc:	26 fd       	sbrc	r18, 6
     ebe:	10 c0       	rjmp	.+32     	; 0xee0 <ungetc+0x2c>
     ec0:	8f 3f       	cpi	r24, 0xFF	; 255
     ec2:	3f ef       	ldi	r19, 0xFF	; 255
     ec4:	93 07       	cpc	r25, r19
     ec6:	61 f0       	breq	.+24     	; 0xee0 <ungetc+0x2c>
     ec8:	82 83       	std	Z+2, r24	; 0x02
     eca:	2f 7d       	andi	r18, 0xDF	; 223
     ecc:	20 64       	ori	r18, 0x40	; 64
     ece:	23 83       	std	Z+3, r18	; 0x03
     ed0:	26 81       	ldd	r18, Z+6	; 0x06
     ed2:	37 81       	ldd	r19, Z+7	; 0x07
     ed4:	21 50       	subi	r18, 0x01	; 1
     ed6:	31 09       	sbc	r19, r1
     ed8:	37 83       	std	Z+7, r19	; 0x07
     eda:	26 83       	std	Z+6, r18	; 0x06
     edc:	99 27       	eor	r25, r25
     ede:	08 95       	ret
     ee0:	8f ef       	ldi	r24, 0xFF	; 255
     ee2:	9f ef       	ldi	r25, 0xFF	; 255
     ee4:	08 95       	ret

00000ee6 <__ultoa_invert>:
     ee6:	fa 01       	movw	r30, r20
     ee8:	aa 27       	eor	r26, r26
     eea:	28 30       	cpi	r18, 0x08	; 8
     eec:	51 f1       	breq	.+84     	; 0xf42 <__ultoa_invert+0x5c>
     eee:	20 31       	cpi	r18, 0x10	; 16
     ef0:	81 f1       	breq	.+96     	; 0xf52 <__ultoa_invert+0x6c>
     ef2:	e8 94       	clt
     ef4:	6f 93       	push	r22
     ef6:	6e 7f       	andi	r22, 0xFE	; 254
     ef8:	6e 5f       	subi	r22, 0xFE	; 254
     efa:	7f 4f       	sbci	r23, 0xFF	; 255
     efc:	8f 4f       	sbci	r24, 0xFF	; 255
     efe:	9f 4f       	sbci	r25, 0xFF	; 255
     f00:	af 4f       	sbci	r26, 0xFF	; 255
     f02:	b1 e0       	ldi	r27, 0x01	; 1
     f04:	3e d0       	rcall	.+124    	; 0xf82 <__ultoa_invert+0x9c>
     f06:	b4 e0       	ldi	r27, 0x04	; 4
     f08:	3c d0       	rcall	.+120    	; 0xf82 <__ultoa_invert+0x9c>
     f0a:	67 0f       	add	r22, r23
     f0c:	78 1f       	adc	r23, r24
     f0e:	89 1f       	adc	r24, r25
     f10:	9a 1f       	adc	r25, r26
     f12:	a1 1d       	adc	r26, r1
     f14:	68 0f       	add	r22, r24
     f16:	79 1f       	adc	r23, r25
     f18:	8a 1f       	adc	r24, r26
     f1a:	91 1d       	adc	r25, r1
     f1c:	a1 1d       	adc	r26, r1
     f1e:	6a 0f       	add	r22, r26
     f20:	71 1d       	adc	r23, r1
     f22:	81 1d       	adc	r24, r1
     f24:	91 1d       	adc	r25, r1
     f26:	a1 1d       	adc	r26, r1
     f28:	20 d0       	rcall	.+64     	; 0xf6a <__ultoa_invert+0x84>
     f2a:	09 f4       	brne	.+2      	; 0xf2e <__ultoa_invert+0x48>
     f2c:	68 94       	set
     f2e:	3f 91       	pop	r19
     f30:	2a e0       	ldi	r18, 0x0A	; 10
     f32:	26 9f       	mul	r18, r22
     f34:	11 24       	eor	r1, r1
     f36:	30 19       	sub	r19, r0
     f38:	30 5d       	subi	r19, 0xD0	; 208
     f3a:	31 93       	st	Z+, r19
     f3c:	de f6       	brtc	.-74     	; 0xef4 <__ultoa_invert+0xe>
     f3e:	cf 01       	movw	r24, r30
     f40:	08 95       	ret
     f42:	46 2f       	mov	r20, r22
     f44:	47 70       	andi	r20, 0x07	; 7
     f46:	40 5d       	subi	r20, 0xD0	; 208
     f48:	41 93       	st	Z+, r20
     f4a:	b3 e0       	ldi	r27, 0x03	; 3
     f4c:	0f d0       	rcall	.+30     	; 0xf6c <__ultoa_invert+0x86>
     f4e:	c9 f7       	brne	.-14     	; 0xf42 <__ultoa_invert+0x5c>
     f50:	f6 cf       	rjmp	.-20     	; 0xf3e <__ultoa_invert+0x58>
     f52:	46 2f       	mov	r20, r22
     f54:	4f 70       	andi	r20, 0x0F	; 15
     f56:	40 5d       	subi	r20, 0xD0	; 208
     f58:	4a 33       	cpi	r20, 0x3A	; 58
     f5a:	18 f0       	brcs	.+6      	; 0xf62 <__ultoa_invert+0x7c>
     f5c:	49 5d       	subi	r20, 0xD9	; 217
     f5e:	31 fd       	sbrc	r19, 1
     f60:	40 52       	subi	r20, 0x20	; 32
     f62:	41 93       	st	Z+, r20
     f64:	02 d0       	rcall	.+4      	; 0xf6a <__ultoa_invert+0x84>
     f66:	a9 f7       	brne	.-22     	; 0xf52 <__ultoa_invert+0x6c>
     f68:	ea cf       	rjmp	.-44     	; 0xf3e <__ultoa_invert+0x58>
     f6a:	b4 e0       	ldi	r27, 0x04	; 4
     f6c:	a6 95       	lsr	r26
     f6e:	97 95       	ror	r25
     f70:	87 95       	ror	r24
     f72:	77 95       	ror	r23
     f74:	67 95       	ror	r22
     f76:	ba 95       	dec	r27
     f78:	c9 f7       	brne	.-14     	; 0xf6c <__ultoa_invert+0x86>
     f7a:	00 97       	sbiw	r24, 0x00	; 0
     f7c:	61 05       	cpc	r22, r1
     f7e:	71 05       	cpc	r23, r1
     f80:	08 95       	ret
     f82:	9b 01       	movw	r18, r22
     f84:	ac 01       	movw	r20, r24
     f86:	0a 2e       	mov	r0, r26
     f88:	06 94       	lsr	r0
     f8a:	57 95       	ror	r21
     f8c:	47 95       	ror	r20
     f8e:	37 95       	ror	r19
     f90:	27 95       	ror	r18
     f92:	ba 95       	dec	r27
     f94:	c9 f7       	brne	.-14     	; 0xf88 <__ultoa_invert+0xa2>
     f96:	62 0f       	add	r22, r18
     f98:	73 1f       	adc	r23, r19
     f9a:	84 1f       	adc	r24, r20
     f9c:	95 1f       	adc	r25, r21
     f9e:	a0 1d       	adc	r26, r0
     fa0:	08 95       	ret

00000fa2 <__ctype_isfalse>:
     fa2:	99 27       	eor	r25, r25
     fa4:	88 27       	eor	r24, r24

00000fa6 <__ctype_istrue>:
     fa6:	08 95       	ret

00000fa8 <__divmodsi4>:
     fa8:	05 2e       	mov	r0, r21
     faa:	97 fb       	bst	r25, 7
     fac:	1e f4       	brtc	.+6      	; 0xfb4 <__divmodsi4+0xc>
     fae:	00 94       	com	r0
     fb0:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <__negsi2>
     fb4:	57 fd       	sbrc	r21, 7
     fb6:	07 d0       	rcall	.+14     	; 0xfc6 <__divmodsi4_neg2>
     fb8:	0e 94 3d 08 	call	0x107a	; 0x107a <__udivmodsi4>
     fbc:	07 fc       	sbrc	r0, 7
     fbe:	03 d0       	rcall	.+6      	; 0xfc6 <__divmodsi4_neg2>
     fc0:	4e f4       	brtc	.+18     	; 0xfd4 <__divmodsi4_exit>
     fc2:	0c 94 eb 07 	jmp	0xfd6	; 0xfd6 <__negsi2>

00000fc6 <__divmodsi4_neg2>:
     fc6:	50 95       	com	r21
     fc8:	40 95       	com	r20
     fca:	30 95       	com	r19
     fcc:	21 95       	neg	r18
     fce:	3f 4f       	sbci	r19, 0xFF	; 255
     fd0:	4f 4f       	sbci	r20, 0xFF	; 255
     fd2:	5f 4f       	sbci	r21, 0xFF	; 255

00000fd4 <__divmodsi4_exit>:
     fd4:	08 95       	ret

00000fd6 <__negsi2>:
     fd6:	90 95       	com	r25
     fd8:	80 95       	com	r24
     fda:	70 95       	com	r23
     fdc:	61 95       	neg	r22
     fde:	7f 4f       	sbci	r23, 0xFF	; 255
     fe0:	8f 4f       	sbci	r24, 0xFF	; 255
     fe2:	9f 4f       	sbci	r25, 0xFF	; 255
     fe4:	08 95       	ret

00000fe6 <__muluhisi3>:
     fe6:	0e 94 5f 08 	call	0x10be	; 0x10be <__umulhisi3>
     fea:	a5 9f       	mul	r26, r21
     fec:	90 0d       	add	r25, r0
     fee:	b4 9f       	mul	r27, r20
     ff0:	90 0d       	add	r25, r0
     ff2:	a4 9f       	mul	r26, r20
     ff4:	80 0d       	add	r24, r0
     ff6:	91 1d       	adc	r25, r1
     ff8:	11 24       	eor	r1, r1
     ffa:	08 95       	ret

00000ffc <__mulshisi3>:
     ffc:	b7 ff       	sbrs	r27, 7
     ffe:	0c 94 f3 07 	jmp	0xfe6	; 0xfe6 <__muluhisi3>

00001002 <__mulohisi3>:
    1002:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <__muluhisi3>
    1006:	82 1b       	sub	r24, r18
    1008:	93 0b       	sbc	r25, r19
    100a:	08 95       	ret

0000100c <__prologue_saves__>:
    100c:	2f 92       	push	r2
    100e:	3f 92       	push	r3
    1010:	4f 92       	push	r4
    1012:	5f 92       	push	r5
    1014:	6f 92       	push	r6
    1016:	7f 92       	push	r7
    1018:	8f 92       	push	r8
    101a:	9f 92       	push	r9
    101c:	af 92       	push	r10
    101e:	bf 92       	push	r11
    1020:	cf 92       	push	r12
    1022:	df 92       	push	r13
    1024:	ef 92       	push	r14
    1026:	ff 92       	push	r15
    1028:	0f 93       	push	r16
    102a:	1f 93       	push	r17
    102c:	cf 93       	push	r28
    102e:	df 93       	push	r29
    1030:	cd b7       	in	r28, 0x3d	; 61
    1032:	de b7       	in	r29, 0x3e	; 62
    1034:	ca 1b       	sub	r28, r26
    1036:	db 0b       	sbc	r29, r27
    1038:	0f b6       	in	r0, 0x3f	; 63
    103a:	f8 94       	cli
    103c:	de bf       	out	0x3e, r29	; 62
    103e:	0f be       	out	0x3f, r0	; 63
    1040:	cd bf       	out	0x3d, r28	; 61
    1042:	09 94       	ijmp

00001044 <__epilogue_restores__>:
    1044:	2a 88       	ldd	r2, Y+18	; 0x12
    1046:	39 88       	ldd	r3, Y+17	; 0x11
    1048:	48 88       	ldd	r4, Y+16	; 0x10
    104a:	5f 84       	ldd	r5, Y+15	; 0x0f
    104c:	6e 84       	ldd	r6, Y+14	; 0x0e
    104e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1050:	8c 84       	ldd	r8, Y+12	; 0x0c
    1052:	9b 84       	ldd	r9, Y+11	; 0x0b
    1054:	aa 84       	ldd	r10, Y+10	; 0x0a
    1056:	b9 84       	ldd	r11, Y+9	; 0x09
    1058:	c8 84       	ldd	r12, Y+8	; 0x08
    105a:	df 80       	ldd	r13, Y+7	; 0x07
    105c:	ee 80       	ldd	r14, Y+6	; 0x06
    105e:	fd 80       	ldd	r15, Y+5	; 0x05
    1060:	0c 81       	ldd	r16, Y+4	; 0x04
    1062:	1b 81       	ldd	r17, Y+3	; 0x03
    1064:	aa 81       	ldd	r26, Y+2	; 0x02
    1066:	b9 81       	ldd	r27, Y+1	; 0x01
    1068:	ce 0f       	add	r28, r30
    106a:	d1 1d       	adc	r29, r1
    106c:	0f b6       	in	r0, 0x3f	; 63
    106e:	f8 94       	cli
    1070:	de bf       	out	0x3e, r29	; 62
    1072:	0f be       	out	0x3f, r0	; 63
    1074:	cd bf       	out	0x3d, r28	; 61
    1076:	ed 01       	movw	r28, r26
    1078:	08 95       	ret

0000107a <__udivmodsi4>:
    107a:	a1 e2       	ldi	r26, 0x21	; 33
    107c:	1a 2e       	mov	r1, r26
    107e:	aa 1b       	sub	r26, r26
    1080:	bb 1b       	sub	r27, r27
    1082:	fd 01       	movw	r30, r26
    1084:	0d c0       	rjmp	.+26     	; 0x10a0 <__udivmodsi4_ep>

00001086 <__udivmodsi4_loop>:
    1086:	aa 1f       	adc	r26, r26
    1088:	bb 1f       	adc	r27, r27
    108a:	ee 1f       	adc	r30, r30
    108c:	ff 1f       	adc	r31, r31
    108e:	a2 17       	cp	r26, r18
    1090:	b3 07       	cpc	r27, r19
    1092:	e4 07       	cpc	r30, r20
    1094:	f5 07       	cpc	r31, r21
    1096:	20 f0       	brcs	.+8      	; 0x10a0 <__udivmodsi4_ep>
    1098:	a2 1b       	sub	r26, r18
    109a:	b3 0b       	sbc	r27, r19
    109c:	e4 0b       	sbc	r30, r20
    109e:	f5 0b       	sbc	r31, r21

000010a0 <__udivmodsi4_ep>:
    10a0:	66 1f       	adc	r22, r22
    10a2:	77 1f       	adc	r23, r23
    10a4:	88 1f       	adc	r24, r24
    10a6:	99 1f       	adc	r25, r25
    10a8:	1a 94       	dec	r1
    10aa:	69 f7       	brne	.-38     	; 0x1086 <__udivmodsi4_loop>
    10ac:	60 95       	com	r22
    10ae:	70 95       	com	r23
    10b0:	80 95       	com	r24
    10b2:	90 95       	com	r25
    10b4:	9b 01       	movw	r18, r22
    10b6:	ac 01       	movw	r20, r24
    10b8:	bd 01       	movw	r22, r26
    10ba:	cf 01       	movw	r24, r30
    10bc:	08 95       	ret

000010be <__umulhisi3>:
    10be:	a2 9f       	mul	r26, r18
    10c0:	b0 01       	movw	r22, r0
    10c2:	b3 9f       	mul	r27, r19
    10c4:	c0 01       	movw	r24, r0
    10c6:	a3 9f       	mul	r26, r19
    10c8:	70 0d       	add	r23, r0
    10ca:	81 1d       	adc	r24, r1
    10cc:	11 24       	eor	r1, r1
    10ce:	91 1d       	adc	r25, r1
    10d0:	b2 9f       	mul	r27, r18
    10d2:	70 0d       	add	r23, r0
    10d4:	81 1d       	adc	r24, r1
    10d6:	11 24       	eor	r1, r1
    10d8:	91 1d       	adc	r25, r1
    10da:	08 95       	ret

000010dc <_exit>:
    10dc:	f8 94       	cli

000010de <__stop_program>:
    10de:	ff cf       	rjmp	.-2      	; 0x10de <__stop_program>
