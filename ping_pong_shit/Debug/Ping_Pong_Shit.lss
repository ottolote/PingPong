
Ping_Pong_Shit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000200  00800100  00001714  000017a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001714  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800300  00800300  000019a8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000019a8  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000158  00000000  00000000  00001a04  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001528  00000000  00000000  00001b5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009c7  00000000  00000000  00003084  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008ca  00000000  00000000  00003a4b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002f4  00000000  00000000  00004318  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004cb  00000000  00000000  0000460c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000065d  00000000  00000000  00004ad7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000128  00000000  00000000  00005134  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ba 01 	jmp	0x374	; 0x374 <__ctors_end>
       4:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
       8:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
       c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      10:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      14:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      18:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      1c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      20:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      24:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      28:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      2c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      30:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      34:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      38:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      3c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      40:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      44:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      48:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      4c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      50:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      54:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      58:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      5c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      60:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      64:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      68:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>
      6c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <vfprintf+0x9a>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__c.2299>:
     368:	63 64 69 6e 6f 70 73 75 78 58 5b 00                 cdinopsuxX[.

00000374 <__ctors_end>:
     374:	11 24       	eor	r1, r1
     376:	1f be       	out	0x3f, r1	; 63
     378:	cf ef       	ldi	r28, 0xFF	; 255
     37a:	d4 e0       	ldi	r29, 0x04	; 4
     37c:	de bf       	out	0x3e, r29	; 62
     37e:	cd bf       	out	0x3d, r28	; 61

00000380 <__do_copy_data>:
     380:	13 e0       	ldi	r17, 0x03	; 3
     382:	a0 e0       	ldi	r26, 0x00	; 0
     384:	b1 e0       	ldi	r27, 0x01	; 1
     386:	e4 e1       	ldi	r30, 0x14	; 20
     388:	f7 e1       	ldi	r31, 0x17	; 23
     38a:	02 c0       	rjmp	.+4      	; 0x390 <__do_copy_data+0x10>
     38c:	05 90       	lpm	r0, Z+
     38e:	0d 92       	st	X+, r0
     390:	a0 30       	cpi	r26, 0x00	; 0
     392:	b1 07       	cpc	r27, r17
     394:	d9 f7       	brne	.-10     	; 0x38c <__do_copy_data+0xc>

00000396 <__do_clear_bss>:
     396:	23 e0       	ldi	r18, 0x03	; 3
     398:	a0 e0       	ldi	r26, 0x00	; 0
     39a:	b3 e0       	ldi	r27, 0x03	; 3
     39c:	01 c0       	rjmp	.+2      	; 0x3a0 <.do_clear_bss_start>

0000039e <.do_clear_bss_loop>:
     39e:	1d 92       	st	X+, r1

000003a0 <.do_clear_bss_start>:
     3a0:	aa 30       	cpi	r26, 0x0A	; 10
     3a2:	b2 07       	cpc	r27, r18
     3a4:	e1 f7       	brne	.-8      	; 0x39e <.do_clear_bss_loop>
     3a6:	0e 94 15 02 	call	0x42a	; 0x42a <main>
     3aa:	0c 94 88 0b 	jmp	0x1710	; 0x1710 <_exit>

000003ae <__bad_interrupt>:
     3ae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003b2 <joystick_read>:
}


unsigned int joystick_read(joy_channel channel){
	volatile char* ext_ram = (char*) 0x1400;
	ext_ram[0] = 0x4 + channel;
     3b2:	8c 5f       	subi	r24, 0xFC	; 252
     3b4:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3b8:	81 e4       	ldi	r24, 0x41	; 65
     3ba:	8a 95       	dec	r24
     3bc:	f1 f7       	brne	.-4      	; 0x3ba <joystick_read+0x8>
     3be:	00 c0       	rjmp	.+0      	; 0x3c0 <joystick_read+0xe>
	_delay_us(40);
	//sleep_enable();
	return (uint8_t) ext_ram[0];
     3c0:	80 91 00 14 	lds	r24, 0x1400
}
     3c4:	90 e0       	ldi	r25, 0x00	; 0
     3c6:	08 95       	ret

000003c8 <joystick_init>:
	/*EMCUCR |= (0 << SM0);
	MCUCSR |= (1 << SM1);
	MCUCSR |= (0 << SM2);
	GICR |= (1 << INT0);
	sei();*/
	center_val_X = joystick_read(JOYSTICK_X);
     3c8:	80 e0       	ldi	r24, 0x00	; 0
     3ca:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <joystick_read>
     3ce:	90 93 01 03 	sts	0x0301, r25
     3d2:	80 93 00 03 	sts	0x0300, r24
	center_val_Y = joystick_read(JOYSTICK_Y);
     3d6:	81 e0       	ldi	r24, 0x01	; 1
     3d8:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <joystick_read>
     3dc:	90 93 03 03 	sts	0x0303, r25
     3e0:	80 93 02 03 	sts	0x0302, r24
     3e4:	08 95       	ret

000003e6 <read_converted>:
}*/




signed int read_converted(joy_channel channel){
     3e6:	cf 93       	push	r28
     3e8:	c8 2f       	mov	r28, r24

	int v = (joystick_read(channel));
     3ea:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <joystick_read>

	if      (channel == JOYSTICK_X)  {v -= center_val_X;}
     3ee:	c1 11       	cpse	r28, r1
     3f0:	07 c0       	rjmp	.+14     	; 0x400 <read_converted+0x1a>
     3f2:	20 91 00 03 	lds	r18, 0x0300
     3f6:	30 91 01 03 	lds	r19, 0x0301
     3fa:	82 1b       	sub	r24, r18
     3fc:	93 0b       	sbc	r25, r19
     3fe:	08 c0       	rjmp	.+16     	; 0x410 <read_converted+0x2a>
	else if (channel == JOYSTICK_Y)  {v -= center_val_Y;}
     400:	c1 30       	cpi	r28, 0x01	; 1
     402:	31 f4       	brne	.+12     	; 0x410 <read_converted+0x2a>
     404:	20 91 02 03 	lds	r18, 0x0302
     408:	30 91 03 03 	lds	r19, 0x0303
     40c:	82 1b       	sub	r24, r18
     40e:	93 0b       	sbc	r25, r19

	return  (v > 127)	? 127 :
     410:	80 38       	cpi	r24, 0x80	; 128
     412:	2f ef       	ldi	r18, 0xFF	; 255
     414:	92 07       	cpc	r25, r18
     416:	14 f4       	brge	.+4      	; 0x41c <read_converted+0x36>
     418:	80 e8       	ldi	r24, 0x80	; 128
     41a:	9f ef       	ldi	r25, 0xFF	; 255
     41c:	80 38       	cpi	r24, 0x80	; 128
     41e:	91 05       	cpc	r25, r1
     420:	14 f0       	brlt	.+4      	; 0x426 <read_converted+0x40>
     422:	8f e7       	ldi	r24, 0x7F	; 127
     424:	90 e0       	ldi	r25, 0x00	; 0
			(v < -128)	? -128 :
			 v;
}
     426:	cf 91       	pop	r28
     428:	08 95       	ret

0000042a <main>:
#include "SRAM_driver.h"
#include "joystick_driver.h"
#include "oled_driver.h"

int main(void) {
    uart_init(MYUBRR);
     42a:	8f e1       	ldi	r24, 0x1F	; 31
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	0e 94 8a 04 	call	0x914	; 0x914 <uart_init>
	SRAM_init();
     432:	0e 94 ad 03 	call	0x75a	; 0x75a <SRAM_init>
	joystick_init();
     436:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <joystick_init>
	oled_init();
     43a:	0e 94 73 02 	call	0x4e6	; 0x4e6 <oled_init>
	
	while(1) { 
		shell();
     43e:	0e 94 c0 03 	call	0x780	; 0x780 <shell>
		flash_diode();
     442:	0e 94 b4 03 	call	0x768	; 0x768 <flash_diode>
     446:	fb cf       	rjmp	.-10     	; 0x43e <main+0x14>

00000448 <oled_print_char>:

void oled_pos(unsigned int row, unsigned int column){
	
}

void oled_print_char(char ch){
     448:	28 e0       	ldi	r18, 0x08	; 8
     44a:	82 9f       	mul	r24, r18
     44c:	c0 01       	movw	r24, r0
     44e:	11 24       	eor	r1, r1
     450:	fc 01       	movw	r30, r24
     452:	e0 59       	subi	r30, 0x90	; 144
     454:	f0 40       	sbci	r31, 0x00	; 0
	for (uint8_t i = 0; i<FONTWIDTH; i++) {
     456:	80 e0       	ldi	r24, 0x00	; 0
		oled_write_data(pgm_read_byte(&font[ch - FONTOFFSET][i]));
     458:	94 91       	lpm	r25, Z
void oled_write_command(uint8_t command){
	*oled_command_addr = command;
}

void oled_write_data(uint8_t data){
	*oled_data_addr = data;
     45a:	a0 91 04 01 	lds	r26, 0x0104
     45e:	b0 91 05 01 	lds	r27, 0x0105
     462:	9c 93       	st	X, r25
void oled_pos(unsigned int row, unsigned int column){
	
}

void oled_print_char(char ch){
	for (uint8_t i = 0; i<FONTWIDTH; i++) {
     464:	8f 5f       	subi	r24, 0xFF	; 255
     466:	31 96       	adiw	r30, 0x01	; 1
     468:	88 30       	cpi	r24, 0x08	; 8
     46a:	b1 f7       	brne	.-20     	; 0x458 <oled_print_char+0x10>
		oled_write_data(pgm_read_byte(&font[ch - FONTOFFSET][i]));
	}
}
     46c:	08 95       	ret

0000046e <oled_goto_page>:
void oled_back(){
	
}

void oled_goto_page(unsigned int page) {
	oled_write_command(0xB0 + page);
     46e:	80 55       	subi	r24, 0x50	; 80
	_delay_ms(3000);
	oled_clear_screen();
}

void oled_write_command(uint8_t command){
	*oled_command_addr = command;
     470:	e0 91 06 01 	lds	r30, 0x0106
     474:	f0 91 07 01 	lds	r31, 0x0107
     478:	80 83       	st	Z, r24
     47a:	80 e1       	ldi	r24, 0x10	; 16
     47c:	8a 95       	dec	r24
     47e:	f1 f7       	brne	.-4      	; 0x47c <oled_goto_page+0xe>
     480:	00 c0       	rjmp	.+0      	; 0x482 <oled_goto_page+0x14>
     482:	08 95       	ret

00000484 <oled_clear_line>:
void oled_goto_page(unsigned int page) {
	oled_write_command(0xB0 + page);
	_delay_us(50);
}

void oled_clear_line(){
     484:	80 e8       	ldi	r24, 0x80	; 128
     486:	90 e0       	ldi	r25, 0x00	; 0
void oled_write_command(uint8_t command){
	*oled_command_addr = command;
}

void oled_write_data(uint8_t data){
	*oled_data_addr = data;
     488:	e0 91 04 01 	lds	r30, 0x0104
     48c:	f0 91 05 01 	lds	r31, 0x0105
     490:	10 82       	st	Z, r1
     492:	01 97       	sbiw	r24, 0x01	; 1
	oled_write_command(0xB0 + page);
	_delay_us(50);
}

void oled_clear_line(){
	for (int i = 0; i<128; i++) {
     494:	00 97       	sbiw	r24, 0x00	; 0
     496:	c1 f7       	brne	.-16     	; 0x488 <oled_clear_line+0x4>
		oled_write_data(0b00000000);
	}
}
     498:	08 95       	ret

0000049a <oled_clear_screen>:

void oled_clear_screen() {
     49a:	cf 93       	push	r28
     49c:	df 93       	push	r29
     49e:	c0 e0       	ldi	r28, 0x00	; 0
     4a0:	d0 e0       	ldi	r29, 0x00	; 0
	for (uint8_t i = 0; i<8; i++) {
		oled_goto_page(i);
     4a2:	ce 01       	movw	r24, r28
     4a4:	0e 94 37 02 	call	0x46e	; 0x46e <oled_goto_page>
		oled_clear_line();
     4a8:	0e 94 42 02 	call	0x484	; 0x484 <oled_clear_line>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4ac:	83 ed       	ldi	r24, 0xD3	; 211
     4ae:	90 e3       	ldi	r25, 0x30	; 48
     4b0:	01 97       	sbiw	r24, 0x01	; 1
     4b2:	f1 f7       	brne	.-4      	; 0x4b0 <oled_clear_screen+0x16>
     4b4:	00 c0       	rjmp	.+0      	; 0x4b6 <oled_clear_screen+0x1c>
     4b6:	00 00       	nop
     4b8:	21 96       	adiw	r28, 0x01	; 1
		oled_write_data(0b00000000);
	}
}

void oled_clear_screen() {
	for (uint8_t i = 0; i<8; i++) {
     4ba:	c8 30       	cpi	r28, 0x08	; 8
     4bc:	d1 05       	cpc	r29, r1
     4be:	89 f7       	brne	.-30     	; 0x4a2 <oled_clear_screen+0x8>
		oled_goto_page(i);
		oled_clear_line();
		_delay_ms(50);
	}
}
     4c0:	df 91       	pop	r29
     4c2:	cf 91       	pop	r28
     4c4:	08 95       	ret

000004c6 <oled_printf>:
	for (uint8_t i = 0; i<FONTWIDTH; i++) {
		oled_write_data(pgm_read_byte(&font[ch - FONTOFFSET][i]));
	}
}

void oled_printf(char* fmt, ...){
     4c6:	cf 93       	push	r28
     4c8:	df 93       	push	r29
     4ca:	cd b7       	in	r28, 0x3d	; 61
     4cc:	de b7       	in	r29, 0x3e	; 62
     4ce:	fe 01       	movw	r30, r28
     4d0:	35 96       	adiw	r30, 0x05	; 5
     4d2:	61 91       	ld	r22, Z+
     4d4:	71 91       	ld	r23, Z+
	va_list v;
	va_start(v, fmt);
	vfprintf(&oled_stdout, fmt, v);
     4d6:	af 01       	movw	r20, r30
     4d8:	88 e0       	ldi	r24, 0x08	; 8
     4da:	91 e0       	ldi	r25, 0x01	; 1
     4dc:	0e 94 54 05 	call	0xaa8	; 0xaa8 <vfprintf>
	va_end(v);
     4e0:	df 91       	pop	r29
     4e2:	cf 91       	pop	r28
     4e4:	08 95       	ret

000004e6 <oled_init>:
	_delay_ms(3000);
	oled_clear_screen();
}

void oled_write_command(uint8_t command){
	*oled_command_addr = command;
     4e6:	e0 91 06 01 	lds	r30, 0x0106
     4ea:	f0 91 07 01 	lds	r31, 0x0107
     4ee:	8e ea       	ldi	r24, 0xAE	; 174
     4f0:	80 83       	st	Z, r24
     4f2:	e0 91 06 01 	lds	r30, 0x0106
     4f6:	f0 91 07 01 	lds	r31, 0x0107
     4fa:	81 ea       	ldi	r24, 0xA1	; 161
     4fc:	80 83       	st	Z, r24
     4fe:	e0 91 06 01 	lds	r30, 0x0106
     502:	f0 91 07 01 	lds	r31, 0x0107
     506:	8a ed       	ldi	r24, 0xDA	; 218
     508:	80 83       	st	Z, r24
     50a:	e0 91 06 01 	lds	r30, 0x0106
     50e:	f0 91 07 01 	lds	r31, 0x0107
     512:	82 e1       	ldi	r24, 0x12	; 18
     514:	80 83       	st	Z, r24
     516:	e0 91 06 01 	lds	r30, 0x0106
     51a:	f0 91 07 01 	lds	r31, 0x0107
     51e:	88 ec       	ldi	r24, 0xC8	; 200
     520:	80 83       	st	Z, r24
     522:	e0 91 06 01 	lds	r30, 0x0106
     526:	f0 91 07 01 	lds	r31, 0x0107
     52a:	88 ea       	ldi	r24, 0xA8	; 168
     52c:	80 83       	st	Z, r24
     52e:	e0 91 06 01 	lds	r30, 0x0106
     532:	f0 91 07 01 	lds	r31, 0x0107
     536:	8f e3       	ldi	r24, 0x3F	; 63
     538:	80 83       	st	Z, r24
     53a:	e0 91 06 01 	lds	r30, 0x0106
     53e:	f0 91 07 01 	lds	r31, 0x0107
     542:	85 ed       	ldi	r24, 0xD5	; 213
     544:	80 83       	st	Z, r24
     546:	e0 91 06 01 	lds	r30, 0x0106
     54a:	f0 91 07 01 	lds	r31, 0x0107
     54e:	80 e8       	ldi	r24, 0x80	; 128
     550:	80 83       	st	Z, r24
     552:	e0 91 06 01 	lds	r30, 0x0106
     556:	f0 91 07 01 	lds	r31, 0x0107
     55a:	81 e8       	ldi	r24, 0x81	; 129
     55c:	80 83       	st	Z, r24
     55e:	e0 91 06 01 	lds	r30, 0x0106
     562:	f0 91 07 01 	lds	r31, 0x0107
     566:	80 e5       	ldi	r24, 0x50	; 80
     568:	80 83       	st	Z, r24
     56a:	e0 91 06 01 	lds	r30, 0x0106
     56e:	f0 91 07 01 	lds	r31, 0x0107
     572:	89 ed       	ldi	r24, 0xD9	; 217
     574:	80 83       	st	Z, r24
     576:	e0 91 06 01 	lds	r30, 0x0106
     57a:	f0 91 07 01 	lds	r31, 0x0107
     57e:	81 e2       	ldi	r24, 0x21	; 33
     580:	80 83       	st	Z, r24
     582:	e0 91 06 01 	lds	r30, 0x0106
     586:	f0 91 07 01 	lds	r31, 0x0107
     58a:	80 e2       	ldi	r24, 0x20	; 32
     58c:	80 83       	st	Z, r24
     58e:	e0 91 06 01 	lds	r30, 0x0106
     592:	f0 91 07 01 	lds	r31, 0x0107
     596:	82 e0       	ldi	r24, 0x02	; 2
     598:	80 83       	st	Z, r24
     59a:	e0 91 06 01 	lds	r30, 0x0106
     59e:	f0 91 07 01 	lds	r31, 0x0107
     5a2:	8b ed       	ldi	r24, 0xDB	; 219
     5a4:	80 83       	st	Z, r24
     5a6:	e0 91 06 01 	lds	r30, 0x0106
     5aa:	f0 91 07 01 	lds	r31, 0x0107
     5ae:	80 e3       	ldi	r24, 0x30	; 48
     5b0:	80 83       	st	Z, r24
     5b2:	e0 91 06 01 	lds	r30, 0x0106
     5b6:	f0 91 07 01 	lds	r31, 0x0107
     5ba:	8d ea       	ldi	r24, 0xAD	; 173
     5bc:	80 83       	st	Z, r24
     5be:	e0 91 06 01 	lds	r30, 0x0106
     5c2:	f0 91 07 01 	lds	r31, 0x0107
     5c6:	10 82       	st	Z, r1
     5c8:	e0 91 06 01 	lds	r30, 0x0106
     5cc:	f0 91 07 01 	lds	r31, 0x0107
     5d0:	84 ea       	ldi	r24, 0xA4	; 164
     5d2:	80 83       	st	Z, r24
     5d4:	e0 91 06 01 	lds	r30, 0x0106
     5d8:	f0 91 07 01 	lds	r31, 0x0107
     5dc:	86 ea       	ldi	r24, 0xA6	; 166
     5de:	80 83       	st	Z, r24
     5e0:	e0 91 06 01 	lds	r30, 0x0106
     5e4:	f0 91 07 01 	lds	r31, 0x0107
     5e8:	8f ea       	ldi	r24, 0xAF	; 175
     5ea:	80 83       	st	Z, r24
	oled_write_command(0x00);
	oled_write_command(0xa4);    //out follows RAM content
	oled_write_command(0xa6);    //set normal display
	oled_write_command(0xaf);    // display on
	
	oled_clear_screen();
     5ec:	0e 94 4d 02 	call	0x49a	; 0x49a <oled_clear_screen>
	oled_goto_page(2);
     5f0:	82 e0       	ldi	r24, 0x02	; 2
     5f2:	90 e0       	ldi	r25, 0x00	; 0
     5f4:	0e 94 37 02 	call	0x46e	; 0x46e <oled_goto_page>
	oled_printf(" #SWAG");
     5f8:	84 e2       	ldi	r24, 0x24	; 36
     5fa:	91 e0       	ldi	r25, 0x01	; 1
     5fc:	9f 93       	push	r25
     5fe:	8f 93       	push	r24
     600:	0e 94 63 02 	call	0x4c6	; 0x4c6 <oled_printf>
	oled_goto_page(3);
     604:	83 e0       	ldi	r24, 0x03	; 3
     606:	90 e0       	ldi	r25, 0x00	; 0
     608:	0e 94 37 02 	call	0x46e	; 0x46e <oled_goto_page>
	oled_printf("  4");
     60c:	8b e2       	ldi	r24, 0x2B	; 43
     60e:	91 e0       	ldi	r25, 0x01	; 1
     610:	9f 93       	push	r25
     612:	8f 93       	push	r24
     614:	0e 94 63 02 	call	0x4c6	; 0x4c6 <oled_printf>
	oled_goto_page(4);
     618:	84 e0       	ldi	r24, 0x04	; 4
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	0e 94 37 02 	call	0x46e	; 0x46e <oled_goto_page>
	oled_printf(" LYFE");
     620:	8f e2       	ldi	r24, 0x2F	; 47
     622:	91 e0       	ldi	r25, 0x01	; 1
     624:	9f 93       	push	r25
     626:	8f 93       	push	r24
     628:	0e 94 63 02 	call	0x4c6	; 0x4c6 <oled_printf>
     62c:	2f eb       	ldi	r18, 0xBF	; 191
     62e:	87 e2       	ldi	r24, 0x27	; 39
     630:	99 e0       	ldi	r25, 0x09	; 9
     632:	21 50       	subi	r18, 0x01	; 1
     634:	80 40       	sbci	r24, 0x00	; 0
     636:	90 40       	sbci	r25, 0x00	; 0
     638:	e1 f7       	brne	.-8      	; 0x632 <__stack+0x133>
     63a:	00 c0       	rjmp	.+0      	; 0x63c <__stack+0x13d>
     63c:	00 00       	nop
	_delay_ms(3000);
	oled_clear_screen();
     63e:	0e 94 4d 02 	call	0x49a	; 0x49a <oled_clear_screen>
     642:	0f 90       	pop	r0
     644:	0f 90       	pop	r0
     646:	0f 90       	pop	r0
     648:	0f 90       	pop	r0
     64a:	0f 90       	pop	r0
     64c:	0f 90       	pop	r0
     64e:	08 95       	ret

00000650 <SRAM_test>:
	if (address_offset > 0x100) { return 0; }
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	return ext_ram[address_offset];
}

void SRAM_test(void) {
     650:	cf 92       	push	r12
     652:	df 92       	push	r13
     654:	ef 92       	push	r14
     656:	ff 92       	push	r15
     658:	0f 93       	push	r16
     65a:	1f 93       	push	r17
     65c:	cf 93       	push	r28
     65e:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size       = 0x800;
	uint16_t write_errors       = 0;
	uint16_t retrieval_errors   = 0;

	printf("\nStarting SRAM test...\n");
     660:	85 e3       	ldi	r24, 0x35	; 53
     662:	91 e0       	ldi	r25, 0x01	; 1
     664:	0e 94 13 05 	call	0xa26	; 0xa26 <puts>

	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
     668:	0e 94 e6 04 	call	0x9cc	; 0x9cc <rand>
     66c:	6c 01       	movw	r12, r24

	// Write phase: Immediately check that the correct value was stored
	srand(seed);
     66e:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     672:	c0 e0       	ldi	r28, 0x00	; 0
     674:	d0 e0       	ldi	r29, 0x00	; 0
}

void SRAM_test(void) {
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size       = 0x800;
	uint16_t write_errors       = 0;
     676:	00 e0       	ldi	r16, 0x00	; 0
     678:	10 e0       	ldi	r17, 0x00	; 0
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		ext_ram[i] = some_value;
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     67a:	0f 2e       	mov	r0, r31
     67c:	fc e4       	ldi	r31, 0x4C	; 76
     67e:	ef 2e       	mov	r14, r31
     680:	f1 e0       	ldi	r31, 0x01	; 1
     682:	ff 2e       	mov	r15, r31
     684:	f0 2d       	mov	r31, r0
	uint16_t seed = rand();

	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
     686:	0e 94 e6 04 	call	0x9cc	; 0x9cc <rand>
     68a:	fe 01       	movw	r30, r28
     68c:	f8 5e       	subi	r31, 0xE8	; 232
		ext_ram[i] = some_value;
     68e:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
     690:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     692:	28 17       	cp	r18, r24
     694:	a9 f0       	breq	.+42     	; 0x6c0 <SRAM_test+0x70>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     696:	99 27       	eor	r25, r25
     698:	9f 93       	push	r25
     69a:	8f 93       	push	r24
     69c:	1f 92       	push	r1
     69e:	2f 93       	push	r18
     6a0:	df 93       	push	r29
     6a2:	cf 93       	push	r28
     6a4:	ff 92       	push	r15
     6a6:	ef 92       	push	r14
     6a8:	0e 94 ff 04 	call	0x9fe	; 0x9fe <printf>
			write_errors++;
     6ac:	0f 5f       	subi	r16, 0xFF	; 255
     6ae:	1f 4f       	sbci	r17, 0xFF	; 255
     6b0:	8d b7       	in	r24, 0x3d	; 61
     6b2:	9e b7       	in	r25, 0x3e	; 62
     6b4:	08 96       	adiw	r24, 0x08	; 8
     6b6:	0f b6       	in	r0, 0x3f	; 63
     6b8:	f8 94       	cli
     6ba:	9e bf       	out	0x3e, r25	; 62
     6bc:	0f be       	out	0x3f, r0	; 63
     6be:	8d bf       	out	0x3d, r24	; 61
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();

	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     6c0:	21 96       	adiw	r28, 0x01	; 1
     6c2:	c1 15       	cp	r28, r1
     6c4:	98 e0       	ldi	r25, 0x08	; 8
     6c6:	d9 07       	cpc	r29, r25
     6c8:	f1 f6       	brne	.-68     	; 0x686 <SRAM_test+0x36>
			write_errors++;
		}
	}

	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);    // reset the PRNG to the state it had before the write phase
     6ca:	c6 01       	movw	r24, r12
     6cc:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     6d0:	c0 e0       	ldi	r28, 0x00	; 0
     6d2:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void) {
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size       = 0x800;
	uint16_t write_errors       = 0;
	uint16_t retrieval_errors   = 0;
     6d4:	e1 2c       	mov	r14, r1
     6d6:	f1 2c       	mov	r15, r1
	srand(seed);    // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     6d8:	0f 2e       	mov	r0, r31
     6da:	f5 e8       	ldi	r31, 0x85	; 133
     6dc:	cf 2e       	mov	r12, r31
     6de:	f1 e0       	ldi	r31, 0x01	; 1
     6e0:	df 2e       	mov	r13, r31
     6e2:	f0 2d       	mov	r31, r0
	}

	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);    // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
     6e4:	0e 94 e6 04 	call	0x9cc	; 0x9cc <rand>
     6e8:	fe 01       	movw	r30, r28
     6ea:	f8 5e       	subi	r31, 0xE8	; 232
		uint8_t retreived_value = ext_ram[i];
     6ec:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     6ee:	28 17       	cp	r18, r24
     6f0:	b1 f0       	breq	.+44     	; 0x71e <SRAM_test+0xce>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     6f2:	99 27       	eor	r25, r25
     6f4:	9f 93       	push	r25
     6f6:	8f 93       	push	r24
     6f8:	1f 92       	push	r1
     6fa:	2f 93       	push	r18
     6fc:	df 93       	push	r29
     6fe:	cf 93       	push	r28
     700:	df 92       	push	r13
     702:	cf 92       	push	r12
     704:	0e 94 ff 04 	call	0x9fe	; 0x9fe <printf>
			retrieval_errors++;
     708:	8f ef       	ldi	r24, 0xFF	; 255
     70a:	e8 1a       	sub	r14, r24
     70c:	f8 0a       	sbc	r15, r24
     70e:	8d b7       	in	r24, 0x3d	; 61
     710:	9e b7       	in	r25, 0x3e	; 62
     712:	08 96       	adiw	r24, 0x08	; 8
     714:	0f b6       	in	r0, 0x3f	; 63
     716:	f8 94       	cli
     718:	9e bf       	out	0x3e, r25	; 62
     71a:	0f be       	out	0x3f, r0	; 63
     71c:	8d bf       	out	0x3d, r24	; 61
		}
	}

	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);    // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     71e:	21 96       	adiw	r28, 0x01	; 1
     720:	c1 15       	cp	r28, r1
     722:	98 e0       	ldi	r25, 0x08	; 8
     724:	d9 07       	cpc	r29, r25
     726:	f1 f6       	brne	.-68     	; 0x6e4 <SRAM_test+0x94>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
     728:	ff 92       	push	r15
     72a:	ef 92       	push	r14
     72c:	1f 93       	push	r17
     72e:	0f 93       	push	r16
     730:	82 ec       	ldi	r24, 0xC2	; 194
     732:	91 e0       	ldi	r25, 0x01	; 1
     734:	9f 93       	push	r25
     736:	8f 93       	push	r24
     738:	0e 94 ff 04 	call	0x9fe	; 0x9fe <printf>
     73c:	0f 90       	pop	r0
     73e:	0f 90       	pop	r0
     740:	0f 90       	pop	r0
     742:	0f 90       	pop	r0
     744:	0f 90       	pop	r0
     746:	0f 90       	pop	r0
     748:	df 91       	pop	r29
     74a:	cf 91       	pop	r28
     74c:	1f 91       	pop	r17
     74e:	0f 91       	pop	r16
     750:	ff 90       	pop	r15
     752:	ef 90       	pop	r14
     754:	df 90       	pop	r13
     756:	cf 90       	pop	r12
     758:	08 95       	ret

0000075a <SRAM_init>:
#include <stdio.h>
#include "SRAM_driver.h"

//Simple setup for SRAM, also tests for correctness
void SRAM_init(){
	MCUCR = 0x80;
     75a:	80 e8       	ldi	r24, 0x80	; 128
     75c:	85 bf       	out	0x35, r24	; 53
	DDRA = 0xFF;
     75e:	8f ef       	ldi	r24, 0xFF	; 255
     760:	8a bb       	out	0x1a, r24	; 26
	SRAM_test();
     762:	0e 94 28 03 	call	0x650	; 0x650 <SRAM_test>
     766:	08 95       	ret

00000768 <flash_diode>:
#include "joystick_driver.h"
#include "oled_driver.h"

//Simple test, Ex 1, task 6
void flash_diode(){
	PORTB = 0xFF;
     768:	8f ef       	ldi	r24, 0xFF	; 255
     76a:	88 bb       	out	0x18, r24	; 24
     76c:	80 e0       	ldi	r24, 0x00	; 0
     76e:	90 ef       	ldi	r25, 0xF0	; 240
     770:	01 97       	sbiw	r24, 0x01	; 1
     772:	f1 f7       	brne	.-4      	; 0x770 <flash_diode+0x8>
	_delay_ms(50);
	PORTB = 0x00;
     774:	18 ba       	out	0x18, r1	; 24
     776:	80 e0       	ldi	r24, 0x00	; 0
     778:	90 ef       	ldi	r25, 0xF0	; 240
     77a:	01 97       	sbiw	r24, 0x01	; 1
     77c:	f1 f7       	brne	.-4      	; 0x77a <flash_diode+0x12>
     77e:	08 95       	ret

00000780 <shell>:
	uart_sendChar('X');
	_delay_ms(1000);
}

//Ex 1, task 10 and 11
void shell(){
     780:	af 92       	push	r10
     782:	bf 92       	push	r11
     784:	cf 92       	push	r12
     786:	df 92       	push	r13
     788:	ef 92       	push	r14
     78a:	ff 92       	push	r15
     78c:	0f 93       	push	r16
     78e:	1f 93       	push	r17
     790:	cf 93       	push	r28
     792:	df 93       	push	r29
     794:	cd b7       	in	r28, 0x3d	; 61
     796:	de b7       	in	r29, 0x3e	; 62
     798:	da 95       	dec	r29
     79a:	0f b6       	in	r0, 0x3f	; 63
     79c:	f8 94       	cli
     79e:	de bf       	out	0x3e, r29	; 62
     7a0:	0f be       	out	0x3f, r0	; 63
     7a2:	cd bf       	out	0x3d, r28	; 61
	char cmd[256];
	printf("\n[root@skynet]#:");
     7a4:	8b e1       	ldi	r24, 0x1B	; 27
     7a6:	92 e0       	ldi	r25, 0x02	; 2
     7a8:	9f 93       	push	r25
     7aa:	8f 93       	push	r24
     7ac:	0e 94 ff 04 	call	0x9fe	; 0x9fe <printf>
	scanf("%s", cmd);
     7b0:	8e 01       	movw	r16, r28
     7b2:	0f 5f       	subi	r16, 0xFF	; 255
     7b4:	1f 4f       	sbci	r17, 0xFF	; 255
     7b6:	1f 93       	push	r17
     7b8:	0f 93       	push	r16
     7ba:	8c e2       	ldi	r24, 0x2C	; 44
     7bc:	92 e0       	ldi	r25, 0x02	; 2
     7be:	9f 93       	push	r25
     7c0:	8f 93       	push	r24
     7c2:	0e 94 40 05 	call	0xa80	; 0xa80 <scanf>
	printf( " %s\n", cmd);
     7c6:	1f 93       	push	r17
     7c8:	0f 93       	push	r16
     7ca:	8f e2       	ldi	r24, 0x2F	; 47
     7cc:	92 e0       	ldi	r25, 0x02	; 2
     7ce:	9f 93       	push	r25
     7d0:	8f 93       	push	r24
     7d2:	0e 94 ff 04 	call	0x9fe	; 0x9fe <printf>
	
	if(strcmp(cmd, "testdiode") == 0) {
     7d6:	64 e3       	ldi	r22, 0x34	; 52
     7d8:	72 e0       	ldi	r23, 0x02	; 2
     7da:	c8 01       	movw	r24, r16
     7dc:	0e 94 f6 04 	call	0x9ec	; 0x9ec <strcmp>
     7e0:	0f b6       	in	r0, 0x3f	; 63
     7e2:	f8 94       	cli
     7e4:	de bf       	out	0x3e, r29	; 62
     7e6:	0f be       	out	0x3f, r0	; 63
     7e8:	cd bf       	out	0x3d, r28	; 61
     7ea:	89 2b       	or	r24, r25
     7ec:	91 f4       	brne	.+36     	; 0x812 <shell+0x92>
		printf("testing diode...\n");
     7ee:	8e e3       	ldi	r24, 0x3E	; 62
     7f0:	92 e0       	ldi	r25, 0x02	; 2
     7f2:	0e 94 13 05 	call	0xa26	; 0xa26 <puts>
     7f6:	04 e1       	ldi	r16, 0x14	; 20
     7f8:	10 e0       	ldi	r17, 0x00	; 0
		for (int i = 0; i<20; i++) {	flash_diode(); }
     7fa:	0e 94 b4 03 	call	0x768	; 0x768 <flash_diode>
     7fe:	01 50       	subi	r16, 0x01	; 1
     800:	11 09       	sbc	r17, r1
     802:	01 15       	cp	r16, r1
     804:	11 05       	cpc	r17, r1
     806:	c9 f7       	brne	.-14     	; 0x7fa <shell+0x7a>
		printf("done testing diode\n");
     808:	8f e4       	ldi	r24, 0x4F	; 79
     80a:	92 e0       	ldi	r25, 0x02	; 2
     80c:	0e 94 13 05 	call	0xa26	; 0xa26 <puts>
     810:	67 c0       	rjmp	.+206    	; 0x8e0 <shell+0x160>
	} 

	else if (strcmp(cmd, "SRAM_test") == 0) {
     812:	62 e6       	ldi	r22, 0x62	; 98
     814:	72 e0       	ldi	r23, 0x02	; 2
     816:	ce 01       	movw	r24, r28
     818:	01 96       	adiw	r24, 0x01	; 1
     81a:	0e 94 f6 04 	call	0x9ec	; 0x9ec <strcmp>
     81e:	89 2b       	or	r24, r25
     820:	19 f4       	brne	.+6      	; 0x828 <shell+0xa8>
		SRAM_test();
     822:	0e 94 28 03 	call	0x650	; 0x650 <SRAM_test>
     826:	5c c0       	rjmp	.+184    	; 0x8e0 <shell+0x160>
	} 

	else if (strcmp(cmd, "ADC_test") == 0) {
     828:	6c e6       	ldi	r22, 0x6C	; 108
     82a:	72 e0       	ldi	r23, 0x02	; 2
     82c:	ce 01       	movw	r24, r28
     82e:	01 96       	adiw	r24, 0x01	; 1
     830:	0e 94 f6 04 	call	0x9ec	; 0x9ec <strcmp>
     834:	89 2b       	or	r24, r25
     836:	41 f5       	brne	.+80     	; 0x888 <shell+0x108>
		while(1){
			printf("Joystick x-pos: %003i \tJoystick y-pos: %003i \tLeft slider: %003d \tRight slider: %003d \n", \
     838:	05 e7       	ldi	r16, 0x75	; 117
     83a:	12 e0       	ldi	r17, 0x02	; 2
     83c:	83 e0       	ldi	r24, 0x03	; 3
     83e:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <joystick_read>
     842:	b8 2e       	mov	r11, r24
     844:	a9 2e       	mov	r10, r25
     846:	82 e0       	ldi	r24, 0x02	; 2
     848:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <joystick_read>
     84c:	d8 2e       	mov	r13, r24
     84e:	c9 2e       	mov	r12, r25
     850:	81 e0       	ldi	r24, 0x01	; 1
     852:	90 e0       	ldi	r25, 0x00	; 0
     854:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <read_converted>
     858:	f8 2e       	mov	r15, r24
     85a:	e9 2e       	mov	r14, r25
     85c:	80 e0       	ldi	r24, 0x00	; 0
     85e:	90 e0       	ldi	r25, 0x00	; 0
     860:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <read_converted>
     864:	af 92       	push	r10
     866:	bf 92       	push	r11
     868:	cf 92       	push	r12
     86a:	df 92       	push	r13
     86c:	ef 92       	push	r14
     86e:	ff 92       	push	r15
     870:	9f 93       	push	r25
     872:	8f 93       	push	r24
     874:	1f 93       	push	r17
     876:	0f 93       	push	r16
     878:	0e 94 ff 04 	call	0x9fe	; 0x9fe <printf>
     87c:	0f b6       	in	r0, 0x3f	; 63
     87e:	f8 94       	cli
     880:	de bf       	out	0x3e, r29	; 62
     882:	0f be       	out	0x3f, r0	; 63
     884:	cd bf       	out	0x3d, r28	; 61
     886:	da cf       	rjmp	.-76     	; 0x83c <shell+0xbc>
					read_converted(JOYSTICK_X), read_converted(JOYSTICK_Y), joystick_read(SLIDE_L), joystick_read(SLIDE_R));
		}
	}  
	
	else if (strcmp(cmd, "OLED_test") == 0) {
     888:	6d ec       	ldi	r22, 0xCD	; 205
     88a:	72 e0       	ldi	r23, 0x02	; 2
     88c:	ce 01       	movw	r24, r28
     88e:	01 96       	adiw	r24, 0x01	; 1
     890:	0e 94 f6 04 	call	0x9ec	; 0x9ec <strcmp>
     894:	89 2b       	or	r24, r25
     896:	b1 f4       	brne	.+44     	; 0x8c4 <shell+0x144>
		printf("oled_init(): done\n");
     898:	87 ed       	ldi	r24, 0xD7	; 215
     89a:	92 e0       	ldi	r25, 0x02	; 2
     89c:	0e 94 13 05 	call	0xa26	; 0xa26 <puts>
		oled_goto_page(0);
     8a0:	80 e0       	ldi	r24, 0x00	; 0
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	0e 94 37 02 	call	0x46e	; 0x46e <oled_goto_page>
		oled_clear_screen();
     8a8:	0e 94 4d 02 	call	0x49a	; 0x49a <oled_clear_screen>
		while(1){
			//oled_print_char('x');
			//oled_printf("#SWAG4LYFE");
			//oled_write_data(0b00000000);
			//oled_clear_line();
			oled_clear_screen();
     8ac:	0e 94 4d 02 	call	0x49a	; 0x49a <oled_clear_screen>
     8b0:	9f ef       	ldi	r25, 0xFF	; 255
     8b2:	2f e7       	ldi	r18, 0x7F	; 127
     8b4:	31 e0       	ldi	r19, 0x01	; 1
     8b6:	91 50       	subi	r25, 0x01	; 1
     8b8:	20 40       	sbci	r18, 0x00	; 0
     8ba:	30 40       	sbci	r19, 0x00	; 0
     8bc:	e1 f7       	brne	.-8      	; 0x8b6 <shell+0x136>
     8be:	00 c0       	rjmp	.+0      	; 0x8c0 <shell+0x140>
     8c0:	00 c0       	rjmp	.+0      	; 0x8c2 <shell+0x142>
     8c2:	f4 cf       	rjmp	.-24     	; 0x8ac <shell+0x12c>
		}
		
	}

	else {
		printf("unknown command \"%s\"\n", cmd);
     8c4:	ce 01       	movw	r24, r28
     8c6:	01 96       	adiw	r24, 0x01	; 1
     8c8:	9f 93       	push	r25
     8ca:	8f 93       	push	r24
     8cc:	89 ee       	ldi	r24, 0xE9	; 233
     8ce:	92 e0       	ldi	r25, 0x02	; 2
     8d0:	9f 93       	push	r25
     8d2:	8f 93       	push	r24
     8d4:	0e 94 ff 04 	call	0x9fe	; 0x9fe <printf>
     8d8:	0f 90       	pop	r0
     8da:	0f 90       	pop	r0
     8dc:	0f 90       	pop	r0
     8de:	0f 90       	pop	r0
	}

	
	
}
     8e0:	d3 95       	inc	r29
     8e2:	0f b6       	in	r0, 0x3f	; 63
     8e4:	f8 94       	cli
     8e6:	de bf       	out	0x3e, r29	; 62
     8e8:	0f be       	out	0x3f, r0	; 63
     8ea:	cd bf       	out	0x3d, r28	; 61
     8ec:	df 91       	pop	r29
     8ee:	cf 91       	pop	r28
     8f0:	1f 91       	pop	r17
     8f2:	0f 91       	pop	r16
     8f4:	ff 90       	pop	r15
     8f6:	ef 90       	pop	r14
     8f8:	df 90       	pop	r13
     8fa:	cf 90       	pop	r12
     8fc:	bf 90       	pop	r11
     8fe:	af 90       	pop	r10
     900:	08 95       	ret

00000902 <uart_sendChar>:
     902:	5d 9b       	sbis	0x0b, 5	; 11
     904:	fe cf       	rjmp	.-4      	; 0x902 <uart_sendChar>
     906:	8c b9       	out	0x0c, r24	; 12
     908:	08 95       	ret

0000090a <uart_getChar>:
     90a:	5f 9b       	sbis	0x0b, 7	; 11
     90c:	fe cf       	rjmp	.-4      	; 0x90a <uart_getChar>
     90e:	8c b1       	in	r24, 0x0c	; 12
     910:	90 e0       	ldi	r25, 0x00	; 0
     912:	08 95       	ret

00000914 <uart_init>:
     914:	89 b9       	out	0x09, r24	; 9
     916:	88 e1       	ldi	r24, 0x18	; 24
     918:	8a b9       	out	0x0a, r24	; 10
     91a:	86 e1       	ldi	r24, 0x16	; 22
     91c:	91 e0       	ldi	r25, 0x01	; 1
     91e:	90 93 07 03 	sts	0x0307, r25
     922:	80 93 06 03 	sts	0x0306, r24
     926:	90 93 05 03 	sts	0x0305, r25
     92a:	80 93 04 03 	sts	0x0304, r24
     92e:	08 95       	ret

00000930 <do_rand>:
     930:	8f 92       	push	r8
     932:	9f 92       	push	r9
     934:	af 92       	push	r10
     936:	bf 92       	push	r11
     938:	cf 92       	push	r12
     93a:	df 92       	push	r13
     93c:	ef 92       	push	r14
     93e:	ff 92       	push	r15
     940:	cf 93       	push	r28
     942:	df 93       	push	r29
     944:	ec 01       	movw	r28, r24
     946:	68 81       	ld	r22, Y
     948:	79 81       	ldd	r23, Y+1	; 0x01
     94a:	8a 81       	ldd	r24, Y+2	; 0x02
     94c:	9b 81       	ldd	r25, Y+3	; 0x03
     94e:	61 15       	cp	r22, r1
     950:	71 05       	cpc	r23, r1
     952:	81 05       	cpc	r24, r1
     954:	91 05       	cpc	r25, r1
     956:	21 f4       	brne	.+8      	; 0x960 <do_rand+0x30>
     958:	64 e2       	ldi	r22, 0x24	; 36
     95a:	79 ed       	ldi	r23, 0xD9	; 217
     95c:	8b e5       	ldi	r24, 0x5B	; 91
     95e:	97 e0       	ldi	r25, 0x07	; 7
     960:	2d e1       	ldi	r18, 0x1D	; 29
     962:	33 ef       	ldi	r19, 0xF3	; 243
     964:	41 e0       	ldi	r20, 0x01	; 1
     966:	50 e0       	ldi	r21, 0x00	; 0
     968:	0e 94 ee 0a 	call	0x15dc	; 0x15dc <__divmodsi4>
     96c:	49 01       	movw	r8, r18
     96e:	5a 01       	movw	r10, r20
     970:	9b 01       	movw	r18, r22
     972:	ac 01       	movw	r20, r24
     974:	a7 ea       	ldi	r26, 0xA7	; 167
     976:	b1 e4       	ldi	r27, 0x41	; 65
     978:	0e 94 0d 0b 	call	0x161a	; 0x161a <__muluhisi3>
     97c:	6b 01       	movw	r12, r22
     97e:	7c 01       	movw	r14, r24
     980:	ac ee       	ldi	r26, 0xEC	; 236
     982:	b4 ef       	ldi	r27, 0xF4	; 244
     984:	a5 01       	movw	r20, r10
     986:	94 01       	movw	r18, r8
     988:	0e 94 1b 0b 	call	0x1636	; 0x1636 <__mulohisi3>
     98c:	c6 0e       	add	r12, r22
     98e:	d7 1e       	adc	r13, r23
     990:	e8 1e       	adc	r14, r24
     992:	f9 1e       	adc	r15, r25
     994:	f7 fe       	sbrs	r15, 7
     996:	06 c0       	rjmp	.+12     	; 0x9a4 <do_rand+0x74>
     998:	81 e0       	ldi	r24, 0x01	; 1
     99a:	c8 1a       	sub	r12, r24
     99c:	d1 08       	sbc	r13, r1
     99e:	e1 08       	sbc	r14, r1
     9a0:	80 e8       	ldi	r24, 0x80	; 128
     9a2:	f8 0a       	sbc	r15, r24
     9a4:	c8 82       	st	Y, r12
     9a6:	d9 82       	std	Y+1, r13	; 0x01
     9a8:	ea 82       	std	Y+2, r14	; 0x02
     9aa:	fb 82       	std	Y+3, r15	; 0x03
     9ac:	c6 01       	movw	r24, r12
     9ae:	9f 77       	andi	r25, 0x7F	; 127
     9b0:	df 91       	pop	r29
     9b2:	cf 91       	pop	r28
     9b4:	ff 90       	pop	r15
     9b6:	ef 90       	pop	r14
     9b8:	df 90       	pop	r13
     9ba:	cf 90       	pop	r12
     9bc:	bf 90       	pop	r11
     9be:	af 90       	pop	r10
     9c0:	9f 90       	pop	r9
     9c2:	8f 90       	pop	r8
     9c4:	08 95       	ret

000009c6 <rand_r>:
     9c6:	0e 94 98 04 	call	0x930	; 0x930 <do_rand>
     9ca:	08 95       	ret

000009cc <rand>:
     9cc:	80 e0       	ldi	r24, 0x00	; 0
     9ce:	91 e0       	ldi	r25, 0x01	; 1
     9d0:	0e 94 98 04 	call	0x930	; 0x930 <do_rand>
     9d4:	08 95       	ret

000009d6 <srand>:
     9d6:	a0 e0       	ldi	r26, 0x00	; 0
     9d8:	b0 e0       	ldi	r27, 0x00	; 0
     9da:	80 93 00 01 	sts	0x0100, r24
     9de:	90 93 01 01 	sts	0x0101, r25
     9e2:	a0 93 02 01 	sts	0x0102, r26
     9e6:	b0 93 03 01 	sts	0x0103, r27
     9ea:	08 95       	ret

000009ec <strcmp>:
     9ec:	fb 01       	movw	r30, r22
     9ee:	dc 01       	movw	r26, r24
     9f0:	8d 91       	ld	r24, X+
     9f2:	01 90       	ld	r0, Z+
     9f4:	80 19       	sub	r24, r0
     9f6:	01 10       	cpse	r0, r1
     9f8:	d9 f3       	breq	.-10     	; 0x9f0 <strcmp+0x4>
     9fa:	99 0b       	sbc	r25, r25
     9fc:	08 95       	ret

000009fe <printf>:
     9fe:	a0 e0       	ldi	r26, 0x00	; 0
     a00:	b0 e0       	ldi	r27, 0x00	; 0
     a02:	e5 e0       	ldi	r30, 0x05	; 5
     a04:	f5 e0       	ldi	r31, 0x05	; 5
     a06:	0c 94 30 0b 	jmp	0x1660	; 0x1660 <__prologue_saves__+0x20>
     a0a:	fe 01       	movw	r30, r28
     a0c:	35 96       	adiw	r30, 0x05	; 5
     a0e:	61 91       	ld	r22, Z+
     a10:	71 91       	ld	r23, Z+
     a12:	af 01       	movw	r20, r30
     a14:	80 91 06 03 	lds	r24, 0x0306
     a18:	90 91 07 03 	lds	r25, 0x0307
     a1c:	0e 94 54 05 	call	0xaa8	; 0xaa8 <vfprintf>
     a20:	e2 e0       	ldi	r30, 0x02	; 2
     a22:	0c 94 4c 0b 	jmp	0x1698	; 0x1698 <__epilogue_restores__+0x20>

00000a26 <puts>:
     a26:	0f 93       	push	r16
     a28:	1f 93       	push	r17
     a2a:	cf 93       	push	r28
     a2c:	df 93       	push	r29
     a2e:	e0 91 06 03 	lds	r30, 0x0306
     a32:	f0 91 07 03 	lds	r31, 0x0307
     a36:	23 81       	ldd	r18, Z+3	; 0x03
     a38:	21 ff       	sbrs	r18, 1
     a3a:	1b c0       	rjmp	.+54     	; 0xa72 <puts+0x4c>
     a3c:	ec 01       	movw	r28, r24
     a3e:	00 e0       	ldi	r16, 0x00	; 0
     a40:	10 e0       	ldi	r17, 0x00	; 0
     a42:	89 91       	ld	r24, Y+
     a44:	60 91 06 03 	lds	r22, 0x0306
     a48:	70 91 07 03 	lds	r23, 0x0307
     a4c:	db 01       	movw	r26, r22
     a4e:	18 96       	adiw	r26, 0x08	; 8
     a50:	ed 91       	ld	r30, X+
     a52:	fc 91       	ld	r31, X
     a54:	19 97       	sbiw	r26, 0x09	; 9
     a56:	88 23       	and	r24, r24
     a58:	31 f0       	breq	.+12     	; 0xa66 <puts+0x40>
     a5a:	09 95       	icall
     a5c:	89 2b       	or	r24, r25
     a5e:	89 f3       	breq	.-30     	; 0xa42 <puts+0x1c>
     a60:	0f ef       	ldi	r16, 0xFF	; 255
     a62:	1f ef       	ldi	r17, 0xFF	; 255
     a64:	ee cf       	rjmp	.-36     	; 0xa42 <puts+0x1c>
     a66:	8a e0       	ldi	r24, 0x0A	; 10
     a68:	09 95       	icall
     a6a:	89 2b       	or	r24, r25
     a6c:	11 f4       	brne	.+4      	; 0xa72 <puts+0x4c>
     a6e:	c8 01       	movw	r24, r16
     a70:	02 c0       	rjmp	.+4      	; 0xa76 <puts+0x50>
     a72:	8f ef       	ldi	r24, 0xFF	; 255
     a74:	9f ef       	ldi	r25, 0xFF	; 255
     a76:	df 91       	pop	r29
     a78:	cf 91       	pop	r28
     a7a:	1f 91       	pop	r17
     a7c:	0f 91       	pop	r16
     a7e:	08 95       	ret

00000a80 <scanf>:
     a80:	a0 e0       	ldi	r26, 0x00	; 0
     a82:	b0 e0       	ldi	r27, 0x00	; 0
     a84:	e6 e4       	ldi	r30, 0x46	; 70
     a86:	f5 e0       	ldi	r31, 0x05	; 5
     a88:	0c 94 30 0b 	jmp	0x1660	; 0x1660 <__prologue_saves__+0x20>
     a8c:	fe 01       	movw	r30, r28
     a8e:	35 96       	adiw	r30, 0x05	; 5
     a90:	61 91       	ld	r22, Z+
     a92:	71 91       	ld	r23, Z+
     a94:	af 01       	movw	r20, r30
     a96:	80 91 04 03 	lds	r24, 0x0304
     a9a:	90 91 05 03 	lds	r25, 0x0305
     a9e:	0e 94 a4 08 	call	0x1148	; 0x1148 <vfscanf>
     aa2:	e2 e0       	ldi	r30, 0x02	; 2
     aa4:	0c 94 4c 0b 	jmp	0x1698	; 0x1698 <__epilogue_restores__+0x20>

00000aa8 <vfprintf>:
     aa8:	ac e0       	ldi	r26, 0x0C	; 12
     aaa:	b0 e0       	ldi	r27, 0x00	; 0
     aac:	ea e5       	ldi	r30, 0x5A	; 90
     aae:	f5 e0       	ldi	r31, 0x05	; 5
     ab0:	0c 94 20 0b 	jmp	0x1640	; 0x1640 <__prologue_saves__>
     ab4:	7c 01       	movw	r14, r24
     ab6:	6b 01       	movw	r12, r22
     ab8:	8a 01       	movw	r16, r20
     aba:	fc 01       	movw	r30, r24
     abc:	17 82       	std	Z+7, r1	; 0x07
     abe:	16 82       	std	Z+6, r1	; 0x06
     ac0:	83 81       	ldd	r24, Z+3	; 0x03
     ac2:	81 ff       	sbrs	r24, 1
     ac4:	bd c1       	rjmp	.+890    	; 0xe40 <vfprintf+0x398>
     ac6:	ce 01       	movw	r24, r28
     ac8:	01 96       	adiw	r24, 0x01	; 1
     aca:	4c 01       	movw	r8, r24
     acc:	f7 01       	movw	r30, r14
     ace:	93 81       	ldd	r25, Z+3	; 0x03
     ad0:	f6 01       	movw	r30, r12
     ad2:	93 fd       	sbrc	r25, 3
     ad4:	85 91       	lpm	r24, Z+
     ad6:	93 ff       	sbrs	r25, 3
     ad8:	81 91       	ld	r24, Z+
     ada:	6f 01       	movw	r12, r30
     adc:	88 23       	and	r24, r24
     ade:	09 f4       	brne	.+2      	; 0xae2 <vfprintf+0x3a>
     ae0:	ab c1       	rjmp	.+854    	; 0xe38 <vfprintf+0x390>
     ae2:	85 32       	cpi	r24, 0x25	; 37
     ae4:	39 f4       	brne	.+14     	; 0xaf4 <vfprintf+0x4c>
     ae6:	93 fd       	sbrc	r25, 3
     ae8:	85 91       	lpm	r24, Z+
     aea:	93 ff       	sbrs	r25, 3
     aec:	81 91       	ld	r24, Z+
     aee:	6f 01       	movw	r12, r30
     af0:	85 32       	cpi	r24, 0x25	; 37
     af2:	29 f4       	brne	.+10     	; 0xafe <vfprintf+0x56>
     af4:	b7 01       	movw	r22, r14
     af6:	90 e0       	ldi	r25, 0x00	; 0
     af8:	0e 94 42 0a 	call	0x1484	; 0x1484 <fputc>
     afc:	e7 cf       	rjmp	.-50     	; 0xacc <vfprintf+0x24>
     afe:	51 2c       	mov	r5, r1
     b00:	31 2c       	mov	r3, r1
     b02:	20 e0       	ldi	r18, 0x00	; 0
     b04:	20 32       	cpi	r18, 0x20	; 32
     b06:	a0 f4       	brcc	.+40     	; 0xb30 <vfprintf+0x88>
     b08:	8b 32       	cpi	r24, 0x2B	; 43
     b0a:	69 f0       	breq	.+26     	; 0xb26 <vfprintf+0x7e>
     b0c:	30 f4       	brcc	.+12     	; 0xb1a <vfprintf+0x72>
     b0e:	80 32       	cpi	r24, 0x20	; 32
     b10:	59 f0       	breq	.+22     	; 0xb28 <vfprintf+0x80>
     b12:	83 32       	cpi	r24, 0x23	; 35
     b14:	69 f4       	brne	.+26     	; 0xb30 <vfprintf+0x88>
     b16:	20 61       	ori	r18, 0x10	; 16
     b18:	2c c0       	rjmp	.+88     	; 0xb72 <vfprintf+0xca>
     b1a:	8d 32       	cpi	r24, 0x2D	; 45
     b1c:	39 f0       	breq	.+14     	; 0xb2c <vfprintf+0x84>
     b1e:	80 33       	cpi	r24, 0x30	; 48
     b20:	39 f4       	brne	.+14     	; 0xb30 <vfprintf+0x88>
     b22:	21 60       	ori	r18, 0x01	; 1
     b24:	26 c0       	rjmp	.+76     	; 0xb72 <vfprintf+0xca>
     b26:	22 60       	ori	r18, 0x02	; 2
     b28:	24 60       	ori	r18, 0x04	; 4
     b2a:	23 c0       	rjmp	.+70     	; 0xb72 <vfprintf+0xca>
     b2c:	28 60       	ori	r18, 0x08	; 8
     b2e:	21 c0       	rjmp	.+66     	; 0xb72 <vfprintf+0xca>
     b30:	27 fd       	sbrc	r18, 7
     b32:	27 c0       	rjmp	.+78     	; 0xb82 <vfprintf+0xda>
     b34:	30 ed       	ldi	r19, 0xD0	; 208
     b36:	38 0f       	add	r19, r24
     b38:	3a 30       	cpi	r19, 0x0A	; 10
     b3a:	78 f4       	brcc	.+30     	; 0xb5a <vfprintf+0xb2>
     b3c:	26 ff       	sbrs	r18, 6
     b3e:	06 c0       	rjmp	.+12     	; 0xb4c <vfprintf+0xa4>
     b40:	fa e0       	ldi	r31, 0x0A	; 10
     b42:	5f 9e       	mul	r5, r31
     b44:	30 0d       	add	r19, r0
     b46:	11 24       	eor	r1, r1
     b48:	53 2e       	mov	r5, r19
     b4a:	13 c0       	rjmp	.+38     	; 0xb72 <vfprintf+0xca>
     b4c:	8a e0       	ldi	r24, 0x0A	; 10
     b4e:	38 9e       	mul	r3, r24
     b50:	30 0d       	add	r19, r0
     b52:	11 24       	eor	r1, r1
     b54:	33 2e       	mov	r3, r19
     b56:	20 62       	ori	r18, 0x20	; 32
     b58:	0c c0       	rjmp	.+24     	; 0xb72 <vfprintf+0xca>
     b5a:	8e 32       	cpi	r24, 0x2E	; 46
     b5c:	21 f4       	brne	.+8      	; 0xb66 <vfprintf+0xbe>
     b5e:	26 fd       	sbrc	r18, 6
     b60:	6b c1       	rjmp	.+726    	; 0xe38 <vfprintf+0x390>
     b62:	20 64       	ori	r18, 0x40	; 64
     b64:	06 c0       	rjmp	.+12     	; 0xb72 <vfprintf+0xca>
     b66:	8c 36       	cpi	r24, 0x6C	; 108
     b68:	11 f4       	brne	.+4      	; 0xb6e <vfprintf+0xc6>
     b6a:	20 68       	ori	r18, 0x80	; 128
     b6c:	02 c0       	rjmp	.+4      	; 0xb72 <vfprintf+0xca>
     b6e:	88 36       	cpi	r24, 0x68	; 104
     b70:	41 f4       	brne	.+16     	; 0xb82 <vfprintf+0xda>
     b72:	f6 01       	movw	r30, r12
     b74:	93 fd       	sbrc	r25, 3
     b76:	85 91       	lpm	r24, Z+
     b78:	93 ff       	sbrs	r25, 3
     b7a:	81 91       	ld	r24, Z+
     b7c:	6f 01       	movw	r12, r30
     b7e:	81 11       	cpse	r24, r1
     b80:	c1 cf       	rjmp	.-126    	; 0xb04 <vfprintf+0x5c>
     b82:	98 2f       	mov	r25, r24
     b84:	9f 7d       	andi	r25, 0xDF	; 223
     b86:	95 54       	subi	r25, 0x45	; 69
     b88:	93 30       	cpi	r25, 0x03	; 3
     b8a:	28 f4       	brcc	.+10     	; 0xb96 <vfprintf+0xee>
     b8c:	0c 5f       	subi	r16, 0xFC	; 252
     b8e:	1f 4f       	sbci	r17, 0xFF	; 255
     b90:	ff e3       	ldi	r31, 0x3F	; 63
     b92:	f9 83       	std	Y+1, r31	; 0x01
     b94:	0d c0       	rjmp	.+26     	; 0xbb0 <vfprintf+0x108>
     b96:	83 36       	cpi	r24, 0x63	; 99
     b98:	31 f0       	breq	.+12     	; 0xba6 <vfprintf+0xfe>
     b9a:	83 37       	cpi	r24, 0x73	; 115
     b9c:	71 f0       	breq	.+28     	; 0xbba <vfprintf+0x112>
     b9e:	83 35       	cpi	r24, 0x53	; 83
     ba0:	09 f0       	breq	.+2      	; 0xba4 <vfprintf+0xfc>
     ba2:	5b c0       	rjmp	.+182    	; 0xc5a <vfprintf+0x1b2>
     ba4:	22 c0       	rjmp	.+68     	; 0xbea <vfprintf+0x142>
     ba6:	f8 01       	movw	r30, r16
     ba8:	80 81       	ld	r24, Z
     baa:	89 83       	std	Y+1, r24	; 0x01
     bac:	0e 5f       	subi	r16, 0xFE	; 254
     bae:	1f 4f       	sbci	r17, 0xFF	; 255
     bb0:	44 24       	eor	r4, r4
     bb2:	43 94       	inc	r4
     bb4:	51 2c       	mov	r5, r1
     bb6:	54 01       	movw	r10, r8
     bb8:	15 c0       	rjmp	.+42     	; 0xbe4 <vfprintf+0x13c>
     bba:	38 01       	movw	r6, r16
     bbc:	f2 e0       	ldi	r31, 0x02	; 2
     bbe:	6f 0e       	add	r6, r31
     bc0:	71 1c       	adc	r7, r1
     bc2:	f8 01       	movw	r30, r16
     bc4:	a0 80       	ld	r10, Z
     bc6:	b1 80       	ldd	r11, Z+1	; 0x01
     bc8:	26 ff       	sbrs	r18, 6
     bca:	03 c0       	rjmp	.+6      	; 0xbd2 <vfprintf+0x12a>
     bcc:	65 2d       	mov	r22, r5
     bce:	70 e0       	ldi	r23, 0x00	; 0
     bd0:	02 c0       	rjmp	.+4      	; 0xbd6 <vfprintf+0x12e>
     bd2:	6f ef       	ldi	r22, 0xFF	; 255
     bd4:	7f ef       	ldi	r23, 0xFF	; 255
     bd6:	c5 01       	movw	r24, r10
     bd8:	2c 87       	std	Y+12, r18	; 0x0c
     bda:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <strnlen>
     bde:	2c 01       	movw	r4, r24
     be0:	83 01       	movw	r16, r6
     be2:	2c 85       	ldd	r18, Y+12	; 0x0c
     be4:	2f 77       	andi	r18, 0x7F	; 127
     be6:	22 2e       	mov	r2, r18
     be8:	17 c0       	rjmp	.+46     	; 0xc18 <vfprintf+0x170>
     bea:	38 01       	movw	r6, r16
     bec:	f2 e0       	ldi	r31, 0x02	; 2
     bee:	6f 0e       	add	r6, r31
     bf0:	71 1c       	adc	r7, r1
     bf2:	f8 01       	movw	r30, r16
     bf4:	a0 80       	ld	r10, Z
     bf6:	b1 80       	ldd	r11, Z+1	; 0x01
     bf8:	26 ff       	sbrs	r18, 6
     bfa:	03 c0       	rjmp	.+6      	; 0xc02 <vfprintf+0x15a>
     bfc:	65 2d       	mov	r22, r5
     bfe:	70 e0       	ldi	r23, 0x00	; 0
     c00:	02 c0       	rjmp	.+4      	; 0xc06 <vfprintf+0x15e>
     c02:	6f ef       	ldi	r22, 0xFF	; 255
     c04:	7f ef       	ldi	r23, 0xFF	; 255
     c06:	c5 01       	movw	r24, r10
     c08:	2c 87       	std	Y+12, r18	; 0x0c
     c0a:	0e 94 ee 09 	call	0x13dc	; 0x13dc <strnlen_P>
     c0e:	2c 01       	movw	r4, r24
     c10:	2c 85       	ldd	r18, Y+12	; 0x0c
     c12:	20 68       	ori	r18, 0x80	; 128
     c14:	22 2e       	mov	r2, r18
     c16:	83 01       	movw	r16, r6
     c18:	23 fc       	sbrc	r2, 3
     c1a:	1b c0       	rjmp	.+54     	; 0xc52 <vfprintf+0x1aa>
     c1c:	83 2d       	mov	r24, r3
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	48 16       	cp	r4, r24
     c22:	59 06       	cpc	r5, r25
     c24:	b0 f4       	brcc	.+44     	; 0xc52 <vfprintf+0x1aa>
     c26:	b7 01       	movw	r22, r14
     c28:	80 e2       	ldi	r24, 0x20	; 32
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	0e 94 42 0a 	call	0x1484	; 0x1484 <fputc>
     c30:	3a 94       	dec	r3
     c32:	f4 cf       	rjmp	.-24     	; 0xc1c <vfprintf+0x174>
     c34:	f5 01       	movw	r30, r10
     c36:	27 fc       	sbrc	r2, 7
     c38:	85 91       	lpm	r24, Z+
     c3a:	27 fe       	sbrs	r2, 7
     c3c:	81 91       	ld	r24, Z+
     c3e:	5f 01       	movw	r10, r30
     c40:	b7 01       	movw	r22, r14
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	0e 94 42 0a 	call	0x1484	; 0x1484 <fputc>
     c48:	31 10       	cpse	r3, r1
     c4a:	3a 94       	dec	r3
     c4c:	f1 e0       	ldi	r31, 0x01	; 1
     c4e:	4f 1a       	sub	r4, r31
     c50:	51 08       	sbc	r5, r1
     c52:	41 14       	cp	r4, r1
     c54:	51 04       	cpc	r5, r1
     c56:	71 f7       	brne	.-36     	; 0xc34 <vfprintf+0x18c>
     c58:	e5 c0       	rjmp	.+458    	; 0xe24 <vfprintf+0x37c>
     c5a:	84 36       	cpi	r24, 0x64	; 100
     c5c:	11 f0       	breq	.+4      	; 0xc62 <vfprintf+0x1ba>
     c5e:	89 36       	cpi	r24, 0x69	; 105
     c60:	39 f5       	brne	.+78     	; 0xcb0 <vfprintf+0x208>
     c62:	f8 01       	movw	r30, r16
     c64:	27 ff       	sbrs	r18, 7
     c66:	07 c0       	rjmp	.+14     	; 0xc76 <vfprintf+0x1ce>
     c68:	60 81       	ld	r22, Z
     c6a:	71 81       	ldd	r23, Z+1	; 0x01
     c6c:	82 81       	ldd	r24, Z+2	; 0x02
     c6e:	93 81       	ldd	r25, Z+3	; 0x03
     c70:	0c 5f       	subi	r16, 0xFC	; 252
     c72:	1f 4f       	sbci	r17, 0xFF	; 255
     c74:	08 c0       	rjmp	.+16     	; 0xc86 <vfprintf+0x1de>
     c76:	60 81       	ld	r22, Z
     c78:	71 81       	ldd	r23, Z+1	; 0x01
     c7a:	88 27       	eor	r24, r24
     c7c:	77 fd       	sbrc	r23, 7
     c7e:	80 95       	com	r24
     c80:	98 2f       	mov	r25, r24
     c82:	0e 5f       	subi	r16, 0xFE	; 254
     c84:	1f 4f       	sbci	r17, 0xFF	; 255
     c86:	2f 76       	andi	r18, 0x6F	; 111
     c88:	b2 2e       	mov	r11, r18
     c8a:	97 ff       	sbrs	r25, 7
     c8c:	09 c0       	rjmp	.+18     	; 0xca0 <vfprintf+0x1f8>
     c8e:	90 95       	com	r25
     c90:	80 95       	com	r24
     c92:	70 95       	com	r23
     c94:	61 95       	neg	r22
     c96:	7f 4f       	sbci	r23, 0xFF	; 255
     c98:	8f 4f       	sbci	r24, 0xFF	; 255
     c9a:	9f 4f       	sbci	r25, 0xFF	; 255
     c9c:	20 68       	ori	r18, 0x80	; 128
     c9e:	b2 2e       	mov	r11, r18
     ca0:	2a e0       	ldi	r18, 0x0A	; 10
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	a4 01       	movw	r20, r8
     ca6:	0e 94 8d 0a 	call	0x151a	; 0x151a <__ultoa_invert>
     caa:	a8 2e       	mov	r10, r24
     cac:	a8 18       	sub	r10, r8
     cae:	44 c0       	rjmp	.+136    	; 0xd38 <vfprintf+0x290>
     cb0:	85 37       	cpi	r24, 0x75	; 117
     cb2:	29 f4       	brne	.+10     	; 0xcbe <vfprintf+0x216>
     cb4:	2f 7e       	andi	r18, 0xEF	; 239
     cb6:	b2 2e       	mov	r11, r18
     cb8:	2a e0       	ldi	r18, 0x0A	; 10
     cba:	30 e0       	ldi	r19, 0x00	; 0
     cbc:	25 c0       	rjmp	.+74     	; 0xd08 <vfprintf+0x260>
     cbe:	f2 2f       	mov	r31, r18
     cc0:	f9 7f       	andi	r31, 0xF9	; 249
     cc2:	bf 2e       	mov	r11, r31
     cc4:	8f 36       	cpi	r24, 0x6F	; 111
     cc6:	c1 f0       	breq	.+48     	; 0xcf8 <vfprintf+0x250>
     cc8:	18 f4       	brcc	.+6      	; 0xcd0 <vfprintf+0x228>
     cca:	88 35       	cpi	r24, 0x58	; 88
     ccc:	79 f0       	breq	.+30     	; 0xcec <vfprintf+0x244>
     cce:	b4 c0       	rjmp	.+360    	; 0xe38 <vfprintf+0x390>
     cd0:	80 37       	cpi	r24, 0x70	; 112
     cd2:	19 f0       	breq	.+6      	; 0xcda <vfprintf+0x232>
     cd4:	88 37       	cpi	r24, 0x78	; 120
     cd6:	21 f0       	breq	.+8      	; 0xce0 <vfprintf+0x238>
     cd8:	af c0       	rjmp	.+350    	; 0xe38 <vfprintf+0x390>
     cda:	2f 2f       	mov	r18, r31
     cdc:	20 61       	ori	r18, 0x10	; 16
     cde:	b2 2e       	mov	r11, r18
     ce0:	b4 fe       	sbrs	r11, 4
     ce2:	0d c0       	rjmp	.+26     	; 0xcfe <vfprintf+0x256>
     ce4:	8b 2d       	mov	r24, r11
     ce6:	84 60       	ori	r24, 0x04	; 4
     ce8:	b8 2e       	mov	r11, r24
     cea:	09 c0       	rjmp	.+18     	; 0xcfe <vfprintf+0x256>
     cec:	24 ff       	sbrs	r18, 4
     cee:	0a c0       	rjmp	.+20     	; 0xd04 <vfprintf+0x25c>
     cf0:	9f 2f       	mov	r25, r31
     cf2:	96 60       	ori	r25, 0x06	; 6
     cf4:	b9 2e       	mov	r11, r25
     cf6:	06 c0       	rjmp	.+12     	; 0xd04 <vfprintf+0x25c>
     cf8:	28 e0       	ldi	r18, 0x08	; 8
     cfa:	30 e0       	ldi	r19, 0x00	; 0
     cfc:	05 c0       	rjmp	.+10     	; 0xd08 <vfprintf+0x260>
     cfe:	20 e1       	ldi	r18, 0x10	; 16
     d00:	30 e0       	ldi	r19, 0x00	; 0
     d02:	02 c0       	rjmp	.+4      	; 0xd08 <vfprintf+0x260>
     d04:	20 e1       	ldi	r18, 0x10	; 16
     d06:	32 e0       	ldi	r19, 0x02	; 2
     d08:	f8 01       	movw	r30, r16
     d0a:	b7 fe       	sbrs	r11, 7
     d0c:	07 c0       	rjmp	.+14     	; 0xd1c <vfprintf+0x274>
     d0e:	60 81       	ld	r22, Z
     d10:	71 81       	ldd	r23, Z+1	; 0x01
     d12:	82 81       	ldd	r24, Z+2	; 0x02
     d14:	93 81       	ldd	r25, Z+3	; 0x03
     d16:	0c 5f       	subi	r16, 0xFC	; 252
     d18:	1f 4f       	sbci	r17, 0xFF	; 255
     d1a:	06 c0       	rjmp	.+12     	; 0xd28 <vfprintf+0x280>
     d1c:	60 81       	ld	r22, Z
     d1e:	71 81       	ldd	r23, Z+1	; 0x01
     d20:	80 e0       	ldi	r24, 0x00	; 0
     d22:	90 e0       	ldi	r25, 0x00	; 0
     d24:	0e 5f       	subi	r16, 0xFE	; 254
     d26:	1f 4f       	sbci	r17, 0xFF	; 255
     d28:	a4 01       	movw	r20, r8
     d2a:	0e 94 8d 0a 	call	0x151a	; 0x151a <__ultoa_invert>
     d2e:	a8 2e       	mov	r10, r24
     d30:	a8 18       	sub	r10, r8
     d32:	fb 2d       	mov	r31, r11
     d34:	ff 77       	andi	r31, 0x7F	; 127
     d36:	bf 2e       	mov	r11, r31
     d38:	b6 fe       	sbrs	r11, 6
     d3a:	0b c0       	rjmp	.+22     	; 0xd52 <vfprintf+0x2aa>
     d3c:	2b 2d       	mov	r18, r11
     d3e:	2e 7f       	andi	r18, 0xFE	; 254
     d40:	a5 14       	cp	r10, r5
     d42:	50 f4       	brcc	.+20     	; 0xd58 <vfprintf+0x2b0>
     d44:	b4 fe       	sbrs	r11, 4
     d46:	0a c0       	rjmp	.+20     	; 0xd5c <vfprintf+0x2b4>
     d48:	b2 fc       	sbrc	r11, 2
     d4a:	08 c0       	rjmp	.+16     	; 0xd5c <vfprintf+0x2b4>
     d4c:	2b 2d       	mov	r18, r11
     d4e:	2e 7e       	andi	r18, 0xEE	; 238
     d50:	05 c0       	rjmp	.+10     	; 0xd5c <vfprintf+0x2b4>
     d52:	7a 2c       	mov	r7, r10
     d54:	2b 2d       	mov	r18, r11
     d56:	03 c0       	rjmp	.+6      	; 0xd5e <vfprintf+0x2b6>
     d58:	7a 2c       	mov	r7, r10
     d5a:	01 c0       	rjmp	.+2      	; 0xd5e <vfprintf+0x2b6>
     d5c:	75 2c       	mov	r7, r5
     d5e:	24 ff       	sbrs	r18, 4
     d60:	0d c0       	rjmp	.+26     	; 0xd7c <vfprintf+0x2d4>
     d62:	fe 01       	movw	r30, r28
     d64:	ea 0d       	add	r30, r10
     d66:	f1 1d       	adc	r31, r1
     d68:	80 81       	ld	r24, Z
     d6a:	80 33       	cpi	r24, 0x30	; 48
     d6c:	11 f4       	brne	.+4      	; 0xd72 <vfprintf+0x2ca>
     d6e:	29 7e       	andi	r18, 0xE9	; 233
     d70:	09 c0       	rjmp	.+18     	; 0xd84 <vfprintf+0x2dc>
     d72:	22 ff       	sbrs	r18, 2
     d74:	06 c0       	rjmp	.+12     	; 0xd82 <vfprintf+0x2da>
     d76:	73 94       	inc	r7
     d78:	73 94       	inc	r7
     d7a:	04 c0       	rjmp	.+8      	; 0xd84 <vfprintf+0x2dc>
     d7c:	82 2f       	mov	r24, r18
     d7e:	86 78       	andi	r24, 0x86	; 134
     d80:	09 f0       	breq	.+2      	; 0xd84 <vfprintf+0x2dc>
     d82:	73 94       	inc	r7
     d84:	23 fd       	sbrc	r18, 3
     d86:	13 c0       	rjmp	.+38     	; 0xdae <vfprintf+0x306>
     d88:	20 ff       	sbrs	r18, 0
     d8a:	06 c0       	rjmp	.+12     	; 0xd98 <vfprintf+0x2f0>
     d8c:	5a 2c       	mov	r5, r10
     d8e:	73 14       	cp	r7, r3
     d90:	18 f4       	brcc	.+6      	; 0xd98 <vfprintf+0x2f0>
     d92:	53 0c       	add	r5, r3
     d94:	57 18       	sub	r5, r7
     d96:	73 2c       	mov	r7, r3
     d98:	73 14       	cp	r7, r3
     d9a:	68 f4       	brcc	.+26     	; 0xdb6 <vfprintf+0x30e>
     d9c:	b7 01       	movw	r22, r14
     d9e:	80 e2       	ldi	r24, 0x20	; 32
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	2c 87       	std	Y+12, r18	; 0x0c
     da4:	0e 94 42 0a 	call	0x1484	; 0x1484 <fputc>
     da8:	73 94       	inc	r7
     daa:	2c 85       	ldd	r18, Y+12	; 0x0c
     dac:	f5 cf       	rjmp	.-22     	; 0xd98 <vfprintf+0x2f0>
     dae:	73 14       	cp	r7, r3
     db0:	10 f4       	brcc	.+4      	; 0xdb6 <vfprintf+0x30e>
     db2:	37 18       	sub	r3, r7
     db4:	01 c0       	rjmp	.+2      	; 0xdb8 <vfprintf+0x310>
     db6:	31 2c       	mov	r3, r1
     db8:	24 ff       	sbrs	r18, 4
     dba:	12 c0       	rjmp	.+36     	; 0xde0 <vfprintf+0x338>
     dbc:	b7 01       	movw	r22, r14
     dbe:	80 e3       	ldi	r24, 0x30	; 48
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	2c 87       	std	Y+12, r18	; 0x0c
     dc4:	0e 94 42 0a 	call	0x1484	; 0x1484 <fputc>
     dc8:	2c 85       	ldd	r18, Y+12	; 0x0c
     dca:	22 ff       	sbrs	r18, 2
     dcc:	17 c0       	rjmp	.+46     	; 0xdfc <vfprintf+0x354>
     dce:	21 ff       	sbrs	r18, 1
     dd0:	03 c0       	rjmp	.+6      	; 0xdd8 <vfprintf+0x330>
     dd2:	88 e5       	ldi	r24, 0x58	; 88
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	02 c0       	rjmp	.+4      	; 0xddc <vfprintf+0x334>
     dd8:	88 e7       	ldi	r24, 0x78	; 120
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	b7 01       	movw	r22, r14
     dde:	0c c0       	rjmp	.+24     	; 0xdf8 <vfprintf+0x350>
     de0:	82 2f       	mov	r24, r18
     de2:	86 78       	andi	r24, 0x86	; 134
     de4:	59 f0       	breq	.+22     	; 0xdfc <vfprintf+0x354>
     de6:	21 fd       	sbrc	r18, 1
     de8:	02 c0       	rjmp	.+4      	; 0xdee <vfprintf+0x346>
     dea:	80 e2       	ldi	r24, 0x20	; 32
     dec:	01 c0       	rjmp	.+2      	; 0xdf0 <vfprintf+0x348>
     dee:	8b e2       	ldi	r24, 0x2B	; 43
     df0:	27 fd       	sbrc	r18, 7
     df2:	8d e2       	ldi	r24, 0x2D	; 45
     df4:	b7 01       	movw	r22, r14
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	0e 94 42 0a 	call	0x1484	; 0x1484 <fputc>
     dfc:	a5 14       	cp	r10, r5
     dfe:	38 f4       	brcc	.+14     	; 0xe0e <vfprintf+0x366>
     e00:	b7 01       	movw	r22, r14
     e02:	80 e3       	ldi	r24, 0x30	; 48
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	0e 94 42 0a 	call	0x1484	; 0x1484 <fputc>
     e0a:	5a 94       	dec	r5
     e0c:	f7 cf       	rjmp	.-18     	; 0xdfc <vfprintf+0x354>
     e0e:	aa 94       	dec	r10
     e10:	f4 01       	movw	r30, r8
     e12:	ea 0d       	add	r30, r10
     e14:	f1 1d       	adc	r31, r1
     e16:	80 81       	ld	r24, Z
     e18:	b7 01       	movw	r22, r14
     e1a:	90 e0       	ldi	r25, 0x00	; 0
     e1c:	0e 94 42 0a 	call	0x1484	; 0x1484 <fputc>
     e20:	a1 10       	cpse	r10, r1
     e22:	f5 cf       	rjmp	.-22     	; 0xe0e <vfprintf+0x366>
     e24:	33 20       	and	r3, r3
     e26:	09 f4       	brne	.+2      	; 0xe2a <vfprintf+0x382>
     e28:	51 ce       	rjmp	.-862    	; 0xacc <vfprintf+0x24>
     e2a:	b7 01       	movw	r22, r14
     e2c:	80 e2       	ldi	r24, 0x20	; 32
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	0e 94 42 0a 	call	0x1484	; 0x1484 <fputc>
     e34:	3a 94       	dec	r3
     e36:	f6 cf       	rjmp	.-20     	; 0xe24 <vfprintf+0x37c>
     e38:	f7 01       	movw	r30, r14
     e3a:	86 81       	ldd	r24, Z+6	; 0x06
     e3c:	97 81       	ldd	r25, Z+7	; 0x07
     e3e:	02 c0       	rjmp	.+4      	; 0xe44 <vfprintf+0x39c>
     e40:	8f ef       	ldi	r24, 0xFF	; 255
     e42:	9f ef       	ldi	r25, 0xFF	; 255
     e44:	2c 96       	adiw	r28, 0x0c	; 12
     e46:	e2 e1       	ldi	r30, 0x12	; 18
     e48:	0c 94 3c 0b 	jmp	0x1678	; 0x1678 <__epilogue_restores__>

00000e4c <putval>:
     e4c:	20 fd       	sbrc	r18, 0
     e4e:	09 c0       	rjmp	.+18     	; 0xe62 <putval+0x16>
     e50:	fc 01       	movw	r30, r24
     e52:	23 fd       	sbrc	r18, 3
     e54:	05 c0       	rjmp	.+10     	; 0xe60 <putval+0x14>
     e56:	22 ff       	sbrs	r18, 2
     e58:	02 c0       	rjmp	.+4      	; 0xe5e <putval+0x12>
     e5a:	73 83       	std	Z+3, r23	; 0x03
     e5c:	62 83       	std	Z+2, r22	; 0x02
     e5e:	51 83       	std	Z+1, r21	; 0x01
     e60:	40 83       	st	Z, r20
     e62:	08 95       	ret

00000e64 <mulacc>:
     e64:	44 fd       	sbrc	r20, 4
     e66:	10 c0       	rjmp	.+32     	; 0xe88 <mulacc+0x24>
     e68:	46 fd       	sbrc	r20, 6
     e6a:	10 c0       	rjmp	.+32     	; 0xe8c <mulacc+0x28>
     e6c:	db 01       	movw	r26, r22
     e6e:	fc 01       	movw	r30, r24
     e70:	aa 0f       	add	r26, r26
     e72:	bb 1f       	adc	r27, r27
     e74:	ee 1f       	adc	r30, r30
     e76:	ff 1f       	adc	r31, r31
     e78:	10 94       	com	r1
     e7a:	d1 f7       	brne	.-12     	; 0xe70 <mulacc+0xc>
     e7c:	6a 0f       	add	r22, r26
     e7e:	7b 1f       	adc	r23, r27
     e80:	8e 1f       	adc	r24, r30
     e82:	9f 1f       	adc	r25, r31
     e84:	31 e0       	ldi	r19, 0x01	; 1
     e86:	03 c0       	rjmp	.+6      	; 0xe8e <mulacc+0x2a>
     e88:	33 e0       	ldi	r19, 0x03	; 3
     e8a:	01 c0       	rjmp	.+2      	; 0xe8e <mulacc+0x2a>
     e8c:	34 e0       	ldi	r19, 0x04	; 4
     e8e:	66 0f       	add	r22, r22
     e90:	77 1f       	adc	r23, r23
     e92:	88 1f       	adc	r24, r24
     e94:	99 1f       	adc	r25, r25
     e96:	31 50       	subi	r19, 0x01	; 1
     e98:	d1 f7       	brne	.-12     	; 0xe8e <mulacc+0x2a>
     e9a:	62 0f       	add	r22, r18
     e9c:	71 1d       	adc	r23, r1
     e9e:	81 1d       	adc	r24, r1
     ea0:	91 1d       	adc	r25, r1
     ea2:	08 95       	ret

00000ea4 <skip_spaces>:
     ea4:	0f 93       	push	r16
     ea6:	1f 93       	push	r17
     ea8:	cf 93       	push	r28
     eaa:	df 93       	push	r29
     eac:	8c 01       	movw	r16, r24
     eae:	c8 01       	movw	r24, r16
     eb0:	0e 94 04 0a 	call	0x1408	; 0x1408 <fgetc>
     eb4:	ec 01       	movw	r28, r24
     eb6:	97 fd       	sbrc	r25, 7
     eb8:	08 c0       	rjmp	.+16     	; 0xeca <skip_spaces+0x26>
     eba:	0e 94 db 09 	call	0x13b6	; 0x13b6 <isspace>
     ebe:	89 2b       	or	r24, r25
     ec0:	b1 f7       	brne	.-20     	; 0xeae <skip_spaces+0xa>
     ec2:	b8 01       	movw	r22, r16
     ec4:	ce 01       	movw	r24, r28
     ec6:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <ungetc>
     eca:	ce 01       	movw	r24, r28
     ecc:	df 91       	pop	r29
     ece:	cf 91       	pop	r28
     ed0:	1f 91       	pop	r17
     ed2:	0f 91       	pop	r16
     ed4:	08 95       	ret

00000ed6 <conv_int>:
     ed6:	8f 92       	push	r8
     ed8:	9f 92       	push	r9
     eda:	af 92       	push	r10
     edc:	cf 92       	push	r12
     ede:	df 92       	push	r13
     ee0:	ef 92       	push	r14
     ee2:	ff 92       	push	r15
     ee4:	0f 93       	push	r16
     ee6:	1f 93       	push	r17
     ee8:	cf 93       	push	r28
     eea:	df 93       	push	r29
     eec:	ec 01       	movw	r28, r24
     eee:	a6 2e       	mov	r10, r22
     ef0:	4a 01       	movw	r8, r20
     ef2:	02 2f       	mov	r16, r18
     ef4:	0e 94 04 0a 	call	0x1408	; 0x1408 <fgetc>
     ef8:	ac 01       	movw	r20, r24
     efa:	55 27       	eor	r21, r21
     efc:	4b 32       	cpi	r20, 0x2B	; 43
     efe:	51 05       	cpc	r21, r1
     f00:	21 f0       	breq	.+8      	; 0xf0a <conv_int+0x34>
     f02:	4d 32       	cpi	r20, 0x2D	; 45
     f04:	51 05       	cpc	r21, r1
     f06:	51 f4       	brne	.+20     	; 0xf1c <conv_int+0x46>
     f08:	00 68       	ori	r16, 0x80	; 128
     f0a:	aa 94       	dec	r10
     f0c:	11 f4       	brne	.+4      	; 0xf12 <conv_int+0x3c>
     f0e:	80 e0       	ldi	r24, 0x00	; 0
     f10:	67 c0       	rjmp	.+206    	; 0xfe0 <conv_int+0x10a>
     f12:	ce 01       	movw	r24, r28
     f14:	0e 94 04 0a 	call	0x1408	; 0x1408 <fgetc>
     f18:	97 fd       	sbrc	r25, 7
     f1a:	f9 cf       	rjmp	.-14     	; 0xf0e <conv_int+0x38>
     f1c:	10 2f       	mov	r17, r16
     f1e:	1d 7f       	andi	r17, 0xFD	; 253
     f20:	30 2f       	mov	r19, r16
     f22:	30 73       	andi	r19, 0x30	; 48
     f24:	01 f5       	brne	.+64     	; 0xf66 <conv_int+0x90>
     f26:	80 33       	cpi	r24, 0x30	; 48
     f28:	f1 f4       	brne	.+60     	; 0xf66 <conv_int+0x90>
     f2a:	ff 24       	eor	r15, r15
     f2c:	fa 94       	dec	r15
     f2e:	fa 0c       	add	r15, r10
     f30:	09 f4       	brne	.+2      	; 0xf34 <conv_int+0x5e>
     f32:	42 c0       	rjmp	.+132    	; 0xfb8 <conv_int+0xe2>
     f34:	ce 01       	movw	r24, r28
     f36:	0e 94 04 0a 	call	0x1408	; 0x1408 <fgetc>
     f3a:	97 fd       	sbrc	r25, 7
     f3c:	3d c0       	rjmp	.+122    	; 0xfb8 <conv_int+0xe2>
     f3e:	38 2f       	mov	r19, r24
     f40:	3f 7d       	andi	r19, 0xDF	; 223
     f42:	38 35       	cpi	r19, 0x58	; 88
     f44:	51 f4       	brne	.+20     	; 0xf5a <conv_int+0x84>
     f46:	12 64       	ori	r17, 0x42	; 66
     f48:	aa 94       	dec	r10
     f4a:	aa 94       	dec	r10
     f4c:	a9 f1       	breq	.+106    	; 0xfb8 <conv_int+0xe2>
     f4e:	ce 01       	movw	r24, r28
     f50:	0e 94 04 0a 	call	0x1408	; 0x1408 <fgetc>
     f54:	97 ff       	sbrs	r25, 7
     f56:	07 c0       	rjmp	.+14     	; 0xf66 <conv_int+0x90>
     f58:	2f c0       	rjmp	.+94     	; 0xfb8 <conv_int+0xe2>
     f5a:	06 ff       	sbrs	r16, 6
     f5c:	02 c0       	rjmp	.+4      	; 0xf62 <conv_int+0x8c>
     f5e:	12 60       	ori	r17, 0x02	; 2
     f60:	01 c0       	rjmp	.+2      	; 0xf64 <conv_int+0x8e>
     f62:	12 61       	ori	r17, 0x12	; 18
     f64:	af 2c       	mov	r10, r15
     f66:	c1 2c       	mov	r12, r1
     f68:	d1 2c       	mov	r13, r1
     f6a:	76 01       	movw	r14, r12
     f6c:	20 ed       	ldi	r18, 0xD0	; 208
     f6e:	28 0f       	add	r18, r24
     f70:	28 30       	cpi	r18, 0x08	; 8
     f72:	80 f0       	brcs	.+32     	; 0xf94 <conv_int+0xbe>
     f74:	14 ff       	sbrs	r17, 4
     f76:	04 c0       	rjmp	.+8      	; 0xf80 <conv_int+0xaa>
     f78:	be 01       	movw	r22, r28
     f7a:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <ungetc>
     f7e:	19 c0       	rjmp	.+50     	; 0xfb2 <conv_int+0xdc>
     f80:	2a 30       	cpi	r18, 0x0A	; 10
     f82:	40 f0       	brcs	.+16     	; 0xf94 <conv_int+0xbe>
     f84:	16 ff       	sbrs	r17, 6
     f86:	f8 cf       	rjmp	.-16     	; 0xf78 <conv_int+0xa2>
     f88:	2f 7d       	andi	r18, 0xDF	; 223
     f8a:	3f ee       	ldi	r19, 0xEF	; 239
     f8c:	32 0f       	add	r19, r18
     f8e:	36 30       	cpi	r19, 0x06	; 6
     f90:	98 f7       	brcc	.-26     	; 0xf78 <conv_int+0xa2>
     f92:	27 50       	subi	r18, 0x07	; 7
     f94:	41 2f       	mov	r20, r17
     f96:	c7 01       	movw	r24, r14
     f98:	b6 01       	movw	r22, r12
     f9a:	0e 94 32 07 	call	0xe64	; 0xe64 <mulacc>
     f9e:	6b 01       	movw	r12, r22
     fa0:	7c 01       	movw	r14, r24
     fa2:	12 60       	ori	r17, 0x02	; 2
     fa4:	aa 94       	dec	r10
     fa6:	59 f0       	breq	.+22     	; 0xfbe <conv_int+0xe8>
     fa8:	ce 01       	movw	r24, r28
     faa:	0e 94 04 0a 	call	0x1408	; 0x1408 <fgetc>
     fae:	97 ff       	sbrs	r25, 7
     fb0:	dd cf       	rjmp	.-70     	; 0xf6c <conv_int+0x96>
     fb2:	11 fd       	sbrc	r17, 1
     fb4:	04 c0       	rjmp	.+8      	; 0xfbe <conv_int+0xe8>
     fb6:	ab cf       	rjmp	.-170    	; 0xf0e <conv_int+0x38>
     fb8:	c1 2c       	mov	r12, r1
     fba:	d1 2c       	mov	r13, r1
     fbc:	76 01       	movw	r14, r12
     fbe:	17 ff       	sbrs	r17, 7
     fc0:	08 c0       	rjmp	.+16     	; 0xfd2 <conv_int+0xfc>
     fc2:	f0 94       	com	r15
     fc4:	e0 94       	com	r14
     fc6:	d0 94       	com	r13
     fc8:	c0 94       	com	r12
     fca:	c1 1c       	adc	r12, r1
     fcc:	d1 1c       	adc	r13, r1
     fce:	e1 1c       	adc	r14, r1
     fd0:	f1 1c       	adc	r15, r1
     fd2:	21 2f       	mov	r18, r17
     fd4:	b7 01       	movw	r22, r14
     fd6:	a6 01       	movw	r20, r12
     fd8:	c4 01       	movw	r24, r8
     fda:	0e 94 26 07 	call	0xe4c	; 0xe4c <putval>
     fde:	81 e0       	ldi	r24, 0x01	; 1
     fe0:	df 91       	pop	r29
     fe2:	cf 91       	pop	r28
     fe4:	1f 91       	pop	r17
     fe6:	0f 91       	pop	r16
     fe8:	ff 90       	pop	r15
     fea:	ef 90       	pop	r14
     fec:	df 90       	pop	r13
     fee:	cf 90       	pop	r12
     ff0:	af 90       	pop	r10
     ff2:	9f 90       	pop	r9
     ff4:	8f 90       	pop	r8
     ff6:	08 95       	ret

00000ff8 <conv_brk>:
     ff8:	a1 e2       	ldi	r26, 0x21	; 33
     ffa:	b0 e0       	ldi	r27, 0x00	; 0
     ffc:	e2 e0       	ldi	r30, 0x02	; 2
     ffe:	f8 e0       	ldi	r31, 0x08	; 8
    1000:	0c 94 25 0b 	jmp	0x164a	; 0x164a <__prologue_saves__+0xa>
    1004:	5c 01       	movw	r10, r24
    1006:	7a 01       	movw	r14, r20
    1008:	8e 01       	movw	r16, r28
    100a:	0f 5f       	subi	r16, 0xFF	; 255
    100c:	1f 4f       	sbci	r17, 0xFF	; 255
    100e:	68 01       	movw	r12, r16
    1010:	80 e2       	ldi	r24, 0x20	; 32
    1012:	d8 01       	movw	r26, r16
    1014:	1d 92       	st	X+, r1
    1016:	8a 95       	dec	r24
    1018:	e9 f7       	brne	.-6      	; 0x1014 <conv_brk+0x1c>
    101a:	f5 01       	movw	r30, r10
    101c:	73 80       	ldd	r7, Z+3	; 0x03
    101e:	40 e0       	ldi	r20, 0x00	; 0
    1020:	50 e0       	ldi	r21, 0x00	; 0
    1022:	81 2c       	mov	r8, r1
    1024:	b0 e0       	ldi	r27, 0x00	; 0
    1026:	91 2c       	mov	r9, r1
    1028:	81 e0       	ldi	r24, 0x01	; 1
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	f9 01       	movw	r30, r18
    102e:	73 fc       	sbrc	r7, 3
    1030:	a5 91       	lpm	r26, Z+
    1032:	73 fe       	sbrs	r7, 3
    1034:	a1 91       	ld	r26, Z+
    1036:	8f 01       	movw	r16, r30
    1038:	7a 2f       	mov	r23, r26
    103a:	9f 01       	movw	r18, r30
    103c:	a1 11       	cpse	r26, r1
    103e:	03 c0       	rjmp	.+6      	; 0x1046 <conv_brk+0x4e>
    1040:	80 e0       	ldi	r24, 0x00	; 0
    1042:	90 e0       	ldi	r25, 0x00	; 0
    1044:	7d c0       	rjmp	.+250    	; 0x1140 <conv_brk+0x148>
    1046:	ae 35       	cpi	r26, 0x5E	; 94
    1048:	19 f4       	brne	.+6      	; 0x1050 <conv_brk+0x58>
    104a:	41 15       	cp	r20, r1
    104c:	51 05       	cpc	r21, r1
    104e:	59 f1       	breq	.+86     	; 0x10a6 <conv_brk+0xae>
    1050:	e9 2d       	mov	r30, r9
    1052:	f0 e0       	ldi	r31, 0x00	; 0
    1054:	e4 17       	cp	r30, r20
    1056:	f5 07       	cpc	r31, r21
    1058:	3c f4       	brge	.+14     	; 0x1068 <conv_brk+0x70>
    105a:	ad 35       	cpi	r26, 0x5D	; 93
    105c:	69 f1       	breq	.+90     	; 0x10b8 <conv_brk+0xc0>
    105e:	ad 32       	cpi	r26, 0x2D	; 45
    1060:	19 f4       	brne	.+6      	; 0x1068 <conv_brk+0x70>
    1062:	bb 23       	and	r27, r27
    1064:	19 f1       	breq	.+70     	; 0x10ac <conv_brk+0xb4>
    1066:	03 c0       	rjmp	.+6      	; 0x106e <conv_brk+0x76>
    1068:	b1 11       	cpse	r27, r1
    106a:	01 c0       	rjmp	.+2      	; 0x106e <conv_brk+0x76>
    106c:	8a 2e       	mov	r8, r26
    106e:	e7 2f       	mov	r30, r23
    1070:	e6 95       	lsr	r30
    1072:	e6 95       	lsr	r30
    1074:	e6 95       	lsr	r30
    1076:	86 01       	movw	r16, r12
    1078:	0e 0f       	add	r16, r30
    107a:	11 1d       	adc	r17, r1
    107c:	f8 01       	movw	r30, r16
    107e:	a7 2f       	mov	r26, r23
    1080:	a7 70       	andi	r26, 0x07	; 7
    1082:	8c 01       	movw	r16, r24
    1084:	02 c0       	rjmp	.+4      	; 0x108a <conv_brk+0x92>
    1086:	00 0f       	add	r16, r16
    1088:	11 1f       	adc	r17, r17
    108a:	aa 95       	dec	r26
    108c:	e2 f7       	brpl	.-8      	; 0x1086 <conv_brk+0x8e>
    108e:	d8 01       	movw	r26, r16
    1090:	b0 81       	ld	r27, Z
    1092:	ba 2b       	or	r27, r26
    1094:	b0 83       	st	Z, r27
    1096:	78 15       	cp	r23, r8
    1098:	59 f0       	breq	.+22     	; 0x10b0 <conv_brk+0xb8>
    109a:	78 15       	cp	r23, r8
    109c:	10 f4       	brcc	.+4      	; 0x10a2 <conv_brk+0xaa>
    109e:	7f 5f       	subi	r23, 0xFF	; 255
    10a0:	e6 cf       	rjmp	.-52     	; 0x106e <conv_brk+0x76>
    10a2:	71 50       	subi	r23, 0x01	; 1
    10a4:	e4 cf       	rjmp	.-56     	; 0x106e <conv_brk+0x76>
    10a6:	99 24       	eor	r9, r9
    10a8:	93 94       	inc	r9
    10aa:	03 c0       	rjmp	.+6      	; 0x10b2 <conv_brk+0xba>
    10ac:	b1 e0       	ldi	r27, 0x01	; 1
    10ae:	01 c0       	rjmp	.+2      	; 0x10b2 <conv_brk+0xba>
    10b0:	b0 e0       	ldi	r27, 0x00	; 0
    10b2:	4f 5f       	subi	r20, 0xFF	; 255
    10b4:	5f 4f       	sbci	r21, 0xFF	; 255
    10b6:	ba cf       	rjmp	.-140    	; 0x102c <conv_brk+0x34>
    10b8:	bb 23       	and	r27, r27
    10ba:	19 f0       	breq	.+6      	; 0x10c2 <conv_brk+0xca>
    10bc:	8e 81       	ldd	r24, Y+6	; 0x06
    10be:	80 62       	ori	r24, 0x20	; 32
    10c0:	8e 83       	std	Y+6, r24	; 0x06
    10c2:	91 10       	cpse	r9, r1
    10c4:	03 c0       	rjmp	.+6      	; 0x10cc <conv_brk+0xd4>
    10c6:	99 24       	eor	r9, r9
    10c8:	93 94       	inc	r9
    10ca:	15 c0       	rjmp	.+42     	; 0x10f6 <conv_brk+0xfe>
    10cc:	f6 01       	movw	r30, r12
    10ce:	ce 01       	movw	r24, r28
    10d0:	81 96       	adiw	r24, 0x21	; 33
    10d2:	20 81       	ld	r18, Z
    10d4:	20 95       	com	r18
    10d6:	21 93       	st	Z+, r18
    10d8:	e8 17       	cp	r30, r24
    10da:	f9 07       	cpc	r31, r25
    10dc:	d1 f7       	brne	.-12     	; 0x10d2 <conv_brk+0xda>
    10de:	f3 cf       	rjmp	.-26     	; 0x10c6 <conv_brk+0xce>
    10e0:	e1 14       	cp	r14, r1
    10e2:	f1 04       	cpc	r15, r1
    10e4:	29 f0       	breq	.+10     	; 0x10f0 <conv_brk+0xf8>
    10e6:	d7 01       	movw	r26, r14
    10e8:	8c 93       	st	X, r24
    10ea:	f7 01       	movw	r30, r14
    10ec:	31 96       	adiw	r30, 0x01	; 1
    10ee:	7f 01       	movw	r14, r30
    10f0:	61 50       	subi	r22, 0x01	; 1
    10f2:	01 f1       	breq	.+64     	; 0x1134 <conv_brk+0x13c>
    10f4:	91 2c       	mov	r9, r1
    10f6:	c5 01       	movw	r24, r10
    10f8:	69 a3       	std	Y+33, r22	; 0x21
    10fa:	0e 94 04 0a 	call	0x1408	; 0x1408 <fgetc>
    10fe:	69 a1       	ldd	r22, Y+33	; 0x21
    1100:	97 fd       	sbrc	r25, 7
    1102:	16 c0       	rjmp	.+44     	; 0x1130 <conv_brk+0x138>
    1104:	28 2f       	mov	r18, r24
    1106:	26 95       	lsr	r18
    1108:	26 95       	lsr	r18
    110a:	26 95       	lsr	r18
    110c:	f6 01       	movw	r30, r12
    110e:	e2 0f       	add	r30, r18
    1110:	f1 1d       	adc	r31, r1
    1112:	20 81       	ld	r18, Z
    1114:	30 e0       	ldi	r19, 0x00	; 0
    1116:	ac 01       	movw	r20, r24
    1118:	47 70       	andi	r20, 0x07	; 7
    111a:	55 27       	eor	r21, r21
    111c:	02 c0       	rjmp	.+4      	; 0x1122 <conv_brk+0x12a>
    111e:	35 95       	asr	r19
    1120:	27 95       	ror	r18
    1122:	4a 95       	dec	r20
    1124:	e2 f7       	brpl	.-8      	; 0x111e <conv_brk+0x126>
    1126:	20 fd       	sbrc	r18, 0
    1128:	db cf       	rjmp	.-74     	; 0x10e0 <conv_brk+0xe8>
    112a:	b5 01       	movw	r22, r10
    112c:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <ungetc>
    1130:	91 10       	cpse	r9, r1
    1132:	86 cf       	rjmp	.-244    	; 0x1040 <conv_brk+0x48>
    1134:	e1 14       	cp	r14, r1
    1136:	f1 04       	cpc	r15, r1
    1138:	11 f0       	breq	.+4      	; 0x113e <conv_brk+0x146>
    113a:	d7 01       	movw	r26, r14
    113c:	1c 92       	st	X, r1
    113e:	c8 01       	movw	r24, r16
    1140:	a1 96       	adiw	r28, 0x21	; 33
    1142:	ed e0       	ldi	r30, 0x0D	; 13
    1144:	0c 94 41 0b 	jmp	0x1682	; 0x1682 <__epilogue_restores__+0xa>

00001148 <vfscanf>:
    1148:	4f 92       	push	r4
    114a:	5f 92       	push	r5
    114c:	7f 92       	push	r7
    114e:	8f 92       	push	r8
    1150:	9f 92       	push	r9
    1152:	af 92       	push	r10
    1154:	bf 92       	push	r11
    1156:	cf 92       	push	r12
    1158:	df 92       	push	r13
    115a:	ef 92       	push	r14
    115c:	ff 92       	push	r15
    115e:	0f 93       	push	r16
    1160:	1f 93       	push	r17
    1162:	cf 93       	push	r28
    1164:	df 93       	push	r29
    1166:	1f 92       	push	r1
    1168:	cd b7       	in	r28, 0x3d	; 61
    116a:	de b7       	in	r29, 0x3e	; 62
    116c:	8c 01       	movw	r16, r24
    116e:	2b 01       	movw	r4, r22
    1170:	7a 01       	movw	r14, r20
    1172:	fc 01       	movw	r30, r24
    1174:	17 82       	std	Z+7, r1	; 0x07
    1176:	16 82       	std	Z+6, r1	; 0x06
    1178:	a1 2c       	mov	r10, r1
    117a:	f8 01       	movw	r30, r16
    117c:	d3 80       	ldd	r13, Z+3	; 0x03
    117e:	f2 01       	movw	r30, r4
    1180:	d3 fc       	sbrc	r13, 3
    1182:	85 91       	lpm	r24, Z+
    1184:	d3 fe       	sbrs	r13, 3
    1186:	81 91       	ld	r24, Z+
    1188:	38 2f       	mov	r19, r24
    118a:	2f 01       	movw	r4, r30
    118c:	88 23       	and	r24, r24
    118e:	09 f4       	brne	.+2      	; 0x1192 <vfscanf+0x4a>
    1190:	fc c0       	rjmp	.+504    	; 0x138a <vfscanf+0x242>
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	39 83       	std	Y+1, r19	; 0x01
    1196:	0e 94 db 09 	call	0x13b6	; 0x13b6 <isspace>
    119a:	39 81       	ldd	r19, Y+1	; 0x01
    119c:	89 2b       	or	r24, r25
    119e:	21 f0       	breq	.+8      	; 0x11a8 <vfscanf+0x60>
    11a0:	c8 01       	movw	r24, r16
    11a2:	0e 94 52 07 	call	0xea4	; 0xea4 <skip_spaces>
    11a6:	e9 cf       	rjmp	.-46     	; 0x117a <vfscanf+0x32>
    11a8:	35 32       	cpi	r19, 0x25	; 37
    11aa:	41 f4       	brne	.+16     	; 0x11bc <vfscanf+0x74>
    11ac:	f2 01       	movw	r30, r4
    11ae:	d3 fc       	sbrc	r13, 3
    11b0:	35 91       	lpm	r19, Z+
    11b2:	d3 fe       	sbrs	r13, 3
    11b4:	31 91       	ld	r19, Z+
    11b6:	2f 01       	movw	r4, r30
    11b8:	35 32       	cpi	r19, 0x25	; 37
    11ba:	69 f4       	brne	.+26     	; 0x11d6 <vfscanf+0x8e>
    11bc:	c8 01       	movw	r24, r16
    11be:	39 83       	std	Y+1, r19	; 0x01
    11c0:	0e 94 04 0a 	call	0x1408	; 0x1408 <fgetc>
    11c4:	39 81       	ldd	r19, Y+1	; 0x01
    11c6:	97 fd       	sbrc	r25, 7
    11c8:	de c0       	rjmp	.+444    	; 0x1386 <vfscanf+0x23e>
    11ca:	38 17       	cp	r19, r24
    11cc:	b1 f2       	breq	.-84     	; 0x117a <vfscanf+0x32>
    11ce:	b8 01       	movw	r22, r16
    11d0:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <ungetc>
    11d4:	da c0       	rjmp	.+436    	; 0x138a <vfscanf+0x242>
    11d6:	3a 32       	cpi	r19, 0x2A	; 42
    11d8:	41 f4       	brne	.+16     	; 0x11ea <vfscanf+0xa2>
    11da:	d3 fc       	sbrc	r13, 3
    11dc:	35 91       	lpm	r19, Z+
    11de:	d3 fe       	sbrs	r13, 3
    11e0:	31 91       	ld	r19, Z+
    11e2:	2f 01       	movw	r4, r30
    11e4:	bb 24       	eor	r11, r11
    11e6:	b3 94       	inc	r11
    11e8:	01 c0       	rjmp	.+2      	; 0x11ec <vfscanf+0xa4>
    11ea:	b1 2c       	mov	r11, r1
    11ec:	71 2c       	mov	r7, r1
    11ee:	20 ed       	ldi	r18, 0xD0	; 208
    11f0:	23 0f       	add	r18, r19
    11f2:	2a 30       	cpi	r18, 0x0A	; 10
    11f4:	90 f4       	brcc	.+36     	; 0x121a <vfscanf+0xd2>
    11f6:	fb 2d       	mov	r31, r11
    11f8:	f2 60       	ori	r31, 0x02	; 2
    11fa:	bf 2e       	mov	r11, r31
    11fc:	67 2d       	mov	r22, r7
    11fe:	70 e0       	ldi	r23, 0x00	; 0
    1200:	80 e0       	ldi	r24, 0x00	; 0
    1202:	90 e0       	ldi	r25, 0x00	; 0
    1204:	40 e2       	ldi	r20, 0x20	; 32
    1206:	0e 94 32 07 	call	0xe64	; 0xe64 <mulacc>
    120a:	76 2e       	mov	r7, r22
    120c:	f2 01       	movw	r30, r4
    120e:	d3 fc       	sbrc	r13, 3
    1210:	35 91       	lpm	r19, Z+
    1212:	d3 fe       	sbrs	r13, 3
    1214:	31 91       	ld	r19, Z+
    1216:	2f 01       	movw	r4, r30
    1218:	ea cf       	rjmp	.-44     	; 0x11ee <vfscanf+0xa6>
    121a:	b1 fe       	sbrs	r11, 1
    121c:	03 c0       	rjmp	.+6      	; 0x1224 <vfscanf+0xdc>
    121e:	71 10       	cpse	r7, r1
    1220:	03 c0       	rjmp	.+6      	; 0x1228 <vfscanf+0xe0>
    1222:	b3 c0       	rjmp	.+358    	; 0x138a <vfscanf+0x242>
    1224:	77 24       	eor	r7, r7
    1226:	7a 94       	dec	r7
    1228:	38 36       	cpi	r19, 0x68	; 104
    122a:	19 f0       	breq	.+6      	; 0x1232 <vfscanf+0xea>
    122c:	3c 36       	cpi	r19, 0x6C	; 108
    122e:	61 f0       	breq	.+24     	; 0x1248 <vfscanf+0x100>
    1230:	14 c0       	rjmp	.+40     	; 0x125a <vfscanf+0x112>
    1232:	f2 01       	movw	r30, r4
    1234:	d3 fc       	sbrc	r13, 3
    1236:	35 91       	lpm	r19, Z+
    1238:	d3 fe       	sbrs	r13, 3
    123a:	31 91       	ld	r19, Z+
    123c:	2f 01       	movw	r4, r30
    123e:	38 36       	cpi	r19, 0x68	; 104
    1240:	61 f4       	brne	.+24     	; 0x125a <vfscanf+0x112>
    1242:	fb 2d       	mov	r31, r11
    1244:	f8 60       	ori	r31, 0x08	; 8
    1246:	bf 2e       	mov	r11, r31
    1248:	8b 2d       	mov	r24, r11
    124a:	84 60       	ori	r24, 0x04	; 4
    124c:	b8 2e       	mov	r11, r24
    124e:	f2 01       	movw	r30, r4
    1250:	d3 fc       	sbrc	r13, 3
    1252:	35 91       	lpm	r19, Z+
    1254:	d3 fe       	sbrs	r13, 3
    1256:	31 91       	ld	r19, Z+
    1258:	2f 01       	movw	r4, r30
    125a:	33 23       	and	r19, r19
    125c:	09 f4       	brne	.+2      	; 0x1260 <vfscanf+0x118>
    125e:	95 c0       	rjmp	.+298    	; 0x138a <vfscanf+0x242>
    1260:	63 2f       	mov	r22, r19
    1262:	70 e0       	ldi	r23, 0x00	; 0
    1264:	88 e6       	ldi	r24, 0x68	; 104
    1266:	93 e0       	ldi	r25, 0x03	; 3
    1268:	39 83       	std	Y+1, r19	; 0x01
    126a:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <strchr_P>
    126e:	39 81       	ldd	r19, Y+1	; 0x01
    1270:	89 2b       	or	r24, r25
    1272:	09 f4       	brne	.+2      	; 0x1276 <vfscanf+0x12e>
    1274:	8a c0       	rjmp	.+276    	; 0x138a <vfscanf+0x242>
    1276:	b0 fc       	sbrc	r11, 0
    1278:	07 c0       	rjmp	.+14     	; 0x1288 <vfscanf+0x140>
    127a:	f7 01       	movw	r30, r14
    127c:	c0 80       	ld	r12, Z
    127e:	d1 80       	ldd	r13, Z+1	; 0x01
    1280:	c7 01       	movw	r24, r14
    1282:	02 96       	adiw	r24, 0x02	; 2
    1284:	7c 01       	movw	r14, r24
    1286:	02 c0       	rjmp	.+4      	; 0x128c <vfscanf+0x144>
    1288:	c1 2c       	mov	r12, r1
    128a:	d1 2c       	mov	r13, r1
    128c:	3e 36       	cpi	r19, 0x6E	; 110
    128e:	51 f4       	brne	.+20     	; 0x12a4 <vfscanf+0x15c>
    1290:	f8 01       	movw	r30, r16
    1292:	46 81       	ldd	r20, Z+6	; 0x06
    1294:	57 81       	ldd	r21, Z+7	; 0x07
    1296:	60 e0       	ldi	r22, 0x00	; 0
    1298:	70 e0       	ldi	r23, 0x00	; 0
    129a:	2b 2d       	mov	r18, r11
    129c:	c6 01       	movw	r24, r12
    129e:	0e 94 26 07 	call	0xe4c	; 0xe4c <putval>
    12a2:	6b cf       	rjmp	.-298    	; 0x117a <vfscanf+0x32>
    12a4:	33 36       	cpi	r19, 0x63	; 99
    12a6:	a1 f4       	brne	.+40     	; 0x12d0 <vfscanf+0x188>
    12a8:	b1 fc       	sbrc	r11, 1
    12aa:	02 c0       	rjmp	.+4      	; 0x12b0 <vfscanf+0x168>
    12ac:	77 24       	eor	r7, r7
    12ae:	73 94       	inc	r7
    12b0:	c8 01       	movw	r24, r16
    12b2:	0e 94 04 0a 	call	0x1408	; 0x1408 <fgetc>
    12b6:	97 fd       	sbrc	r25, 7
    12b8:	66 c0       	rjmp	.+204    	; 0x1386 <vfscanf+0x23e>
    12ba:	c1 14       	cp	r12, r1
    12bc:	d1 04       	cpc	r13, r1
    12be:	29 f0       	breq	.+10     	; 0x12ca <vfscanf+0x182>
    12c0:	f6 01       	movw	r30, r12
    12c2:	80 83       	st	Z, r24
    12c4:	c6 01       	movw	r24, r12
    12c6:	01 96       	adiw	r24, 0x01	; 1
    12c8:	6c 01       	movw	r12, r24
    12ca:	7a 94       	dec	r7
    12cc:	89 f7       	brne	.-30     	; 0x12b0 <vfscanf+0x168>
    12ce:	57 c0       	rjmp	.+174    	; 0x137e <vfscanf+0x236>
    12d0:	3b 35       	cpi	r19, 0x5B	; 91
    12d2:	59 f4       	brne	.+22     	; 0x12ea <vfscanf+0x1a2>
    12d4:	92 01       	movw	r18, r4
    12d6:	a6 01       	movw	r20, r12
    12d8:	67 2d       	mov	r22, r7
    12da:	c8 01       	movw	r24, r16
    12dc:	0e 94 fc 07 	call	0xff8	; 0xff8 <conv_brk>
    12e0:	2c 01       	movw	r4, r24
    12e2:	00 97       	sbiw	r24, 0x00	; 0
    12e4:	09 f0       	breq	.+2      	; 0x12e8 <vfscanf+0x1a0>
    12e6:	4b c0       	rjmp	.+150    	; 0x137e <vfscanf+0x236>
    12e8:	45 c0       	rjmp	.+138    	; 0x1374 <vfscanf+0x22c>
    12ea:	c8 01       	movw	r24, r16
    12ec:	39 83       	std	Y+1, r19	; 0x01
    12ee:	0e 94 52 07 	call	0xea4	; 0xea4 <skip_spaces>
    12f2:	39 81       	ldd	r19, Y+1	; 0x01
    12f4:	97 fd       	sbrc	r25, 7
    12f6:	47 c0       	rjmp	.+142    	; 0x1386 <vfscanf+0x23e>
    12f8:	3f 36       	cpi	r19, 0x6F	; 111
    12fa:	69 f1       	breq	.+90     	; 0x1356 <vfscanf+0x20e>
    12fc:	28 f4       	brcc	.+10     	; 0x1308 <vfscanf+0x1c0>
    12fe:	34 36       	cpi	r19, 0x64	; 100
    1300:	31 f1       	breq	.+76     	; 0x134e <vfscanf+0x206>
    1302:	39 36       	cpi	r19, 0x69	; 105
    1304:	79 f1       	breq	.+94     	; 0x1364 <vfscanf+0x21c>
    1306:	2b c0       	rjmp	.+86     	; 0x135e <vfscanf+0x216>
    1308:	33 37       	cpi	r19, 0x73	; 115
    130a:	69 f0       	breq	.+26     	; 0x1326 <vfscanf+0x1de>
    130c:	35 37       	cpi	r19, 0x75	; 117
    130e:	f9 f0       	breq	.+62     	; 0x134e <vfscanf+0x206>
    1310:	26 c0       	rjmp	.+76     	; 0x135e <vfscanf+0x216>
    1312:	c1 14       	cp	r12, r1
    1314:	d1 04       	cpc	r13, r1
    1316:	29 f0       	breq	.+10     	; 0x1322 <vfscanf+0x1da>
    1318:	f6 01       	movw	r30, r12
    131a:	80 82       	st	Z, r8
    131c:	c6 01       	movw	r24, r12
    131e:	01 96       	adiw	r24, 0x01	; 1
    1320:	6c 01       	movw	r12, r24
    1322:	7a 94       	dec	r7
    1324:	71 f0       	breq	.+28     	; 0x1342 <vfscanf+0x1fa>
    1326:	c8 01       	movw	r24, r16
    1328:	0e 94 04 0a 	call	0x1408	; 0x1408 <fgetc>
    132c:	4c 01       	movw	r8, r24
    132e:	97 fd       	sbrc	r25, 7
    1330:	08 c0       	rjmp	.+16     	; 0x1342 <vfscanf+0x1fa>
    1332:	0e 94 db 09 	call	0x13b6	; 0x13b6 <isspace>
    1336:	89 2b       	or	r24, r25
    1338:	61 f3       	breq	.-40     	; 0x1312 <vfscanf+0x1ca>
    133a:	b8 01       	movw	r22, r16
    133c:	c4 01       	movw	r24, r8
    133e:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <ungetc>
    1342:	c1 14       	cp	r12, r1
    1344:	d1 04       	cpc	r13, r1
    1346:	d9 f0       	breq	.+54     	; 0x137e <vfscanf+0x236>
    1348:	f6 01       	movw	r30, r12
    134a:	10 82       	st	Z, r1
    134c:	18 c0       	rjmp	.+48     	; 0x137e <vfscanf+0x236>
    134e:	fb 2d       	mov	r31, r11
    1350:	f0 62       	ori	r31, 0x20	; 32
    1352:	bf 2e       	mov	r11, r31
    1354:	07 c0       	rjmp	.+14     	; 0x1364 <vfscanf+0x21c>
    1356:	8b 2d       	mov	r24, r11
    1358:	80 61       	ori	r24, 0x10	; 16
    135a:	b8 2e       	mov	r11, r24
    135c:	03 c0       	rjmp	.+6      	; 0x1364 <vfscanf+0x21c>
    135e:	9b 2d       	mov	r25, r11
    1360:	90 64       	ori	r25, 0x40	; 64
    1362:	b9 2e       	mov	r11, r25
    1364:	2b 2d       	mov	r18, r11
    1366:	a6 01       	movw	r20, r12
    1368:	67 2d       	mov	r22, r7
    136a:	c8 01       	movw	r24, r16
    136c:	0e 94 6b 07 	call	0xed6	; 0xed6 <conv_int>
    1370:	81 11       	cpse	r24, r1
    1372:	05 c0       	rjmp	.+10     	; 0x137e <vfscanf+0x236>
    1374:	f8 01       	movw	r30, r16
    1376:	83 81       	ldd	r24, Z+3	; 0x03
    1378:	80 73       	andi	r24, 0x30	; 48
    137a:	29 f4       	brne	.+10     	; 0x1386 <vfscanf+0x23e>
    137c:	06 c0       	rjmp	.+12     	; 0x138a <vfscanf+0x242>
    137e:	b0 fc       	sbrc	r11, 0
    1380:	fc ce       	rjmp	.-520    	; 0x117a <vfscanf+0x32>
    1382:	a3 94       	inc	r10
    1384:	fa ce       	rjmp	.-524    	; 0x117a <vfscanf+0x32>
    1386:	aa 20       	and	r10, r10
    1388:	19 f0       	breq	.+6      	; 0x1390 <vfscanf+0x248>
    138a:	8a 2d       	mov	r24, r10
    138c:	90 e0       	ldi	r25, 0x00	; 0
    138e:	02 c0       	rjmp	.+4      	; 0x1394 <vfscanf+0x24c>
    1390:	8f ef       	ldi	r24, 0xFF	; 255
    1392:	9f ef       	ldi	r25, 0xFF	; 255
    1394:	0f 90       	pop	r0
    1396:	df 91       	pop	r29
    1398:	cf 91       	pop	r28
    139a:	1f 91       	pop	r17
    139c:	0f 91       	pop	r16
    139e:	ff 90       	pop	r15
    13a0:	ef 90       	pop	r14
    13a2:	df 90       	pop	r13
    13a4:	cf 90       	pop	r12
    13a6:	bf 90       	pop	r11
    13a8:	af 90       	pop	r10
    13aa:	9f 90       	pop	r9
    13ac:	8f 90       	pop	r8
    13ae:	7f 90       	pop	r7
    13b0:	5f 90       	pop	r5
    13b2:	4f 90       	pop	r4
    13b4:	08 95       	ret

000013b6 <isspace>:
    13b6:	91 11       	cpse	r25, r1
    13b8:	0e c1       	rjmp	.+540    	; 0x15d6 <__ctype_isfalse>
    13ba:	80 32       	cpi	r24, 0x20	; 32
    13bc:	19 f0       	breq	.+6      	; 0x13c4 <isspace+0xe>
    13be:	89 50       	subi	r24, 0x09	; 9
    13c0:	85 50       	subi	r24, 0x05	; 5
    13c2:	d0 f7       	brcc	.-12     	; 0x13b8 <isspace+0x2>
    13c4:	08 95       	ret

000013c6 <strchr_P>:
    13c6:	fc 01       	movw	r30, r24
    13c8:	05 90       	lpm	r0, Z+
    13ca:	06 16       	cp	r0, r22
    13cc:	21 f0       	breq	.+8      	; 0x13d6 <strchr_P+0x10>
    13ce:	00 20       	and	r0, r0
    13d0:	d9 f7       	brne	.-10     	; 0x13c8 <strchr_P+0x2>
    13d2:	c0 01       	movw	r24, r0
    13d4:	08 95       	ret
    13d6:	31 97       	sbiw	r30, 0x01	; 1
    13d8:	cf 01       	movw	r24, r30
    13da:	08 95       	ret

000013dc <strnlen_P>:
    13dc:	fc 01       	movw	r30, r24
    13de:	05 90       	lpm	r0, Z+
    13e0:	61 50       	subi	r22, 0x01	; 1
    13e2:	70 40       	sbci	r23, 0x00	; 0
    13e4:	01 10       	cpse	r0, r1
    13e6:	d8 f7       	brcc	.-10     	; 0x13de <strnlen_P+0x2>
    13e8:	80 95       	com	r24
    13ea:	90 95       	com	r25
    13ec:	8e 0f       	add	r24, r30
    13ee:	9f 1f       	adc	r25, r31
    13f0:	08 95       	ret

000013f2 <strnlen>:
    13f2:	fc 01       	movw	r30, r24
    13f4:	61 50       	subi	r22, 0x01	; 1
    13f6:	70 40       	sbci	r23, 0x00	; 0
    13f8:	01 90       	ld	r0, Z+
    13fa:	01 10       	cpse	r0, r1
    13fc:	d8 f7       	brcc	.-10     	; 0x13f4 <strnlen+0x2>
    13fe:	80 95       	com	r24
    1400:	90 95       	com	r25
    1402:	8e 0f       	add	r24, r30
    1404:	9f 1f       	adc	r25, r31
    1406:	08 95       	ret

00001408 <fgetc>:
    1408:	cf 93       	push	r28
    140a:	df 93       	push	r29
    140c:	ec 01       	movw	r28, r24
    140e:	2b 81       	ldd	r18, Y+3	; 0x03
    1410:	20 ff       	sbrs	r18, 0
    1412:	33 c0       	rjmp	.+102    	; 0x147a <fgetc+0x72>
    1414:	26 ff       	sbrs	r18, 6
    1416:	0a c0       	rjmp	.+20     	; 0x142c <fgetc+0x24>
    1418:	2f 7b       	andi	r18, 0xBF	; 191
    141a:	2b 83       	std	Y+3, r18	; 0x03
    141c:	8e 81       	ldd	r24, Y+6	; 0x06
    141e:	9f 81       	ldd	r25, Y+7	; 0x07
    1420:	01 96       	adiw	r24, 0x01	; 1
    1422:	9f 83       	std	Y+7, r25	; 0x07
    1424:	8e 83       	std	Y+6, r24	; 0x06
    1426:	8a 81       	ldd	r24, Y+2	; 0x02
    1428:	90 e0       	ldi	r25, 0x00	; 0
    142a:	29 c0       	rjmp	.+82     	; 0x147e <fgetc+0x76>
    142c:	22 ff       	sbrs	r18, 2
    142e:	0f c0       	rjmp	.+30     	; 0x144e <fgetc+0x46>
    1430:	e8 81       	ld	r30, Y
    1432:	f9 81       	ldd	r31, Y+1	; 0x01
    1434:	80 81       	ld	r24, Z
    1436:	99 27       	eor	r25, r25
    1438:	87 fd       	sbrc	r24, 7
    143a:	90 95       	com	r25
    143c:	00 97       	sbiw	r24, 0x00	; 0
    143e:	19 f4       	brne	.+6      	; 0x1446 <fgetc+0x3e>
    1440:	20 62       	ori	r18, 0x20	; 32
    1442:	2b 83       	std	Y+3, r18	; 0x03
    1444:	1a c0       	rjmp	.+52     	; 0x147a <fgetc+0x72>
    1446:	31 96       	adiw	r30, 0x01	; 1
    1448:	f9 83       	std	Y+1, r31	; 0x01
    144a:	e8 83       	st	Y, r30
    144c:	0e c0       	rjmp	.+28     	; 0x146a <fgetc+0x62>
    144e:	ea 85       	ldd	r30, Y+10	; 0x0a
    1450:	fb 85       	ldd	r31, Y+11	; 0x0b
    1452:	09 95       	icall
    1454:	97 ff       	sbrs	r25, 7
    1456:	09 c0       	rjmp	.+18     	; 0x146a <fgetc+0x62>
    1458:	2b 81       	ldd	r18, Y+3	; 0x03
    145a:	01 96       	adiw	r24, 0x01	; 1
    145c:	11 f4       	brne	.+4      	; 0x1462 <fgetc+0x5a>
    145e:	80 e1       	ldi	r24, 0x10	; 16
    1460:	01 c0       	rjmp	.+2      	; 0x1464 <fgetc+0x5c>
    1462:	80 e2       	ldi	r24, 0x20	; 32
    1464:	82 2b       	or	r24, r18
    1466:	8b 83       	std	Y+3, r24	; 0x03
    1468:	08 c0       	rjmp	.+16     	; 0x147a <fgetc+0x72>
    146a:	2e 81       	ldd	r18, Y+6	; 0x06
    146c:	3f 81       	ldd	r19, Y+7	; 0x07
    146e:	2f 5f       	subi	r18, 0xFF	; 255
    1470:	3f 4f       	sbci	r19, 0xFF	; 255
    1472:	3f 83       	std	Y+7, r19	; 0x07
    1474:	2e 83       	std	Y+6, r18	; 0x06
    1476:	99 27       	eor	r25, r25
    1478:	02 c0       	rjmp	.+4      	; 0x147e <fgetc+0x76>
    147a:	8f ef       	ldi	r24, 0xFF	; 255
    147c:	9f ef       	ldi	r25, 0xFF	; 255
    147e:	df 91       	pop	r29
    1480:	cf 91       	pop	r28
    1482:	08 95       	ret

00001484 <fputc>:
    1484:	0f 93       	push	r16
    1486:	1f 93       	push	r17
    1488:	cf 93       	push	r28
    148a:	df 93       	push	r29
    148c:	18 2f       	mov	r17, r24
    148e:	09 2f       	mov	r16, r25
    1490:	eb 01       	movw	r28, r22
    1492:	8b 81       	ldd	r24, Y+3	; 0x03
    1494:	81 fd       	sbrc	r24, 1
    1496:	03 c0       	rjmp	.+6      	; 0x149e <fputc+0x1a>
    1498:	8f ef       	ldi	r24, 0xFF	; 255
    149a:	9f ef       	ldi	r25, 0xFF	; 255
    149c:	20 c0       	rjmp	.+64     	; 0x14de <fputc+0x5a>
    149e:	82 ff       	sbrs	r24, 2
    14a0:	10 c0       	rjmp	.+32     	; 0x14c2 <fputc+0x3e>
    14a2:	4e 81       	ldd	r20, Y+6	; 0x06
    14a4:	5f 81       	ldd	r21, Y+7	; 0x07
    14a6:	2c 81       	ldd	r18, Y+4	; 0x04
    14a8:	3d 81       	ldd	r19, Y+5	; 0x05
    14aa:	42 17       	cp	r20, r18
    14ac:	53 07       	cpc	r21, r19
    14ae:	7c f4       	brge	.+30     	; 0x14ce <fputc+0x4a>
    14b0:	e8 81       	ld	r30, Y
    14b2:	f9 81       	ldd	r31, Y+1	; 0x01
    14b4:	9f 01       	movw	r18, r30
    14b6:	2f 5f       	subi	r18, 0xFF	; 255
    14b8:	3f 4f       	sbci	r19, 0xFF	; 255
    14ba:	39 83       	std	Y+1, r19	; 0x01
    14bc:	28 83       	st	Y, r18
    14be:	10 83       	st	Z, r17
    14c0:	06 c0       	rjmp	.+12     	; 0x14ce <fputc+0x4a>
    14c2:	e8 85       	ldd	r30, Y+8	; 0x08
    14c4:	f9 85       	ldd	r31, Y+9	; 0x09
    14c6:	81 2f       	mov	r24, r17
    14c8:	09 95       	icall
    14ca:	89 2b       	or	r24, r25
    14cc:	29 f7       	brne	.-54     	; 0x1498 <fputc+0x14>
    14ce:	2e 81       	ldd	r18, Y+6	; 0x06
    14d0:	3f 81       	ldd	r19, Y+7	; 0x07
    14d2:	2f 5f       	subi	r18, 0xFF	; 255
    14d4:	3f 4f       	sbci	r19, 0xFF	; 255
    14d6:	3f 83       	std	Y+7, r19	; 0x07
    14d8:	2e 83       	std	Y+6, r18	; 0x06
    14da:	81 2f       	mov	r24, r17
    14dc:	90 2f       	mov	r25, r16
    14de:	df 91       	pop	r29
    14e0:	cf 91       	pop	r28
    14e2:	1f 91       	pop	r17
    14e4:	0f 91       	pop	r16
    14e6:	08 95       	ret

000014e8 <ungetc>:
    14e8:	fb 01       	movw	r30, r22
    14ea:	23 81       	ldd	r18, Z+3	; 0x03
    14ec:	20 ff       	sbrs	r18, 0
    14ee:	12 c0       	rjmp	.+36     	; 0x1514 <ungetc+0x2c>
    14f0:	26 fd       	sbrc	r18, 6
    14f2:	10 c0       	rjmp	.+32     	; 0x1514 <ungetc+0x2c>
    14f4:	8f 3f       	cpi	r24, 0xFF	; 255
    14f6:	3f ef       	ldi	r19, 0xFF	; 255
    14f8:	93 07       	cpc	r25, r19
    14fa:	61 f0       	breq	.+24     	; 0x1514 <ungetc+0x2c>
    14fc:	82 83       	std	Z+2, r24	; 0x02
    14fe:	2f 7d       	andi	r18, 0xDF	; 223
    1500:	20 64       	ori	r18, 0x40	; 64
    1502:	23 83       	std	Z+3, r18	; 0x03
    1504:	26 81       	ldd	r18, Z+6	; 0x06
    1506:	37 81       	ldd	r19, Z+7	; 0x07
    1508:	21 50       	subi	r18, 0x01	; 1
    150a:	31 09       	sbc	r19, r1
    150c:	37 83       	std	Z+7, r19	; 0x07
    150e:	26 83       	std	Z+6, r18	; 0x06
    1510:	99 27       	eor	r25, r25
    1512:	08 95       	ret
    1514:	8f ef       	ldi	r24, 0xFF	; 255
    1516:	9f ef       	ldi	r25, 0xFF	; 255
    1518:	08 95       	ret

0000151a <__ultoa_invert>:
    151a:	fa 01       	movw	r30, r20
    151c:	aa 27       	eor	r26, r26
    151e:	28 30       	cpi	r18, 0x08	; 8
    1520:	51 f1       	breq	.+84     	; 0x1576 <__ultoa_invert+0x5c>
    1522:	20 31       	cpi	r18, 0x10	; 16
    1524:	81 f1       	breq	.+96     	; 0x1586 <__ultoa_invert+0x6c>
    1526:	e8 94       	clt
    1528:	6f 93       	push	r22
    152a:	6e 7f       	andi	r22, 0xFE	; 254
    152c:	6e 5f       	subi	r22, 0xFE	; 254
    152e:	7f 4f       	sbci	r23, 0xFF	; 255
    1530:	8f 4f       	sbci	r24, 0xFF	; 255
    1532:	9f 4f       	sbci	r25, 0xFF	; 255
    1534:	af 4f       	sbci	r26, 0xFF	; 255
    1536:	b1 e0       	ldi	r27, 0x01	; 1
    1538:	3e d0       	rcall	.+124    	; 0x15b6 <__ultoa_invert+0x9c>
    153a:	b4 e0       	ldi	r27, 0x04	; 4
    153c:	3c d0       	rcall	.+120    	; 0x15b6 <__ultoa_invert+0x9c>
    153e:	67 0f       	add	r22, r23
    1540:	78 1f       	adc	r23, r24
    1542:	89 1f       	adc	r24, r25
    1544:	9a 1f       	adc	r25, r26
    1546:	a1 1d       	adc	r26, r1
    1548:	68 0f       	add	r22, r24
    154a:	79 1f       	adc	r23, r25
    154c:	8a 1f       	adc	r24, r26
    154e:	91 1d       	adc	r25, r1
    1550:	a1 1d       	adc	r26, r1
    1552:	6a 0f       	add	r22, r26
    1554:	71 1d       	adc	r23, r1
    1556:	81 1d       	adc	r24, r1
    1558:	91 1d       	adc	r25, r1
    155a:	a1 1d       	adc	r26, r1
    155c:	20 d0       	rcall	.+64     	; 0x159e <__ultoa_invert+0x84>
    155e:	09 f4       	brne	.+2      	; 0x1562 <__ultoa_invert+0x48>
    1560:	68 94       	set
    1562:	3f 91       	pop	r19
    1564:	2a e0       	ldi	r18, 0x0A	; 10
    1566:	26 9f       	mul	r18, r22
    1568:	11 24       	eor	r1, r1
    156a:	30 19       	sub	r19, r0
    156c:	30 5d       	subi	r19, 0xD0	; 208
    156e:	31 93       	st	Z+, r19
    1570:	de f6       	brtc	.-74     	; 0x1528 <__ultoa_invert+0xe>
    1572:	cf 01       	movw	r24, r30
    1574:	08 95       	ret
    1576:	46 2f       	mov	r20, r22
    1578:	47 70       	andi	r20, 0x07	; 7
    157a:	40 5d       	subi	r20, 0xD0	; 208
    157c:	41 93       	st	Z+, r20
    157e:	b3 e0       	ldi	r27, 0x03	; 3
    1580:	0f d0       	rcall	.+30     	; 0x15a0 <__ultoa_invert+0x86>
    1582:	c9 f7       	brne	.-14     	; 0x1576 <__ultoa_invert+0x5c>
    1584:	f6 cf       	rjmp	.-20     	; 0x1572 <__ultoa_invert+0x58>
    1586:	46 2f       	mov	r20, r22
    1588:	4f 70       	andi	r20, 0x0F	; 15
    158a:	40 5d       	subi	r20, 0xD0	; 208
    158c:	4a 33       	cpi	r20, 0x3A	; 58
    158e:	18 f0       	brcs	.+6      	; 0x1596 <__ultoa_invert+0x7c>
    1590:	49 5d       	subi	r20, 0xD9	; 217
    1592:	31 fd       	sbrc	r19, 1
    1594:	40 52       	subi	r20, 0x20	; 32
    1596:	41 93       	st	Z+, r20
    1598:	02 d0       	rcall	.+4      	; 0x159e <__ultoa_invert+0x84>
    159a:	a9 f7       	brne	.-22     	; 0x1586 <__ultoa_invert+0x6c>
    159c:	ea cf       	rjmp	.-44     	; 0x1572 <__ultoa_invert+0x58>
    159e:	b4 e0       	ldi	r27, 0x04	; 4
    15a0:	a6 95       	lsr	r26
    15a2:	97 95       	ror	r25
    15a4:	87 95       	ror	r24
    15a6:	77 95       	ror	r23
    15a8:	67 95       	ror	r22
    15aa:	ba 95       	dec	r27
    15ac:	c9 f7       	brne	.-14     	; 0x15a0 <__ultoa_invert+0x86>
    15ae:	00 97       	sbiw	r24, 0x00	; 0
    15b0:	61 05       	cpc	r22, r1
    15b2:	71 05       	cpc	r23, r1
    15b4:	08 95       	ret
    15b6:	9b 01       	movw	r18, r22
    15b8:	ac 01       	movw	r20, r24
    15ba:	0a 2e       	mov	r0, r26
    15bc:	06 94       	lsr	r0
    15be:	57 95       	ror	r21
    15c0:	47 95       	ror	r20
    15c2:	37 95       	ror	r19
    15c4:	27 95       	ror	r18
    15c6:	ba 95       	dec	r27
    15c8:	c9 f7       	brne	.-14     	; 0x15bc <__ultoa_invert+0xa2>
    15ca:	62 0f       	add	r22, r18
    15cc:	73 1f       	adc	r23, r19
    15ce:	84 1f       	adc	r24, r20
    15d0:	95 1f       	adc	r25, r21
    15d2:	a0 1d       	adc	r26, r0
    15d4:	08 95       	ret

000015d6 <__ctype_isfalse>:
    15d6:	99 27       	eor	r25, r25
    15d8:	88 27       	eor	r24, r24

000015da <__ctype_istrue>:
    15da:	08 95       	ret

000015dc <__divmodsi4>:
    15dc:	05 2e       	mov	r0, r21
    15de:	97 fb       	bst	r25, 7
    15e0:	1e f4       	brtc	.+6      	; 0x15e8 <__divmodsi4+0xc>
    15e2:	00 94       	com	r0
    15e4:	0e 94 05 0b 	call	0x160a	; 0x160a <__negsi2>
    15e8:	57 fd       	sbrc	r21, 7
    15ea:	07 d0       	rcall	.+14     	; 0x15fa <__divmodsi4_neg2>
    15ec:	0e 94 57 0b 	call	0x16ae	; 0x16ae <__udivmodsi4>
    15f0:	07 fc       	sbrc	r0, 7
    15f2:	03 d0       	rcall	.+6      	; 0x15fa <__divmodsi4_neg2>
    15f4:	4e f4       	brtc	.+18     	; 0x1608 <__divmodsi4_exit>
    15f6:	0c 94 05 0b 	jmp	0x160a	; 0x160a <__negsi2>

000015fa <__divmodsi4_neg2>:
    15fa:	50 95       	com	r21
    15fc:	40 95       	com	r20
    15fe:	30 95       	com	r19
    1600:	21 95       	neg	r18
    1602:	3f 4f       	sbci	r19, 0xFF	; 255
    1604:	4f 4f       	sbci	r20, 0xFF	; 255
    1606:	5f 4f       	sbci	r21, 0xFF	; 255

00001608 <__divmodsi4_exit>:
    1608:	08 95       	ret

0000160a <__negsi2>:
    160a:	90 95       	com	r25
    160c:	80 95       	com	r24
    160e:	70 95       	com	r23
    1610:	61 95       	neg	r22
    1612:	7f 4f       	sbci	r23, 0xFF	; 255
    1614:	8f 4f       	sbci	r24, 0xFF	; 255
    1616:	9f 4f       	sbci	r25, 0xFF	; 255
    1618:	08 95       	ret

0000161a <__muluhisi3>:
    161a:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <__umulhisi3>
    161e:	a5 9f       	mul	r26, r21
    1620:	90 0d       	add	r25, r0
    1622:	b4 9f       	mul	r27, r20
    1624:	90 0d       	add	r25, r0
    1626:	a4 9f       	mul	r26, r20
    1628:	80 0d       	add	r24, r0
    162a:	91 1d       	adc	r25, r1
    162c:	11 24       	eor	r1, r1
    162e:	08 95       	ret

00001630 <__mulshisi3>:
    1630:	b7 ff       	sbrs	r27, 7
    1632:	0c 94 0d 0b 	jmp	0x161a	; 0x161a <__muluhisi3>

00001636 <__mulohisi3>:
    1636:	0e 94 0d 0b 	call	0x161a	; 0x161a <__muluhisi3>
    163a:	82 1b       	sub	r24, r18
    163c:	93 0b       	sbc	r25, r19
    163e:	08 95       	ret

00001640 <__prologue_saves__>:
    1640:	2f 92       	push	r2
    1642:	3f 92       	push	r3
    1644:	4f 92       	push	r4
    1646:	5f 92       	push	r5
    1648:	6f 92       	push	r6
    164a:	7f 92       	push	r7
    164c:	8f 92       	push	r8
    164e:	9f 92       	push	r9
    1650:	af 92       	push	r10
    1652:	bf 92       	push	r11
    1654:	cf 92       	push	r12
    1656:	df 92       	push	r13
    1658:	ef 92       	push	r14
    165a:	ff 92       	push	r15
    165c:	0f 93       	push	r16
    165e:	1f 93       	push	r17
    1660:	cf 93       	push	r28
    1662:	df 93       	push	r29
    1664:	cd b7       	in	r28, 0x3d	; 61
    1666:	de b7       	in	r29, 0x3e	; 62
    1668:	ca 1b       	sub	r28, r26
    166a:	db 0b       	sbc	r29, r27
    166c:	0f b6       	in	r0, 0x3f	; 63
    166e:	f8 94       	cli
    1670:	de bf       	out	0x3e, r29	; 62
    1672:	0f be       	out	0x3f, r0	; 63
    1674:	cd bf       	out	0x3d, r28	; 61
    1676:	09 94       	ijmp

00001678 <__epilogue_restores__>:
    1678:	2a 88       	ldd	r2, Y+18	; 0x12
    167a:	39 88       	ldd	r3, Y+17	; 0x11
    167c:	48 88       	ldd	r4, Y+16	; 0x10
    167e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1680:	6e 84       	ldd	r6, Y+14	; 0x0e
    1682:	7d 84       	ldd	r7, Y+13	; 0x0d
    1684:	8c 84       	ldd	r8, Y+12	; 0x0c
    1686:	9b 84       	ldd	r9, Y+11	; 0x0b
    1688:	aa 84       	ldd	r10, Y+10	; 0x0a
    168a:	b9 84       	ldd	r11, Y+9	; 0x09
    168c:	c8 84       	ldd	r12, Y+8	; 0x08
    168e:	df 80       	ldd	r13, Y+7	; 0x07
    1690:	ee 80       	ldd	r14, Y+6	; 0x06
    1692:	fd 80       	ldd	r15, Y+5	; 0x05
    1694:	0c 81       	ldd	r16, Y+4	; 0x04
    1696:	1b 81       	ldd	r17, Y+3	; 0x03
    1698:	aa 81       	ldd	r26, Y+2	; 0x02
    169a:	b9 81       	ldd	r27, Y+1	; 0x01
    169c:	ce 0f       	add	r28, r30
    169e:	d1 1d       	adc	r29, r1
    16a0:	0f b6       	in	r0, 0x3f	; 63
    16a2:	f8 94       	cli
    16a4:	de bf       	out	0x3e, r29	; 62
    16a6:	0f be       	out	0x3f, r0	; 63
    16a8:	cd bf       	out	0x3d, r28	; 61
    16aa:	ed 01       	movw	r28, r26
    16ac:	08 95       	ret

000016ae <__udivmodsi4>:
    16ae:	a1 e2       	ldi	r26, 0x21	; 33
    16b0:	1a 2e       	mov	r1, r26
    16b2:	aa 1b       	sub	r26, r26
    16b4:	bb 1b       	sub	r27, r27
    16b6:	fd 01       	movw	r30, r26
    16b8:	0d c0       	rjmp	.+26     	; 0x16d4 <__udivmodsi4_ep>

000016ba <__udivmodsi4_loop>:
    16ba:	aa 1f       	adc	r26, r26
    16bc:	bb 1f       	adc	r27, r27
    16be:	ee 1f       	adc	r30, r30
    16c0:	ff 1f       	adc	r31, r31
    16c2:	a2 17       	cp	r26, r18
    16c4:	b3 07       	cpc	r27, r19
    16c6:	e4 07       	cpc	r30, r20
    16c8:	f5 07       	cpc	r31, r21
    16ca:	20 f0       	brcs	.+8      	; 0x16d4 <__udivmodsi4_ep>
    16cc:	a2 1b       	sub	r26, r18
    16ce:	b3 0b       	sbc	r27, r19
    16d0:	e4 0b       	sbc	r30, r20
    16d2:	f5 0b       	sbc	r31, r21

000016d4 <__udivmodsi4_ep>:
    16d4:	66 1f       	adc	r22, r22
    16d6:	77 1f       	adc	r23, r23
    16d8:	88 1f       	adc	r24, r24
    16da:	99 1f       	adc	r25, r25
    16dc:	1a 94       	dec	r1
    16de:	69 f7       	brne	.-38     	; 0x16ba <__udivmodsi4_loop>
    16e0:	60 95       	com	r22
    16e2:	70 95       	com	r23
    16e4:	80 95       	com	r24
    16e6:	90 95       	com	r25
    16e8:	9b 01       	movw	r18, r22
    16ea:	ac 01       	movw	r20, r24
    16ec:	bd 01       	movw	r22, r26
    16ee:	cf 01       	movw	r24, r30
    16f0:	08 95       	ret

000016f2 <__umulhisi3>:
    16f2:	a2 9f       	mul	r26, r18
    16f4:	b0 01       	movw	r22, r0
    16f6:	b3 9f       	mul	r27, r19
    16f8:	c0 01       	movw	r24, r0
    16fa:	a3 9f       	mul	r26, r19
    16fc:	70 0d       	add	r23, r0
    16fe:	81 1d       	adc	r24, r1
    1700:	11 24       	eor	r1, r1
    1702:	91 1d       	adc	r25, r1
    1704:	b2 9f       	mul	r27, r18
    1706:	70 0d       	add	r23, r0
    1708:	81 1d       	adc	r24, r1
    170a:	11 24       	eor	r1, r1
    170c:	91 1d       	adc	r25, r1
    170e:	08 95       	ret

00001710 <_exit>:
    1710:	f8 94       	cli

00001712 <__stop_program>:
    1712:	ff cf       	rjmp	.-2      	; 0x1712 <__stop_program>
